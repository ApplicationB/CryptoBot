{
	"id": "5fbb36d6194f3d425e84e283ca67dbaa",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/MainBot.sol": {
				"content": "// SPDX-License-Identifier: MITs\npragma solidity ^0.8.20;\n\nimport './chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol';\nimport './uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol';\nimport './uniswap/v3-periphery/contracts/interfaces/IUniswapV3Pool.sol';\nimport './uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol';\nimport './uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol';\nimport './uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol';\nimport './aave/protocol-v2/contracts/interfaces/ILendingPool.sol';\nimport './aave/protocol-v2/contracts/interfaces/ILendingPoolAddressesProvider.sol';\n\ninterface IERC20 {\n    function transfer(address recipient, uint256 amount) external returns (bool);\n    function balanceOf(address account) external view returns (uint256);\n    function approve(address spender, uint256 amount) external returns (bool);\n}\n\ncontract MainBot {\n    address public owner; \n    bool public tradingEnabled;\n    uint256 public initialDeposit;\n    uint256 public maticBalance;\n    uint256 public stablecoinBalance;\n    uint256 public profitThreshold;\n    uint256 public lossThreshold;\n    uint256 public gasCostMultiplier = 3;\n    uint256 public trailingStopLoss = 10;\n    uint256 public nextLogTime;\n    string public currentActivity = \"Initializing\";\n\n    address public polToken;\n    address public usdtToken;\n    address public usdcToken;\n    address public quickSwapRouter;\n    address public priceFeedAddress;\n    address public uniswapRouter;\n    address public uniswapPositionManager;\n    address public aaveLendingPoolAddressesProvider;\n\n    mapping(string => address) public dexRouters;\n\n    event TradeExecuted(address indexed user, string tradeType, uint amountIn, uint amountOut, uint price);\n    event StopLossTriggered(uint currentBalance, uint threshold);\n    event CurrentActivity(string activity);\n    event TestEvent(string message);\n\n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Not the owner\");\n        _;\n    }\n\n    modifier whenTradingEnabled() {\n        require(tradingEnabled, \"Trading is disabled\");\n        _;\n    }\n\n    constructor(\n        address _polToken,\n        address _usdtToken,\n        address _usdcToken,\n        address _quickSwapRouter,\n        address _priceFeedAddress,\n        address _uniswapRouter,\n        address _uniswapPositionManager,\n        address _aaveLendingPoolAddressesProvider\n    ) {\n        owner = msg.sender;\n        polToken = _polToken;\n        usdtToken = _usdtToken;\n        usdcToken = _usdcToken;\n        quickSwapRouter = _quickSwapRouter;\n        priceFeedAddress = _priceFeedAddress;\n        uniswapRouter = _uniswapRouter;\n        uniswapPositionManager = _uniswapPositionManager;\n        aaveLendingPoolAddressesProvider = _aaveLendingPoolAddressesProvider;\n        \n        dexRouters[\"QuickSwap\"] = quickSwapRouter;\n        tradingEnabled = false;\n        profitThreshold = 110; // 10% profit\n        lossThreshold = 85; // 85% of initial deposit\n        nextLogTime = block.timestamp;\n    }\n\n    function setController(address controller) external onlyOwner {\n        owner = controller;\n    }\n\n    receive() external payable {\n        initialDeposit += msg.value;\n        maticBalance += (msg.value * 70) / 100;\n        stablecoinBalance += (msg.value * 30) / 100;\n    }\n\n    function adjustTimeframe(uint256 selectedTimeframe) external onlyOwner {\n        if (selectedTimeframe == 900) {\n            // Logic for fast and frequent trades\n        } else if (selectedTimeframe == 86400) {\n            // Logic for long-term trades\n        }\n        emit TradeExecuted(msg.sender, \"Timeframe adjusted\", selectedTimeframe, 0, getPrice());\n    }\n\n    function checkPrice() external view returns (uint256) {\n        uint256 price = getPrice();\n        return price;\n    }\n\n    function initiateTrade(string memory tradeType, uint256 amount) external onlyOwner {\n        emit TradeExecuted(msg.sender, tradeType, amount, 0, getPrice());\n    }\n\n    function convertAllToPOL() external onlyOwner {\n        emit TradeExecuted(msg.sender, \"convert to POL\", 0, 0, getPrice());\n    }\n\n    function checkLiquidity(uint256 amountIn, address poolAddress) public view returns (bool sufficientLiquidity) {\n        IUniswapV3Pool pool = IUniswapV3Pool(poolAddress);\n        (uint160 sqrtPriceX96,,,,,,) = pool.slot0();\n        uint256 liquidity = pool.liquidity();\n        uint256 amountOut = calculateAmountOut(amountIn, sqrtPriceX96, liquidity);\n        uint256 slippage = (amountOut * 1) / 100;\n        sufficientLiquidity = (amountOut >= amountIn - slippage);\n    }\n\n    function calculateAmountOut(uint256 amountIn, uint160 sqrtPriceX96, uint256 liquidity) internal pure returns (uint256) {\n        return uint256(amountIn * sqrtPriceX96 / liquidity);\n    }\n\n    function disableTrading() external onlyOwner {\n        tradingEnabled = false;\n    }\n\n    function withdrawInGwei(uint256 amountInGwei) external onlyOwner {\n        uint256 amountInWei = amountInGwei * 1 gwei;\n        require(address(this).balance >= amountInWei, \"Insufficient balance\");\n        payable(owner).transfer(amountInWei);\n    }\n\n    function kill() external onlyOwner {\n        payable(msg.sender).transfer(address(this).balance);\n    }\n\n    function logCurrentActivity() internal whenTradingEnabled {\n        if (block.timestamp >= nextLogTime) {\n            emit CurrentActivity(currentActivity);\n            nextLogTime = block.timestamp + 60;\n        }\n    }\n\n    function calculateRSI(uint256[] memory prices) internal pure returns (uint256) {\n        uint256 gain = 0;\n        uint256 loss = 0;\n        for (uint256 i = 1; i < prices.length; i++) {\n            if (prices[i] > prices[i - 1]) {\n                gain += (prices[i] - prices[i - 1]);\n            } else {\n                loss += (prices[i - 1] - prices[i]);\n            }\n        }\n        uint256 rs = gain / loss;\n        uint256 rsi = 100 - (100 / (1 + rs));\n        return rsi;\n    }\n\n    function calculateMACD(uint256[] memory prices) internal pure returns (int256) {\n        uint256 emaShort = calculateEMA(prices, 12);\n        uint256 emaLong = calculateEMA(prices, 26);\n        int256 macd = int256(emaShort - emaLong);\n        return macd;\n    }\n\n    function calculateEMA(uint256[] memory prices, uint256 period) internal pure returns (uint256) {\n        uint256 multiplier = 2 / (period + 1);\n        uint256 ema = prices[0];\n        for (uint256 i = 1; i < prices.length; i++) {\n            ema = ((prices[i] - ema) * multiplier) + ema;\n        }\n        return ema;\n    }\n\n    function calculateFibonacci(uint256 high, uint256 low) internal pure returns (uint256[] memory) {\n        uint256[] memory fibLevels = new uint256[](11);\n        fibLevels[0] = low;\n        fibLevels[1] = low + (high - low) * 236 / 1000;\n        fibLevels[2] = low + (high - low) * 382 / 1000;\n        fibLevels[3] = low + (high - low) * 500 / 1000;\n        fibLevels[4] = low + (high - low) * 618 / 1000;\n        fibLevels[5] = low + (high - low) * 786 / 1000;\n        fibLevels[6] = high;\n        fibLevels[7] = high + (high - low) * 618 / 1000;\n        fibLevels[8] = high + (high - low) * 168 / 100;\n        fibLevels[9] = high + (high - low) * 618 / 1000;\n        fibLevels[10] = high + (high - low) * 236 / 100;\n        return fibLevels;\n    }\n\n    function getPrice() internal view returns (uint256) {\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(priceFeedAddress);\n        (, int price,,,) = priceFeed.latestRoundData();\n        return uint256(price * 10 ** 10);\n    }\n}\n"
			},
			"contracts/aave/protocol-v2/contracts/interfaces/ILendingPoolAddressesProvider.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\npragma solidity ^0.8.20;\n\n/**\n * @title LendingPoolAddressesProvider contract\n * @dev Main registry of addresses part of or connected to the protocol, including permissioned roles\n * - Acting also as factory of proxies and admin of those, so with right to change its implementations\n * - Owned by the Aave Governance\n * @author Aave\n **/\ninterface ILendingPoolAddressesProvider {\n  event MarketIdSet(string newMarketId);\n  event LendingPoolUpdated(address indexed newAddress);\n  event ConfigurationAdminUpdated(address indexed newAddress);\n  event EmergencyAdminUpdated(address indexed newAddress);\n  event LendingPoolConfiguratorUpdated(address indexed newAddress);\n  event LendingPoolCollateralManagerUpdated(address indexed newAddress);\n  event PriceOracleUpdated(address indexed newAddress);\n  event LendingRateOracleUpdated(address indexed newAddress);\n  event ProxyCreated(bytes32 id, address indexed newAddress);\n  event AddressSet(bytes32 id, address indexed newAddress, bool hasProxy);\n\n  function getMarketId() external view returns (string memory);\n\n  function setMarketId(string calldata marketId) external;\n\n  function setAddress(bytes32 id, address newAddress) external;\n\n  function setAddressAsProxy(bytes32 id, address impl) external;\n\n  function getAddress(bytes32 id) external view returns (address);\n\n  function getLendingPool() external view returns (address);\n\n  function setLendingPoolImpl(address pool) external;\n\n  function getLendingPoolConfigurator() external view returns (address);\n\n  function setLendingPoolConfiguratorImpl(address configurator) external;\n\n  function getLendingPoolCollateralManager() external view returns (address);\n\n  function setLendingPoolCollateralManager(address manager) external;\n\n  function getPoolAdmin() external view returns (address);\n\n  function setPoolAdmin(address admin) external;\n\n  function getEmergencyAdmin() external view returns (address);\n\n  function setEmergencyAdmin(address admin) external;\n\n  function getPriceOracle() external view returns (address);\n\n  function setPriceOracle(address priceOracle) external;\n\n  function getLendingRateOracle() external view returns (address);\n\n  function setLendingRateOracle(address lendingRateOracle) external;\n}\n"
			},
			"contracts/aave/protocol-v2/contracts/interfaces/ILendingPool.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\npragma solidity ^0.8.20;\npragma experimental ABIEncoderV2;\n\nimport {ILendingPoolAddressesProvider} from './ILendingPoolAddressesProvider.sol';\nimport {DataTypes} from './DataTypes.sol';\n\ninterface ILendingPool {\n  /**\n   * @dev Emitted on deposit()\n   * @param reserve The address of the underlying asset of the reserve\n   * @param user The address initiating the deposit\n   * @param onBehalfOf The beneficiary of the deposit, receiving the aTokens\n   * @param amount The amount deposited\n   * @param referral The referral code used\n   **/\n  event Deposit(\n    address indexed reserve,\n    address user,\n    address indexed onBehalfOf,\n    uint256 amount,\n    uint16 indexed referral\n  );\n\n  /**\n   * @dev Emitted on withdraw()\n   * @param reserve The address of the underlyng asset being withdrawn\n   * @param user The address initiating the withdrawal, owner of aTokens\n   * @param to Address that will receive the underlying\n   * @param amount The amount to be withdrawn\n   **/\n  event Withdraw(address indexed reserve, address indexed user, address indexed to, uint256 amount);\n\n  /**\n   * @dev Emitted on borrow() and flashLoan() when debt needs to be opened\n   * @param reserve The address of the underlying asset being borrowed\n   * @param user The address of the user initiating the borrow(), receiving the funds on borrow() or just\n   * initiator of the transaction on flashLoan()\n   * @param onBehalfOf The address that will be getting the debt\n   * @param amount The amount borrowed out\n   * @param borrowRateMode The rate mode: 1 for Stable, 2 for Variable\n   * @param borrowRate The numeric rate at which the user has borrowed\n   * @param referral The referral code used\n   **/\n  event Borrow(\n    address indexed reserve,\n    address user,\n    address indexed onBehalfOf,\n    uint256 amount,\n    uint256 borrowRateMode,\n    uint256 borrowRate,\n    uint16 indexed referral\n  );\n\n  /**\n   * @dev Emitted on repay()\n   * @param reserve The address of the underlying asset of the reserve\n   * @param user The beneficiary of the repayment, getting his debt reduced\n   * @param repayer The address of the user initiating the repay(), providing the funds\n   * @param amount The amount repaid\n   **/\n  event Repay(\n    address indexed reserve,\n    address indexed user,\n    address indexed repayer,\n    uint256 amount\n  );\n\n  /**\n   * @dev Emitted on swapBorrowRateMode()\n   * @param reserve The address of the underlying asset of the reserve\n   * @param user The address of the user swapping his rate mode\n   * @param rateMode The rate mode that the user wants to swap to\n   **/\n  event Swap(address indexed reserve, address indexed user, uint256 rateMode);\n\n  /**\n   * @dev Emitted on setUserUseReserveAsCollateral()\n   * @param reserve The address of the underlying asset of the reserve\n   * @param user The address of the user enabling the usage as collateral\n   **/\n  event ReserveUsedAsCollateralEnabled(address indexed reserve, address indexed user);\n\n  /**\n   * @dev Emitted on setUserUseReserveAsCollateral()\n   * @param reserve The address of the underlying asset of the reserve\n   * @param user The address of the user enabling the usage as collateral\n   **/\n  event ReserveUsedAsCollateralDisabled(address indexed reserve, address indexed user);\n\n  /**\n   * @dev Emitted on rebalanceStableBorrowRate()\n   * @param reserve The address of the underlying asset of the reserve\n   * @param user The address of the user for which the rebalance has been executed\n   **/\n  event RebalanceStableBorrowRate(address indexed reserve, address indexed user);\n\n  /**\n   * @dev Emitted on flashLoan()\n   * @param target The address of the flash loan receiver contract\n   * @param initiator The address initiating the flash loan\n   * @param asset The address of the asset being flash borrowed\n   * @param amount The amount flash borrowed\n   * @param premium The fee flash borrowed\n   * @param referralCode The referral code used\n   **/\n  event FlashLoan(\n    address indexed target,\n    address indexed initiator,\n    address indexed asset,\n    uint256 amount,\n    uint256 premium,\n    uint16 referralCode\n  );\n\n  /**\n   * @dev Emitted when the pause is triggered.\n   */\n  event Paused();\n\n  /**\n   * @dev Emitted when the pause is lifted.\n   */\n  event Unpaused();\n\n  /**\n   * @dev Emitted when a borrower is liquidated. This event is emitted by the LendingPool via\n   * LendingPoolCollateral manager using a DELEGATECALL\n   * This allows to have the events in the generated ABI for LendingPool.\n   * @param collateralAsset The address of the underlying asset used as collateral, to receive as result of the liquidation\n   * @param debtAsset The address of the underlying borrowed asset to be repaid with the liquidation\n   * @param user The address of the borrower getting liquidated\n   * @param debtToCover The debt amount of borrowed `asset` the liquidator wants to cover\n   * @param liquidatedCollateralAmount The amount of collateral received by the liiquidator\n   * @param liquidator The address of the liquidator\n   * @param receiveAToken `true` if the liquidators wants to receive the collateral aTokens, `false` if he wants\n   * to receive the underlying collateral asset directly\n   **/\n  event LiquidationCall(\n    address indexed collateralAsset,\n    address indexed debtAsset,\n    address indexed user,\n    uint256 debtToCover,\n    uint256 liquidatedCollateralAmount,\n    address liquidator,\n    bool receiveAToken\n  );\n\n  /**\n   * @dev Emitted when the state of a reserve is updated. NOTE: This event is actually declared\n   * in the ReserveLogic library and emitted in the updateInterestRates() function. Since the function is internal,\n   * the event will actually be fired by the LendingPool contract. The event is therefore replicated here so it\n   * gets added to the LendingPool ABI\n   * @param reserve The address of the underlying asset of the reserve\n   * @param liquidityRate The new liquidity rate\n   * @param stableBorrowRate The new stable borrow rate\n   * @param variableBorrowRate The new variable borrow rate\n   * @param liquidityIndex The new liquidity index\n   * @param variableBorrowIndex The new variable borrow index\n   **/\n  event ReserveDataUpdated(\n    address indexed reserve,\n    uint256 liquidityRate,\n    uint256 stableBorrowRate,\n    uint256 variableBorrowRate,\n    uint256 liquidityIndex,\n    uint256 variableBorrowIndex\n  );\n\n  /**\n   * @dev Deposits an `amount` of underlying asset into the reserve, receiving in return overlying aTokens.\n   * - E.g. User deposits 100 USDC and gets in return 100 aUSDC\n   * @param asset The address of the underlying asset to deposit\n   * @param amount The amount to be deposited\n   * @param onBehalfOf The address that will receive the aTokens, same as msg.sender if the user\n   *   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens\n   *   is a different wallet\n   * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   *   0 if the action is executed directly by the user, without any middle-man\n   **/\n  function deposit(\n    address asset,\n    uint256 amount,\n    address onBehalfOf,\n    uint16 referralCode\n  ) external;\n\n  /**\n   * @dev Withdraws an `amount` of underlying asset from the reserve, burning the equivalent aTokens owned\n   * E.g. User has 100 aUSDC, calls withdraw() and receives 100 USDC, burning the 100 aUSDC\n   * @param asset The address of the underlying asset to withdraw\n   * @param amount The underlying amount to be withdrawn\n   *   - Send the value type(uint256).max in order to withdraw the whole aToken balance\n   * @param to Address that will receive the underlying, same as msg.sender if the user\n   *   wants to receive it on his own wallet, or a different address if the beneficiary is a\n   *   different wallet\n   * @return The final amount withdrawn\n   **/\n  function withdraw(\n    address asset,\n    uint256 amount,\n    address to\n  ) external returns (uint256);\n\n  /**\n   * @dev Allows users to borrow a specific `amount` of the reserve underlying asset, provided that the borrower\n   * already deposited enough collateral, or he was given enough allowance by a credit delegator on the\n   * corresponding debt token (StableDebtToken or VariableDebtToken)\n   * - E.g. User borrows 100 USDC passing as `onBehalfOf` his own address, receiving the 100 USDC in his wallet\n   *   and 100 stable/variable debt tokens, depending on the `interestRateMode`\n   * @param asset The address of the underlying asset to borrow\n   * @param amount The amount to be borrowed\n   * @param interestRateMode The interest rate mode at which the user wants to borrow: 1 for Stable, 2 for Variable\n   * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   *   0 if the action is executed directly by the user, without any middle-man\n   * @param onBehalfOf Address of the user who will receive the debt. Should be the address of the borrower itself\n   * calling the function if he wants to borrow against his own collateral, or the address of the credit delegator\n   * if he has been given credit delegation allowance\n   **/\n  function borrow(\n    address asset,\n    uint256 amount,\n    uint256 interestRateMode,\n    uint16 referralCode,\n    address onBehalfOf\n  ) external;\n\n  /**\n   * @notice Repays a borrowed `amount` on a specific reserve, burning the equivalent debt tokens owned\n   * - E.g. User repays 100 USDC, burning 100 variable/stable debt tokens of the `onBehalfOf` address\n   * @param asset The address of the borrowed underlying asset previously borrowed\n   * @param amount The amount to repay\n   * - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\n   * @param rateMode The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\n   * @param onBehalfOf Address of the user who will get his debt reduced/removed. Should be the address of the\n   * user calling the function if he wants to reduce/remove his own debt, or the address of any other\n   * other borrower whose debt should be removed\n   * @return The final amount repaid\n   **/\n  function repay(\n    address asset,\n    uint256 amount,\n    uint256 rateMode,\n    address onBehalfOf\n  ) external returns (uint256);\n\n  /**\n   * @dev Allows a borrower to swap his debt between stable and variable mode, or viceversa\n   * @param asset The address of the underlying asset borrowed\n   * @param rateMode The rate mode that the user wants to swap to\n   **/\n  function swapBorrowRateMode(address asset, uint256 rateMode) external;\n\n  /**\n   * @dev Rebalances the stable interest rate of a user to the current stable rate defined on the reserve.\n   * - Users can be rebalanced if the following conditions are satisfied:\n   *     1. Usage ratio is above 95%\n   *     2. the current deposit APY is below REBALANCE_UP_THRESHOLD * maxVariableBorrowRate, which means that too much has been\n   *        borrowed at a stable rate and depositors are not earning enough\n   * @param asset The address of the underlying asset borrowed\n   * @param user The address of the user to be rebalanced\n   **/\n  function rebalanceStableBorrowRate(address asset, address user) external;\n\n  /**\n   * @dev Allows depositors to enable/disable a specific deposited asset as collateral\n   * @param asset The address of the underlying asset deposited\n   * @param useAsCollateral `true` if the user wants to use the deposit as collateral, `false` otherwise\n   **/\n  function setUserUseReserveAsCollateral(address asset, bool useAsCollateral) external;\n\n  /**\n   * @dev Function to liquidate a non-healthy position collateral-wise, with Health Factor below 1\n   * - The caller (liquidator) covers `debtToCover` amount of debt of the user getting liquidated, and receives\n   *   a proportionally amount of the `collateralAsset` plus a bonus to cover market risk\n   * @param collateralAsset The address of the underlying asset used as collateral, to receive as result of the liquidation\n   * @param debtAsset The address of the underlying borrowed asset to be repaid with the liquidation\n   * @param user The address of the borrower getting liquidated\n   * @param debtToCover The debt amount of borrowed `asset` the liquidator wants to cover\n   * @param receiveAToken `true` if the liquidators wants to receive the collateral aTokens, `false` if he wants\n   * to receive the underlying collateral asset directly\n   **/\n  function liquidationCall(\n    address collateralAsset,\n    address debtAsset,\n    address user,\n    uint256 debtToCover,\n    bool receiveAToken\n  ) external;\n\n  /**\n   * @dev Allows smartcontracts to access the liquidity of the pool within one transaction,\n   * as long as the amount taken plus a fee is returned.\n   * IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept into consideration.\n   * For further details please visit https://developers.aave.com\n   * @param receiverAddress The address of the contract receiving the funds, implementing the IFlashLoanReceiver interface\n   * @param assets The addresses of the assets being flash-borrowed\n   * @param amounts The amounts amounts being flash-borrowed\n   * @param modes Types of the debt to open if the flash loan is not returned:\n   *   0 -> Don't open any debt, just revert if funds can't be transferred from the receiver\n   *   1 -> Open debt at stable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\n   *   2 -> Open debt at variable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\n   * @param onBehalfOf The address  that will receive the debt in the case of using on `modes` 1 or 2\n   * @param params Variadic packed params to pass to the receiver as extra information\n   * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   *   0 if the action is executed directly by the user, without any middle-man\n   **/\n  function flashLoan(\n    address receiverAddress,\n    address[] calldata assets,\n    uint256[] calldata amounts,\n    uint256[] calldata modes,\n    address onBehalfOf,\n    bytes calldata params,\n    uint16 referralCode\n  ) external;\n\n  /**\n   * @dev Returns the user account data across all the reserves\n   * @param user The address of the user\n   * @return totalCollateralETH the total collateral in ETH of the user\n   * @return totalDebtETH the total debt in ETH of the user\n   * @return availableBorrowsETH the borrowing power left of the user\n   * @return currentLiquidationThreshold the liquidation threshold of the user\n   * @return ltv the loan to value of the user\n   * @return healthFactor the current health factor of the user\n   **/\n  function getUserAccountData(address user)\n    external\n    view\n    returns (\n      uint256 totalCollateralETH,\n      uint256 totalDebtETH,\n      uint256 availableBorrowsETH,\n      uint256 currentLiquidationThreshold,\n      uint256 ltv,\n      uint256 healthFactor\n    );\n\n  function initReserve(\n    address reserve,\n    address aTokenAddress,\n    address stableDebtAddress,\n    address variableDebtAddress,\n    address interestRateStrategyAddress\n  ) external;\n\n  function setReserveInterestRateStrategyAddress(address reserve, address rateStrategyAddress)\n    external;\n\n  function setConfiguration(address reserve, uint256 configuration) external;\n\n  /**\n   * @dev Returns the configuration of the reserve\n   * @param asset The address of the underlying asset of the reserve\n   * @return The configuration of the reserve\n   **/\n  function getConfiguration(address asset)\n    external\n    view\n    returns (DataTypes.ReserveConfigurationMap memory);\n\n  /**\n   * @dev Returns the configuration of the user across all the reserves\n   * @param user The user address\n   * @return The configuration of the user\n   **/\n  function getUserConfiguration(address user)\n    external\n    view\n    returns (DataTypes.UserConfigurationMap memory);\n\n  /**\n   * @dev Returns the normalized income normalized income of the reserve\n   * @param asset The address of the underlying asset of the reserve\n   * @return The reserve's normalized income\n   */\n  function getReserveNormalizedIncome(address asset) external view returns (uint256);\n\n  /**\n   * @dev Returns the normalized variable debt per unit of asset\n   * @param asset The address of the underlying asset of the reserve\n   * @return The reserve normalized variable debt\n   */\n  function getReserveNormalizedVariableDebt(address asset) external view returns (uint256);\n\n  /**\n   * @dev Returns the state and configuration of the reserve\n   * @param asset The address of the underlying asset of the reserve\n   * @return The state of the reserve\n   **/\n  function getReserveData(address asset) external view returns (DataTypes.ReserveData memory);\n\n  function finalizeTransfer(\n    address asset,\n    address from,\n    address to,\n    uint256 amount,\n    uint256 balanceFromAfter,\n    uint256 balanceToBefore\n  ) external;\n\n  function getReservesList() external view returns (address[] memory);\n\n  function getAddressesProvider() external view returns (ILendingPoolAddressesProvider);\n\n  function setPause(bool val) external;\n\n  function paused() external view returns (bool);\n}\n"
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity ^0.8.20;\npragma abicoder v2;\n\nimport '../../../../openzeppelin/contracts/token/ERC721/IERC721Metadata.sol';\nimport '../../../../openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol';\n\nimport './IPoolInitializer.sol';\nimport './IERC721Permit.sol';\nimport './IPeripheryPayments.sol';\nimport './IPeripheryImmutableState.sol';\n\n/// @title Non-fungible token for positions\n/// @notice Wraps Uniswap V3 positions in a non-fungible token interface which allows for them to be transferred\n/// and authorized.\ninterface INonfungiblePositionManager is\n    IPoolInitializer,\n    IPeripheryPayments,\n    IPeripheryImmutableState,\n    IERC721Metadata,\n    IERC721Enumerable,\n    IERC721Permit\n{\n    /// @notice Emitted when liquidity is increased for a position NFT\n    /// @dev Also emitted when a token is minted\n    /// @param tokenId The ID of the token for which liquidity was increased\n    /// @param liquidity The amount by which liquidity for the NFT position was increased\n    /// @param amount0 The amount of token0 that was paid for the increase in liquidity\n    /// @param amount1 The amount of token1 that was paid for the increase in liquidity\n    event IncreaseLiquidity(uint256 indexed tokenId, uint128 liquidity, uint256 amount0, uint256 amount1);\n    /// @notice Emitted when liquidity is decreased for a position NFT\n    /// @param tokenId The ID of the token for which liquidity was decreased\n    /// @param liquidity The amount by which liquidity for the NFT position was decreased\n    /// @param amount0 The amount of token0 that was accounted for the decrease in liquidity\n    /// @param amount1 The amount of token1 that was accounted for the decrease in liquidity\n    event DecreaseLiquidity(uint256 indexed tokenId, uint128 liquidity, uint256 amount0, uint256 amount1);\n    /// @notice Emitted when tokens are collected for a position NFT\n    /// @dev The amounts reported may not be exactly equivalent to the amounts transferred, due to rounding behavior\n    /// @param tokenId The ID of the token for which underlying tokens were collected\n    /// @param recipient The address of the account that received the collected tokens\n    /// @param amount0 The amount of token0 owed to the position that was collected\n    /// @param amount1 The amount of token1 owed to the position that was collected\n    event Collect(uint256 indexed tokenId, address recipient, uint256 amount0, uint256 amount1);\n\n    /// @notice Returns the position information associated with a given token ID.\n    /// @dev Throws if the token ID is not valid.\n    /// @param tokenId The ID of the token that represents the position\n    /// @return nonce The nonce for permits\n    /// @return operator The address that is approved for spending\n    /// @return token0 The address of the token0 for a specific pool\n    /// @return token1 The address of the token1 for a specific pool\n    /// @return fee The fee associated with the pool\n    /// @return tickLower The lower end of the tick range for the position\n    /// @return tickUpper The higher end of the tick range for the position\n    /// @return liquidity The liquidity of the position\n    /// @return feeGrowthInside0LastX128 The fee growth of token0 as of the last action on the individual position\n    /// @return feeGrowthInside1LastX128 The fee growth of token1 as of the last action on the individual position\n    /// @return tokensOwed0 The uncollected amount of token0 owed to the position as of the last computation\n    /// @return tokensOwed1 The uncollected amount of token1 owed to the position as of the last computation\n    function positions(uint256 tokenId)\n        external\n        view\n        returns (\n            uint96 nonce,\n            address operator,\n            address token0,\n            address token1,\n            uint24 fee,\n            int24 tickLower,\n            int24 tickUpper,\n            uint128 liquidity,\n            uint256 feeGrowthInside0LastX128,\n            uint256 feeGrowthInside1LastX128,\n            uint128 tokensOwed0,\n            uint128 tokensOwed1\n        );\n\n    struct MintParams {\n        address token0;\n        address token1;\n        uint24 fee;\n        int24 tickLower;\n        int24 tickUpper;\n        uint256 amount0Desired;\n        uint256 amount1Desired;\n        uint256 amount0Min;\n        uint256 amount1Min;\n        address recipient;\n        uint256 deadline;\n    }\n\n    /// @notice Creates a new position wrapped in a NFT\n    /// @dev Call this when the pool does exist and is initialized. Note that if the pool is created but not initialized\n    /// a method does not exist, i.e. the pool is assumed to be initialized.\n    /// @param params The params necessary to mint a position, encoded as `MintParams` in calldata\n    /// @return tokenId The ID of the token that represents the minted position\n    /// @return liquidity The amount of liquidity for this position\n    /// @return amount0 The amount of token0\n    /// @return amount1 The amount of token1\n    function mint(MintParams calldata params)\n        external\n        payable\n        returns (\n            uint256 tokenId,\n            uint128 liquidity,\n            uint256 amount0,\n            uint256 amount1\n        );\n\n    struct IncreaseLiquidityParams {\n        uint256 tokenId;\n        uint256 amount0Desired;\n        uint256 amount1Desired;\n        uint256 amount0Min;\n        uint256 amount1Min;\n        uint256 deadline;\n    }\n\n    /// @notice Increases the amount of liquidity in a position, with tokens paid by the `msg.sender`\n    /// @param params tokenId The ID of the token for which liquidity is being increased,\n    /// amount0Desired The desired amount of token0 to be spent,\n    /// amount1Desired The desired amount of token1 to be spent,\n    /// amount0Min The minimum amount of token0 to spend, which serves as a slippage check,\n    /// amount1Min The minimum amount of token1 to spend, which serves as a slippage check,\n    /// deadline The time by which the transaction must be included to effect the change\n    /// @return liquidity The new liquidity amount as a result of the increase\n    /// @return amount0 The amount of token0 to acheive resulting liquidity\n    /// @return amount1 The amount of token1 to acheive resulting liquidity\n    function increaseLiquidity(IncreaseLiquidityParams calldata params)\n        external\n        payable\n        returns (\n            uint128 liquidity,\n            uint256 amount0,\n            uint256 amount1\n        );\n\n    struct DecreaseLiquidityParams {\n        uint256 tokenId;\n        uint128 liquidity;\n        uint256 amount0Min;\n        uint256 amount1Min;\n        uint256 deadline;\n    }\n\n    /// @notice Decreases the amount of liquidity in a position and accounts it to the position\n    /// @param params tokenId The ID of the token for which liquidity is being decreased,\n    /// amount The amount by which liquidity will be decreased,\n    /// amount0Min The minimum amount of token0 that should be accounted for the burned liquidity,\n    /// amount1Min The minimum amount of token1 that should be accounted for the burned liquidity,\n    /// deadline The time by which the transaction must be included to effect the change\n    /// @return amount0 The amount of token0 accounted to the position's tokens owed\n    /// @return amount1 The amount of token1 accounted to the position's tokens owed\n    function decreaseLiquidity(DecreaseLiquidityParams calldata params)\n        external\n        payable\n        returns (uint256 amount0, uint256 amount1);\n\n    struct CollectParams {\n        uint256 tokenId;\n        address recipient;\n        uint128 amount0Max;\n        uint128 amount1Max;\n    }\n\n    /// @notice Collects up to a maximum amount of fees owed to a specific position to the recipient\n    /// @param params tokenId The ID of the NFT for which tokens are being collected,\n    /// recipient The account that should receive the tokens,\n    /// amount0Max The maximum amount of token0 to collect,\n    /// amount1Max The maximum amount of token1 to collect\n    /// @return amount0 The amount of fees collected in token0\n    /// @return amount1 The amount of fees collected in token1\n    function collect(CollectParams calldata params) external payable returns (uint256 amount0, uint256 amount1);\n\n    /// @notice Burns a token ID, which deletes it from the NFT contract. The token must have 0 liquidity and all tokens\n    /// must be collected first.\n    /// @param tokenId The ID of the token that is being burned\n    function burn(uint256 tokenId) external payable;\n}\n"
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity ^0.8.20;\n\n/// @title Periphery Payments\n/// @notice Functions to ease deposits and withdrawals of ETH\ninterface IPeripheryPayments {\n    /// @notice Unwraps the contract's WETH9 balance and sends it to recipient as ETH.\n    /// @dev The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.\n    /// @param amountMinimum The minimum amount of WETH9 to unwrap\n    /// @param recipient The address receiving ETH\n    function unwrapWETH9(uint256 amountMinimum, address recipient) external payable;\n\n    /// @notice Refunds any ETH balance held by this contract to the `msg.sender`\n    /// @dev Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps\n    /// that use ether for the input amount\n    function refundETH() external payable;\n\n    /// @notice Transfers the full amount of a token held by this contract to recipient\n    /// @dev The amountMinimum parameter prevents malicious contracts from stealing the token from users\n    /// @param token The contract address of the token which will be transferred to `recipient`\n    /// @param amountMinimum The minimum amount of token required for a transfer\n    /// @param recipient The destination address of the token\n    function sweepToken(\n        address token,\n        uint256 amountMinimum,\n        address recipient\n    ) external payable;\n}\n"
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity ^0.8.20;\n\n/// @title Immutable state\n/// @notice Functions that return immutable state of the router\ninterface IPeripheryImmutableState {\n    /// @return Returns the address of the Uniswap V3 factory\n    function factory() external view returns (address);\n\n    /// @return Returns the address of WETH9\n    function WETH9() external view returns (address);\n}\n"
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/IUniswapV3Pool.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity ^0.8.20;\n\nimport './pool/IUniswapV3PoolImmutables.sol';\nimport './pool/IUniswapV3PoolState.sol';\nimport './pool/IUniswapV3PoolDerivedState.sol';\nimport './pool/IUniswapV3PoolActions.sol';\nimport './pool/IUniswapV3PoolOwnerActions.sol';\nimport './pool/IUniswapV3PoolEvents.sol';\n\n/// @title The interface for a Uniswap V3 Pool\n/// @notice A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform\n/// to the ERC20 specification\n/// @dev The pool interface is broken up into many smaller pieces\ninterface IUniswapV3Pool is\n    IUniswapV3PoolImmutables,\n    IUniswapV3PoolState,\n    IUniswapV3PoolDerivedState,\n    IUniswapV3PoolActions,\n    IUniswapV3PoolOwnerActions,\n    IUniswapV3PoolEvents\n{\n\n}\n"
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity ^0.8.20;\npragma abicoder v2;\n\nimport './callback/IUniswapV3SwapCallback.sol';\n\n/// @title Router token swapping functionality\n/// @notice Functions for swapping tokens via Uniswap V3\ninterface ISwapRouter is IUniswapV3SwapCallback {\n    struct ExactInputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 deadline;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another token\n    /// @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInputSingle(ExactInputSingleParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactInputParams {\n        bytes path;\n        address recipient;\n        uint256 deadline;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInput(ExactInputParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactOutputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 deadline;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another token\n    /// @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutputSingle(ExactOutputSingleParams calldata params) external payable returns (uint256 amountIn);\n\n    struct ExactOutputParams {\n        bytes path;\n        address recipient;\n        uint256 deadline;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutput(ExactOutputParams calldata params) external payable returns (uint256 amountIn);\n}\n"
			},
			"contracts/chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\n// solhint-disable-next-line interface-starts-with-i\ninterface AggregatorV3Interface {\n  function decimals() external view returns (uint8);\n\n  function description() external view returns (string memory);\n\n  function version() external view returns (uint256);\n\n  function getRoundData(\n    uint80 _roundId\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n\n  function latestRoundData()\n    external\n    view\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n}\n"
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity ^0.8.20;\n\n/// @title Events emitted by a pool\n/// @notice Contains all events emitted by the pool\ninterface IUniswapV3PoolEvents {\n    /// @notice Emitted exactly once by a pool when #initialize is first called on the pool\n    /// @dev Mint/Burn/Swap cannot be emitted by the pool before Initialize\n    /// @param sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96\n    /// @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\n    event Initialize(uint160 sqrtPriceX96, int24 tick);\n\n    /// @notice Emitted when liquidity is minted for a given position\n    /// @param sender The address that minted the liquidity\n    /// @param owner The owner of the position and recipient of any minted liquidity\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount The amount of liquidity minted to the position range\n    /// @param amount0 How much token0 was required for the minted liquidity\n    /// @param amount1 How much token1 was required for the minted liquidity\n    event Mint(\n        address sender,\n        address indexed owner,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount,\n        uint256 amount0,\n        uint256 amount1\n    );\n\n    /// @notice Emitted when fees are collected by the owner of a position\n    /// @dev Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\n    /// @param owner The owner of the position for which fees are collected\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount0 The amount of token0 fees collected\n    /// @param amount1 The amount of token1 fees collected\n    event Collect(\n        address indexed owner,\n        address recipient,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount0,\n        uint128 amount1\n    );\n\n    /// @notice Emitted when a position's liquidity is removed\n    /// @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\n    /// @param owner The owner of the position for which liquidity is removed\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount The amount of liquidity to remove\n    /// @param amount0 The amount of token0 withdrawn\n    /// @param amount1 The amount of token1 withdrawn\n    event Burn(\n        address indexed owner,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount,\n        uint256 amount0,\n        uint256 amount1\n    );\n\n    /// @notice Emitted by the pool for any swaps between token0 and token1\n    /// @param sender The address that initiated the swap call, and that received the callback\n    /// @param recipient The address that received the output of the swap\n    /// @param amount0 The delta of the token0 balance of the pool\n    /// @param amount1 The delta of the token1 balance of the pool\n    /// @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\n    /// @param liquidity The liquidity of the pool after the swap\n    /// @param tick The log base 1.0001 of price of the pool after the swap\n    event Swap(\n        address indexed sender,\n        address indexed recipient,\n        int256 amount0,\n        int256 amount1,\n        uint160 sqrtPriceX96,\n        uint128 liquidity,\n        int24 tick\n    );\n\n    /// @notice Emitted by the pool for any flashes of token0/token1\n    /// @param sender The address that initiated the swap call, and that received the callback\n    /// @param recipient The address that received the tokens from flash\n    /// @param amount0 The amount of token0 that was flashed\n    /// @param amount1 The amount of token1 that was flashed\n    /// @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\n    /// @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\n    event Flash(\n        address indexed sender,\n        address indexed recipient,\n        uint256 amount0,\n        uint256 amount1,\n        uint256 paid0,\n        uint256 paid1\n    );\n\n    /// @notice Emitted by the pool for increases to the number of observations that can be stored\n    /// @dev observationCardinalityNext is not the observation cardinality until an observation is written at the index\n    /// just before a mint/swap/burn.\n    /// @param observationCardinalityNextOld The previous value of the next observation cardinality\n    /// @param observationCardinalityNextNew The updated value of the next observation cardinality\n    event IncreaseObservationCardinalityNext(\n        uint16 observationCardinalityNextOld,\n        uint16 observationCardinalityNextNew\n    );\n\n    /// @notice Emitted when the protocol fee is changed by the pool\n    /// @param feeProtocol0Old The previous value of the token0 protocol fee\n    /// @param feeProtocol1Old The previous value of the token1 protocol fee\n    /// @param feeProtocol0New The updated value of the token0 protocol fee\n    /// @param feeProtocol1New The updated value of the token1 protocol fee\n    event SetFeeProtocol(uint8 feeProtocol0Old, uint8 feeProtocol1Old, uint8 feeProtocol0New, uint8 feeProtocol1New);\n\n    /// @notice Emitted when the collected protocol fees are withdrawn by the factory owner\n    /// @param sender The address that collects the protocol fees\n    /// @param recipient The address that receives the collected protocol fees\n    /// @param amount0 The amount of token0 protocol fees that is withdrawn\n    /// @param amount0 The amount of token1 protocol fees that is withdrawn\n    event CollectProtocol(address indexed sender, address indexed recipient, uint128 amount0, uint128 amount1);\n}\n"
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.8.20;\n\n/// @title Permissioned pool actions\n/// @notice Contains pool methods that may only be called by the factory owner\ninterface IUniswapV3PoolOwnerActions {\n    /// @notice Set the denominator of the protocol's % share of the fees\n    /// @param feeProtocol0 new protocol fee for token0 of the pool\n    /// @param feeProtocol1 new protocol fee for token1 of the pool\n    function setFeeProtocol(uint8 feeProtocol0, uint8 feeProtocol1) external;\n\n    /// @notice Collect the protocol fee accrued to the pool\n    /// @param recipient The address to which collected protocol fees should be sent\n    /// @param amount0Requested The maximum amount of token0 to send, can be 0 to collect fees in only token1\n    /// @param amount1Requested The maximum amount of token1 to send, can be 0 to collect fees in only token0\n    /// @return amount0 The protocol fee collected in token0\n    /// @return amount1 The protocol fee collected in token1\n    function collectProtocol(\n        address recipient,\n        uint128 amount0Requested,\n        uint128 amount1Requested\n    ) external returns (uint128 amount0, uint128 amount1);\n}\n"
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity ^0.8.20;\n\n/// @title Permissionless pool actions\n/// @notice Contains pool methods that can be called by anyone\ninterface IUniswapV3PoolActions {\n    /// @notice Sets the initial price for the pool\n    /// @dev Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\n    /// @param sqrtPriceX96 the initial sqrt price of the pool as a Q64.96\n    function initialize(uint160 sqrtPriceX96) external;\n\n    /// @notice Adds liquidity for the given recipient/tickLower/tickUpper position\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback\n    /// in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends\n    /// on tickLower, tickUpper, the amount of liquidity, and the current price.\n    /// @param recipient The address for which the liquidity will be created\n    /// @param tickLower The lower tick of the position in which to add liquidity\n    /// @param tickUpper The upper tick of the position in which to add liquidity\n    /// @param amount The amount of liquidity to mint\n    /// @param data Any data that should be passed through to the callback\n    /// @return amount0 The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\n    /// @return amount1 The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\n    function mint(\n        address recipient,\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount,\n        bytes calldata data\n    ) external returns (uint256 amount0, uint256 amount1);\n\n    /// @notice Collects tokens owed to a position\n    /// @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\n    /// Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\n    /// amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\n    /// actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\n    /// @param recipient The address which should receive the fees collected\n    /// @param tickLower The lower tick of the position for which to collect fees\n    /// @param tickUpper The upper tick of the position for which to collect fees\n    /// @param amount0Requested How much token0 should be withdrawn from the fees owed\n    /// @param amount1Requested How much token1 should be withdrawn from the fees owed\n    /// @return amount0 The amount of fees collected in token0\n    /// @return amount1 The amount of fees collected in token1\n    function collect(\n        address recipient,\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount0Requested,\n        uint128 amount1Requested\n    ) external returns (uint128 amount0, uint128 amount1);\n\n    /// @notice Burn liquidity from the sender and account tokens owed for the liquidity to the position\n    /// @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\n    /// @dev Fees must be collected separately via a call to #collect\n    /// @param tickLower The lower tick of the position for which to burn liquidity\n    /// @param tickUpper The upper tick of the position for which to burn liquidity\n    /// @param amount How much liquidity to burn\n    /// @return amount0 The amount of token0 sent to the recipient\n    /// @return amount1 The amount of token1 sent to the recipient\n    function burn(\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount\n    ) external returns (uint256 amount0, uint256 amount1);\n\n    /// @notice Swap token0 for token1, or token1 for token0\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\n    /// @param recipient The address to receive the output of the swap\n    /// @param zeroForOne The direction of the swap, true for token0 to token1, false for token1 to token0\n    /// @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\n    /// @param sqrtPriceLimitX96 The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\n    /// value after the swap. If one for zero, the price cannot be greater than this value after the swap\n    /// @param data Any data to be passed through to the callback\n    /// @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\n    /// @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive\n    function swap(\n        address recipient,\n        bool zeroForOne,\n        int256 amountSpecified,\n        uint160 sqrtPriceLimitX96,\n        bytes calldata data\n    ) external returns (int256 amount0, int256 amount1);\n\n    /// @notice Receive token0 and/or token1 and pay it back, plus a fee, in the callback\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallback\n    /// @dev Can be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling\n    /// with 0 amount{0,1} and sending the donation amount(s) from the callback\n    /// @param recipient The address which will receive the token0 and token1 amounts\n    /// @param amount0 The amount of token0 to send\n    /// @param amount1 The amount of token1 to send\n    /// @param data Any data to be passed through to the callback\n    function flash(\n        address recipient,\n        uint256 amount0,\n        uint256 amount1,\n        bytes calldata data\n    ) external;\n\n    /// @notice Increase the maximum number of price and liquidity observations that this pool will store\n    /// @dev This method is no-op if the pool already has an observationCardinalityNext greater than or equal to\n    /// the input observationCardinalityNext.\n    /// @param observationCardinalityNext The desired minimum number of observations for the pool to store\n    function increaseObservationCardinalityNext(uint16 observationCardinalityNext) external;\n}\n"
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity ^0.8.20;\n\n/// @title Pool state that is not stored\n/// @notice Contains view functions to provide information about the pool that is computed rather than stored on the\n/// blockchain. The functions here may have variable gas costs.\ninterface IUniswapV3PoolDerivedState {\n    /// @notice Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\n    /// @dev To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing\n    /// the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,\n    /// you must call it with secondsAgos = [3600, 0].\n    /// @dev The time weighted average tick represents the geometric time weighted average price of the pool, in\n    /// log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\n    /// @param secondsAgos From how long ago each cumulative tick and liquidity value should be returned\n    /// @return tickCumulatives Cumulative tick values as of each `secondsAgos` from the current block timestamp\n    /// @return secondsPerLiquidityCumulativeX128s Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block\n    /// timestamp\n    function observe(uint32[] calldata secondsAgos)\n        external\n        view\n        returns (int56[] memory tickCumulatives, uint160[] memory secondsPerLiquidityCumulativeX128s);\n\n    /// @notice Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\n    /// @dev Snapshots must only be compared to other snapshots, taken over a period for which a position existed.\n    /// I.e., snapshots cannot be compared if a position is not held for the entire period between when the first\n    /// snapshot is taken and the second snapshot is taken.\n    /// @param tickLower The lower tick of the range\n    /// @param tickUpper The upper tick of the range\n    /// @return tickCumulativeInside The snapshot of the tick accumulator for the range\n    /// @return secondsPerLiquidityInsideX128 The snapshot of seconds per liquidity for the range\n    /// @return secondsInside The snapshot of seconds per liquidity for the range\n    function snapshotCumulativesInside(int24 tickLower, int24 tickUpper)\n        external\n        view\n        returns (\n            int56 tickCumulativeInside,\n            uint160 secondsPerLiquidityInsideX128,\n            uint32 secondsInside\n        );\n}\n"
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.8.20;\n\n/// @title Pool state that can change\n/// @notice These methods compose the pool's state, and can change with any frequency including multiple times\n/// per transaction\ninterface IUniswapV3PoolState {\n    /// @notice The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas\n    /// when accessed externally.\n    /// @return sqrtPriceX96 The current price of the pool as a sqrt(token1/token0) Q64.96 value\n    /// tick The current tick of the pool, i.e. according to the last tick transition that was run.\n    /// This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick\n    /// boundary.\n    /// observationIndex The index of the last oracle observation that was written,\n    /// observationCardinality The current maximum number of observations stored in the pool,\n    /// observationCardinalityNext The next maximum number of observations, to be updated when the observation.\n    /// feeProtocol The protocol fee for both tokens of the pool.\n    /// Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0\n    /// is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee.\n    /// unlocked Whether the pool is currently locked to reentrancy\n    function slot0()\n        external\n        view\n        returns (\n            uint160 sqrtPriceX96,\n            int24 tick,\n            uint16 observationIndex,\n            uint16 observationCardinality,\n            uint16 observationCardinalityNext,\n            uint8 feeProtocol,\n            bool unlocked\n        );\n\n    /// @notice The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\n    /// @dev This value can overflow the uint256\n    function feeGrowthGlobal0X128() external view returns (uint256);\n\n    /// @notice The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\n    /// @dev This value can overflow the uint256\n    function feeGrowthGlobal1X128() external view returns (uint256);\n\n    /// @notice The amounts of token0 and token1 that are owed to the protocol\n    /// @dev Protocol fees will never exceed uint128 max in either token\n    function protocolFees() external view returns (uint128 token0, uint128 token1);\n\n    /// @notice The currently in range liquidity available to the pool\n    /// @dev This value has no relationship to the total liquidity across all ticks\n    function liquidity() external view returns (uint128);\n\n    /// @notice Look up information about a specific tick in the pool\n    /// @param tick The tick to look up\n    /// @return liquidityGross the total amount of position liquidity that uses the pool either as tick lower or\n    /// tick upper,\n    /// liquidityNet how much liquidity changes when the pool price crosses the tick,\n    /// feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0,\n    /// feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1,\n    /// tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick\n    /// secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick,\n    /// secondsOutside the seconds spent on the other side of the tick from the current tick,\n    /// initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false.\n    /// Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0.\n    /// In addition, these values are only relative and must be used only in comparison to previous snapshots for\n    /// a specific position.\n    function ticks(int24 tick)\n        external\n        view\n        returns (\n            uint128 liquidityGross,\n            int128 liquidityNet,\n            uint256 feeGrowthOutside0X128,\n            uint256 feeGrowthOutside1X128,\n            int56 tickCumulativeOutside,\n            uint160 secondsPerLiquidityOutsideX128,\n            uint32 secondsOutside,\n            bool initialized\n        );\n\n    /// @notice Returns 256 packed tick initialized boolean values. See TickBitmap for more information\n    function tickBitmap(int16 wordPosition) external view returns (uint256);\n\n    /// @notice Returns the information about a position by the position's key\n    /// @param key The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\n    /// @return _liquidity The amount of liquidity in the position,\n    /// Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke,\n    /// Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke,\n    /// Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke,\n    /// Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\n    function positions(bytes32 key)\n        external\n        view\n        returns (\n            uint128 _liquidity,\n            uint256 feeGrowthInside0LastX128,\n            uint256 feeGrowthInside1LastX128,\n            uint128 tokensOwed0,\n            uint128 tokensOwed1\n        );\n\n    /// @notice Returns data about a specific observation index\n    /// @param index The element of the observations array to fetch\n    /// @dev You most likely want to use #observe() instead of this method to get an observation as of some amount of time\n    /// ago, rather than at a specific index in the array.\n    /// @return blockTimestamp The timestamp of the observation,\n    /// Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp,\n    /// Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp,\n    /// Returns initialized whether the observation has been initialized and the values are safe to use\n    function observations(uint256 index)\n        external\n        view\n        returns (\n            uint32 blockTimestamp,\n            int56 tickCumulative,\n            uint160 secondsPerLiquidityCumulativeX128,\n            bool initialized\n        );\n}\n"
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity ^0.8.20;\n\n/// @title Pool state that never changes\n/// @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values\ninterface IUniswapV3PoolImmutables {\n    /// @notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\n    /// @return The contract address\n    function factory() external view returns (address);\n\n    /// @notice The first of the two tokens of the pool, sorted by address\n    /// @return The token contract address\n    function token0() external view returns (address);\n\n    /// @notice The second of the two tokens of the pool, sorted by address\n    /// @return The token contract address\n    function token1() external view returns (address);\n\n    /// @notice The pool's fee in hundredths of a bip, i.e. 1e-6\n    /// @return The fee\n    function fee() external view returns (uint24);\n\n    /// @notice The pool tick spacing\n    /// @dev Ticks can only be used at multiples of this value, minimum of 1 and always positive\n    /// e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ...\n    /// This value is an int24 to avoid casting even though it is always positive.\n    /// @return The tick spacing\n    function tickSpacing() external view returns (int24);\n\n    /// @notice The maximum amount of position liquidity that can use any tick in the range\n    /// @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\n    /// also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\n    /// @return The max amount of liquidity per tick\n    function maxLiquidityPerTick() external view returns (uint128);\n}\n"
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity ^0.8.20;\n\n/// @title Callback for IUniswapV3PoolActions#swap\n/// @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface\ninterface IUniswapV3SwapCallback {\n    /// @notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n    /// @dev In the implementation you must pay the pool tokens owed for the swap.\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n    /// amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n    /// @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n    /// @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n    /// @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call\n    function uniswapV3SwapCallback(\n        int256 amount0Delta,\n        int256 amount1Delta,\n        bytes calldata data\n    ) external;\n}\n"
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/IERC721Permit.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity ^0.8.20;\n\nimport '../../../../openzeppelin/contracts/token/ERC721/IERC721.sol';\n\n/// @title ERC721 with permit\n/// @notice Extension to ERC721 that includes a permit function for signature based approvals\ninterface IERC721Permit is IERC721 {\n    /// @notice The permit typehash used in the permit signature\n    /// @return The typehash for the permit\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\n\n    /// @notice The domain separator used in the permit signature\n    /// @return The domain seperator used in encoding of permit signature\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n\n    /// @notice Approve of a specific token ID for spending by spender via signature\n    /// @param spender The account that is being approved\n    /// @param tokenId The ID of the token that is being approved for spending\n    /// @param deadline The deadline timestamp by which the call must be mined for the approve to work\n    /// @param v Must produce valid secp256k1 signature from the holder along with `r` and `s`\n    /// @param r Must produce valid secp256k1 signature from the holder along with `v` and `s`\n    /// @param s Must produce valid secp256k1 signature from the holder along with `r` and `v`\n    function permit(\n        address spender,\n        uint256 tokenId,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external payable;\n}\n"
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/IPoolInitializer.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity ^0.8.20;\npragma abicoder v2;\n\n/// @title Creates and initializes V3 Pools\n/// @notice Provides a method for creating and initializing a pool, if necessary, for bundling with other methods that\n/// require the pool to exist.\ninterface IPoolInitializer {\n    /// @notice Creates a new pool if it does not exist, then initializes if not initialized\n    /// @dev This method can be bundled with others via IMulticall for the first action (e.g. mint) performed against a pool\n    /// @param token0 The contract address of token0 of the pool\n    /// @param token1 The contract address of token1 of the pool\n    /// @param fee The fee amount of the v3 pool for the specified token pair\n    /// @param sqrtPriceX96 The initial square root price of the pool as a Q64.96 value\n    /// @return pool Returns the pool address based on the pair of tokens and fee, will return the newly created pool address if necessary\n    function createAndInitializePoolIfNecessary(\n        address token0,\n        address token1,\n        uint24 fee,\n        uint160 sqrtPriceX96\n    ) external payable returns (address pool);\n}\n"
			},
			"contracts/openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.20;\n\nimport './IERC721.sol';\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Enumerable is IERC721 {\n\n    /**\n     * @dev Returns the total amount of tokens stored by the contract.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\n     */\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256 tokenId);\n\n    /**\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n     * Use along with {totalSupply} to enumerate all tokens.\n     */\n    function tokenByIndex(uint256 index) external view returns (uint256);\n}\n"
			},
			"contracts/openzeppelin/contracts/token/ERC721/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.20;\n\nimport \"../../../../../contracts/openzeppelin/contracts/token/ERC721/IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
			},
			"contracts/aave/protocol-v2/contracts/interfaces/DataTypes.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nlibrary DataTypes {\n    struct ReserveConfigurationMap {\n        uint256 data;\n    }\n\n    struct UserConfigurationMap {\n        uint256 data;\n    }\n\n    struct ReserveData {\n        uint256 totalLiquidity;\n        uint256 availableLiquidity;\n        uint256 totalStableDebt;\n        uint256 totalVariableDebt;\n        uint256 liquidityRate;\n        uint256 variableBorrowRate;\n        uint256 stableBorrowRate;\n        uint256 averageStableBorrowRate;\n        uint256 liquidityIndex;\n        uint256 variableBorrowIndex;\n        uint40 lastUpdateTimestamp;\n    }\n\n    struct UserReserveData {\n        uint256 currentATokenBalance;\n        uint256 currentStableDebt;\n        uint256 currentVariableDebt;\n        uint256 principalStableDebt;\n        uint256 scaledVariableDebt;\n        uint256 stableBorrowRate;\n        uint256 liquidityRate;\n        uint40 stableRateLastUpdated;\n        bool usageAsCollateralEnabled;\n    }\n}\n"
			},
			"contracts/openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"contracts/openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "shanghai"
		}
	},
	"output": {
		"contracts": {
			"contracts/MainBot.sol": {
				"IERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"transfer(address,uint256)": "a9059cbb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MainBot.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MainBot.sol\":{\"keccak256\":\"0x56eac8493c21c7d33dee50c4cf271f22d8956d11c5c11e4246256ae2d5b4330b\",\"license\":\"MITs\",\"urls\":[\"bzz-raw://42088ce0a38c5bd89f60629db180c1e24ccd28b1ef15b33629fa075e3cbfad47\",\"dweb:/ipfs/QmbbcVx6DmRDiYNyKCqrJzebyc8mEe452PCC2wQhW1Haxu\"]},\"contracts/aave/protocol-v2/contracts/interfaces/DataTypes.sol\":{\"keccak256\":\"0x3c126df12782518f7ae20a35358d4b55b57a64dfac2fca4b3d6a8a4ca6aed911\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be9e0c1d61b42fbdce8524013b225ed8352978d6a0035552109bfa76065ae275\",\"dweb:/ipfs/QmcStYcnoGywFhiUXAZk6fhypW9BFwqQrnfw9gf6UfeqP3\"]},\"contracts/aave/protocol-v2/contracts/interfaces/ILendingPool.sol\":{\"keccak256\":\"0x4553509caee0ee64cb12064b790dc8b584c9241cba8d293c314872999b0148bf\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://0bcb9ae40fe4f04f2247fae2c879d5c5b970fe8fbaa524c7169f977c91802d31\",\"dweb:/ipfs/QmZ2U1LRC2TRA3LNEjBbdMpa7gW585JfjMkngyDotyxXzG\"]},\"contracts/aave/protocol-v2/contracts/interfaces/ILendingPoolAddressesProvider.sol\":{\"keccak256\":\"0x267db09e307b8277d4cba65a3c5e39dfda037d4ac97d7d49cbadf36de49fc56c\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://501733182665064d8151f48ad54cc39533d7787cac975682ee852fc22b626b76\",\"dweb:/ipfs/QmTLr1zY1sSNEZ37RAjcEp8Ed8iHfyvEULrq6KjiwFuLJs\"]},\"contracts/chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x8c2fcdd0da835dee59d8846ff082d7526de2aa3388ddcba3d8bf60c612b45d06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://18b462620819cb963be7458a56d88fc2fd38c66795f92a39150783c767df3406\",\"dweb:/ipfs/QmXbGDZiodT4hKMocBXkQhUsuMZYur7EMKvbYZKFctN6ti\"]},\"contracts/openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"contracts/openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol\":{\"keccak256\":\"0x214335376e334c64038a801e7350ccbff96d67bae9a0cd5913b65ae0d675136b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://79061c6351c2071e2dbb6b2948771ba3f53d93546fe45b620604b32a5620c76e\",\"dweb:/ipfs/QmXDgY4iuF9yi8fNLvzu3AquiQnf4D1aZ9kKDyGDE8N1aK\"]},\"contracts/openzeppelin/contracts/token/ERC721/IERC721Metadata.sol\":{\"keccak256\":\"0x02bb611e43322b705eaf170703fc39eadc9aa898e8a4e06be726451792573a39\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c9a6787d8bd19d079c25bf1b2c60416031fe7ba908f526c7f11bc8fb7708912\",\"dweb:/ipfs/Qmb2kTcVaRE5gMCV1rZoBUmdYqdK1UH57FLt4k3ZUVBvaj\"]},\"contracts/openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/IERC721Permit.sol\":{\"keccak256\":\"0x759a0bd1bfaf084c9f34071c10d665861b5f2858d3755bfa5c52a9d74146e733\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://2224edfcf78039bd5eab48c8e9ca45275efa8f62d87f701a6ab5ddf682a13706\",\"dweb:/ipfs/QmQD3NwFvLTZtE6B2mdBW5Kf2c85UaAaknMCr5xy1Syt7a\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol\":{\"keccak256\":\"0xec8be19b3492587beec5f8b7d3bc0fbd14b761e4e7c10e37c883a22d5453eb87\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://88a24c7310ac26efaf77c679753889184182f9d160b1fe359376347b5617bdd5\",\"dweb:/ipfs/QmexmcDURHMDMHebhjT19K6q4nFhbBDm3eKhBbBP4hqGaC\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol\":{\"keccak256\":\"0x761c61ac9e453c7eef8fed6da0ad285c37cee6dfa8b1457056933e5d286d16f5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://9019992fdf0e25b664b77a72d1ea84b09dd70439f6a47400de3ebdcaf3ea9f41\",\"dweb:/ipfs/QmRSCM2Wf9b3Hi6ggkkxFt2piPW3g6q5VsVFSHessmuiXZ\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol\":{\"keccak256\":\"0xe8ad7afca9e540b647c2fe96b3545f69fd387f414bf707f6af7a153a689c396f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d50a147bd8e89a74c838d7d8314c94ac53485d10d721beeb6a0863a79f3b02af\",\"dweb:/ipfs/QmcjZrUv7QAZERPC1ChfsUy9EDFbHiuoW1D2ydSHTdaSGX\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/IPoolInitializer.sol\":{\"keccak256\":\"0x2dabdc5d0514dd0e46b6b0e7787b69986abef98d42636867c436ad93d6aa8f2d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8cb47e81cf597c80a394aeadd63d9b20b7e2c49e0fd3c83b615b07715f4ebb4d\",\"dweb:/ipfs/QmeTUN5rCRXgE7ebHyukDezhQHG5HSWTB82oqtrtjALSrg\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0xce7610a700cf6c760af022724574b71f6cb8a1b474718b1148c41c4e59f8c91c\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://986c5048d84fd4ec19a6f94c523edf15ae9c09e702d2c55b5a518cb2bd747cef\",\"dweb:/ipfs/Qmc1VpG83GXfok8qAudpaXQDCtHRu76wosByiV4DBf7VFn\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0x8cc5fdc36f72b60fbaae4cfdec0860e52966bc696687a6748740036a9351e0d8\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://612d2f4508cbfb26493b7fc1afd55dfc49bafd7a41568874072677cb2f9fbac2\",\"dweb:/ipfs/QmZqDWJg7cocG2eHe3DHLHFX2q8WYSUhuRaN7GLStxAkPf\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3e7a79fe15138d3f5662f52cb6e4fe290609ab8682747234da4a3c1f5c2c36e9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e779dbd454468595a65d69e2e465a2a0644849c60e843689ed09fb629c4aff7e\",\"dweb:/ipfs/QmQjrixc6dLbQV3jj5FGYB4Eyxfi3g7XQ7Crz1nLw64KQ9\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0xbda9a49a6477d17ea7aee446c520d84439821b392e0739fb2d13d639b2d0a518\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://9d77965c193a9996f934bfc74f5a51228efa2472351d4ea04fab1f4c84e1fc59\",\"dweb:/ipfs/QmUgeuPbTj6pB2fVHhdCLXf28PfvGLyHQMMgCVRaajXMzz\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xf52a9196f5ad0e013eea7865e23b0d55c7eb985c54d7999fdfbf25cc09ff89b6\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://9915a96570d3714e122505db18d312b89cff05e8412efd063c1010c51e871172\",\"dweb:/ipfs/QmWrUtH46EJ15JudFuTKFqXpFHaXupU6ToCJch1xhh27Q2\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0xc68758d899d618e71a0b6c41a0f3c0f910cb97e769131290b9b2e83521b162e4\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://9da49cb2294b63dbb46e0375160701a1623ea6227724d876e14f99d903d14b3c\",\"dweb:/ipfs/QmUDNHtMJsvWYJpy7rQ8yj1kLbA4kJtQ6CbweXSwwmryfH\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0x7817d3fe66d25358dda3b9ce7e531c544bb3a1bf5cd35bd897d0bb782ae8fc15\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b37a8e4a99e169c9787ed9d0b57c879e439c780beda61c397119a6596fa6794d\",\"dweb:/ipfs/QmeeNDyF6BBJwQNNvoeTjJhLkx3L7eiTRWRUhQ8wNyyoNK\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x007ade6bc9ccc96311c12182045de8fa65c5d42476f9e3d08a0b8ed03be7e77d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://24b7835a505f81d181b17964a5c7a38cfdbeaced376021bfd3b02cd42640023a\",\"dweb:/ipfs/QmTqC1uHg1KNKiA8QgP8cTAzuJFTFPUne93izW2PFgKApv\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0xe77ec56f09b05e9cb034a59f83f7925bb33b06787011339166097fcbf3ba8ef6\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://4c400a8119e27ae73b2ec8b271609afb7a42757c92a366bc6c95f2df9eb52981\",\"dweb:/ipfs/QmRarxpXNNpkf5tHXoSFD3gD9GvXWUxyGiWamG7dPd2e9t\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"MainBot": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_polToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_usdtToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_usdcToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_quickSwapRouter",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_priceFeedAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_uniswapRouter",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_uniswapPositionManager",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_aaveLendingPoolAddressesProvider",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "activity",
									"type": "string"
								}
							],
							"name": "CurrentActivity",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "currentBalance",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "threshold",
									"type": "uint256"
								}
							],
							"name": "StopLossTriggered",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "message",
									"type": "string"
								}
							],
							"name": "TestEvent",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "tradeType",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "TradeExecuted",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "aaveLendingPoolAddressesProvider",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "selectedTimeframe",
									"type": "uint256"
								}
							],
							"name": "adjustTimeframe",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "poolAddress",
									"type": "address"
								}
							],
							"name": "checkLiquidity",
							"outputs": [
								{
									"internalType": "bool",
									"name": "sufficientLiquidity",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "checkPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "convertAllToPOL",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "currentActivity",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"name": "dexRouters",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "disableTrading",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "gasCostMultiplier",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initialDeposit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "tradeType",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "initiateTrade",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "kill",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lossThreshold",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maticBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nextLogTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "polToken",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "priceFeedAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "profitThreshold",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "quickSwapRouter",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "controller",
									"type": "address"
								}
							],
							"name": "setController",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stablecoinBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tradingEnabled",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "trailingStopLoss",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "uniswapPositionManager",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "uniswapRouter",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "usdcToken",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "usdtToken",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountInGwei",
									"type": "uint256"
								}
							],
							"name": "withdrawInGwei",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/MainBot.sol\":1234:1235  3 */\n  0x03\n    /* \"contracts/MainBot.sol\":1199:1235  uint256 public gasCostMultiplier = 3 */\n  0x06\n  sstore\n    /* \"contracts/MainBot.sol\":1275:1277  10 */\n  0x0a\n    /* \"contracts/MainBot.sol\":1241:1277  uint256 public trailingStopLoss = 10 */\n  0x07\n  sstore\n    /* \"contracts/MainBot.sol\":1315:1361  string public currentActivity = \"Initializing\" */\n  0xc0\n    /* \"contracts/MainBot.sol\":941:7628  contract MainBot {... */\n  0x40\n    /* \"contracts/MainBot.sol\":1315:1361  string public currentActivity = \"Initializing\" */\n  mstore\n  0x0c\n    /* \"contracts/MainBot.sol\":941:7628  contract MainBot {... */\n  0x80\n    /* \"contracts/MainBot.sol\":1315:1361  string public currentActivity = \"Initializing\" */\n  swap1\n  dup2\n  mstore\n  mstore(0xa0, shl(0xa0, 0x496e697469616c697a696e67))\n  0x09\n  swap1\n  tag_1\n  swap1\n  dup3\n  tag_2\n  jump\t// in\ntag_1:\n  pop\n    /* \"contracts/MainBot.sol\":2178:3097  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_3\n  jumpi\n  0x00\n  dup1\n  revert\ntag_3:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_4\n  swap2\n  tag_5\n  jump\t// in\ntag_4:\n    /* \"contracts/MainBot.sol\":2482:2487  owner */\n  0x00\n    /* \"contracts/MainBot.sol\":2482:2500  owner = msg.sender */\n  dup1\n  sload\n    /* \"contracts/MainBot.sol\":2490:2500  msg.sender */\n  caller\n  not(sub(shl(0xa0, 0x01), 0x01))\n    /* \"contracts/MainBot.sol\":2482:2500  owner = msg.sender */\n  swap2\n  dup3\n  and\n  or\n  swap1\n  swap2\n  sstore\n    /* \"contracts/MainBot.sol\":2510:2518  polToken */\n  0x0a\n    /* \"contracts/MainBot.sol\":2510:2530  polToken = _polToken */\n  dup1\n  sload\n  dup3\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup12\n  dup2\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"contracts/MainBot.sol\":2540:2549  usdtToken */\n  0x0b\n    /* \"contracts/MainBot.sol\":2540:2562  usdtToken = _usdtToken */\n  dup1\n  sload\n  dup4\n  and\n  dup11\n  dup4\n  and\n  or\n  swap1\n  sstore\n    /* \"contracts/MainBot.sol\":2572:2581  usdcToken */\n  0x0c\n    /* \"contracts/MainBot.sol\":2572:2594  usdcToken = _usdcToken */\n  dup1\n  sload\n  dup4\n  and\n  dup10\n  dup4\n  and\n  or\n  swap1\n  sstore\n    /* \"contracts/MainBot.sol\":2604:2619  quickSwapRouter */\n  0x0d\n    /* \"contracts/MainBot.sol\":2604:2638  quickSwapRouter = _quickSwapRouter */\n  dup1\n  sload\n  dup4\n  and\n  dup9\n  dup4\n  and\n  swap1\n  dup2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"contracts/MainBot.sol\":2648:2664  priceFeedAddress */\n  0x0e\n    /* \"contracts/MainBot.sol\":2648:2684  priceFeedAddress = _priceFeedAddress */\n  dup1\n  sload\n  dup5\n  and\n  dup9\n  dup5\n  and\n  or\n  swap1\n  sstore\n    /* \"contracts/MainBot.sol\":2694:2707  uniswapRouter */\n  0x0f\n    /* \"contracts/MainBot.sol\":2694:2724  uniswapRouter = _uniswapRouter */\n  dup1\n  sload\n  dup5\n  and\n  dup8\n  dup5\n  and\n  or\n  swap1\n  sstore\n    /* \"contracts/MainBot.sol\":2734:2756  uniswapPositionManager */\n  0x10\n    /* \"contracts/MainBot.sol\":2734:2782  uniswapPositionManager = _uniswapPositionManager */\n  dup1\n  sload\n  dup5\n  and\n  dup7\n  dup5\n  and\n  or\n  swap1\n  sstore\n    /* \"contracts/MainBot.sol\":2792:2824  aaveLendingPoolAddressesProvider */\n  0x11\n    /* \"contracts/MainBot.sol\":2792:2860  aaveLendingPoolAddressesProvider = _aaveLendingPoolAddressesProvider */\n  dup1\n  sload\n  swap1\n  swap4\n  and\n  swap2\n  dup5\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"contracts/MainBot.sol\":2879:2902  dexRouters[\"QuickSwap\"] */\n  mload(0x40)\n  shl(0xbc, 0x0517569636b5377617)\n    /* \"#utility.yul\":3932:3956   */\n  dup2\n  mstore\n    /* \"contracts/MainBot.sol\":2879:2889  dexRouters */\n  0x12\n  swap1\n    /* \"#utility.yul\":3981:3982   */\n  0x09\n    /* \"#utility.yul\":3972:3983   */\n  add\n    /* \"contracts/MainBot.sol\":2879:2902  dexRouters[\"QuickSwap\"] */\n  swap1\n  dup2\n  mstore\n  mload(0x40)\n  swap1\n  dup2\n  swap1\n  sub\n  0x20\n  add\n  swap1\n  keccak256\n    /* \"contracts/MainBot.sol\":2879:2920  dexRouters[\"QuickSwap\"] = quickSwapRouter */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  swap3\n  swap1\n  swap3\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n  pop\n  pop\n    /* \"contracts/MainBot.sol\":2879:2902  dexRouters[\"QuickSwap\"] */\n  0x00\n    /* \"contracts/MainBot.sol\":2930:2952  tradingEnabled = false */\n  dup1\n  sload\n  not(shl(0xa0, 0xff))\n  and\n  swap1\n  sstore\n  pop\n  pop\n    /* \"contracts/MainBot.sol\":2980:2983  110 */\n  0x6e\n    /* \"contracts/MainBot.sol\":2962:2977  profitThreshold */\n  0x04\n    /* \"contracts/MainBot.sol\":2962:2983  profitThreshold = 110 */\n  sstore\n  pop\n  pop\n    /* \"contracts/MainBot.sol\":3023:3025  85 */\n  0x55\n    /* \"contracts/MainBot.sol\":3007:3020  lossThreshold */\n  0x05\n    /* \"contracts/MainBot.sol\":3007:3025  lossThreshold = 85 */\n  sstore\n  pop\n  pop\n    /* \"contracts/MainBot.sol\":3075:3090  block.timestamp */\n  timestamp\n    /* \"contracts/MainBot.sol\":3061:3072  nextLogTime */\n  0x08\n    /* \"contracts/MainBot.sol\":3061:3090  nextLogTime = block.timestamp */\n  sstore\n    /* \"contracts/MainBot.sol\":941:7628  contract MainBot {... */\n  jump(tag_17)\n    /* \"#utility.yul\":14:141   */\ntag_11:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:526   */\ntag_12:\n    /* \"#utility.yul\":225:226   */\n  0x01\n    /* \"#utility.yul\":221:233   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":268:280   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":289:350   */\n  tag_20\n  jumpi\n    /* \"#utility.yul\":343:347   */\n  0x7f\n    /* \"#utility.yul\":335:341   */\n  dup3\n    /* \"#utility.yul\":331:348   */\n  and\n    /* \"#utility.yul\":321:348   */\n  swap2\n  pop\n    /* \"#utility.yul\":289:350   */\ntag_20:\n    /* \"#utility.yul\":396:398   */\n  0x20\n    /* \"#utility.yul\":388:394   */\n  dup3\n    /* \"#utility.yul\":385:399   */\n  lt\n    /* \"#utility.yul\":365:383   */\n  dup2\n    /* \"#utility.yul\":362:400   */\n  sub\n    /* \"#utility.yul\":359:520   */\n  tag_21\n  jumpi\n    /* \"#utility.yul\":442:452   */\n  0x4e487b71\n    /* \"#utility.yul\":437:440   */\n  0xe0\n    /* \"#utility.yul\":433:453   */\n  shl\n    /* \"#utility.yul\":430:431   */\n  0x00\n    /* \"#utility.yul\":423:454   */\n  mstore\n    /* \"#utility.yul\":477:481   */\n  0x22\n    /* \"#utility.yul\":474:475   */\n  0x04\n    /* \"#utility.yul\":467:482   */\n  mstore\n    /* \"#utility.yul\":505:509   */\n  0x24\n    /* \"#utility.yul\":502:503   */\n  0x00\n    /* \"#utility.yul\":495:510   */\n  revert\n    /* \"#utility.yul\":359:520   */\ntag_21:\n  pop\n    /* \"#utility.yul\":146:526   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":657:1202   */\ntag_14:\n    /* \"#utility.yul\":759:761   */\n  0x1f\n    /* \"#utility.yul\":754:757   */\n  dup3\n    /* \"#utility.yul\":751:762   */\n  gt\n    /* \"#utility.yul\":748:1196   */\n  iszero\n  tag_24\n  jumpi\n    /* \"#utility.yul\":795:796   */\n  0x00\n    /* \"#utility.yul\":820:825   */\n  dup2\n    /* \"#utility.yul\":816:818   */\n  dup2\n    /* \"#utility.yul\":809:826   */\n  mstore\n    /* \"#utility.yul\":865:869   */\n  0x20\n    /* \"#utility.yul\":861:863   */\n  dup2\n    /* \"#utility.yul\":851:870   */\n  keccak256\n    /* \"#utility.yul\":935:937   */\n  0x1f\n    /* \"#utility.yul\":923:933   */\n  dup6\n    /* \"#utility.yul\":919:938   */\n  add\n    /* \"#utility.yul\":916:917   */\n  0x05\n    /* \"#utility.yul\":912:939   */\n  shr\n    /* \"#utility.yul\":906:910   */\n  dup2\n    /* \"#utility.yul\":902:940   */\n  add\n    /* \"#utility.yul\":971:975   */\n  0x20\n    /* \"#utility.yul\":959:969   */\n  dup7\n    /* \"#utility.yul\":956:976   */\n  lt\n    /* \"#utility.yul\":953:1000   */\n  iszero\n  tag_25\n  jumpi\n  pop\n    /* \"#utility.yul\":994:998   */\n  dup1\n    /* \"#utility.yul\":953:1000   */\ntag_25:\n    /* \"#utility.yul\":1049:1051   */\n  0x1f\n    /* \"#utility.yul\":1044:1047   */\n  dup6\n    /* \"#utility.yul\":1040:1052   */\n  add\n    /* \"#utility.yul\":1037:1038   */\n  0x05\n    /* \"#utility.yul\":1033:1053   */\n  shr\n    /* \"#utility.yul\":1027:1031   */\n  dup3\n    /* \"#utility.yul\":1023:1054   */\n  add\n    /* \"#utility.yul\":1013:1054   */\n  swap2\n  pop\n    /* \"#utility.yul\":1104:1186   */\ntag_26:\n    /* \"#utility.yul\":1122:1124   */\n  dup2\n    /* \"#utility.yul\":1115:1120   */\n  dup2\n    /* \"#utility.yul\":1112:1125   */\n  lt\n    /* \"#utility.yul\":1104:1186   */\n  iszero\n  tag_28\n  jumpi\n    /* \"#utility.yul\":1167:1184   */\n  dup3\n  dup2\n  sstore\n    /* \"#utility.yul\":1148:1149   */\n  0x01\n    /* \"#utility.yul\":1137:1150   */\n  add\n    /* \"#utility.yul\":1104:1186   */\n  jump(tag_26)\ntag_28:\n    /* \"#utility.yul\":1108:1111   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":748:1196   */\ntag_24:\n    /* \"#utility.yul\":657:1202   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1378:2730   */\ntag_2:\n    /* \"#utility.yul\":1498:1508   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1520:1550   */\n  dup2\n  gt\n    /* \"#utility.yul\":1517:1573   */\n  iszero\n  tag_32\n  jumpi\n    /* \"#utility.yul\":1553:1571   */\n  tag_32\n  tag_11\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":1582:1679   */\n  tag_33\n    /* \"#utility.yul\":1672:1678   */\n  dup2\n    /* \"#utility.yul\":1632:1670   */\n  tag_34\n    /* \"#utility.yul\":1664:1668   */\n  dup5\n    /* \"#utility.yul\":1658:1669   */\n  sload\n    /* \"#utility.yul\":1632:1670   */\n  tag_12\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":1626:1630   */\n  dup5\n    /* \"#utility.yul\":1582:1679   */\n  tag_14\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":1734:1738   */\n  0x20\n  dup1\n    /* \"#utility.yul\":1798:1800   */\n  0x1f\n    /* \"#utility.yul\":1787:1801   */\n  dup4\n  gt\n    /* \"#utility.yul\":1815:1816   */\n  0x01\n    /* \"#utility.yul\":1810:2473   */\n  dup2\n  eq\n  tag_36\n  jumpi\n    /* \"#utility.yul\":2517:2518   */\n  0x00\n    /* \"#utility.yul\":2534:2540   */\n  dup5\n    /* \"#utility.yul\":2531:2620   */\n  iszero\n  tag_37\n  jumpi\n  pop\n    /* \"#utility.yul\":2586:2605   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":2580:2606   */\n  mload\n    /* \"#utility.yul\":2531:2620   */\ntag_37:\n  not(0x00)\n    /* \"#utility.yul\":1335:1336   */\n  0x03\n    /* \"#utility.yul\":1331:1342   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":1327:1351   */\n  shr\n    /* \"#utility.yul\":1323:1352   */\n  not\n    /* \"#utility.yul\":1313:1353   */\n  and\n    /* \"#utility.yul\":1359:1360   */\n  0x01\n    /* \"#utility.yul\":1355:1366   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1310:1367   */\n  or\n    /* \"#utility.yul\":2633:2714   */\n  dup6\n  sstore\n    /* \"#utility.yul\":1780:2724   */\n  jump(tag_28)\n    /* \"#utility.yul\":1810:2473   */\ntag_36:\n    /* \"#utility.yul\":604:605   */\n  0x00\n    /* \"#utility.yul\":597:611   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":641:645   */\n  0x20\n    /* \"#utility.yul\":628:646   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":1846:1866   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":1964:2200   */\ntag_40:\n    /* \"#utility.yul\":1978:1985   */\n  dup3\n    /* \"#utility.yul\":1975:1976   */\n  dup2\n    /* \"#utility.yul\":1972:1986   */\n  lt\n    /* \"#utility.yul\":1964:2200   */\n  iszero\n  tag_42\n  jumpi\n    /* \"#utility.yul\":2067:2086   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":2061:2087   */\n  mload\n    /* \"#utility.yul\":2046:2088   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2159:2186   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":2127:2128   */\n  0x01\n    /* \"#utility.yul\":2115:2129   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":1994:2013   */\n  dup5\n  add\n    /* \"#utility.yul\":1964:2200   */\n  jump(tag_40)\ntag_42:\n    /* \"#utility.yul\":1968:1971   */\n  pop\n    /* \"#utility.yul\":2228:2234   */\n  dup6\n    /* \"#utility.yul\":2219:2226   */\n  dup3\n    /* \"#utility.yul\":2216:2235   */\n  lt\n    /* \"#utility.yul\":2213:2414   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":2289:2308   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":2283:2309   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2372:2373   */\n  0x03\n    /* \"#utility.yul\":2368:2382   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":2384:2387   */\n  0xf8\n    /* \"#utility.yul\":2364:2388   */\n  and\n    /* \"#utility.yul\":2360:2397   */\n  shr\n    /* \"#utility.yul\":2356:2398   */\n  not\n    /* \"#utility.yul\":2341:2399   */\n  and\n    /* \"#utility.yul\":2326:2400   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2213:2414   */\ntag_43:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2460:2461   */\n  0x01\n    /* \"#utility.yul\":2444:2458   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":2440:2462   */\n  add\n    /* \"#utility.yul\":2427:2463   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":1378:2730   */\n  jump\t// out\n    /* \"#utility.yul\":2735:2912   */\ntag_16:\n    /* \"#utility.yul\":2814:2827   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":2856:2887   */\n  dup2\n  and\n    /* \"#utility.yul\":2846:2888   */\n  dup2\n  eq\n    /* \"#utility.yul\":2836:2906   */\n  tag_45\n  jumpi\n    /* \"#utility.yul\":2902:2903   */\n  0x00\n    /* \"#utility.yul\":2899:2900   */\n  dup1\n    /* \"#utility.yul\":2892:2904   */\n  revert\n    /* \"#utility.yul\":2836:2906   */\ntag_45:\n    /* \"#utility.yul\":2735:2912   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2917:3725   */\ntag_5:\n    /* \"#utility.yul\":3050:3056   */\n  0x00\n    /* \"#utility.yul\":3058:3064   */\n  dup1\n    /* \"#utility.yul\":3066:3072   */\n  0x00\n    /* \"#utility.yul\":3074:3080   */\n  dup1\n    /* \"#utility.yul\":3082:3088   */\n  0x00\n    /* \"#utility.yul\":3090:3096   */\n  dup1\n    /* \"#utility.yul\":3098:3104   */\n  0x00\n    /* \"#utility.yul\":3106:3112   */\n  dup1\n    /* \"#utility.yul\":3159:3162   */\n  0x0100\n    /* \"#utility.yul\":3147:3156   */\n  dup10\n    /* \"#utility.yul\":3138:3145   */\n  dup12\n    /* \"#utility.yul\":3134:3157   */\n  sub\n    /* \"#utility.yul\":3130:3163   */\n  slt\n    /* \"#utility.yul\":3127:3180   */\n  iszero\n  tag_47\n  jumpi\n    /* \"#utility.yul\":3176:3177   */\n  0x00\n    /* \"#utility.yul\":3173:3174   */\n  dup1\n    /* \"#utility.yul\":3166:3178   */\n  revert\n    /* \"#utility.yul\":3127:3180   */\ntag_47:\n    /* \"#utility.yul\":3199:3239   */\n  tag_48\n    /* \"#utility.yul\":3229:3238   */\n  dup10\n    /* \"#utility.yul\":3199:3239   */\n  tag_16\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":3189:3239   */\n  swap8\n  pop\n    /* \"#utility.yul\":3258:3307   */\n  tag_49\n    /* \"#utility.yul\":3303:3305   */\n  0x20\n    /* \"#utility.yul\":3292:3301   */\n  dup11\n    /* \"#utility.yul\":3288:3306   */\n  add\n    /* \"#utility.yul\":3258:3307   */\n  tag_16\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":3248:3307   */\n  swap7\n  pop\n    /* \"#utility.yul\":3326:3375   */\n  tag_50\n    /* \"#utility.yul\":3371:3373   */\n  0x40\n    /* \"#utility.yul\":3360:3369   */\n  dup11\n    /* \"#utility.yul\":3356:3374   */\n  add\n    /* \"#utility.yul\":3326:3375   */\n  tag_16\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":3316:3375   */\n  swap6\n  pop\n    /* \"#utility.yul\":3394:3443   */\n  tag_51\n    /* \"#utility.yul\":3439:3441   */\n  0x60\n    /* \"#utility.yul\":3428:3437   */\n  dup11\n    /* \"#utility.yul\":3424:3442   */\n  add\n    /* \"#utility.yul\":3394:3443   */\n  tag_16\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":3384:3443   */\n  swap5\n  pop\n    /* \"#utility.yul\":3462:3512   */\n  tag_52\n    /* \"#utility.yul\":3507:3510   */\n  0x80\n    /* \"#utility.yul\":3496:3505   */\n  dup11\n    /* \"#utility.yul\":3492:3511   */\n  add\n    /* \"#utility.yul\":3462:3512   */\n  tag_16\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":3452:3512   */\n  swap4\n  pop\n    /* \"#utility.yul\":3531:3581   */\n  tag_53\n    /* \"#utility.yul\":3576:3579   */\n  0xa0\n    /* \"#utility.yul\":3565:3574   */\n  dup11\n    /* \"#utility.yul\":3561:3580   */\n  add\n    /* \"#utility.yul\":3531:3581   */\n  tag_16\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":3521:3581   */\n  swap3\n  pop\n    /* \"#utility.yul\":3600:3650   */\n  tag_54\n    /* \"#utility.yul\":3645:3648   */\n  0xc0\n    /* \"#utility.yul\":3634:3643   */\n  dup11\n    /* \"#utility.yul\":3630:3649   */\n  add\n    /* \"#utility.yul\":3600:3650   */\n  tag_16\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":3590:3650   */\n  swap2\n  pop\n    /* \"#utility.yul\":3669:3719   */\n  tag_55\n    /* \"#utility.yul\":3714:3717   */\n  0xe0\n    /* \"#utility.yul\":3703:3712   */\n  dup11\n    /* \"#utility.yul\":3699:3718   */\n  add\n    /* \"#utility.yul\":3669:3719   */\n  tag_16\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":3659:3719   */\n  swap1\n  pop\n    /* \"#utility.yul\":2917:3725   */\n  swap3\n  swap6\n  swap9\n  pop\n  swap3\n  swap6\n  swap9\n  swap1\n  swap4\n  swap7\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3730:3989   */\ntag_17:\n    /* \"contracts/MainBot.sol\":941:7628  contract MainBot {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/MainBot.sol\":941:7628  contract MainBot {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x869665e9\n      gt\n      tag_32\n      jumpi\n      dup1\n      0xb3ce56a2\n      gt\n      tag_33\n      jumpi\n      dup1\n      0xe0abca0b\n      gt\n      tag_34\n      jumpi\n      dup1\n      0xe0abca0b\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xe189eb42\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xe5047b30\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xf974821a\n      eq\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      dup1\n      0xb3ce56a2\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xb6658d07\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xc0fc247f\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xe037f889\n      eq\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      dup1\n      0x92eefe9b\n      gt\n      tag_35\n      jumpi\n      dup1\n      0x92eefe9b\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x9d8ef1e1\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xa30fb905\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xa98ad46c\n      eq\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      dup1\n      0x869665e9\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x8fc3047d\n      eq\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      dup1\n      0x41c0e1b5\n      gt\n      tag_36\n      jumpi\n      dup1\n      0x5e7ffa67\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x5e7ffa67\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x64aabb9e\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x6d546cdd\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x735de9f7\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      dup1\n      0x41c0e1b5\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x457f3cb0\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x4ada218b\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      dup1\n      0x1bf41362\n      gt\n      tag_38\n      jumpi\n      dup1\n      0x1bf41362\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x238f9b7a\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x26c403ed\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x3fb47a3b\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      dup1\n      0x11eac855\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1458d9d8\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x17700f01\n      eq\n      tag_5\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"contracts/MainBot.sol\":3261:3270  msg.value */\n      callvalue\n        /* \"contracts/MainBot.sol\":3243:3257  initialDeposit */\n      0x01\n      0x00\n        /* \"contracts/MainBot.sol\":3243:3270  initialDeposit += msg.value */\n      dup3\n      dup3\n      sload\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"contracts/MainBot.sol\":3315:3318  100 */\n      0x64\n      swap1\n      pop\n        /* \"contracts/MainBot.sol\":3297:3311  msg.value * 70 */\n      tag_43\n        /* \"contracts/MainBot.sol\":3297:3306  msg.value */\n      callvalue\n        /* \"contracts/MainBot.sol\":3309:3311  70 */\n      0x46\n        /* \"contracts/MainBot.sol\":3297:3311  msg.value * 70 */\n      tag_44\n      jump\t// in\n    tag_43:\n        /* \"contracts/MainBot.sol\":3296:3318  (msg.value * 70) / 100 */\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n        /* \"contracts/MainBot.sol\":3280:3292  maticBalance */\n      0x02\n      0x00\n        /* \"contracts/MainBot.sol\":3280:3318  maticBalance += (msg.value * 70) / 100 */\n      dup3\n      dup3\n      sload\n      tag_47\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_47:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"contracts/MainBot.sol\":3368:3371  100 */\n      0x64\n      swap1\n      pop\n        /* \"contracts/MainBot.sol\":3350:3364  msg.value * 30 */\n      tag_48\n        /* \"contracts/MainBot.sol\":3350:3359  msg.value */\n      callvalue\n        /* \"contracts/MainBot.sol\":3362:3364  30 */\n      0x1e\n        /* \"contracts/MainBot.sol\":3350:3364  msg.value * 30 */\n      tag_44\n      jump\t// in\n    tag_48:\n        /* \"contracts/MainBot.sol\":3349:3371  (msg.value * 30) / 100 */\n      tag_49\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_49:\n        /* \"contracts/MainBot.sol\":3328:3345  stablecoinBalance */\n      0x03\n      0x00\n        /* \"contracts/MainBot.sol\":3328:3371  stablecoinBalance += (msg.value * 30) / 100 */\n      dup3\n      dup3\n      sload\n      tag_50\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_50:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      stop\n        /* \"contracts/MainBot.sol\":941:7628  contract MainBot {... */\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/MainBot.sol\":1427:1451  address public usdcToken */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_51\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n      pop\n      sload(0x0c)\n      tag_52\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_52:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":835:867   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":817:868   */\n      dup2\n      mstore\n        /* \"#utility.yul\":805:807   */\n      0x20\n        /* \"#utility.yul\":790:808   */\n      add\n        /* \"contracts/MainBot.sol\":1427:1451  address public usdcToken */\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MainBot.sol\":1058:1085  uint256 public maticBalance */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_56\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_56:\n      pop\n      tag_57\n      sload(0x02)\n      dup2\n      jump\n    tag_57:\n      mload(0x40)\n        /* \"#utility.yul\":1025:1050   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1013:1015   */\n      0x20\n        /* \"#utility.yul\":998:1016   */\n      add\n        /* \"contracts/MainBot.sol\":1058:1085  uint256 public maticBalance */\n      tag_54\n        /* \"#utility.yul\":879:1056   */\n      jump\n        /* \"contracts/MainBot.sol\":4858:4942  function disableTrading() external onlyOwner {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_61\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_61:\n      pop\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n      stop\n        /* \"contracts/MainBot.sol\":1283:1309  uint256 public nextLogTime */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_64\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_64:\n      pop\n      tag_57\n      sload(0x08)\n      dup2\n      jump\n        /* \"contracts/MainBot.sol\":1607:1654  address public aaveLendingPoolAddressesProvider */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n      pop\n      sload(0x11)\n      tag_52\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/MainBot.sol\":3880:4044  function initiateTrade(string memory tradeType, uint256 amount) external onlyOwner {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_72\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_72:\n      pop\n      tag_62\n      tag_74\n      calldatasize\n      0x04\n      tag_75\n      jump\t// in\n    tag_74:\n      tag_76\n      jump\t// in\n        /* \"contracts/MainBot.sol\":4185:4659  function checkLiquidity(uint256 amountIn, address poolAddress) public view returns (bool sufficientLiquidity) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_77\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_77:\n      pop\n      tag_78\n      tag_79\n      calldatasize\n      0x04\n      tag_80\n      jump\t// in\n    tag_79:\n      tag_81\n      jump\t// in\n    tag_78:\n      mload(0x40)\n        /* \"#utility.yul\":2933:2947   */\n      swap1\n      iszero\n        /* \"#utility.yul\":2926:2948   */\n      iszero\n        /* \"#utility.yul\":2908:2949   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2896:2898   */\n      0x20\n        /* \"#utility.yul\":2881:2899   */\n      add\n        /* \"contracts/MainBot.sol\":4185:4659  function checkLiquidity(uint256 amountIn, address poolAddress) public view returns (bool sufficientLiquidity) {... */\n      tag_54\n        /* \"#utility.yul\":2768:2955   */\n      jump\n        /* \"contracts/MainBot.sol\":5204:5307  function kill() external onlyOwner {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_84\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_84:\n      pop\n      tag_62\n      tag_86\n      jump\t// in\n        /* \"contracts/MainBot.sol\":4948:5198  function withdrawInGwei(uint256 amountInGwei) external onlyOwner {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_87\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_87:\n      pop\n      tag_62\n      tag_89\n      calldatasize\n      0x04\n      tag_90\n      jump\t// in\n    tag_89:\n      tag_91\n      jump\t// in\n        /* \"contracts/MainBot.sol\":991:1017  bool public tradingEnabled */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_92\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_92:\n      pop\n      sload(0x00)\n      tag_78\n      swap1\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\n        /* \"contracts/MainBot.sol\":1661:1705  mapping(string => address) public dexRouters */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_96\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_96:\n      pop\n      tag_52\n      tag_98\n      calldatasize\n      0x04\n      tag_99\n      jump\t// in\n    tag_98:\n      dup1\n      mload\n      0x20\n      dup2\n      dup4\n      add\n      dup2\n      add\n      dup1\n      mload\n      0x12\n      dup3\n      mstore\n      swap3\n      dup3\n      add\n      swap2\n      swap1\n      swap4\n      add\n      keccak256\n      swap2\n      mstore\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/MainBot.sol\":1091:1123  uint256 public stablecoinBalance */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_102\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_102:\n      pop\n      tag_57\n      sload(0x03)\n      dup2\n      jump\n        /* \"contracts/MainBot.sol\":1315:1361  string public currentActivity = \"Initializing\" */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_106\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_106:\n      pop\n      tag_107\n      tag_108\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n        /* \"contracts/MainBot.sol\":1530:1558  address public uniswapRouter */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_111\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_111:\n      pop\n      sload(0x0f)\n      tag_52\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/MainBot.sol\":3384:3749  function adjustTimeframe(uint256 selectedTimeframe) external onlyOwner {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_115\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_115:\n      pop\n      tag_62\n      tag_117\n      calldatasize\n      0x04\n      tag_90\n      jump\t// in\n    tag_117:\n      tag_118\n      jump\t// in\n        /* \"contracts/MainBot.sol\":964:984  address public owner */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_119\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_119:\n      pop\n      sload(0x00)\n      tag_52\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/MainBot.sol\":3755:3874  function checkPrice() external view returns (uint256) {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_123\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_123:\n      pop\n      tag_57\n      tag_125\n      jump\t// in\n        /* \"contracts/MainBot.sol\":3103:3200  function setController(address controller) external onlyOwner {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_127\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_127:\n      pop\n      tag_62\n      tag_129\n      calldatasize\n      0x04\n      tag_130\n      jump\t// in\n    tag_129:\n      tag_131\n      jump\t// in\n        /* \"contracts/MainBot.sol\":4050:4179  function convertAllToPOL() external onlyOwner {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_132\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_132:\n      pop\n      tag_62\n      tag_134\n      jump\t// in\n        /* \"contracts/MainBot.sol\":1199:1235  uint256 public gasCostMultiplier = 3 */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_135\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_135:\n      pop\n      tag_57\n      sload(0x06)\n      dup2\n      jump\n        /* \"contracts/MainBot.sol\":1397:1421  address public usdtToken */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_139\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_139:\n      pop\n      sload(0x0b)\n      tag_52\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/MainBot.sol\":1241:1277  uint256 public trailingStopLoss = 10 */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_143\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_143:\n      pop\n      tag_57\n      sload(0x07)\n      dup2\n      jump\n        /* \"contracts/MainBot.sol\":1368:1391  address public polToken */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_147\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_147:\n      pop\n      sload(0x0a)\n      tag_52\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/MainBot.sol\":1165:1193  uint256 public lossThreshold */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_151\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_151:\n      pop\n      tag_57\n      sload(0x05)\n      dup2\n      jump\n        /* \"contracts/MainBot.sol\":1023:1052  uint256 public initialDeposit */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_155\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_155:\n      pop\n      tag_57\n      sload(0x01)\n      dup2\n      jump\n        /* \"contracts/MainBot.sol\":1493:1524  address public priceFeedAddress */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_159\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_159:\n      pop\n      sload(0x0e)\n      tag_52\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/MainBot.sol\":1457:1487  address public quickSwapRouter */\n    tag_29:\n      callvalue\n      dup1\n      iszero\n      tag_163\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_163:\n      pop\n      sload(0x0d)\n      tag_52\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/MainBot.sol\":1564:1601  address public uniswapPositionManager */\n    tag_30:\n      callvalue\n      dup1\n      iszero\n      tag_167\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_167:\n      pop\n      sload(0x10)\n      tag_52\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/MainBot.sol\":1129:1159  uint256 public profitThreshold */\n    tag_31:\n      callvalue\n      dup1\n      iszero\n      tag_171\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_171:\n      pop\n      tag_57\n      sload(0x04)\n      dup2\n      jump\n        /* \"contracts/MainBot.sol\":4858:4942  function disableTrading() external onlyOwner {... */\n    tag_63:\n        /* \"contracts/MainBot.sol\":2021:2026  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/MainBot.sol\":2007:2017  msg.sender */\n      caller\n        /* \"contracts/MainBot.sol\":2007:2026  msg.sender == owner */\n      eq\n        /* \"contracts/MainBot.sol\":1999:2044  require(msg.sender == owner, \"Not the owner\") */\n      tag_176\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_177\n      swap1\n      tag_178\n      jump\t// in\n    tag_177:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_176:\n        /* \"contracts/MainBot.sol\":4930:4935  false */\n      0x00\n        /* \"contracts/MainBot.sol\":4913:4935  tradingEnabled = false */\n      dup1\n      sload\n      not(shl(0xa0, 0xff))\n      and\n      swap1\n      sstore\n        /* \"contracts/MainBot.sol\":4858:4942  function disableTrading() external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/MainBot.sol\":3880:4044  function initiateTrade(string memory tradeType, uint256 amount) external onlyOwner {... */\n    tag_76:\n        /* \"contracts/MainBot.sol\":2021:2026  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/MainBot.sol\":2007:2017  msg.sender */\n      caller\n        /* \"contracts/MainBot.sol\":2007:2026  msg.sender == owner */\n      eq\n        /* \"contracts/MainBot.sol\":1999:2044  require(msg.sender == owner, \"Not the owner\") */\n      tag_181\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_177\n      swap1\n      tag_178\n      jump\t// in\n    tag_181:\n        /* \"contracts/MainBot.sol\":3992:4002  msg.sender */\n      caller\n        /* \"contracts/MainBot.sol\":3978:4037  TradeExecuted(msg.sender, tradeType, amount, 0, getPrice()) */\n      0x030fdcd4f0c28c5dbcbc3f59aa8e2260c7f58ac45be2a2dca652999af89c33e0\n        /* \"contracts/MainBot.sol\":4004:4013  tradeType */\n      dup4\n        /* \"contracts/MainBot.sol\":4015:4021  amount */\n      dup4\n        /* \"contracts/MainBot.sol\":4023:4024  0 */\n      0x00\n        /* \"contracts/MainBot.sol\":4026:4036  getPrice() */\n      tag_184\n        /* \"contracts/MainBot.sol\":4026:4034  getPrice */\n      tag_185\n        /* \"contracts/MainBot.sol\":4026:4036  getPrice() */\n      jump\t// in\n    tag_184:\n        /* \"contracts/MainBot.sol\":3978:4037  TradeExecuted(msg.sender, tradeType, amount, 0, getPrice()) */\n      mload(0x40)\n      tag_186\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_186:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/MainBot.sol\":3880:4044  function initiateTrade(string memory tradeType, uint256 amount) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MainBot.sol\":4185:4659  function checkLiquidity(uint256 amountIn, address poolAddress) public view returns (bool sufficientLiquidity) {... */\n    tag_81:\n        /* \"contracts/MainBot.sol\":4269:4293  bool sufficientLiquidity */\n      0x00\n        /* \"contracts/MainBot.sol\":4305:4324  IUniswapV3Pool pool */\n      dup1\n        /* \"contracts/MainBot.sol\":4342:4353  poolAddress */\n      dup3\n        /* \"contracts/MainBot.sol\":4305:4354  IUniswapV3Pool pool = IUniswapV3Pool(poolAddress) */\n      swap1\n      pop\n        /* \"contracts/MainBot.sol\":4365:4385  uint160 sqrtPriceX96 */\n      0x00\n        /* \"contracts/MainBot.sol\":4395:4399  pool */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MainBot.sol\":4395:4405  pool.slot0 */\n      and\n      0x3850c7bd\n        /* \"contracts/MainBot.sol\":4395:4407  pool.slot0() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0xe0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_190\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_190:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_191\n      swap2\n      swap1\n      tag_192\n      jump\t// in\n    tag_191:\n        /* \"contracts/MainBot.sol\":4364:4407  (uint160 sqrtPriceX96,,,,,,) = pool.slot0() */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/MainBot.sol\":4417:4434  uint256 liquidity */\n      0x00\n        /* \"contracts/MainBot.sol\":4437:4441  pool */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MainBot.sol\":4437:4451  pool.liquidity */\n      and\n      0x1a686502\n        /* \"contracts/MainBot.sol\":4437:4453  pool.liquidity() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_194\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_194:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_195\n      swap2\n      swap1\n      tag_196\n      jump\t// in\n    tag_195:\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"contracts/MainBot.sol\":4417:4453  uint256 liquidity = pool.liquidity() */\n      and\n      swap1\n      pop\n        /* \"contracts/MainBot.sol\":4463:4480  uint256 amountOut */\n      0x00\n        /* \"contracts/MainBot.sol\":4483:4536  calculateAmountOut(amountIn, sqrtPriceX96, liquidity) */\n      tag_197\n        /* \"contracts/MainBot.sol\":4502:4510  amountIn */\n      dup8\n        /* \"contracts/MainBot.sol\":4512:4524  sqrtPriceX96 */\n      dup5\n        /* \"contracts/MainBot.sol\":4526:4535  liquidity */\n      dup5\n        /* \"contracts/MainBot.sol\":4483:4501  calculateAmountOut */\n      tag_198\n        /* \"contracts/MainBot.sol\":4483:4536  calculateAmountOut(amountIn, sqrtPriceX96, liquidity) */\n      jump\t// in\n    tag_197:\n        /* \"contracts/MainBot.sol\":4463:4536  uint256 amountOut = calculateAmountOut(amountIn, sqrtPriceX96, liquidity) */\n      swap1\n      pop\n        /* \"contracts/MainBot.sol\":4546:4562  uint256 slippage */\n      0x00\n        /* \"contracts/MainBot.sol\":4583:4586  100 */\n      0x64\n        /* \"contracts/MainBot.sol\":4566:4579  amountOut * 1 */\n      tag_199\n        /* \"contracts/MainBot.sol\":4463:4536  uint256 amountOut = calculateAmountOut(amountIn, sqrtPriceX96, liquidity) */\n      dup4\n        /* \"contracts/MainBot.sol\":4578:4579  1 */\n      0x01\n        /* \"contracts/MainBot.sol\":4566:4579  amountOut * 1 */\n      tag_44\n      jump\t// in\n    tag_199:\n        /* \"contracts/MainBot.sol\":4565:4586  (amountOut * 1) / 100 */\n      tag_200\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_200:\n        /* \"contracts/MainBot.sol\":4546:4586  uint256 slippage = (amountOut * 1) / 100 */\n      swap1\n      pop\n        /* \"contracts/MainBot.sol\":4632:4651  amountIn - slippage */\n      tag_201\n        /* \"contracts/MainBot.sol\":4546:4586  uint256 slippage = (amountOut * 1) / 100 */\n      dup2\n        /* \"contracts/MainBot.sol\":4632:4640  amountIn */\n      dup10\n        /* \"contracts/MainBot.sol\":4632:4651  amountIn - slippage */\n      tag_202\n      jump\t// in\n    tag_201:\n        /* \"contracts/MainBot.sol\":4619:4651  amountOut >= amountIn - slippage */\n      swap1\n      swap2\n      lt\n      iszero\n      swap8\n        /* \"contracts/MainBot.sol\":4185:4659  function checkLiquidity(uint256 amountIn, address poolAddress) public view returns (bool sufficientLiquidity) {... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MainBot.sol\":5204:5307  function kill() external onlyOwner {... */\n    tag_86:\n        /* \"contracts/MainBot.sol\":2021:2026  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/MainBot.sol\":2007:2017  msg.sender */\n      caller\n        /* \"contracts/MainBot.sol\":2007:2026  msg.sender == owner */\n      eq\n        /* \"contracts/MainBot.sol\":1999:2044  require(msg.sender == owner, \"Not the owner\") */\n      tag_204\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_177\n      swap1\n      tag_178\n      jump\t// in\n    tag_204:\n        /* \"contracts/MainBot.sol\":5249:5300  payable(msg.sender).transfer(address(this).balance) */\n      mload(0x40)\n        /* \"contracts/MainBot.sol\":5257:5267  msg.sender */\n      caller\n      swap1\n        /* \"contracts/MainBot.sol\":5278:5299  address(this).balance */\n      selfbalance\n        /* \"contracts/MainBot.sol\":5249:5300  payable(msg.sender).transfer(address(this).balance) */\n      dup1\n      iszero\n      0x08fc\n      mul\n      swap2\n      0x00\n      dup2\n      dup2\n      dup2\n        /* \"contracts/MainBot.sol\":5278:5299  address(this).balance */\n      dup6\n        /* \"contracts/MainBot.sol\":5257:5267  msg.sender */\n      dup9\n        /* \"contracts/MainBot.sol\":5249:5300  payable(msg.sender).transfer(address(this).balance) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_208\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_208:\n      pop\n        /* \"contracts/MainBot.sol\":5204:5307  function kill() external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/MainBot.sol\":4948:5198  function withdrawInGwei(uint256 amountInGwei) external onlyOwner {... */\n    tag_91:\n        /* \"contracts/MainBot.sol\":2021:2026  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/MainBot.sol\":2007:2017  msg.sender */\n      caller\n        /* \"contracts/MainBot.sol\":2007:2026  msg.sender == owner */\n      eq\n        /* \"contracts/MainBot.sol\":1999:2044  require(msg.sender == owner, \"Not the owner\") */\n      tag_210\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_177\n      swap1\n      tag_178\n      jump\t// in\n    tag_210:\n        /* \"contracts/MainBot.sol\":5023:5042  uint256 amountInWei */\n      0x00\n        /* \"contracts/MainBot.sol\":5045:5066  amountInGwei * 1 gwei */\n      tag_213\n        /* \"contracts/MainBot.sol\":5045:5057  amountInGwei */\n      dup3\n        /* \"contracts/MainBot.sol\":5060:5066  1 gwei */\n      0x3b9aca00\n        /* \"contracts/MainBot.sol\":5045:5066  amountInGwei * 1 gwei */\n      tag_44\n      jump\t// in\n    tag_213:\n        /* \"contracts/MainBot.sol\":5023:5066  uint256 amountInWei = amountInGwei * 1 gwei */\n      swap1\n      pop\n        /* \"contracts/MainBot.sol\":5109:5120  amountInWei */\n      dup1\n        /* \"contracts/MainBot.sol\":5084:5105  address(this).balance */\n      selfbalance\n        /* \"contracts/MainBot.sol\":5084:5120  address(this).balance >= amountInWei */\n      lt\n      iszero\n        /* \"contracts/MainBot.sol\":5076:5145  require(address(this).balance >= amountInWei, \"Insufficient balance\") */\n      tag_214\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6971:6973   */\n      0x20\n        /* \"contracts/MainBot.sol\":5076:5145  require(address(this).balance >= amountInWei, \"Insufficient balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6953:6974   */\n      mstore\n        /* \"#utility.yul\":7010:7012   */\n      0x14\n        /* \"#utility.yul\":6990:7008   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6983:7013   */\n      mstore\n      shl(0x60, 0x496e73756666696369656e742062616c616e6365)\n        /* \"#utility.yul\":7029:7047   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7022:7072   */\n      mstore\n        /* \"#utility.yul\":7089:7107   */\n      0x64\n      add\n        /* \"contracts/MainBot.sol\":5076:5145  require(address(this).balance >= amountInWei, \"Insufficient balance\") */\n      tag_177\n        /* \"#utility.yul\":6769:7113   */\n      jump\n        /* \"contracts/MainBot.sol\":5076:5145  require(address(this).balance >= amountInWei, \"Insufficient balance\") */\n    tag_214:\n        /* \"contracts/MainBot.sol\":5163:5168  owner */\n      0x00\n      dup1\n      sload\n        /* \"contracts/MainBot.sol\":5155:5191  payable(owner).transfer(amountInWei) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MainBot.sol\":5163:5168  owner */\n      swap1\n      swap2\n      and\n      swap2\n        /* \"contracts/MainBot.sol\":5155:5191  payable(owner).transfer(amountInWei) */\n      dup4\n      iszero\n      0x08fc\n      mul\n      swap2\n        /* \"contracts/MainBot.sol\":5179:5190  amountInWei */\n      dup5\n      swap2\n        /* \"contracts/MainBot.sol\":5155:5191  payable(owner).transfer(amountInWei) */\n      dup2\n        /* \"contracts/MainBot.sol\":5163:5168  owner */\n      dup2\n        /* \"contracts/MainBot.sol\":5155:5191  payable(owner).transfer(amountInWei) */\n      dup2\n        /* \"contracts/MainBot.sol\":5179:5190  amountInWei */\n      dup6\n        /* \"contracts/MainBot.sol\":5163:5168  owner */\n      dup9\n        /* \"contracts/MainBot.sol\":5155:5191  payable(owner).transfer(amountInWei) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_218\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_218:\n      pop\n        /* \"contracts/MainBot.sol\":5013:5198  {... */\n      pop\n        /* \"contracts/MainBot.sol\":4948:5198  function withdrawInGwei(uint256 amountInGwei) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/MainBot.sol\":1315:1361  string public currentActivity = \"Initializing\" */\n    tag_108:\n      0x09\n      dup1\n      sload\n      tag_219\n      swap1\n      tag_220\n      jump\t// in\n    tag_219:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_221\n      swap1\n      tag_220\n      jump\t// in\n    tag_221:\n      dup1\n      iszero\n      tag_222\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_223\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_222)\n    tag_223:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_224:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_224\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_222:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/MainBot.sol\":3384:3749  function adjustTimeframe(uint256 selectedTimeframe) external onlyOwner {... */\n    tag_118:\n        /* \"contracts/MainBot.sol\":2021:2026  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/MainBot.sol\":2007:2017  msg.sender */\n      caller\n        /* \"contracts/MainBot.sol\":2007:2026  msg.sender == owner */\n      eq\n        /* \"contracts/MainBot.sol\":1999:2044  require(msg.sender == owner, \"Not the owner\") */\n      tag_226\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_177\n      swap1\n      tag_178\n      jump\t// in\n    tag_226:\n        /* \"contracts/MainBot.sol\":3675:3685  msg.sender */\n      caller\n        /* \"contracts/MainBot.sol\":3661:3742  TradeExecuted(msg.sender, \"Timeframe adjusted\", selectedTimeframe, 0, getPrice()) */\n      0x030fdcd4f0c28c5dbcbc3f59aa8e2260c7f58ac45be2a2dca652999af89c33e0\n        /* \"contracts/MainBot.sol\":3709:3726  selectedTimeframe */\n      dup3\n        /* \"contracts/MainBot.sol\":3728:3729  0 */\n      0x00\n        /* \"contracts/MainBot.sol\":3731:3741  getPrice() */\n      tag_232\n        /* \"contracts/MainBot.sol\":3731:3739  getPrice */\n      tag_185\n        /* \"contracts/MainBot.sol\":3731:3741  getPrice() */\n      jump\t// in\n    tag_232:\n        /* \"contracts/MainBot.sol\":3661:3742  TradeExecuted(msg.sender, \"Timeframe adjusted\", selectedTimeframe, 0, getPrice()) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":7797:7800   */\n      0x80\n        /* \"#utility.yul\":7779:7801   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":7838:7840   */\n      0x12\n        /* \"#utility.yul\":7817:7836   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":7810:7841   */\n      mstore\n      shl(0x72, 0x151a5b59599c985b594818591a9d5cdd1959)\n        /* \"#utility.yul\":7872:7875   */\n      0xa0\n        /* \"#utility.yul\":7857:7876   */\n      dup3\n      add\n        /* \"#utility.yul\":7850:7899   */\n      mstore\n        /* \"#utility.yul\":7966:7970   */\n      0x20\n        /* \"#utility.yul\":7951:7971   */\n      dup2\n      add\n        /* \"#utility.yul\":7944:7980   */\n      swap5\n      swap1\n      swap5\n      mstore\n        /* \"#utility.yul\":7996:8014   */\n      dup4\n      add\n        /* \"#utility.yul\":7989:8023   */\n      swap2\n      swap1\n      swap2\n      mstore\n      0x60\n        /* \"#utility.yul\":8039:8057   */\n      dup3\n      add\n        /* \"#utility.yul\":8032:8066   */\n      mstore\n        /* \"#utility.yul\":7931:7934   */\n      0xc0\n        /* \"#utility.yul\":7916:7935   */\n      add\n        /* \"contracts/MainBot.sol\":3661:3742  TradeExecuted(msg.sender, \"Timeframe adjusted\", selectedTimeframe, 0, getPrice()) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/MainBot.sol\":3384:3749  function adjustTimeframe(uint256 selectedTimeframe) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/MainBot.sol\":3755:3874  function checkPrice() external view returns (uint256) {... */\n    tag_125:\n        /* \"contracts/MainBot.sol\":3800:3807  uint256 */\n      0x00\n        /* \"contracts/MainBot.sol\":3819:3832  uint256 price */\n      dup1\n        /* \"contracts/MainBot.sol\":3835:3845  getPrice() */\n      tag_236\n        /* \"contracts/MainBot.sol\":3835:3843  getPrice */\n      tag_185\n        /* \"contracts/MainBot.sol\":3835:3845  getPrice() */\n      jump\t// in\n    tag_236:\n        /* \"contracts/MainBot.sol\":3819:3845  uint256 price = getPrice() */\n      swap3\n        /* \"contracts/MainBot.sol\":3755:3874  function checkPrice() external view returns (uint256) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MainBot.sol\":3103:3200  function setController(address controller) external onlyOwner {... */\n    tag_131:\n        /* \"contracts/MainBot.sol\":2021:2026  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/MainBot.sol\":2007:2017  msg.sender */\n      caller\n        /* \"contracts/MainBot.sol\":2007:2026  msg.sender == owner */\n      eq\n        /* \"contracts/MainBot.sol\":1999:2044  require(msg.sender == owner, \"Not the owner\") */\n      tag_238\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_177\n      swap1\n      tag_178\n      jump\t// in\n    tag_238:\n        /* \"contracts/MainBot.sol\":3175:3180  owner */\n      0x00\n        /* \"contracts/MainBot.sol\":3175:3193  owner = controller */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/MainBot.sol\":3103:3200  function setController(address controller) external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/MainBot.sol\":4050:4179  function convertAllToPOL() external onlyOwner {... */\n    tag_134:\n        /* \"contracts/MainBot.sol\":2021:2026  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/MainBot.sol\":2007:2017  msg.sender */\n      caller\n        /* \"contracts/MainBot.sol\":2007:2026  msg.sender == owner */\n      eq\n        /* \"contracts/MainBot.sol\":1999:2044  require(msg.sender == owner, \"Not the owner\") */\n      tag_242\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_177\n      swap1\n      tag_178\n      jump\t// in\n    tag_242:\n        /* \"contracts/MainBot.sol\":4125:4135  msg.sender */\n      caller\n        /* \"contracts/MainBot.sol\":4111:4172  TradeExecuted(msg.sender, \"convert to POL\", 0, 0, getPrice()) */\n      0x030fdcd4f0c28c5dbcbc3f59aa8e2260c7f58ac45be2a2dca652999af89c33e0\n        /* \"contracts/MainBot.sol\":4155:4156  0 */\n      0x00\n      dup1\n        /* \"contracts/MainBot.sol\":4161:4171  getPrice() */\n      tag_245\n        /* \"contracts/MainBot.sol\":4161:4169  getPrice */\n      tag_185\n        /* \"contracts/MainBot.sol\":4161:4171  getPrice() */\n      jump\t// in\n    tag_245:\n        /* \"contracts/MainBot.sol\":4111:4172  TradeExecuted(msg.sender, \"convert to POL\", 0, 0, getPrice()) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":8379:8382   */\n      0x80\n        /* \"#utility.yul\":8361:8383   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":8420:8422   */\n      0x0e\n        /* \"#utility.yul\":8399:8418   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":8392:8423   */\n      mstore\n      shl(0x92, 0x18dbdb9d995c9d081d1bc81413d3)\n        /* \"#utility.yul\":8454:8457   */\n      0xa0\n        /* \"#utility.yul\":8439:8458   */\n      dup3\n      add\n        /* \"#utility.yul\":8432:8477   */\n      mstore\n        /* \"#utility.yul\":8544:8548   */\n      0x20\n        /* \"#utility.yul\":8529:8549   */\n      dup2\n      add\n        /* \"#utility.yul\":8522:8558   */\n      swap5\n      swap1\n      swap5\n      mstore\n        /* \"#utility.yul\":8574:8592   */\n      dup4\n      add\n        /* \"#utility.yul\":8567:8601   */\n      swap2\n      swap1\n      swap2\n      mstore\n      0x60\n        /* \"#utility.yul\":8617:8635   */\n      dup3\n      add\n        /* \"#utility.yul\":8610:8644   */\n      mstore\n        /* \"#utility.yul\":8509:8512   */\n      0xc0\n        /* \"#utility.yul\":8494:8513   */\n      add\n        /* \"contracts/MainBot.sol\":4111:4172  TradeExecuted(msg.sender, \"convert to POL\", 0, 0, getPrice()) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/MainBot.sol\":4050:4179  function convertAllToPOL() external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/MainBot.sol\":7386:7626  function getPrice() internal view returns (uint256) {... */\n    tag_185:\n        /* \"contracts/MainBot.sol\":7504:7520  priceFeedAddress */\n      sload(0x0e)\n        /* \"contracts/MainBot.sol\":7550:7577  priceFeed.latestRoundData() */\n      0x40\n      dup1\n      mload\n      shl(0xe2, 0x3fabe5a3)\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"contracts/MainBot.sol\":7429:7436  uint256 */\n      0x00\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MainBot.sol\":7504:7520  priceFeedAddress */\n      and\n      swap2\n        /* \"contracts/MainBot.sol\":7429:7436  uint256 */\n      dup4\n      swap2\n        /* \"contracts/MainBot.sol\":7504:7520  priceFeedAddress */\n      dup4\n      swap2\n        /* \"contracts/MainBot.sol\":7550:7575  priceFeed.latestRoundData */\n      0xfeaf968c\n      swap2\n        /* \"contracts/MainBot.sol\":7550:7577  priceFeed.latestRoundData() */\n      0x04\n      dup1\n      dup4\n      add\n      swap3\n      0xa0\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"contracts/MainBot.sol\":7504:7520  priceFeedAddress */\n      dup7\n        /* \"contracts/MainBot.sol\":7550:7577  priceFeed.latestRoundData() */\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_250\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_250:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_251\n      swap2\n      swap1\n      tag_252\n      jump\t// in\n    tag_251:\n        /* \"contracts/MainBot.sol\":7531:7577  (, int price,,,) = priceFeed.latestRoundData() */\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"contracts/MainBot.sol\":7602:7607  price */\n      dup1\n        /* \"contracts/MainBot.sol\":7610:7618  10 ** 10 */\n      0x02540be400\n        /* \"contracts/MainBot.sol\":7602:7618  price * 10 ** 10 */\n      tag_253\n      swap2\n      swap1\n      tag_254\n      jump\t// in\n    tag_253:\n        /* \"contracts/MainBot.sol\":7587:7619  return uint256(price * 10 ** 10) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/MainBot.sol\":7386:7626  function getPrice() internal view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/MainBot.sol\":4665:4852  function calculateAmountOut(uint256 amountIn, uint160 sqrtPriceX96, uint256 liquidity) internal pure returns (uint256) {... */\n    tag_198:\n        /* \"contracts/MainBot.sol\":4775:4782  uint256 */\n      0x00\n        /* \"contracts/MainBot.sol\":4835:4844  liquidity */\n      dup2\n        /* \"contracts/MainBot.sol\":4809:4832  amountIn * sqrtPriceX96 */\n      tag_256\n      sub(shl(0xa0, 0x01), 0x01)\n      dup6\n      and\n        /* \"contracts/MainBot.sol\":4809:4817  amountIn */\n      dup7\n        /* \"contracts/MainBot.sol\":4809:4832  amountIn * sqrtPriceX96 */\n      tag_44\n      jump\t// in\n    tag_256:\n        /* \"contracts/MainBot.sol\":4809:4844  amountIn * sqrtPriceX96 / liquidity */\n      tag_257\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_257:\n        /* \"contracts/MainBot.sol\":4794:4845  return uint256(amountIn * sqrtPriceX96 / liquidity) */\n      swap5\n        /* \"contracts/MainBot.sol\":4665:4852  function calculateAmountOut(uint256 amountIn, uint160 sqrtPriceX96, uint256 liquidity) internal pure returns (uint256) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:141   */\n    tag_258:\n        /* \"#utility.yul\":75:85   */\n      0x4e487b71\n        /* \"#utility.yul\":70:73   */\n      0xe0\n        /* \"#utility.yul\":66:86   */\n      shl\n        /* \"#utility.yul\":63:64   */\n      0x00\n        /* \"#utility.yul\":56:87   */\n      mstore\n        /* \"#utility.yul\":106:110   */\n      0x11\n        /* \"#utility.yul\":103:104   */\n      0x04\n        /* \"#utility.yul\":96:111   */\n      mstore\n        /* \"#utility.yul\":130:134   */\n      0x24\n        /* \"#utility.yul\":127:128   */\n      0x00\n        /* \"#utility.yul\":120:135   */\n      revert\n        /* \"#utility.yul\":146:271   */\n    tag_42:\n        /* \"#utility.yul\":211:220   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":232:242   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":229:265   */\n      iszero\n      tag_236\n      jumpi\n        /* \"#utility.yul\":245:263   */\n      tag_236\n      tag_258\n      jump\t// in\n        /* \"#utility.yul\":276:444   */\n    tag_44:\n        /* \"#utility.yul\":349:358   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":380:389   */\n      dup2\n      iszero\n        /* \"#utility.yul\":397:412   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":391:413   */\n      dup5\n      eq\n        /* \"#utility.yul\":377:414   */\n      or\n        /* \"#utility.yul\":367:438   */\n      tag_236\n      jumpi\n        /* \"#utility.yul\":418:436   */\n      tag_236\n      tag_258\n      jump\t// in\n        /* \"#utility.yul\":449:666   */\n    tag_46:\n        /* \"#utility.yul\":489:490   */\n      0x00\n        /* \"#utility.yul\":515:516   */\n      dup3\n        /* \"#utility.yul\":505:637   */\n      tag_274\n      jumpi\n        /* \"#utility.yul\":559:569   */\n      0x4e487b71\n        /* \"#utility.yul\":554:557   */\n      0xe0\n        /* \"#utility.yul\":550:570   */\n      shl\n        /* \"#utility.yul\":547:548   */\n      0x00\n        /* \"#utility.yul\":540:571   */\n      mstore\n        /* \"#utility.yul\":594:598   */\n      0x12\n        /* \"#utility.yul\":591:592   */\n      0x04\n        /* \"#utility.yul\":584:599   */\n      mstore\n        /* \"#utility.yul\":622:626   */\n      0x24\n        /* \"#utility.yul\":619:620   */\n      0x00\n        /* \"#utility.yul\":612:627   */\n      revert\n        /* \"#utility.yul\":505:637   */\n    tag_274:\n      pop\n        /* \"#utility.yul\":651:660   */\n      div\n      swap1\n        /* \"#utility.yul\":449:666   */\n      jump\t// out\n        /* \"#utility.yul\":1061:1188   */\n    tag_259:\n        /* \"#utility.yul\":1122:1132   */\n      0x4e487b71\n        /* \"#utility.yul\":1117:1120   */\n      0xe0\n        /* \"#utility.yul\":1113:1133   */\n      shl\n        /* \"#utility.yul\":1110:1111   */\n      0x00\n        /* \"#utility.yul\":1103:1134   */\n      mstore\n        /* \"#utility.yul\":1153:1157   */\n      0x41\n        /* \"#utility.yul\":1150:1151   */\n      0x04\n        /* \"#utility.yul\":1143:1158   */\n      mstore\n        /* \"#utility.yul\":1177:1181   */\n      0x24\n        /* \"#utility.yul\":1174:1175   */\n      0x00\n        /* \"#utility.yul\":1167:1182   */\n      revert\n        /* \"#utility.yul\":1193:1912   */\n    tag_260:\n        /* \"#utility.yul\":1236:1241   */\n      0x00\n        /* \"#utility.yul\":1289:1292   */\n      dup3\n        /* \"#utility.yul\":1282:1286   */\n      0x1f\n        /* \"#utility.yul\":1274:1280   */\n      dup4\n        /* \"#utility.yul\":1270:1287   */\n      add\n        /* \"#utility.yul\":1266:1293   */\n      slt\n        /* \"#utility.yul\":1256:1311   */\n      tag_279\n      jumpi\n        /* \"#utility.yul\":1307:1308   */\n      0x00\n        /* \"#utility.yul\":1304:1305   */\n      dup1\n        /* \"#utility.yul\":1297:1309   */\n      revert\n        /* \"#utility.yul\":1256:1311   */\n    tag_279:\n        /* \"#utility.yul\":1343:1349   */\n      dup2\n        /* \"#utility.yul\":1330:1350   */\n      calldataload\n        /* \"#utility.yul\":1369:1387   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1406:1408   */\n      dup1\n        /* \"#utility.yul\":1402:1404   */\n      dup3\n        /* \"#utility.yul\":1399:1409   */\n      gt\n        /* \"#utility.yul\":1396:1432   */\n      iszero\n      tag_281\n      jumpi\n        /* \"#utility.yul\":1412:1430   */\n      tag_281\n      tag_259\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":1487:1489   */\n      0x40\n        /* \"#utility.yul\":1481:1490   */\n      mload\n        /* \"#utility.yul\":1455:1457   */\n      0x1f\n        /* \"#utility.yul\":1541:1554   */\n      dup4\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1537:1559   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":1561:1563   */\n      0x3f\n        /* \"#utility.yul\":1533:1564   */\n      add\n        /* \"#utility.yul\":1529:1569   */\n      and\n        /* \"#utility.yul\":1517:1570   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":1585:1603   */\n      dup3\n      dup3\n      gt\n        /* \"#utility.yul\":1605:1627   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":1582:1628   */\n      or\n        /* \"#utility.yul\":1579:1651   */\n      iszero\n      tag_283\n      jumpi\n        /* \"#utility.yul\":1631:1649   */\n      tag_283\n      tag_259\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":1671:1681   */\n      dup2\n        /* \"#utility.yul\":1667:1669   */\n      0x40\n        /* \"#utility.yul\":1660:1682   */\n      mstore\n        /* \"#utility.yul\":1706:1708   */\n      dup4\n        /* \"#utility.yul\":1698:1704   */\n      dup2\n        /* \"#utility.yul\":1691:1709   */\n      mstore\n        /* \"#utility.yul\":1752:1755   */\n      dup7\n        /* \"#utility.yul\":1745:1749   */\n      0x20\n        /* \"#utility.yul\":1740:1742   */\n      dup6\n        /* \"#utility.yul\":1732:1738   */\n      dup9\n        /* \"#utility.yul\":1728:1743   */\n      add\n        /* \"#utility.yul\":1724:1750   */\n      add\n        /* \"#utility.yul\":1721:1756   */\n      gt\n        /* \"#utility.yul\":1718:1773   */\n      iszero\n      tag_284\n      jumpi\n        /* \"#utility.yul\":1769:1770   */\n      0x00\n        /* \"#utility.yul\":1766:1767   */\n      dup1\n        /* \"#utility.yul\":1759:1771   */\n      revert\n        /* \"#utility.yul\":1718:1773   */\n    tag_284:\n        /* \"#utility.yul\":1833:1835   */\n      dup4\n        /* \"#utility.yul\":1826:1830   */\n      0x20\n        /* \"#utility.yul\":1818:1824   */\n      dup8\n        /* \"#utility.yul\":1814:1831   */\n      add\n        /* \"#utility.yul\":1807:1811   */\n      0x20\n        /* \"#utility.yul\":1799:1805   */\n      dup4\n        /* \"#utility.yul\":1795:1812   */\n      add\n        /* \"#utility.yul\":1782:1836   */\n      calldatacopy\n        /* \"#utility.yul\":1880:1881   */\n      0x00\n        /* \"#utility.yul\":1873:1877   */\n      0x20\n        /* \"#utility.yul\":1868:1870   */\n      dup6\n        /* \"#utility.yul\":1860:1866   */\n      dup4\n        /* \"#utility.yul\":1856:1871   */\n      add\n        /* \"#utility.yul\":1852:1878   */\n      add\n        /* \"#utility.yul\":1845:1882   */\n      mstore\n        /* \"#utility.yul\":1900:1906   */\n      dup1\n        /* \"#utility.yul\":1891:1906   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1193:1912   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1917:2307   */\n    tag_75:\n        /* \"#utility.yul\":1995:2001   */\n      0x00\n        /* \"#utility.yul\":2003:2009   */\n      dup1\n        /* \"#utility.yul\":2056:2058   */\n      0x40\n        /* \"#utility.yul\":2044:2053   */\n      dup4\n        /* \"#utility.yul\":2035:2042   */\n      dup6\n        /* \"#utility.yul\":2031:2054   */\n      sub\n        /* \"#utility.yul\":2027:2059   */\n      slt\n        /* \"#utility.yul\":2024:2076   */\n      iszero\n      tag_286\n      jumpi\n        /* \"#utility.yul\":2072:2073   */\n      0x00\n        /* \"#utility.yul\":2069:2070   */\n      dup1\n        /* \"#utility.yul\":2062:2074   */\n      revert\n        /* \"#utility.yul\":2024:2076   */\n    tag_286:\n        /* \"#utility.yul\":2112:2121   */\n      dup3\n        /* \"#utility.yul\":2099:2122   */\n      calldataload\n        /* \"#utility.yul\":2145:2163   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2137:2143   */\n      dup2\n        /* \"#utility.yul\":2134:2164   */\n      gt\n        /* \"#utility.yul\":2131:2181   */\n      iszero\n      tag_287\n      jumpi\n        /* \"#utility.yul\":2177:2178   */\n      0x00\n        /* \"#utility.yul\":2174:2175   */\n      dup1\n        /* \"#utility.yul\":2167:2179   */\n      revert\n        /* \"#utility.yul\":2131:2181   */\n    tag_287:\n        /* \"#utility.yul\":2200:2250   */\n      tag_288\n        /* \"#utility.yul\":2242:2249   */\n      dup6\n        /* \"#utility.yul\":2233:2239   */\n      dup3\n        /* \"#utility.yul\":2222:2231   */\n      dup7\n        /* \"#utility.yul\":2218:2240   */\n      add\n        /* \"#utility.yul\":2200:2250   */\n      tag_260\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":2190:2250   */\n      swap6\n        /* \"#utility.yul\":2297:2299   */\n      0x20\n        /* \"#utility.yul\":2282:2300   */\n      swap5\n      swap1\n      swap5\n      add\n        /* \"#utility.yul\":2269:2301   */\n      calldataload\n      swap5\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1917:2307   */\n      jump\t// out\n        /* \"#utility.yul\":2312:2443   */\n    tag_261:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2387:2418   */\n      dup2\n      and\n        /* \"#utility.yul\":2377:2419   */\n      dup2\n      eq\n        /* \"#utility.yul\":2367:2437   */\n      tag_208\n      jumpi\n        /* \"#utility.yul\":2433:2434   */\n      0x00\n        /* \"#utility.yul\":2430:2431   */\n      dup1\n        /* \"#utility.yul\":2423:2435   */\n      revert\n        /* \"#utility.yul\":2448:2763   */\n    tag_80:\n        /* \"#utility.yul\":2516:2522   */\n      0x00\n        /* \"#utility.yul\":2524:2530   */\n      dup1\n        /* \"#utility.yul\":2577:2579   */\n      0x40\n        /* \"#utility.yul\":2565:2574   */\n      dup4\n        /* \"#utility.yul\":2556:2563   */\n      dup6\n        /* \"#utility.yul\":2552:2575   */\n      sub\n        /* \"#utility.yul\":2548:2580   */\n      slt\n        /* \"#utility.yul\":2545:2597   */\n      iszero\n      tag_292\n      jumpi\n        /* \"#utility.yul\":2593:2594   */\n      0x00\n        /* \"#utility.yul\":2590:2591   */\n      dup1\n        /* \"#utility.yul\":2583:2595   */\n      revert\n        /* \"#utility.yul\":2545:2597   */\n    tag_292:\n        /* \"#utility.yul\":2629:2638   */\n      dup3\n        /* \"#utility.yul\":2616:2639   */\n      calldataload\n        /* \"#utility.yul\":2606:2639   */\n      swap2\n      pop\n        /* \"#utility.yul\":2689:2691   */\n      0x20\n        /* \"#utility.yul\":2678:2687   */\n      dup4\n        /* \"#utility.yul\":2674:2692   */\n      add\n        /* \"#utility.yul\":2661:2693   */\n      calldataload\n        /* \"#utility.yul\":2702:2733   */\n      tag_293\n        /* \"#utility.yul\":2727:2732   */\n      dup2\n        /* \"#utility.yul\":2702:2733   */\n      tag_261\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":2752:2757   */\n      dup1\n        /* \"#utility.yul\":2742:2757   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2448:2763   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2960:3140   */\n    tag_90:\n        /* \"#utility.yul\":3019:3025   */\n      0x00\n        /* \"#utility.yul\":3072:3074   */\n      0x20\n        /* \"#utility.yul\":3060:3069   */\n      dup3\n        /* \"#utility.yul\":3051:3058   */\n      dup5\n        /* \"#utility.yul\":3047:3070   */\n      sub\n        /* \"#utility.yul\":3043:3075   */\n      slt\n        /* \"#utility.yul\":3040:3092   */\n      iszero\n      tag_296\n      jumpi\n        /* \"#utility.yul\":3088:3089   */\n      0x00\n        /* \"#utility.yul\":3085:3086   */\n      dup1\n        /* \"#utility.yul\":3078:3090   */\n      revert\n        /* \"#utility.yul\":3040:3092   */\n    tag_296:\n      pop\n        /* \"#utility.yul\":3111:3134   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":2960:3140   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3145:3467   */\n    tag_99:\n        /* \"#utility.yul\":3214:3220   */\n      0x00\n        /* \"#utility.yul\":3267:3269   */\n      0x20\n        /* \"#utility.yul\":3255:3264   */\n      dup3\n        /* \"#utility.yul\":3246:3253   */\n      dup5\n        /* \"#utility.yul\":3242:3265   */\n      sub\n        /* \"#utility.yul\":3238:3270   */\n      slt\n        /* \"#utility.yul\":3235:3287   */\n      iszero\n      tag_298\n      jumpi\n        /* \"#utility.yul\":3283:3284   */\n      0x00\n        /* \"#utility.yul\":3280:3281   */\n      dup1\n        /* \"#utility.yul\":3273:3285   */\n      revert\n        /* \"#utility.yul\":3235:3287   */\n    tag_298:\n        /* \"#utility.yul\":3323:3332   */\n      dup2\n        /* \"#utility.yul\":3310:3333   */\n      calldataload\n        /* \"#utility.yul\":3356:3374   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3348:3354   */\n      dup2\n        /* \"#utility.yul\":3345:3375   */\n      gt\n        /* \"#utility.yul\":3342:3392   */\n      iszero\n      tag_299\n      jumpi\n        /* \"#utility.yul\":3388:3389   */\n      0x00\n        /* \"#utility.yul\":3385:3386   */\n      dup1\n        /* \"#utility.yul\":3378:3390   */\n      revert\n        /* \"#utility.yul\":3342:3392   */\n    tag_299:\n        /* \"#utility.yul\":3411:3461   */\n      tag_257\n        /* \"#utility.yul\":3453:3460   */\n      dup5\n        /* \"#utility.yul\":3444:3450   */\n      dup3\n        /* \"#utility.yul\":3433:3442   */\n      dup6\n        /* \"#utility.yul\":3429:3451   */\n      add\n        /* \"#utility.yul\":3411:3461   */\n      tag_260\n      jump\t// in\n        /* \"#utility.yul\":3472:3895   */\n    tag_262:\n        /* \"#utility.yul\":3514:3517   */\n      0x00\n        /* \"#utility.yul\":3552:3557   */\n      dup2\n        /* \"#utility.yul\":3546:3558   */\n      mload\n        /* \"#utility.yul\":3579:3585   */\n      dup1\n        /* \"#utility.yul\":3574:3577   */\n      dup5\n        /* \"#utility.yul\":3567:3586   */\n      mstore\n        /* \"#utility.yul\":3604:3605   */\n      0x00\n        /* \"#utility.yul\":3614:3776   */\n    tag_302:\n        /* \"#utility.yul\":3628:3634   */\n      dup2\n        /* \"#utility.yul\":3625:3626   */\n      dup2\n        /* \"#utility.yul\":3622:3635   */\n      lt\n        /* \"#utility.yul\":3614:3776   */\n      iszero\n      tag_304\n      jumpi\n        /* \"#utility.yul\":3690:3694   */\n      0x20\n        /* \"#utility.yul\":3746:3759   */\n      dup2\n      dup6\n      add\n        /* \"#utility.yul\":3742:3764   */\n      dup2\n      add\n        /* \"#utility.yul\":3736:3765   */\n      mload\n        /* \"#utility.yul\":3718:3729   */\n      dup7\n      dup4\n      add\n        /* \"#utility.yul\":3714:3734   */\n      dup3\n      add\n        /* \"#utility.yul\":3707:3766   */\n      mstore\n        /* \"#utility.yul\":3643:3655   */\n      add\n        /* \"#utility.yul\":3614:3776   */\n      jump(tag_302)\n    tag_304:\n        /* \"#utility.yul\":3618:3621   */\n      pop\n        /* \"#utility.yul\":3821:3822   */\n      0x00\n        /* \"#utility.yul\":3814:3818   */\n      0x20\n        /* \"#utility.yul\":3805:3811   */\n      dup3\n        /* \"#utility.yul\":3800:3803   */\n      dup7\n        /* \"#utility.yul\":3796:3812   */\n      add\n        /* \"#utility.yul\":3792:3819   */\n      add\n        /* \"#utility.yul\":3785:3823   */\n      mstore\n        /* \"#utility.yul\":3884:3888   */\n      0x20\n        /* \"#utility.yul\":3877:3879   */\n      0x1f\n        /* \"#utility.yul\":3873:3880   */\n      not\n        /* \"#utility.yul\":3868:3870   */\n      0x1f\n        /* \"#utility.yul\":3860:3866   */\n      dup4\n        /* \"#utility.yul\":3856:3871   */\n      add\n        /* \"#utility.yul\":3852:3881   */\n      and\n        /* \"#utility.yul\":3847:3850   */\n      dup6\n        /* \"#utility.yul\":3843:3882   */\n      add\n        /* \"#utility.yul\":3839:3889   */\n      add\n        /* \"#utility.yul\":3832:3889   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3472:3895   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3900:4120   */\n    tag_110:\n        /* \"#utility.yul\":4049:4051   */\n      0x20\n        /* \"#utility.yul\":4038:4047   */\n      dup2\n        /* \"#utility.yul\":4031:4052   */\n      mstore\n        /* \"#utility.yul\":4012:4016   */\n      0x00\n        /* \"#utility.yul\":4069:4114   */\n      tag_306\n        /* \"#utility.yul\":4110:4112   */\n      0x20\n        /* \"#utility.yul\":4099:4108   */\n      dup4\n        /* \"#utility.yul\":4095:4113   */\n      add\n        /* \"#utility.yul\":4087:4093   */\n      dup5\n        /* \"#utility.yul\":4069:4114   */\n      tag_262\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":4061:4114   */\n      swap4\n        /* \"#utility.yul\":3900:4120   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4125:4372   */\n    tag_130:\n        /* \"#utility.yul\":4184:4190   */\n      0x00\n        /* \"#utility.yul\":4237:4239   */\n      0x20\n        /* \"#utility.yul\":4225:4234   */\n      dup3\n        /* \"#utility.yul\":4216:4223   */\n      dup5\n        /* \"#utility.yul\":4212:4235   */\n      sub\n        /* \"#utility.yul\":4208:4240   */\n      slt\n        /* \"#utility.yul\":4205:4257   */\n      iszero\n      tag_308\n      jumpi\n        /* \"#utility.yul\":4253:4254   */\n      0x00\n        /* \"#utility.yul\":4250:4251   */\n      dup1\n        /* \"#utility.yul\":4243:4255   */\n      revert\n        /* \"#utility.yul\":4205:4257   */\n    tag_308:\n        /* \"#utility.yul\":4292:4301   */\n      dup2\n        /* \"#utility.yul\":4279:4302   */\n      calldataload\n        /* \"#utility.yul\":4311:4342   */\n      tag_306\n        /* \"#utility.yul\":4336:4341   */\n      dup2\n        /* \"#utility.yul\":4311:4342   */\n      tag_261\n      jump\t// in\n        /* \"#utility.yul\":4377:4714   */\n    tag_178:\n        /* \"#utility.yul\":4579:4581   */\n      0x20\n        /* \"#utility.yul\":4561:4582   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":4618:4620   */\n      0x0d\n        /* \"#utility.yul\":4598:4616   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":4591:4621   */\n      mstore\n      shl(0x99, 0x2737ba103a34329037bbb732b9)\n        /* \"#utility.yul\":4652:4654   */\n      0x40\n        /* \"#utility.yul\":4637:4655   */\n      dup3\n      add\n        /* \"#utility.yul\":4630:4673   */\n      mstore\n        /* \"#utility.yul\":4705:4707   */\n      0x60\n        /* \"#utility.yul\":4690:4708   */\n      add\n      swap1\n        /* \"#utility.yul\":4377:4714   */\n      jump\t// out\n        /* \"#utility.yul\":4719:5162   */\n    tag_187:\n        /* \"#utility.yul\":4960:4963   */\n      0x80\n        /* \"#utility.yul\":4949:4958   */\n      dup2\n        /* \"#utility.yul\":4942:4964   */\n      mstore\n        /* \"#utility.yul\":4923:4927   */\n      0x00\n        /* \"#utility.yul\":4981:5027   */\n      tag_312\n        /* \"#utility.yul\":5022:5025   */\n      0x80\n        /* \"#utility.yul\":5011:5020   */\n      dup4\n        /* \"#utility.yul\":5007:5026   */\n      add\n        /* \"#utility.yul\":4999:5005   */\n      dup8\n        /* \"#utility.yul\":4981:5027   */\n      tag_262\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":5058:5060   */\n      0x20\n        /* \"#utility.yul\":5043:5061   */\n      dup4\n      add\n        /* \"#utility.yul\":5036:5070   */\n      swap6\n      swap1\n      swap6\n      mstore\n      pop\n        /* \"#utility.yul\":5101:5103   */\n      0x40\n        /* \"#utility.yul\":5086:5104   */\n      dup2\n      add\n        /* \"#utility.yul\":5079:5113   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":5144:5146   */\n      0x60\n        /* \"#utility.yul\":5129:5147   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":5122:5156   */\n      mstore\n        /* \"#utility.yul\":4973:5027   */\n      swap2\n        /* \"#utility.yul\":4719:5162   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5167:5330   */\n    tag_263:\n        /* \"#utility.yul\":5245:5258   */\n      dup1\n      mload\n        /* \"#utility.yul\":5298:5304   */\n      0xffff\n        /* \"#utility.yul\":5287:5305   */\n      dup2\n      and\n        /* \"#utility.yul\":5277:5306   */\n      dup2\n      eq\n        /* \"#utility.yul\":5267:5324   */\n      tag_314\n      jumpi\n        /* \"#utility.yul\":5320:5321   */\n      0x00\n        /* \"#utility.yul\":5317:5318   */\n      dup1\n        /* \"#utility.yul\":5310:5322   */\n      revert\n        /* \"#utility.yul\":5267:5324   */\n    tag_314:\n        /* \"#utility.yul\":5167:5330   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5335:6321   */\n    tag_192:\n        /* \"#utility.yul\":5449:5455   */\n      0x00\n        /* \"#utility.yul\":5457:5463   */\n      dup1\n        /* \"#utility.yul\":5465:5471   */\n      0x00\n        /* \"#utility.yul\":5473:5479   */\n      dup1\n        /* \"#utility.yul\":5481:5487   */\n      0x00\n        /* \"#utility.yul\":5489:5495   */\n      dup1\n        /* \"#utility.yul\":5497:5503   */\n      0x00\n        /* \"#utility.yul\":5550:5553   */\n      0xe0\n        /* \"#utility.yul\":5538:5547   */\n      dup9\n        /* \"#utility.yul\":5529:5536   */\n      dup11\n        /* \"#utility.yul\":5525:5548   */\n      sub\n        /* \"#utility.yul\":5521:5554   */\n      slt\n        /* \"#utility.yul\":5518:5571   */\n      iszero\n      tag_316\n      jumpi\n        /* \"#utility.yul\":5567:5568   */\n      0x00\n        /* \"#utility.yul\":5564:5565   */\n      dup1\n        /* \"#utility.yul\":5557:5569   */\n      revert\n        /* \"#utility.yul\":5518:5571   */\n    tag_316:\n        /* \"#utility.yul\":5599:5608   */\n      dup8\n        /* \"#utility.yul\":5593:5609   */\n      mload\n        /* \"#utility.yul\":5618:5649   */\n      tag_317\n        /* \"#utility.yul\":5643:5648   */\n      dup2\n        /* \"#utility.yul\":5618:5649   */\n      tag_261\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":5668:5673   */\n      dup1\n        /* \"#utility.yul\":5658:5673   */\n      swap8\n      pop\n      pop\n        /* \"#utility.yul\":5718:5720   */\n      0x20\n        /* \"#utility.yul\":5707:5716   */\n      dup9\n        /* \"#utility.yul\":5703:5721   */\n      add\n        /* \"#utility.yul\":5697:5722   */\n      mload\n        /* \"#utility.yul\":5767:5774   */\n      dup1\n        /* \"#utility.yul\":5764:5765   */\n      0x02\n        /* \"#utility.yul\":5753:5775   */\n      signextend\n        /* \"#utility.yul\":5744:5751   */\n      dup2\n        /* \"#utility.yul\":5741:5776   */\n      eq\n        /* \"#utility.yul\":5731:5794   */\n      tag_318\n      jumpi\n        /* \"#utility.yul\":5790:5791   */\n      0x00\n        /* \"#utility.yul\":5787:5788   */\n      dup1\n        /* \"#utility.yul\":5780:5792   */\n      revert\n        /* \"#utility.yul\":5731:5794   */\n    tag_318:\n        /* \"#utility.yul\":5813:5820   */\n      swap6\n      pop\n        /* \"#utility.yul\":5839:5887   */\n      tag_319\n        /* \"#utility.yul\":5883:5885   */\n      0x40\n        /* \"#utility.yul\":5868:5886   */\n      dup10\n      add\n        /* \"#utility.yul\":5839:5887   */\n      tag_263\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":5829:5887   */\n      swap5\n      pop\n        /* \"#utility.yul\":5906:5954   */\n      tag_320\n        /* \"#utility.yul\":5950:5952   */\n      0x60\n        /* \"#utility.yul\":5939:5948   */\n      dup10\n        /* \"#utility.yul\":5935:5953   */\n      add\n        /* \"#utility.yul\":5906:5954   */\n      tag_263\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":5896:5954   */\n      swap4\n      pop\n        /* \"#utility.yul\":5973:6022   */\n      tag_321\n        /* \"#utility.yul\":6017:6020   */\n      0x80\n        /* \"#utility.yul\":6006:6015   */\n      dup10\n        /* \"#utility.yul\":6002:6021   */\n      add\n        /* \"#utility.yul\":5973:6022   */\n      tag_263\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":5963:6022   */\n      swap3\n      pop\n        /* \"#utility.yul\":6067:6070   */\n      0xa0\n        /* \"#utility.yul\":6056:6065   */\n      dup9\n        /* \"#utility.yul\":6052:6071   */\n      add\n        /* \"#utility.yul\":6046:6072   */\n      mload\n        /* \"#utility.yul\":6116:6120   */\n      0xff\n        /* \"#utility.yul\":6107:6114   */\n      dup2\n        /* \"#utility.yul\":6103:6121   */\n      and\n        /* \"#utility.yul\":6094:6101   */\n      dup2\n        /* \"#utility.yul\":6091:6122   */\n      eq\n        /* \"#utility.yul\":6081:6140   */\n      tag_322\n      jumpi\n        /* \"#utility.yul\":6136:6137   */\n      0x00\n        /* \"#utility.yul\":6133:6134   */\n      dup1\n        /* \"#utility.yul\":6126:6138   */\n      revert\n        /* \"#utility.yul\":6081:6140   */\n    tag_322:\n        /* \"#utility.yul\":6211:6214   */\n      0xc0\n        /* \"#utility.yul\":6196:6215   */\n      dup10\n      add\n        /* \"#utility.yul\":6190:6216   */\n      mload\n        /* \"#utility.yul\":6159:6166   */\n      swap1\n      swap3\n      pop\n        /* \"#utility.yul\":6254:6269   */\n      dup1\n      iszero\n        /* \"#utility.yul\":6247:6270   */\n      iszero\n        /* \"#utility.yul\":6235:6271   */\n      dup2\n      eq\n        /* \"#utility.yul\":6225:6289   */\n      tag_323\n      jumpi\n        /* \"#utility.yul\":6285:6286   */\n      0x00\n        /* \"#utility.yul\":6282:6283   */\n      dup1\n        /* \"#utility.yul\":6275:6287   */\n      revert\n        /* \"#utility.yul\":6225:6289   */\n    tag_323:\n        /* \"#utility.yul\":6308:6315   */\n      dup1\n        /* \"#utility.yul\":6298:6315   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":5335:6321   */\n      swap3\n      swap6\n      swap9\n      swap2\n      swap5\n      swap8\n      pop\n      swap3\n      swap6\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6326:6631   */\n    tag_196:\n        /* \"#utility.yul\":6396:6402   */\n      0x00\n        /* \"#utility.yul\":6449:6451   */\n      0x20\n        /* \"#utility.yul\":6437:6446   */\n      dup3\n        /* \"#utility.yul\":6428:6435   */\n      dup5\n        /* \"#utility.yul\":6424:6447   */\n      sub\n        /* \"#utility.yul\":6420:6452   */\n      slt\n        /* \"#utility.yul\":6417:6469   */\n      iszero\n      tag_325\n      jumpi\n        /* \"#utility.yul\":6465:6466   */\n      0x00\n        /* \"#utility.yul\":6462:6463   */\n      dup1\n        /* \"#utility.yul\":6455:6467   */\n      revert\n        /* \"#utility.yul\":6417:6469   */\n    tag_325:\n        /* \"#utility.yul\":6497:6506   */\n      dup2\n        /* \"#utility.yul\":6491:6507   */\n      mload\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"#utility.yul\":6540:6545   */\n      dup2\n        /* \"#utility.yul\":6536:6582   */\n      and\n        /* \"#utility.yul\":6529:6534   */\n      dup2\n        /* \"#utility.yul\":6526:6583   */\n      eq\n        /* \"#utility.yul\":6516:6601   */\n      tag_306\n      jumpi\n        /* \"#utility.yul\":6597:6598   */\n      0x00\n        /* \"#utility.yul\":6594:6595   */\n      dup1\n        /* \"#utility.yul\":6587:6599   */\n      revert\n        /* \"#utility.yul\":6636:6764   */\n    tag_202:\n        /* \"#utility.yul\":6703:6712   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":6724:6735   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":6721:6758   */\n      iszero\n      tag_236\n      jumpi\n        /* \"#utility.yul\":6738:6756   */\n      tag_236\n      tag_258\n      jump\t// in\n        /* \"#utility.yul\":7118:7498   */\n    tag_220:\n        /* \"#utility.yul\":7197:7198   */\n      0x01\n        /* \"#utility.yul\":7193:7205   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":7240:7252   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":7261:7322   */\n      tag_332\n      jumpi\n        /* \"#utility.yul\":7315:7319   */\n      0x7f\n        /* \"#utility.yul\":7307:7313   */\n      dup3\n        /* \"#utility.yul\":7303:7320   */\n      and\n        /* \"#utility.yul\":7293:7320   */\n      swap2\n      pop\n        /* \"#utility.yul\":7261:7322   */\n    tag_332:\n        /* \"#utility.yul\":7368:7370   */\n      0x20\n        /* \"#utility.yul\":7360:7366   */\n      dup3\n        /* \"#utility.yul\":7357:7371   */\n      lt\n        /* \"#utility.yul\":7337:7355   */\n      dup2\n        /* \"#utility.yul\":7334:7372   */\n      sub\n        /* \"#utility.yul\":7331:7492   */\n      tag_333\n      jumpi\n        /* \"#utility.yul\":7414:7424   */\n      0x4e487b71\n        /* \"#utility.yul\":7409:7412   */\n      0xe0\n        /* \"#utility.yul\":7405:7425   */\n      shl\n        /* \"#utility.yul\":7402:7403   */\n      0x00\n        /* \"#utility.yul\":7395:7426   */\n      mstore\n        /* \"#utility.yul\":7449:7453   */\n      0x22\n        /* \"#utility.yul\":7446:7447   */\n      0x04\n        /* \"#utility.yul\":7439:7454   */\n      mstore\n        /* \"#utility.yul\":7477:7481   */\n      0x24\n        /* \"#utility.yul\":7474:7475   */\n      0x00\n        /* \"#utility.yul\":7467:7482   */\n      revert\n        /* \"#utility.yul\":7331:7492   */\n    tag_333:\n      pop\n        /* \"#utility.yul\":7118:7498   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8655:8834   */\n    tag_264:\n        /* \"#utility.yul\":8733:8746   */\n      dup1\n      mload\n        /* \"#utility.yul\":8786:8808   */\n      0xffffffffffffffffffff\n        /* \"#utility.yul\":8775:8809   */\n      dup2\n      and\n        /* \"#utility.yul\":8765:8810   */\n      dup2\n      eq\n        /* \"#utility.yul\":8755:8828   */\n      tag_314\n      jumpi\n        /* \"#utility.yul\":8824:8825   */\n      0x00\n        /* \"#utility.yul\":8821:8822   */\n      dup1\n        /* \"#utility.yul\":8814:8826   */\n      revert\n        /* \"#utility.yul\":8839:9312   */\n    tag_252:\n        /* \"#utility.yul\":8942:8948   */\n      0x00\n        /* \"#utility.yul\":8950:8956   */\n      dup1\n        /* \"#utility.yul\":8958:8964   */\n      0x00\n        /* \"#utility.yul\":8966:8972   */\n      dup1\n        /* \"#utility.yul\":8974:8980   */\n      0x00\n        /* \"#utility.yul\":9027:9030   */\n      0xa0\n        /* \"#utility.yul\":9015:9024   */\n      dup7\n        /* \"#utility.yul\":9006:9013   */\n      dup9\n        /* \"#utility.yul\":9002:9025   */\n      sub\n        /* \"#utility.yul\":8998:9031   */\n      slt\n        /* \"#utility.yul\":8995:9048   */\n      iszero\n      tag_339\n      jumpi\n        /* \"#utility.yul\":9044:9045   */\n      0x00\n        /* \"#utility.yul\":9041:9042   */\n      dup1\n        /* \"#utility.yul\":9034:9046   */\n      revert\n        /* \"#utility.yul\":8995:9048   */\n    tag_339:\n        /* \"#utility.yul\":9067:9106   */\n      tag_340\n        /* \"#utility.yul\":9096:9105   */\n      dup7\n        /* \"#utility.yul\":9067:9106   */\n      tag_264\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":9057:9106   */\n      swap5\n      pop\n        /* \"#utility.yul\":9146:9148   */\n      0x20\n        /* \"#utility.yul\":9135:9144   */\n      dup7\n        /* \"#utility.yul\":9131:9149   */\n      add\n        /* \"#utility.yul\":9125:9150   */\n      mload\n        /* \"#utility.yul\":9115:9150   */\n      swap4\n      pop\n        /* \"#utility.yul\":9190:9192   */\n      0x40\n        /* \"#utility.yul\":9179:9188   */\n      dup7\n        /* \"#utility.yul\":9175:9193   */\n      add\n        /* \"#utility.yul\":9169:9194   */\n      mload\n        /* \"#utility.yul\":9159:9194   */\n      swap3\n      pop\n        /* \"#utility.yul\":9234:9236   */\n      0x60\n        /* \"#utility.yul\":9223:9232   */\n      dup7\n        /* \"#utility.yul\":9219:9237   */\n      add\n        /* \"#utility.yul\":9213:9238   */\n      mload\n        /* \"#utility.yul\":9203:9238   */\n      swap2\n      pop\n        /* \"#utility.yul\":9257:9306   */\n      tag_341\n        /* \"#utility.yul\":9301:9304   */\n      0x80\n        /* \"#utility.yul\":9290:9299   */\n      dup8\n        /* \"#utility.yul\":9286:9305   */\n      add\n        /* \"#utility.yul\":9257:9306   */\n      tag_264\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":9247:9306   */\n      swap1\n      pop\n        /* \"#utility.yul\":8839:9312   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9317:9554   */\n    tag_254:\n        /* \"#utility.yul\":9389:9398   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":9356:9363   */\n      0x00\n        /* \"#utility.yul\":9414:9423   */\n      dup3\n      slt\n      shl(0xff, 0x01)\n        /* \"#utility.yul\":9425:9443   */\n      dup5\n      eq\n        /* \"#utility.yul\":9410:9444   */\n      and\n        /* \"#utility.yul\":9407:9467   */\n      iszero\n      tag_344\n      jumpi\n        /* \"#utility.yul\":9447:9465   */\n      tag_344\n      tag_258\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":9520:9521   */\n      dup2\n        /* \"#utility.yul\":9511:9518   */\n      dup2\n        /* \"#utility.yul\":9506:9522   */\n      sdiv\n        /* \"#utility.yul\":9503:9504   */\n      dup4\n        /* \"#utility.yul\":9500:9523   */\n      eq\n        /* \"#utility.yul\":9496:9497   */\n      dup3\n        /* \"#utility.yul\":9489:9498   */\n      iszero\n        /* \"#utility.yul\":9486:9524   */\n      or\n        /* \"#utility.yul\":9476:9548   */\n      tag_236\n      jumpi\n        /* \"#utility.yul\":9528:9546   */\n      tag_236\n      tag_258\n      jump\t// in\n\n    auxdata: 0xa2646970667358221220a59bae4492ba1e94e68edf374dbb5bf649b234ed2c7caae362aa4d69602da4d164736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_207": {
									"entryPoint": null,
									"id": 207,
									"parameterSlots": 8,
									"returnSlots": 0
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 710,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_addresst_addresst_addresst_addresst_addresst_address_fromMemory": {
									"entryPoint": 738,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 8
								},
								"abi_encode_tuple_packed_t_stringliteral_594d562b07e5639baeda43f9427a7d73488025602cf4b19cc0e4cec02e1718f8__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 428,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 510,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 370,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 350,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3991:23",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:23",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:23",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:23",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:23",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:23",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:23",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:23",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:23",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:23"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "201:325:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "211:22:23",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "225:1:23",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "228:4:23"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "221:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "221:12:23"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:23"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "242:38:23",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "272:4:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "278:1:23",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "268:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "268:12:23"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "246:18:23",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "319:31:23",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "321:27:23",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "335:6:23"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "343:4:23",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "331:3:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "331:17:23"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "321:6:23"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "299:18:23"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "292:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "292:26:23"
															},
															"nodeType": "YulIf",
															"src": "289:61:23"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "409:111:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "430:1:23",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "437:3:23",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "442:10:23",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "433:3:23"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "433:20:23"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "423:6:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "423:31:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "423:31:23"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "474:1:23",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "477:4:23",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "467:6:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "467:15:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "467:15:23"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "502:1:23",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "505:4:23",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "495:6:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "495:15:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "495:15:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "365:18:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "388:6:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "396:2:23",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "385:2:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "385:14:23"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "362:2:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "362:38:23"
															},
															"nodeType": "YulIf",
															"src": "359:161:23"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "181:4:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "190:6:23",
														"type": ""
													}
												],
												"src": "146:380:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "587:65:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "604:1:23",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "607:3:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "597:14:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "597:14:23"
														},
														{
															"nodeType": "YulAssignment",
															"src": "620:26:23",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "638:1:23",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "641:4:23",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "628:9:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "628:18:23"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "620:4:23"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "570:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "578:4:23",
														"type": ""
													}
												],
												"src": "531:121:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "738:464:23",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "771:425:23",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "785:11:23",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "795:1:23",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "789:2:23",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "816:2:23"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "820:5:23"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "809:6:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "809:17:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "809:17:23"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "839:31:23",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "861:2:23"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "865:4:23",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "851:9:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "851:19:23"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "843:4:23",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "883:57:23",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "906:4:23"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "916:1:23",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "923:10:23"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "935:2:23",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "919:3:23"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "919:19:23"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "912:3:23"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "912:27:23"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "902:3:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "902:38:23"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "887:11:23",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "977:23:23",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "979:19:23",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "994:4:23"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "979:11:23"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "959:10:23"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "971:4:23",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "956:2:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "956:20:23"
																		},
																		"nodeType": "YulIf",
																		"src": "953:47:23"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1013:41:23",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "1027:4:23"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1037:1:23",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "1044:3:23"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "1049:2:23",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1040:3:23"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1040:12:23"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "1033:3:23"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1033:20:23"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1023:3:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1023:31:23"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "1017:2:23",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1067:24:23",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "1080:11:23"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "1071:5:23",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "1165:21:23",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "1174:5:23"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "1181:2:23"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "1167:6:23"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1167:17:23"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "1167:17:23"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "1115:5:23"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "1122:2:23"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "1112:2:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1112:13:23"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "1126:26:23",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "1128:22:23",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "1141:5:23"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1148:1:23",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1137:3:23"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1137:13:23"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "1128:5:23"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "1108:3:23",
																			"statements": []
																		},
																		"src": "1104:82:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "754:3:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "759:2:23",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "751:2:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "751:11:23"
															},
															"nodeType": "YulIf",
															"src": "748:448:23"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "710:5:23",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "717:3:23",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "722:10:23",
														"type": ""
													}
												],
												"src": "657:545:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1292:81:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1302:65:23",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "1317:4:23"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1335:1:23",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "1338:3:23"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1331:3:23"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1331:11:23"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1348:1:23",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "1344:3:23"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1344:6:23"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "1327:3:23"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1327:24:23"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "1323:3:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1323:29:23"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1313:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1313:40:23"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1359:1:23",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "1362:3:23"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1355:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1355:11:23"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1310:2:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "1310:57:23"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "1302:4:23"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1269:4:23",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "1275:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "1283:4:23",
														"type": ""
													}
												],
												"src": "1207:166:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1474:1256:23",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1484:24:23",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "1504:3:23"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1498:5:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "1498:10:23"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "1488:6:23",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1551:22:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1553:16:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1553:18:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1553:18:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "1523:6:23"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1539:2:23",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1543:1:23",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "1535:3:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1535:10:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1547:1:23",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1531:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1531:18:23"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1520:2:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "1520:30:23"
															},
															"nodeType": "YulIf",
															"src": "1517:56:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "1626:4:23"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "1664:4:23"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "1658:5:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1658:11:23"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "1632:25:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1632:38:23"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "1672:6:23"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "1582:43:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "1582:97:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1582:97:23"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1688:18:23",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1705:1:23",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "1692:9:23",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1715:23:23",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1734:4:23",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "1719:11:23",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1747:24:23",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "1760:11:23"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "1747:9:23"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1817:656:23",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "1831:35:23",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "1850:6:23"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "1862:2:23",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "1858:3:23"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1858:7:23"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "1846:3:23"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1846:20:23"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "1835:7:23",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "1879:49:23",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "1923:4:23"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "1893:29:23"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1893:35:23"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "1883:6:23",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "1941:10:23",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1950:1:23",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "1945:1:23",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2028:172:23",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2053:6:23"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "2071:3:23"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "2076:9:23"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "2067:3:23"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "2067:19:23"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "2061:5:23"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2061:26:23"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "2046:6:23"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2046:42:23"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "2046:42:23"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "2105:24:23",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2119:6:23"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2127:1:23",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2115:3:23"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2115:14:23"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "2105:6:23"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "2146:40:23",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "2163:9:23"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "2174:11:23"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2159:3:23"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2159:27:23"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "2146:9:23"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1975:1:23"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "1978:7:23"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "1972:2:23"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1972:14:23"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "1987:28:23",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "1989:24:23",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "1998:1:23"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "2001:11:23"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "1994:3:23"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1994:19:23"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1989:1:23"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "1968:3:23",
																					"statements": []
																				},
																				"src": "1964:236:23"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2248:166:23",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "2266:43:23",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "2293:3:23"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "2298:9:23"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "2289:3:23"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2289:19:23"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "2283:5:23"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2283:26:23"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "2270:9:23",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2333:6:23"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "2345:9:23"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "2372:1:23",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "2375:6:23"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "2368:3:23"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "2368:14:23"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "2384:3:23",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "2364:3:23"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "2364:24:23"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "2394:1:23",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "2390:3:23"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "2390:6:23"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "2360:3:23"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "2360:37:23"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "2356:3:23"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "2356:42:23"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "2341:3:23"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2341:58:23"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "2326:6:23"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2326:74:23"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "2326:74:23"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "2219:7:23"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "2228:6:23"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "2216:2:23"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2216:19:23"
																				},
																				"nodeType": "YulIf",
																				"src": "2213:201:23"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "2434:4:23"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "2448:1:23",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "2451:6:23"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "2444:3:23"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "2444:14:23"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2460:1:23",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2440:3:23"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2440:22:23"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "2427:6:23"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2427:36:23"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2427:36:23"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "1810:663:23",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1815:1:23",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "2490:234:23",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "2504:14:23",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2517:1:23",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "2508:5:23",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2553:67:23",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "2571:35:23",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "2590:3:23"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "2595:9:23"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "2586:3:23"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2586:19:23"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "2580:5:23"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2580:26:23"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "2571:5:23"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "2534:6:23"
																				},
																				"nodeType": "YulIf",
																				"src": "2531:89:23"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "2640:4:23"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "2699:5:23"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "2706:6:23"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "2646:52:23"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2646:67:23"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "2633:6:23"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2633:81:23"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2633:81:23"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "2482:242:23",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "1790:6:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1798:2:23",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1787:2:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "1787:14:23"
															},
															"nodeType": "YulSwitch",
															"src": "1780:944:23"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "1459:4:23",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1465:3:23",
														"type": ""
													}
												],
												"src": "1378:1352:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2795:117:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2805:22:23",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2820:6:23"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2814:5:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "2814:13:23"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2805:5:23"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2890:16:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2899:1:23",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2902:1:23",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2892:6:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2892:12:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2892:12:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2849:5:23"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2860:5:23"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2875:3:23",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2880:1:23",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "2871:3:23"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2871:11:23"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2884:1:23",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "2867:3:23"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2867:19:23"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "2856:3:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2856:31:23"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2846:2:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2846:42:23"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2839:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "2839:50:23"
															},
															"nodeType": "YulIf",
															"src": "2836:70:23"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2774:6:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2785:5:23",
														"type": ""
													}
												],
												"src": "2735:177:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3117:608:23",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3164:16:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3173:1:23",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3176:1:23",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3166:6:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3166:12:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3166:12:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3138:7:23"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3147:9:23"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3134:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3134:23:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3159:3:23",
																		"type": "",
																		"value": "256"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3130:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "3130:33:23"
															},
															"nodeType": "YulIf",
															"src": "3127:53:23"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3189:50:23",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3229:9:23"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "3199:29:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "3199:40:23"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3189:6:23"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3248:59:23",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3292:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3303:2:23",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3288:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3288:18:23"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "3258:29:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "3258:49:23"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3248:6:23"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3316:59:23",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3360:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3371:2:23",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3356:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3356:18:23"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "3326:29:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "3326:49:23"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3316:6:23"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3384:59:23",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3428:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3439:2:23",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3424:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3424:18:23"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "3394:29:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "3394:49:23"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "3384:6:23"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3452:60:23",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3496:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3507:3:23",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3492:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3492:19:23"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "3462:29:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "3462:50:23"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "3452:6:23"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3521:60:23",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3565:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3576:3:23",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3561:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3561:19:23"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "3531:29:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "3531:50:23"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nodeType": "YulIdentifier",
																	"src": "3521:6:23"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3590:60:23",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3634:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3645:3:23",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3630:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3630:19:23"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "3600:29:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "3600:50:23"
															},
															"variableNames": [
																{
																	"name": "value6",
																	"nodeType": "YulIdentifier",
																	"src": "3590:6:23"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3659:60:23",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3703:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3714:3:23",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3699:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3699:19:23"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "3669:29:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "3669:50:23"
															},
															"variableNames": [
																{
																	"name": "value7",
																	"nodeType": "YulIdentifier",
																	"src": "3659:6:23"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_addresst_addresst_addresst_addresst_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3027:9:23",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3038:7:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3050:6:23",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3058:6:23",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3066:6:23",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3074:6:23",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "3082:6:23",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "3090:6:23",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "3098:6:23",
														"type": ""
													},
													{
														"name": "value7",
														"nodeType": "YulTypedName",
														"src": "3106:6:23",
														"type": ""
													}
												],
												"src": "2917:808:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3922:67:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3939:3:23"
																	},
																	{
																		"hexValue": "517569636b53776170",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3944:11:23",
																		"type": "",
																		"value": "QuickSwap"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3932:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "3932:24:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3932:24:23"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3965:18:23",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3976:3:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3981:1:23",
																		"type": "",
																		"value": "9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3972:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "3972:11:23"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3965:3:23"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_594d562b07e5639baeda43f9427a7d73488025602cf4b19cc0e4cec02e1718f8__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3906:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3914:3:23",
														"type": ""
													}
												],
												"src": "3730:259:23"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_addresst_addresst_addresst_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7\n    {\n        if slt(sub(dataEnd, headStart), 256) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n        value2 := abi_decode_address_fromMemory(add(headStart, 64))\n        value3 := abi_decode_address_fromMemory(add(headStart, 96))\n        value4 := abi_decode_address_fromMemory(add(headStart, 128))\n        value5 := abi_decode_address_fromMemory(add(headStart, 160))\n        value6 := abi_decode_address_fromMemory(add(headStart, 192))\n        value7 := abi_decode_address_fromMemory(add(headStart, 224))\n    }\n    function abi_encode_tuple_packed_t_stringliteral_594d562b07e5639baeda43f9427a7d73488025602cf4b19cc0e4cec02e1718f8__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    {\n        mstore(pos, \"QuickSwap\")\n        end := add(pos, 9)\n    }\n}",
									"id": 23,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x3 PUSH1 0x6 SSTORE PUSH1 0xA PUSH1 0x7 SSTORE PUSH1 0xC0 PUSH1 0x40 MSTORE PUSH1 0xC PUSH1 0x80 SWAP1 DUP2 MSTORE PUSH12 0x496E697469616C697A696E67 PUSH1 0xA0 SHL PUSH1 0xA0 MSTORE PUSH1 0x9 SWAP1 PUSH3 0x37 SWAP1 DUP3 PUSH3 0x1FE JUMP JUMPDEST POP CALLVALUE DUP1 ISZERO PUSH3 0x44 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1365 CODESIZE SUB DUP1 PUSH3 0x1365 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x67 SWAP2 PUSH3 0x2E2 JUMP JUMPDEST PUSH0 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0xA DUP1 SLOAD DUP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH1 0xB DUP1 SLOAD DUP4 AND DUP11 DUP4 AND OR SWAP1 SSTORE PUSH1 0xC DUP1 SLOAD DUP4 AND DUP10 DUP4 AND OR SWAP1 SSTORE PUSH1 0xD DUP1 SLOAD DUP4 AND DUP9 DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0xE DUP1 SLOAD DUP5 AND DUP9 DUP5 AND OR SWAP1 SSTORE PUSH1 0xF DUP1 SLOAD DUP5 AND DUP8 DUP5 AND OR SWAP1 SSTORE PUSH1 0x10 DUP1 SLOAD DUP5 AND DUP7 DUP5 AND OR SWAP1 SSTORE PUSH1 0x11 DUP1 SLOAD SWAP1 SWAP4 AND SWAP2 DUP5 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH9 0x517569636B5377617 PUSH1 0xBC SHL DUP2 MSTORE PUSH1 0x12 SWAP1 PUSH1 0x9 ADD SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP POP PUSH0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE POP POP PUSH1 0x6E PUSH1 0x4 SSTORE POP POP PUSH1 0x55 PUSH1 0x5 SSTORE POP POP TIMESTAMP PUSH1 0x8 SSTORE PUSH3 0x385 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x187 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x1A6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x1F9 JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x1D4 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x1F5 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1E0 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x21A JUMPI PUSH3 0x21A PUSH3 0x15E JUMP JUMPDEST PUSH3 0x232 DUP2 PUSH3 0x22B DUP5 SLOAD PUSH3 0x172 JUMP JUMPDEST DUP5 PUSH3 0x1AC JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x268 JUMPI PUSH0 DUP5 ISZERO PUSH3 0x250 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x1F5 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x298 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x277 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x2B6 JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x2DD JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH2 0x100 DUP10 DUP12 SUB SLT ISZERO PUSH3 0x2FB JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH3 0x306 DUP10 PUSH3 0x2C6 JUMP JUMPDEST SWAP8 POP PUSH3 0x316 PUSH1 0x20 DUP11 ADD PUSH3 0x2C6 JUMP JUMPDEST SWAP7 POP PUSH3 0x326 PUSH1 0x40 DUP11 ADD PUSH3 0x2C6 JUMP JUMPDEST SWAP6 POP PUSH3 0x336 PUSH1 0x60 DUP11 ADD PUSH3 0x2C6 JUMP JUMPDEST SWAP5 POP PUSH3 0x346 PUSH1 0x80 DUP11 ADD PUSH3 0x2C6 JUMP JUMPDEST SWAP4 POP PUSH3 0x356 PUSH1 0xA0 DUP11 ADD PUSH3 0x2C6 JUMP JUMPDEST SWAP3 POP PUSH3 0x366 PUSH1 0xC0 DUP11 ADD PUSH3 0x2C6 JUMP JUMPDEST SWAP2 POP PUSH3 0x376 PUSH1 0xE0 DUP11 ADD PUSH3 0x2C6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH2 0xFD2 DUP1 PUSH3 0x393 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1BD JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x869665E9 GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0xB3CE56A2 GT PUSH2 0x92 JUMPI DUP1 PUSH4 0xE0ABCA0B GT PUSH2 0x62 JUMPI DUP1 PUSH4 0xE0ABCA0B EQ PUSH2 0x52D JUMPI DUP1 PUSH4 0xE189EB42 EQ PUSH2 0x54C JUMPI DUP1 PUSH4 0xE5047B30 EQ PUSH2 0x56B JUMPI DUP1 PUSH4 0xF974821A EQ PUSH2 0x58A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB3CE56A2 EQ PUSH2 0x4CF JUMPI DUP1 PUSH4 0xB6658D07 EQ PUSH2 0x4E4 JUMPI DUP1 PUSH4 0xC0FC247F EQ PUSH2 0x503 JUMPI DUP1 PUSH4 0xE037F889 EQ PUSH2 0x518 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x92EEFE9B GT PUSH2 0xCD JUMPI DUP1 PUSH4 0x92EEFE9B EQ PUSH2 0x468 JUMPI DUP1 PUSH4 0x9D8EF1E1 EQ PUSH2 0x487 JUMPI DUP1 PUSH4 0xA30FB905 EQ PUSH2 0x49B JUMPI DUP1 PUSH4 0xA98AD46C EQ PUSH2 0x4B0 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x869665E9 EQ PUSH2 0x417 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x436 JUMPI DUP1 PUSH4 0x8FC3047D EQ PUSH2 0x454 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x41C0E1B5 GT PUSH2 0x15D JUMPI DUP1 PUSH4 0x5E7FFA67 GT PUSH2 0x138 JUMPI DUP1 PUSH4 0x5E7FFA67 EQ PUSH2 0x382 JUMPI DUP1 PUSH4 0x64AABB9E EQ PUSH2 0x3C2 JUMPI DUP1 PUSH4 0x6D546CDD EQ PUSH2 0x3D7 JUMPI DUP1 PUSH4 0x735DE9F7 EQ PUSH2 0x3F8 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x41C0E1B5 EQ PUSH2 0x330 JUMPI DUP1 PUSH4 0x457F3CB0 EQ PUSH2 0x344 JUMPI DUP1 PUSH4 0x4ADA218B EQ PUSH2 0x363 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1BF41362 GT PUSH2 0x198 JUMPI DUP1 PUSH4 0x1BF41362 EQ PUSH2 0x2AE JUMPI DUP1 PUSH4 0x238F9B7A EQ PUSH2 0x2C3 JUMPI DUP1 PUSH4 0x26C403ED EQ PUSH2 0x2E2 JUMPI DUP1 PUSH4 0x3FB47A3B EQ PUSH2 0x301 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x11EAC855 EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0x1458D9D8 EQ PUSH2 0x275 JUMPI DUP1 PUSH4 0x17700F01 EQ PUSH2 0x298 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x235 JUMPI CALLVALUE PUSH1 0x1 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1D3 SWAP2 SWAP1 PUSH2 0xB66 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x64 SWAP1 POP PUSH2 0x1E6 CALLVALUE PUSH1 0x46 PUSH2 0xB79 JUMP JUMPDEST PUSH2 0x1F0 SWAP2 SWAP1 PUSH2 0xB90 JUMP JUMPDEST PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x200 SWAP2 SWAP1 PUSH2 0xB66 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x64 SWAP1 POP PUSH2 0x213 CALLVALUE PUSH1 0x1E PUSH2 0xB79 JUMP JUMPDEST PUSH2 0x21D SWAP2 SWAP1 PUSH2 0xB90 JUMP JUMPDEST PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x22D SWAP2 SWAP1 PUSH2 0xB66 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x244 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xC SLOAD PUSH2 0x258 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x280 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28A PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x26C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AC PUSH2 0x59F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28A PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x11 SLOAD PUSH2 0x258 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2ED JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AC PUSH2 0x2FC CALLDATASIZE PUSH1 0x4 PUSH2 0xC4C JUMP JUMPDEST PUSH2 0x5DF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x320 PUSH2 0x31B CALLDATASIZE PUSH1 0x4 PUSH2 0xCA2 JUMP JUMPDEST PUSH2 0x651 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x26C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AC PUSH2 0x76C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AC PUSH2 0x35E CALLDATASIZE PUSH1 0x4 PUSH2 0xCD0 JUMP JUMPDEST PUSH2 0x7C1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH2 0x320 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x258 PUSH2 0x39C CALLDATASIZE PUSH1 0x4 PUSH2 0xCE7 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD DUP1 MLOAD PUSH1 0x12 DUP3 MSTORE SWAP3 DUP3 ADD SWAP2 SWAP1 SWAP4 ADD KECCAK256 SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28A PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3EB PUSH2 0x87D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26C SWAP2 SWAP1 PUSH2 0xD5C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x403 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xF SLOAD PUSH2 0x258 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x422 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AC PUSH2 0x431 CALLDATASIZE PUSH1 0x4 PUSH2 0xCD0 JUMP JUMPDEST PUSH2 0x909 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x441 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH2 0x258 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28A PUSH2 0x9A9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x473 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AC PUSH2 0x482 CALLDATASIZE PUSH1 0x4 PUSH2 0xD75 JUMP JUMPDEST PUSH2 0x9B9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x492 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AC PUSH2 0xA03 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28A PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xB SLOAD PUSH2 0x258 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28A PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4EF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xA SLOAD PUSH2 0x258 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28A PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x523 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28A PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x538 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xE SLOAD PUSH2 0x258 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x557 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xD SLOAD PUSH2 0x258 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x576 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x10 SLOAD PUSH2 0x258 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x595 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28A PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C8 SWAP1 PUSH2 0xD90 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x608 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C8 SWAP1 PUSH2 0xD90 JUMP JUMPDEST CALLER PUSH32 0x30FDCD4F0C28C5DBCBC3F59AA8E2260C7F58AC45BE2A2DCA652999AF89C33E0 DUP4 DUP4 PUSH0 PUSH2 0x635 PUSH2 0xA9E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x645 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xDB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP1 POP PUSH0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3850C7BD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xE0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x693 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6B7 SWAP2 SWAP1 PUSH2 0xDFB JUMP JUMPDEST POP POP POP POP POP POP SWAP1 POP PUSH0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1A686502 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6FC JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x720 SWAP2 SWAP1 PUSH2 0xE97 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP1 POP PUSH0 PUSH2 0x737 DUP8 DUP5 DUP5 PUSH2 0xB2B JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x64 PUSH2 0x747 DUP4 PUSH1 0x1 PUSH2 0xB79 JUMP JUMPDEST PUSH2 0x751 SWAP2 SWAP1 PUSH2 0xB90 JUMP JUMPDEST SWAP1 POP PUSH2 0x75D DUP2 DUP10 PUSH2 0xEBD JUMP JUMPDEST SWAP1 SWAP2 LT ISZERO SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x795 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C8 SWAP1 PUSH2 0xD90 JUMP JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 SELFBALANCE DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x7BE JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x7EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C8 SWAP1 PUSH2 0xD90 JUMP JUMPDEST PUSH0 PUSH2 0x7F9 DUP3 PUSH4 0x3B9ACA00 PUSH2 0xB79 JUMP JUMPDEST SWAP1 POP DUP1 SELFBALANCE LT ISZERO PUSH2 0x842 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742062616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5C8 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 DUP4 ISZERO PUSH2 0x8FC MUL SWAP2 DUP5 SWAP2 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x878 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH2 0x88A SWAP1 PUSH2 0xED0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8B6 SWAP1 PUSH2 0xED0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x901 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8D8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x901 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8E4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x932 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C8 SWAP1 PUSH2 0xD90 JUMP JUMPDEST CALLER PUSH32 0x30FDCD4F0C28C5DBCBC3F59AA8E2260C7F58AC45BE2A2DCA652999AF89C33E0 DUP3 PUSH0 PUSH2 0x95E PUSH2 0xA9E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP1 DUP3 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH18 0x151A5B59599C985B594818591A9D5CDD1959 PUSH1 0x72 SHL PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x9B3 PUSH2 0xA9E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x9E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C8 SWAP1 PUSH2 0xD90 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA2C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C8 SWAP1 PUSH2 0xD90 JUMP JUMPDEST CALLER PUSH32 0x30FDCD4F0C28C5DBCBC3F59AA8E2260C7F58AC45BE2A2DCA652999AF89C33E0 PUSH0 DUP1 PUSH2 0xA58 PUSH2 0xA9E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP1 DUP3 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH14 0x18DBDB9D995C9D081D1BC81413D3 PUSH1 0x92 SHL PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x3FABE5A3 PUSH1 0xE2 SHL DUP2 MSTORE SWAP1 MLOAD PUSH0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP4 SWAP2 DUP4 SWAP2 PUSH4 0xFEAF968C SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0xA0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAE9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB0D SWAP2 SWAP1 PUSH2 0xF21 JUMP JUMPDEST POP POP POP SWAP2 POP POP DUP1 PUSH5 0x2540BE400 PUSH2 0xB24 SWAP2 SWAP1 PUSH2 0xF6D JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 PUSH2 0xB40 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP7 PUSH2 0xB79 JUMP JUMPDEST PUSH2 0xB4A SWAP2 SWAP1 PUSH2 0xB90 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x9B3 JUMPI PUSH2 0x9B3 PUSH2 0xB52 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x9B3 JUMPI PUSH2 0x9B3 PUSH2 0xB52 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xBAA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xBD2 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xBED JUMPI PUSH2 0xBED PUSH2 0xBAF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xC15 JUMPI PUSH2 0xC15 PUSH2 0xBAF JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0xC2D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC5D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC73 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xC7F DUP6 DUP3 DUP7 ADD PUSH2 0xBC3 JUMP JUMPDEST SWAP6 PUSH1 0x20 SWAP5 SWAP1 SWAP5 ADD CALLDATALOAD SWAP5 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x7BE JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCB3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0xCC5 DUP2 PUSH2 0xC8E JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCE0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCF7 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD0D JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB4A DUP5 DUP3 DUP6 ADD PUSH2 0xBC3 JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xD3D JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xD21 JUMP JUMPDEST POP PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0xD6E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xD19 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD85 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xD6E DUP2 PUSH2 0xC8E JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xD SWAP1 DUP3 ADD MSTORE PUSH13 0x2737BA103A34329037BBB732B9 PUSH1 0x99 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x80 DUP2 MSTORE PUSH0 PUSH2 0xDC9 PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0xD19 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP6 SWAP1 SWAP6 MSTORE POP PUSH1 0x40 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP1 SWAP2 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0xDF6 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0xE11 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP8 MLOAD PUSH2 0xE1C DUP2 PUSH2 0xC8E JUMP JUMPDEST DUP1 SWAP8 POP POP PUSH1 0x20 DUP9 ADD MLOAD DUP1 PUSH1 0x2 SIGNEXTEND DUP2 EQ PUSH2 0xE33 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP6 POP PUSH2 0xE41 PUSH1 0x40 DUP10 ADD PUSH2 0xDE5 JUMP JUMPDEST SWAP5 POP PUSH2 0xE4F PUSH1 0x60 DUP10 ADD PUSH2 0xDE5 JUMP JUMPDEST SWAP4 POP PUSH2 0xE5D PUSH1 0x80 DUP10 ADD PUSH2 0xDE5 JUMP JUMPDEST SWAP3 POP PUSH1 0xA0 DUP9 ADD MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0xE72 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0xC0 DUP10 ADD MLOAD SWAP1 SWAP3 POP DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xE87 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEA7 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xD6E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x9B3 JUMPI PUSH2 0x9B3 PUSH2 0xB52 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xEE4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xF02 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xDF6 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xF35 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xF3E DUP7 PUSH2 0xF08 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP4 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x60 DUP7 ADD MLOAD SWAP2 POP PUSH2 0xF61 PUSH1 0x80 DUP8 ADD PUSH2 0xF08 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST DUP1 DUP3 MUL PUSH0 DUP3 SLT PUSH1 0x1 PUSH1 0xFF SHL DUP5 EQ AND ISZERO PUSH2 0xF88 JUMPI PUSH2 0xF88 PUSH2 0xB52 JUMP JUMPDEST DUP2 DUP2 SDIV DUP4 EQ DUP3 ISZERO OR PUSH2 0x9B3 JUMPI PUSH2 0x9B3 PUSH2 0xB52 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA5 SWAP12 0xAE PREVRANDAO SWAP3 0xBA 0x1E SWAP5 0xE6 DUP15 0xDF CALLDATACOPY 0x4D 0xBB JUMPDEST 0xF6 0x49 0xB2 CALLVALUE 0xED 0x2C PUSH29 0xAAE362AA4D69602DA4D164736F6C634300081400330000000000000000 ",
							"sourceMap": "1234:1:0:-:0;1199:36;;1275:2;1241:36;;1315:46;941:6687;1315:46;;941:6687;1315:46;;;-1:-1:-1;;;1315:46:0;;;;;;;;:::i;:::-;;2178:919;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2482:5;:18;;2490:10;-1:-1:-1;;;;;;2482:18:0;;;;;;;2510:8;:20;;;;-1:-1:-1;;;;;2510:20:0;;;;;;;;;;2540:9;:22;;;;;;;;;;2572:9;:22;;;;;;;;;;2604:15;:34;;;;;;;;;;;;;2648:16;:36;;;;;;;;;;2694:13;:30;;;;;;;;;;2734:22;:48;;;;;;;;;;2792:32;:68;;;;;;;;;;;;;;;2879:23;;-1:-1:-1;;;3932:24:23;;2879:10:0;;3981:1:23;3972:11;2879:23:0;;;;;;;;;;;;;:41;;-1:-1:-1;;;;;2879:41:0;;;;-1:-1:-1;;;;;;2879:41:0;;;;;;;;;-1:-1:-1;;2879:23:0;2930:22;;-1:-1:-1;;;;2930:22:0;;;-1:-1:-1;;2980:3:0;2962:15;:21;-1:-1:-1;;3023:2:0;3007:13;:18;-1:-1:-1;;3075:15:0;3061:11;:29;941:6687;;14:127:23;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:23;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;748:448;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:23;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:23;;;2580:26;2531:89;-1:-1:-1;;1335:1:23;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:23;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:23;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:23;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:23:o;2735:177::-;2814:13;;-1:-1:-1;;;;;2856:31:23;;2846:42;;2836:70;;2902:1;2899;2892:12;2836:70;2735:177;;;:::o;2917:808::-;3050:6;3058;3066;3074;3082;3090;3098;3106;3159:3;3147:9;3138:7;3134:23;3130:33;3127:53;;;3176:1;3173;3166:12;3127:53;3199:40;3229:9;3199:40;:::i;:::-;3189:50;;3258:49;3303:2;3292:9;3288:18;3258:49;:::i;:::-;3248:59;;3326:49;3371:2;3360:9;3356:18;3326:49;:::i;:::-;3316:59;;3394:49;3439:2;3428:9;3424:18;3394:49;:::i;:::-;3384:59;;3462:50;3507:3;3496:9;3492:19;3462:50;:::i;:::-;3452:60;;3531:50;3576:3;3565:9;3561:19;3531:50;:::i;:::-;3521:60;;3600:50;3645:3;3634:9;3630:19;3600:50;:::i;:::-;3590:60;;3669:50;3714:3;3703:9;3699:19;3669:50;:::i;:::-;3659:60;;2917:808;;;;;;;;;;;:::o;3730:259::-;941:6687:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_248": {
									"entryPoint": null,
									"id": 248,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@aaveLendingPoolAddressesProvider_76": {
									"entryPoint": null,
									"id": 76,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@adjustTimeframe_276": {
									"entryPoint": 2313,
									"id": 276,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@calculateAmountOut_401": {
									"entryPoint": 2859,
									"id": 401,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@checkLiquidity_380": {
									"entryPoint": 1617,
									"id": 380,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@checkPrice_289": {
									"entryPoint": 2473,
									"id": 289,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@convertAllToPOL_325": {
									"entryPoint": 2563,
									"id": 325,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@currentActivity_60": {
									"entryPoint": 2173,
									"id": 60,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@dexRouters_80": {
									"entryPoint": null,
									"id": 80,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@disableTrading_411": {
									"entryPoint": 1439,
									"id": 411,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@gasCostMultiplier_52": {
									"entryPoint": null,
									"id": 52,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getPrice_862": {
									"entryPoint": 2718,
									"id": 862,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@initialDeposit_41": {
									"entryPoint": null,
									"id": 41,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@initiateTrade_309": {
									"entryPoint": 1503,
									"id": 309,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@kill_463": {
									"entryPoint": 1900,
									"id": 463,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@lossThreshold_49": {
									"entryPoint": null,
									"id": 49,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@maticBalance_43": {
									"entryPoint": null,
									"id": 43,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@nextLogTime_57": {
									"entryPoint": null,
									"id": 57,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_37": {
									"entryPoint": null,
									"id": 37,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@polToken_62": {
									"entryPoint": null,
									"id": 62,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@priceFeedAddress_70": {
									"entryPoint": null,
									"id": 70,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@profitThreshold_47": {
									"entryPoint": null,
									"id": 47,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@quickSwapRouter_68": {
									"entryPoint": null,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setController_219": {
									"entryPoint": 2489,
									"id": 219,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stablecoinBalance_45": {
									"entryPoint": null,
									"id": 45,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tradingEnabled_39": {
									"entryPoint": null,
									"id": 39,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@trailingStopLoss_55": {
									"entryPoint": null,
									"id": 55,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@uniswapPositionManager_74": {
									"entryPoint": null,
									"id": 74,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@uniswapRouter_72": {
									"entryPoint": null,
									"id": 72,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@usdcToken_66": {
									"entryPoint": null,
									"id": 66,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@usdtToken_64": {
									"entryPoint": null,
									"id": 64,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdrawInGwei_444": {
									"entryPoint": 1985,
									"id": 444,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_string": {
									"entryPoint": 3011,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3445,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr": {
									"entryPoint": 3303,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_uint256": {
									"entryPoint": 3148,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint128_fromMemory": {
									"entryPoint": 3735,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint160t_int24t_uint16t_uint16t_uint16t_uint8t_bool_fromMemory": {
									"entryPoint": 3579,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 7
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3280,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_address": {
									"entryPoint": 3234,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory": {
									"entryPoint": 3873,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_uint16_fromMemory": {
									"entryPoint": 3557,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_uint80_fromMemory": {
									"entryPoint": 3848,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 3353,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3420,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr_t_uint256_t_rational_0_by_1_t_uint256__to_t_string_memory_ptr_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3511,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3472,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7638e8c8903c5fa61ebf97e2b2f70e2c3ee679b62e1042ef4e4240a60c0694d0_t_uint256_t_rational_0_by_1_t_uint256__to_t_string_memory_ptr_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f548031c271626835f64bb759a80cb1c7ee3cbb01af72f7702986b2084fa7f35_t_rational_0_by_1_t_rational_0_by_1_t_uint256__to_t_string_memory_ptr_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2918,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 2960,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_int256": {
									"entryPoint": 3949,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2937,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 3773,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 3792,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2898,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 2991,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 3214,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:9556:23",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:23",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:23",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:23",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:23",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:23",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:23",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:23",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:23",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:23"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "194:77:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "204:16:23",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "215:1:23"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "218:1:23"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "211:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "211:9:23"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "204:3:23"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "243:22:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "245:16:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "245:18:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "245:18:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "235:1:23"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "238:3:23"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "232:2:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:10:23"
															},
															"nodeType": "YulIf",
															"src": "229:36:23"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "177:1:23",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "180:1:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "186:3:23",
														"type": ""
													}
												],
												"src": "146:125:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "328:116:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "338:20:23",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "353:1:23"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "356:1:23"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "349:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "349:9:23"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "338:7:23"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "416:22:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "418:16:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "418:18:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "418:18:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "387:1:23"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "380:6:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "380:9:23"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "394:1:23"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "401:7:23"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "410:1:23"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "397:3:23"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "397:15:23"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "391:2:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "391:22:23"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "377:2:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "377:37:23"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "370:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "370:45:23"
															},
															"nodeType": "YulIf",
															"src": "367:71:23"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "307:1:23",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "310:1:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "316:7:23",
														"type": ""
													}
												],
												"src": "276:168:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "495:171:23",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "526:111:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "547:1:23",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "554:3:23",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "559:10:23",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "550:3:23"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "550:20:23"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "540:6:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "540:31:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "540:31:23"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "591:1:23",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "594:4:23",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "584:6:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "584:15:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "584:15:23"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "619:1:23",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "622:4:23",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "612:6:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "612:15:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "612:15:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "515:1:23"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "508:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "508:9:23"
															},
															"nodeType": "YulIf",
															"src": "505:132:23"
														},
														{
															"nodeType": "YulAssignment",
															"src": "646:14:23",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "655:1:23"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "658:1:23"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "651:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "651:9:23"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "646:1:23"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "480:1:23",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "483:1:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "489:1:23",
														"type": ""
													}
												],
												"src": "449:217:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "772:102:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "782:26:23",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "794:9:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "805:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "790:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "790:18:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "782:4:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "824:9:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "839:6:23"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "855:3:23",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "860:1:23",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "851:3:23"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "851:11:23"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "864:1:23",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "847:3:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "847:19:23"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "835:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "835:32:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "817:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "817:51:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "817:51:23"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "741:9:23",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "752:6:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "763:4:23",
														"type": ""
													}
												],
												"src": "671:203:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "980:76:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "990:26:23",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1002:9:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1013:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "998:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "998:18:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "990:4:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1032:9:23"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1043:6:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1025:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "1025:25:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1025:25:23"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "949:9:23",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "960:6:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "971:4:23",
														"type": ""
													}
												],
												"src": "879:177:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1093:95:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1110:1:23",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1117:3:23",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1122:10:23",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1103:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "1103:31:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1103:31:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1150:1:23",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1153:4:23",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1143:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "1143:15:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1143:15:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1174:1:23",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1177:4:23",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1167:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "1167:15:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1167:15:23"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1061:127:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1246:666:23",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1295:16:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1304:1:23",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1307:1:23",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1297:6:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1297:12:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1297:12:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1274:6:23"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1282:4:23",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1270:3:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1270:17:23"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "1289:3:23"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1266:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1266:27:23"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1259:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "1259:35:23"
															},
															"nodeType": "YulIf",
															"src": "1256:55:23"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1320:30:23",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1343:6:23"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1330:12:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "1330:20:23"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1324:2:23",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1359:28:23",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1369:18:23",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "1363:2:23",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1410:22:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1412:16:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1412:18:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1412:18:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1402:2:23"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1406:2:23"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1399:2:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "1399:10:23"
															},
															"nodeType": "YulIf",
															"src": "1396:36:23"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1441:17:23",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1455:2:23",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "1451:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "1451:7:23"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "1445:2:23",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1467:23:23",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1487:2:23",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1481:5:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "1481:9:23"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "1471:6:23",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1499:71:23",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1521:6:23"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "1545:2:23"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1549:4:23",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "1541:3:23"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1541:13:23"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "1556:2:23"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "1537:3:23"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1537:22:23"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1561:2:23",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1533:3:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1533:31:23"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "1566:2:23"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1529:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1529:40:23"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1517:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "1517:53:23"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "1503:10:23",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1629:22:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1631:16:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1631:18:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1631:18:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1588:10:23"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "1600:2:23"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1585:2:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1585:18:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1608:10:23"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1620:6:23"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1605:2:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1605:22:23"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1582:2:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "1582:46:23"
															},
															"nodeType": "YulIf",
															"src": "1579:72:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1667:2:23",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1671:10:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1660:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "1660:22:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1660:22:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1698:6:23"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1706:2:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1691:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "1691:18:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1691:18:23"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1757:16:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1766:1:23",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1769:1:23",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1759:6:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1759:12:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1759:12:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1732:6:23"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "1740:2:23"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1728:3:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1728:15:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1745:4:23",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1724:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1724:26:23"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1752:3:23"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1721:2:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "1721:35:23"
															},
															"nodeType": "YulIf",
															"src": "1718:55:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1799:6:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1807:4:23",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1795:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1795:17:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1818:6:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1826:4:23",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1814:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1814:17:23"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1833:2:23"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "1782:12:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "1782:54:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1782:54:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "1860:6:23"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "1868:2:23"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1856:3:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1856:15:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1873:4:23",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1852:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1852:26:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1880:1:23",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1845:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "1845:37:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1845:37:23"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1891:15:23",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1900:6:23"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1891:5:23"
																}
															]
														}
													]
												},
												"name": "abi_decode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1220:6:23",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1228:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1236:5:23",
														"type": ""
													}
												],
												"src": "1193:719:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2014:293:23",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2060:16:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2069:1:23",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2072:1:23",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2062:6:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2062:12:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2062:12:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2035:7:23"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2044:9:23"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2031:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2031:23:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2056:2:23",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2027:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "2027:32:23"
															},
															"nodeType": "YulIf",
															"src": "2024:52:23"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2085:37:23",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2112:9:23"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2099:12:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "2099:23:23"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "2089:6:23",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2165:16:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2174:1:23",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2177:1:23",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2167:6:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2167:12:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2167:12:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2137:6:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2145:18:23",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2134:2:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "2134:30:23"
															},
															"nodeType": "YulIf",
															"src": "2131:50:23"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2190:60:23",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2222:9:23"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2233:6:23"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2218:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2218:22:23"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2242:7:23"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nodeType": "YulIdentifier",
																	"src": "2200:17:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "2200:50:23"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2190:6:23"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2259:42:23",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2286:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2297:2:23",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2282:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2282:18:23"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2269:12:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "2269:32:23"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2259:6:23"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1972:9:23",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1983:7:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1995:6:23",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2003:6:23",
														"type": ""
													}
												],
												"src": "1917:390:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2357:86:23",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2421:16:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2430:1:23",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2433:1:23",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2423:6:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2423:12:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2423:12:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2380:5:23"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2391:5:23"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2406:3:23",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2411:1:23",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "2402:3:23"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2402:11:23"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2415:1:23",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "2398:3:23"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2398:19:23"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "2387:3:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2387:31:23"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2377:2:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2377:42:23"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2370:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "2370:50:23"
															},
															"nodeType": "YulIf",
															"src": "2367:70:23"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2346:5:23",
														"type": ""
													}
												],
												"src": "2312:131:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2535:228:23",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2581:16:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2590:1:23",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2593:1:23",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2583:6:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2583:12:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2583:12:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2556:7:23"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2565:9:23"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2552:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2552:23:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2577:2:23",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2548:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "2548:32:23"
															},
															"nodeType": "YulIf",
															"src": "2545:52:23"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2606:33:23",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2629:9:23"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2616:12:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "2616:23:23"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2606:6:23"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2648:45:23",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2678:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2689:2:23",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2674:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2674:18:23"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2661:12:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "2661:32:23"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2652:5:23",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2727:5:23"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "2702:24:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "2702:31:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2702:31:23"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2742:15:23",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2752:5:23"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2742:6:23"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2493:9:23",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2504:7:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2516:6:23",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2524:6:23",
														"type": ""
													}
												],
												"src": "2448:315:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2863:92:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2873:26:23",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2885:9:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2896:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2881:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "2881:18:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2873:4:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2915:9:23"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "2940:6:23"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2933:6:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2933:14:23"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2926:6:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2926:22:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2908:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "2908:41:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2908:41:23"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2832:9:23",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2843:6:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2854:4:23",
														"type": ""
													}
												],
												"src": "2768:187:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3030:110:23",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3076:16:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3085:1:23",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3088:1:23",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3078:6:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3078:12:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3078:12:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3051:7:23"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3060:9:23"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3047:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3047:23:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3072:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3043:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "3043:32:23"
															},
															"nodeType": "YulIf",
															"src": "3040:52:23"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3101:33:23",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3124:9:23"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3111:12:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "3111:23:23"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3101:6:23"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2996:9:23",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3007:7:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3019:6:23",
														"type": ""
													}
												],
												"src": "2960:180:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3225:242:23",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3271:16:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3280:1:23",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3283:1:23",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3273:6:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3273:12:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3273:12:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3246:7:23"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3255:9:23"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3242:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3242:23:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3267:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3238:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "3238:32:23"
															},
															"nodeType": "YulIf",
															"src": "3235:52:23"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3296:37:23",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3323:9:23"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3310:12:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "3310:23:23"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "3300:6:23",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3376:16:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3385:1:23",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3388:1:23",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3378:6:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3378:12:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3378:12:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3348:6:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3356:18:23",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3345:2:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "3345:30:23"
															},
															"nodeType": "YulIf",
															"src": "3342:50:23"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3401:60:23",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3433:9:23"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3444:6:23"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3429:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3429:22:23"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3453:7:23"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nodeType": "YulIdentifier",
																	"src": "3411:17:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "3411:50:23"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3401:6:23"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3191:9:23",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3202:7:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3214:6:23",
														"type": ""
													}
												],
												"src": "3145:322:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3522:373:23",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3532:26:23",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3552:5:23"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3546:5:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "3546:12:23"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3536:6:23",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3574:3:23"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3579:6:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3567:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "3567:19:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3567:19:23"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3595:10:23",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3604:1:23",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "3599:1:23",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3666:110:23",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "3680:14:23",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "3690:4:23",
																			"type": "",
																			"value": "0x20"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "3684:2:23",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "pos",
																									"nodeType": "YulIdentifier",
																									"src": "3722:3:23"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "3727:1:23"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3718:3:23"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3718:11:23"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "3731:2:23"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3714:3:23"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3714:20:23"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "3750:5:23"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "3757:1:23"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "3746:3:23"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "3746:13:23"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "3761:2:23"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3742:3:23"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3742:22:23"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "3736:5:23"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3736:29:23"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3707:6:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3707:59:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3707:59:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "3625:1:23"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3628:6:23"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3622:2:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "3622:13:23"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3636:21:23",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3638:17:23",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "3647:1:23"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3650:4:23",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3643:3:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3643:12:23"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "3638:1:23"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3618:3:23",
																"statements": []
															},
															"src": "3614:162:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "3800:3:23"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "3805:6:23"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3796:3:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3796:16:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3814:4:23",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3792:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3792:27:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3821:1:23",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3785:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "3785:38:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3785:38:23"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3832:57:23",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "3847:3:23"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "3860:6:23"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3868:2:23",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "3856:3:23"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3856:15:23"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3877:2:23",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "3873:3:23"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3873:7:23"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "3852:3:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3852:29:23"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3843:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3843:39:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3884:4:23",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3839:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "3839:50:23"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3832:3:23"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3499:5:23",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3506:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3514:3:23",
														"type": ""
													}
												],
												"src": "3472:423:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4021:99:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4038:9:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4049:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4031:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "4031:21:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4031:21:23"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4061:53:23",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4087:6:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4099:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4110:2:23",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4095:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4095:18:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "4069:17:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "4069:45:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4061:4:23"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3990:9:23",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4001:6:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4012:4:23",
														"type": ""
													}
												],
												"src": "3900:220:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4195:177:23",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4241:16:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4250:1:23",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4253:1:23",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4243:6:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4243:12:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4243:12:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4216:7:23"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4225:9:23"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4212:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4212:23:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4237:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4208:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "4208:32:23"
															},
															"nodeType": "YulIf",
															"src": "4205:52:23"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4266:36:23",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4292:9:23"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4279:12:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "4279:23:23"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "4270:5:23",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4336:5:23"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "4311:24:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "4311:31:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4311:31:23"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4351:15:23",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4361:5:23"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4351:6:23"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4161:9:23",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4172:7:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4184:6:23",
														"type": ""
													}
												],
												"src": "4125:247:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4551:163:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4568:9:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4579:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4561:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "4561:21:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4561:21:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4602:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4613:2:23",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4598:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4598:18:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4618:2:23",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4591:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "4591:30:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4591:30:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4641:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4652:2:23",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4637:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4637:18:23"
																	},
																	{
																		"hexValue": "4e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4657:15:23",
																		"type": "",
																		"value": "Not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4630:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "4630:43:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4630:43:23"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4682:26:23",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4694:9:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4705:2:23",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4690:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "4690:18:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4682:4:23"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4528:9:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4542:4:23",
														"type": ""
													}
												],
												"src": "4377:337:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4932:230:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4949:9:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4960:3:23",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4942:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "4942:22:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4942:22:23"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4973:54:23",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4999:6:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5011:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5022:3:23",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5007:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5007:19:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "4981:17:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "4981:46:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4973:4:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5047:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5058:2:23",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5043:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5043:18:23"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5063:6:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5036:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "5036:34:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5036:34:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5090:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5101:2:23",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5086:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5086:18:23"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "5106:6:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5079:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "5079:34:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5079:34:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5133:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5144:2:23",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5129:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5129:18:23"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "5149:6:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5122:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "5122:34:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5122:34:23"
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr_t_uint256_t_rational_0_by_1_t_uint256__to_t_string_memory_ptr_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4877:9:23",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4888:6:23",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4896:6:23",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4904:6:23",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4912:6:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4923:4:23",
														"type": ""
													}
												],
												"src": "4719:443:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5226:104:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5236:22:23",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5251:6:23"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5245:5:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "5245:13:23"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "5236:5:23"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5308:16:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5317:1:23",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5320:1:23",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5310:6:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5310:12:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5310:12:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5280:5:23"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5291:5:23"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5298:6:23",
																						"type": "",
																						"value": "0xffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "5287:3:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5287:18:23"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5277:2:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5277:29:23"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5270:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "5270:37:23"
															},
															"nodeType": "YulIf",
															"src": "5267:57:23"
														}
													]
												},
												"name": "abi_decode_uint16_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5205:6:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5216:5:23",
														"type": ""
													}
												],
												"src": "5167:163:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5508:813:23",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5555:16:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5564:1:23",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5567:1:23",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5557:6:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5557:12:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5557:12:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5529:7:23"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5538:9:23"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5525:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5525:23:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5550:3:23",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5521:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "5521:33:23"
															},
															"nodeType": "YulIf",
															"src": "5518:53:23"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5580:29:23",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5599:9:23"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5593:5:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "5593:16:23"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "5584:5:23",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5643:5:23"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "5618:24:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "5618:31:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5618:31:23"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5658:15:23",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5668:5:23"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5658:6:23"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5682:40:23",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5707:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5718:2:23",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5703:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5703:18:23"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5697:5:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "5697:25:23"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "5686:7:23",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5778:16:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5787:1:23",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5790:1:23",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5780:6:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5780:12:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5780:12:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value_1",
																				"nodeType": "YulIdentifier",
																				"src": "5744:7:23"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5764:1:23",
																						"type": "",
																						"value": "2"
																					},
																					{
																						"name": "value_1",
																						"nodeType": "YulIdentifier",
																						"src": "5767:7:23"
																					}
																				],
																				"functionName": {
																					"name": "signextend",
																					"nodeType": "YulIdentifier",
																					"src": "5753:10:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5753:22:23"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5741:2:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5741:35:23"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5734:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "5734:43:23"
															},
															"nodeType": "YulIf",
															"src": "5731:63:23"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5803:17:23",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "5813:7:23"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "5803:6:23"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5829:58:23",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5872:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5883:2:23",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5868:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5868:18:23"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint16_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "5839:28:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "5839:48:23"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "5829:6:23"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5896:58:23",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5939:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5950:2:23",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5935:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5935:18:23"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint16_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "5906:28:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "5906:48:23"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "5896:6:23"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5963:59:23",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6006:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6017:3:23",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6002:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6002:19:23"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint16_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "5973:28:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "5973:49:23"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "5963:6:23"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6031:41:23",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6056:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6067:3:23",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6052:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6052:19:23"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6046:5:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "6046:26:23"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nodeType": "YulTypedName",
																	"src": "6035:7:23",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6124:16:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6133:1:23",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6136:1:23",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6126:6:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6126:12:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6126:12:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value_2",
																				"nodeType": "YulIdentifier",
																				"src": "6094:7:23"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value_2",
																						"nodeType": "YulIdentifier",
																						"src": "6107:7:23"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6116:4:23",
																						"type": "",
																						"value": "0xff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "6103:3:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6103:18:23"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6091:2:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6091:31:23"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6084:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "6084:39:23"
															},
															"nodeType": "YulIf",
															"src": "6081:59:23"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6149:17:23",
															"value": {
																"name": "value_2",
																"nodeType": "YulIdentifier",
																"src": "6159:7:23"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nodeType": "YulIdentifier",
																	"src": "6149:6:23"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6175:41:23",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6200:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6211:3:23",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6196:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6196:19:23"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6190:5:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "6190:26:23"
															},
															"variables": [
																{
																	"name": "value_3",
																	"nodeType": "YulTypedName",
																	"src": "6179:7:23",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6273:16:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6282:1:23",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6285:1:23",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6275:6:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6275:12:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6275:12:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value_3",
																				"nodeType": "YulIdentifier",
																				"src": "6238:7:23"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value_3",
																								"nodeType": "YulIdentifier",
																								"src": "6261:7:23"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "6254:6:23"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6254:15:23"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "6247:6:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6247:23:23"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6235:2:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6235:36:23"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6228:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "6228:44:23"
															},
															"nodeType": "YulIf",
															"src": "6225:64:23"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6298:17:23",
															"value": {
																"name": "value_3",
																"nodeType": "YulIdentifier",
																"src": "6308:7:23"
															},
															"variableNames": [
																{
																	"name": "value6",
																	"nodeType": "YulIdentifier",
																	"src": "6298:6:23"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint160t_int24t_uint16t_uint16t_uint16t_uint8t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5426:9:23",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5437:7:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5449:6:23",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5457:6:23",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5465:6:23",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "5473:6:23",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "5481:6:23",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "5489:6:23",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "5497:6:23",
														"type": ""
													}
												],
												"src": "5335:986:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6407:224:23",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6453:16:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6462:1:23",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6465:1:23",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6455:6:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6455:12:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6455:12:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6428:7:23"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6437:9:23"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6424:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6424:23:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6449:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6420:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "6420:32:23"
															},
															"nodeType": "YulIf",
															"src": "6417:52:23"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6478:29:23",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6497:9:23"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6491:5:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "6491:16:23"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "6482:5:23",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6585:16:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6594:1:23",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6597:1:23",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6587:6:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6587:12:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6587:12:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6529:5:23"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6540:5:23"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6547:34:23",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "6536:3:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6536:46:23"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6526:2:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6526:57:23"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6519:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "6519:65:23"
															},
															"nodeType": "YulIf",
															"src": "6516:85:23"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6610:15:23",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "6620:5:23"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6610:6:23"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint128_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6373:9:23",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6384:7:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6396:6:23",
														"type": ""
													}
												],
												"src": "6326:305:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6685:79:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6695:17:23",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6707:1:23"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6710:1:23"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "6703:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "6703:9:23"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "6695:4:23"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6736:22:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6738:16:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6738:18:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6738:18:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "6727:4:23"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6733:1:23"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6724:2:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "6724:11:23"
															},
															"nodeType": "YulIf",
															"src": "6721:37:23"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6667:1:23",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6670:1:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "6676:4:23",
														"type": ""
													}
												],
												"src": "6636:128:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6943:170:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6960:9:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6971:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6953:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "6953:21:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6953:21:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6994:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7005:2:23",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6990:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6990:18:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7010:2:23",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6983:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "6983:30:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6983:30:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7033:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7044:2:23",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7029:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7029:18:23"
																	},
																	{
																		"hexValue": "496e73756666696369656e742062616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7049:22:23",
																		"type": "",
																		"value": "Insufficient balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7022:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "7022:50:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7022:50:23"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7081:26:23",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7093:9:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7104:2:23",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7089:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "7089:18:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7081:4:23"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6920:9:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6934:4:23",
														"type": ""
													}
												],
												"src": "6769:344:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7173:325:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7183:22:23",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7197:1:23",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7200:4:23"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7193:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "7193:12:23"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "7183:6:23"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7214:38:23",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7244:4:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7250:1:23",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "7240:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "7240:12:23"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "7218:18:23",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7291:31:23",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "7293:27:23",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "7307:6:23"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7315:4:23",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "7303:3:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7303:17:23"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7293:6:23"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "7271:18:23"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7264:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "7264:26:23"
															},
															"nodeType": "YulIf",
															"src": "7261:61:23"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7381:111:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7402:1:23",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7409:3:23",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7414:10:23",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "7405:3:23"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7405:20:23"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7395:6:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7395:31:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7395:31:23"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7446:1:23",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7449:4:23",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7439:6:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7439:15:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7439:15:23"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7474:1:23",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7477:4:23",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7467:6:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7467:15:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7467:15:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "7337:18:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7360:6:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7368:2:23",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "7357:2:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7357:14:23"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "7334:2:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "7334:38:23"
															},
															"nodeType": "YulIf",
															"src": "7331:161:23"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "7153:4:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7162:6:23",
														"type": ""
													}
												],
												"src": "7118:380:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7769:303:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7786:9:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7797:3:23",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7779:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "7779:22:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7779:22:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7821:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7832:3:23",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7817:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7817:19:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7838:2:23",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7810:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "7810:31:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7810:31:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7861:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7872:3:23",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7857:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7857:19:23"
																	},
																	{
																		"hexValue": "54696d656672616d652061646a7573746564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7878:20:23",
																		"type": "",
																		"value": "Timeframe adjusted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7850:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "7850:49:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7850:49:23"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7908:27:23",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7920:9:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7931:3:23",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7916:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "7916:19:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7908:4:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7955:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7966:4:23",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7951:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7951:20:23"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7973:6:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7944:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "7944:36:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7944:36:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8000:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8011:2:23",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7996:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7996:18:23"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8016:6:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7989:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "7989:34:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7989:34:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8043:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8054:2:23",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8039:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8039:18:23"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "8059:6:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8032:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "8032:34:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8032:34:23"
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7638e8c8903c5fa61ebf97e2b2f70e2c3ee679b62e1042ef4e4240a60c0694d0_t_uint256_t_rational_0_by_1_t_uint256__to_t_string_memory_ptr_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7722:9:23",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7733:6:23",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7741:6:23",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7749:6:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7760:4:23",
														"type": ""
													}
												],
												"src": "7503:569:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8351:299:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8368:9:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8379:3:23",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8361:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "8361:22:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8361:22:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8403:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8414:3:23",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8399:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8399:19:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8420:2:23",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8392:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "8392:31:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8392:31:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8443:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8454:3:23",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8439:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8439:19:23"
																	},
																	{
																		"hexValue": "636f6e7665727420746f20504f4c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8460:16:23",
																		"type": "",
																		"value": "convert to POL"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8432:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "8432:45:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8432:45:23"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8486:27:23",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8498:9:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8509:3:23",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8494:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "8494:19:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8486:4:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8533:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8544:4:23",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8529:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8529:20:23"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8551:6:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8522:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "8522:36:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8522:36:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8578:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8589:2:23",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8574:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8574:18:23"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8594:6:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8567:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "8567:34:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8567:34:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8621:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8632:2:23",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8617:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8617:18:23"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "8637:6:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8610:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "8610:34:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8610:34:23"
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f548031c271626835f64bb759a80cb1c7ee3cbb01af72f7702986b2084fa7f35_t_rational_0_by_1_t_rational_0_by_1_t_uint256__to_t_string_memory_ptr_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8304:9:23",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8315:6:23",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8323:6:23",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8331:6:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8342:4:23",
														"type": ""
													}
												],
												"src": "8077:573:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8714:120:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8724:22:23",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8739:6:23"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8733:5:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "8733:13:23"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "8724:5:23"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8812:16:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8821:1:23",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8824:1:23",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8814:6:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8814:12:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8814:12:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8768:5:23"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "8779:5:23"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8786:22:23",
																						"type": "",
																						"value": "0xffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "8775:3:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8775:34:23"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "8765:2:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8765:45:23"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8758:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "8758:53:23"
															},
															"nodeType": "YulIf",
															"src": "8755:73:23"
														}
													]
												},
												"name": "abi_decode_uint80_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "8693:6:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8704:5:23",
														"type": ""
													}
												],
												"src": "8655:179:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8985:327:23",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9032:16:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9041:1:23",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9044:1:23",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9034:6:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9034:12:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9034:12:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9006:7:23"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9015:9:23"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9002:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9002:23:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9027:3:23",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8998:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "8998:33:23"
															},
															"nodeType": "YulIf",
															"src": "8995:53:23"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9057:49:23",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9096:9:23"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint80_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "9067:28:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "9067:39:23"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "9057:6:23"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9115:35:23",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9135:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9146:2:23",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9131:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9131:18:23"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9125:5:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "9125:25:23"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "9115:6:23"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9159:35:23",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9179:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9190:2:23",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9175:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9175:18:23"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9169:5:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "9169:25:23"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "9159:6:23"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9203:35:23",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9223:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9234:2:23",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9219:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9219:18:23"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9213:5:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "9213:25:23"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "9203:6:23"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9247:59:23",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9290:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9301:3:23",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9286:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9286:19:23"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint80_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "9257:28:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "9257:49:23"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "9247:6:23"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8919:9:23",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8930:7:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8942:6:23",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8950:6:23",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8958:6:23",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "8966:6:23",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "8974:6:23",
														"type": ""
													}
												],
												"src": "8839:473:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9368:186:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9378:20:23",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9393:1:23"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9396:1:23"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "9389:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "9389:9:23"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "9378:7:23"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9445:22:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9447:16:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9447:18:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9447:18:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "9418:1:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9421:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "9414:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9414:9:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "9428:1:23"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9435:3:23",
																						"type": "",
																						"value": "255"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9440:1:23",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "9431:3:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9431:11:23"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "9425:2:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9425:18:23"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "9410:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "9410:34:23"
															},
															"nodeType": "YulIf",
															"src": "9407:60:23"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9526:22:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9528:16:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9528:18:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9528:18:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "9496:1:23"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "9489:6:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9489:9:23"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "9503:1:23"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "9511:7:23"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "9520:1:23"
																							}
																						],
																						"functionName": {
																							"name": "sdiv",
																							"nodeType": "YulIdentifier",
																							"src": "9506:4:23"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9506:16:23"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "9500:2:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9500:23:23"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "9486:2:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9486:38:23"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9479:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "9479:46:23"
															},
															"nodeType": "YulIf",
															"src": "9476:72:23"
														}
													]
												},
												"name": "checked_mul_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9347:1:23",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9350:1:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "9356:7:23",
														"type": ""
													}
												],
												"src": "9317:237:23"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 13)\n        mstore(add(headStart, 64), \"Not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_uint256_t_rational_0_by_1_t_uint256__to_t_string_memory_ptr_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 128)\n        tail := abi_encode_string(value0, add(headStart, 128))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_decode_uint16_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint160t_int24t_uint16t_uint16t_uint16t_uint8t_bool_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := mload(add(headStart, 32))\n        if iszero(eq(value_1, signextend(2, value_1))) { revert(0, 0) }\n        value1 := value_1\n        value2 := abi_decode_uint16_fromMemory(add(headStart, 64))\n        value3 := abi_decode_uint16_fromMemory(add(headStart, 96))\n        value4 := abi_decode_uint16_fromMemory(add(headStart, 128))\n        let value_2 := mload(add(headStart, 160))\n        if iszero(eq(value_2, and(value_2, 0xff))) { revert(0, 0) }\n        value5 := value_2\n        let value_3 := mload(add(headStart, 192))\n        if iszero(eq(value_3, iszero(iszero(value_3)))) { revert(0, 0) }\n        value6 := value_3\n    }\n    function abi_decode_tuple_t_uint128_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n        value0 := value\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Insufficient balance\")\n        tail := add(headStart, 96)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_7638e8c8903c5fa61ebf97e2b2f70e2c3ee679b62e1042ef4e4240a60c0694d0_t_uint256_t_rational_0_by_1_t_uint256__to_t_string_memory_ptr_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 128)\n        mstore(add(headStart, 128), 18)\n        mstore(add(headStart, 160), \"Timeframe adjusted\")\n        tail := add(headStart, 192)\n        mstore(add(headStart, 0x20), value0)\n        mstore(add(headStart, 64), value1)\n        mstore(add(headStart, 96), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_f548031c271626835f64bb759a80cb1c7ee3cbb01af72f7702986b2084fa7f35_t_rational_0_by_1_t_rational_0_by_1_t_uint256__to_t_string_memory_ptr_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 128)\n        mstore(add(headStart, 128), 14)\n        mstore(add(headStart, 160), \"convert to POL\")\n        tail := add(headStart, 192)\n        mstore(add(headStart, 0x20), value0)\n        mstore(add(headStart, 64), value1)\n        mstore(add(headStart, 96), value2)\n    }\n    function abi_decode_uint80_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_uint80_fromMemory(headStart)\n        value1 := mload(add(headStart, 32))\n        value2 := mload(add(headStart, 64))\n        value3 := mload(add(headStart, 96))\n        value4 := abi_decode_uint80_fromMemory(add(headStart, 128))\n    }\n    function checked_mul_t_int256(x, y) -> product\n    {\n        product := mul(x, y)\n        if and(slt(x, 0), eq(y, shl(255, 1))) { panic_error_0x11() }\n        if iszero(or(iszero(x), eq(y, sdiv(product, x)))) { panic_error_0x11() }\n    }\n}",
									"id": 23,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1BD JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x869665E9 GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0xB3CE56A2 GT PUSH2 0x92 JUMPI DUP1 PUSH4 0xE0ABCA0B GT PUSH2 0x62 JUMPI DUP1 PUSH4 0xE0ABCA0B EQ PUSH2 0x52D JUMPI DUP1 PUSH4 0xE189EB42 EQ PUSH2 0x54C JUMPI DUP1 PUSH4 0xE5047B30 EQ PUSH2 0x56B JUMPI DUP1 PUSH4 0xF974821A EQ PUSH2 0x58A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB3CE56A2 EQ PUSH2 0x4CF JUMPI DUP1 PUSH4 0xB6658D07 EQ PUSH2 0x4E4 JUMPI DUP1 PUSH4 0xC0FC247F EQ PUSH2 0x503 JUMPI DUP1 PUSH4 0xE037F889 EQ PUSH2 0x518 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x92EEFE9B GT PUSH2 0xCD JUMPI DUP1 PUSH4 0x92EEFE9B EQ PUSH2 0x468 JUMPI DUP1 PUSH4 0x9D8EF1E1 EQ PUSH2 0x487 JUMPI DUP1 PUSH4 0xA30FB905 EQ PUSH2 0x49B JUMPI DUP1 PUSH4 0xA98AD46C EQ PUSH2 0x4B0 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x869665E9 EQ PUSH2 0x417 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x436 JUMPI DUP1 PUSH4 0x8FC3047D EQ PUSH2 0x454 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x41C0E1B5 GT PUSH2 0x15D JUMPI DUP1 PUSH4 0x5E7FFA67 GT PUSH2 0x138 JUMPI DUP1 PUSH4 0x5E7FFA67 EQ PUSH2 0x382 JUMPI DUP1 PUSH4 0x64AABB9E EQ PUSH2 0x3C2 JUMPI DUP1 PUSH4 0x6D546CDD EQ PUSH2 0x3D7 JUMPI DUP1 PUSH4 0x735DE9F7 EQ PUSH2 0x3F8 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x41C0E1B5 EQ PUSH2 0x330 JUMPI DUP1 PUSH4 0x457F3CB0 EQ PUSH2 0x344 JUMPI DUP1 PUSH4 0x4ADA218B EQ PUSH2 0x363 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1BF41362 GT PUSH2 0x198 JUMPI DUP1 PUSH4 0x1BF41362 EQ PUSH2 0x2AE JUMPI DUP1 PUSH4 0x238F9B7A EQ PUSH2 0x2C3 JUMPI DUP1 PUSH4 0x26C403ED EQ PUSH2 0x2E2 JUMPI DUP1 PUSH4 0x3FB47A3B EQ PUSH2 0x301 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x11EAC855 EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0x1458D9D8 EQ PUSH2 0x275 JUMPI DUP1 PUSH4 0x17700F01 EQ PUSH2 0x298 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x235 JUMPI CALLVALUE PUSH1 0x1 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1D3 SWAP2 SWAP1 PUSH2 0xB66 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x64 SWAP1 POP PUSH2 0x1E6 CALLVALUE PUSH1 0x46 PUSH2 0xB79 JUMP JUMPDEST PUSH2 0x1F0 SWAP2 SWAP1 PUSH2 0xB90 JUMP JUMPDEST PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x200 SWAP2 SWAP1 PUSH2 0xB66 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x64 SWAP1 POP PUSH2 0x213 CALLVALUE PUSH1 0x1E PUSH2 0xB79 JUMP JUMPDEST PUSH2 0x21D SWAP2 SWAP1 PUSH2 0xB90 JUMP JUMPDEST PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x22D SWAP2 SWAP1 PUSH2 0xB66 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x244 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xC SLOAD PUSH2 0x258 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x280 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28A PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x26C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AC PUSH2 0x59F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28A PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x11 SLOAD PUSH2 0x258 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2ED JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AC PUSH2 0x2FC CALLDATASIZE PUSH1 0x4 PUSH2 0xC4C JUMP JUMPDEST PUSH2 0x5DF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x320 PUSH2 0x31B CALLDATASIZE PUSH1 0x4 PUSH2 0xCA2 JUMP JUMPDEST PUSH2 0x651 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x26C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AC PUSH2 0x76C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AC PUSH2 0x35E CALLDATASIZE PUSH1 0x4 PUSH2 0xCD0 JUMP JUMPDEST PUSH2 0x7C1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH2 0x320 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x258 PUSH2 0x39C CALLDATASIZE PUSH1 0x4 PUSH2 0xCE7 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD DUP1 MLOAD PUSH1 0x12 DUP3 MSTORE SWAP3 DUP3 ADD SWAP2 SWAP1 SWAP4 ADD KECCAK256 SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28A PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3EB PUSH2 0x87D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26C SWAP2 SWAP1 PUSH2 0xD5C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x403 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xF SLOAD PUSH2 0x258 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x422 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AC PUSH2 0x431 CALLDATASIZE PUSH1 0x4 PUSH2 0xCD0 JUMP JUMPDEST PUSH2 0x909 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x441 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH2 0x258 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28A PUSH2 0x9A9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x473 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AC PUSH2 0x482 CALLDATASIZE PUSH1 0x4 PUSH2 0xD75 JUMP JUMPDEST PUSH2 0x9B9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x492 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AC PUSH2 0xA03 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28A PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xB SLOAD PUSH2 0x258 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28A PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4EF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xA SLOAD PUSH2 0x258 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28A PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x523 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28A PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x538 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xE SLOAD PUSH2 0x258 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x557 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xD SLOAD PUSH2 0x258 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x576 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x10 SLOAD PUSH2 0x258 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x595 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28A PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C8 SWAP1 PUSH2 0xD90 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x608 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C8 SWAP1 PUSH2 0xD90 JUMP JUMPDEST CALLER PUSH32 0x30FDCD4F0C28C5DBCBC3F59AA8E2260C7F58AC45BE2A2DCA652999AF89C33E0 DUP4 DUP4 PUSH0 PUSH2 0x635 PUSH2 0xA9E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x645 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xDB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP1 POP PUSH0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3850C7BD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xE0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x693 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6B7 SWAP2 SWAP1 PUSH2 0xDFB JUMP JUMPDEST POP POP POP POP POP POP SWAP1 POP PUSH0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1A686502 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6FC JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x720 SWAP2 SWAP1 PUSH2 0xE97 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP1 POP PUSH0 PUSH2 0x737 DUP8 DUP5 DUP5 PUSH2 0xB2B JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x64 PUSH2 0x747 DUP4 PUSH1 0x1 PUSH2 0xB79 JUMP JUMPDEST PUSH2 0x751 SWAP2 SWAP1 PUSH2 0xB90 JUMP JUMPDEST SWAP1 POP PUSH2 0x75D DUP2 DUP10 PUSH2 0xEBD JUMP JUMPDEST SWAP1 SWAP2 LT ISZERO SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x795 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C8 SWAP1 PUSH2 0xD90 JUMP JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 SELFBALANCE DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x7BE JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x7EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C8 SWAP1 PUSH2 0xD90 JUMP JUMPDEST PUSH0 PUSH2 0x7F9 DUP3 PUSH4 0x3B9ACA00 PUSH2 0xB79 JUMP JUMPDEST SWAP1 POP DUP1 SELFBALANCE LT ISZERO PUSH2 0x842 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742062616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5C8 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 DUP4 ISZERO PUSH2 0x8FC MUL SWAP2 DUP5 SWAP2 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x878 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH2 0x88A SWAP1 PUSH2 0xED0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8B6 SWAP1 PUSH2 0xED0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x901 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8D8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x901 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8E4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x932 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C8 SWAP1 PUSH2 0xD90 JUMP JUMPDEST CALLER PUSH32 0x30FDCD4F0C28C5DBCBC3F59AA8E2260C7F58AC45BE2A2DCA652999AF89C33E0 DUP3 PUSH0 PUSH2 0x95E PUSH2 0xA9E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP1 DUP3 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH18 0x151A5B59599C985B594818591A9D5CDD1959 PUSH1 0x72 SHL PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x9B3 PUSH2 0xA9E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x9E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C8 SWAP1 PUSH2 0xD90 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA2C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C8 SWAP1 PUSH2 0xD90 JUMP JUMPDEST CALLER PUSH32 0x30FDCD4F0C28C5DBCBC3F59AA8E2260C7F58AC45BE2A2DCA652999AF89C33E0 PUSH0 DUP1 PUSH2 0xA58 PUSH2 0xA9E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP1 DUP3 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH14 0x18DBDB9D995C9D081D1BC81413D3 PUSH1 0x92 SHL PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x3FABE5A3 PUSH1 0xE2 SHL DUP2 MSTORE SWAP1 MLOAD PUSH0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP4 SWAP2 DUP4 SWAP2 PUSH4 0xFEAF968C SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0xA0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAE9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB0D SWAP2 SWAP1 PUSH2 0xF21 JUMP JUMPDEST POP POP POP SWAP2 POP POP DUP1 PUSH5 0x2540BE400 PUSH2 0xB24 SWAP2 SWAP1 PUSH2 0xF6D JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 PUSH2 0xB40 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP7 PUSH2 0xB79 JUMP JUMPDEST PUSH2 0xB4A SWAP2 SWAP1 PUSH2 0xB90 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x9B3 JUMPI PUSH2 0x9B3 PUSH2 0xB52 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x9B3 JUMPI PUSH2 0x9B3 PUSH2 0xB52 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xBAA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xBD2 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xBED JUMPI PUSH2 0xBED PUSH2 0xBAF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xC15 JUMPI PUSH2 0xC15 PUSH2 0xBAF JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0xC2D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC5D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC73 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xC7F DUP6 DUP3 DUP7 ADD PUSH2 0xBC3 JUMP JUMPDEST SWAP6 PUSH1 0x20 SWAP5 SWAP1 SWAP5 ADD CALLDATALOAD SWAP5 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x7BE JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCB3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0xCC5 DUP2 PUSH2 0xC8E JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCE0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCF7 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD0D JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB4A DUP5 DUP3 DUP6 ADD PUSH2 0xBC3 JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xD3D JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xD21 JUMP JUMPDEST POP PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0xD6E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xD19 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD85 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xD6E DUP2 PUSH2 0xC8E JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xD SWAP1 DUP3 ADD MSTORE PUSH13 0x2737BA103A34329037BBB732B9 PUSH1 0x99 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x80 DUP2 MSTORE PUSH0 PUSH2 0xDC9 PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0xD19 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP6 SWAP1 SWAP6 MSTORE POP PUSH1 0x40 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP1 SWAP2 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0xDF6 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0xE11 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP8 MLOAD PUSH2 0xE1C DUP2 PUSH2 0xC8E JUMP JUMPDEST DUP1 SWAP8 POP POP PUSH1 0x20 DUP9 ADD MLOAD DUP1 PUSH1 0x2 SIGNEXTEND DUP2 EQ PUSH2 0xE33 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP6 POP PUSH2 0xE41 PUSH1 0x40 DUP10 ADD PUSH2 0xDE5 JUMP JUMPDEST SWAP5 POP PUSH2 0xE4F PUSH1 0x60 DUP10 ADD PUSH2 0xDE5 JUMP JUMPDEST SWAP4 POP PUSH2 0xE5D PUSH1 0x80 DUP10 ADD PUSH2 0xDE5 JUMP JUMPDEST SWAP3 POP PUSH1 0xA0 DUP9 ADD MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0xE72 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0xC0 DUP10 ADD MLOAD SWAP1 SWAP3 POP DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xE87 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEA7 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xD6E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x9B3 JUMPI PUSH2 0x9B3 PUSH2 0xB52 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xEE4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xF02 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xDF6 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xF35 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xF3E DUP7 PUSH2 0xF08 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP4 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x60 DUP7 ADD MLOAD SWAP2 POP PUSH2 0xF61 PUSH1 0x80 DUP8 ADD PUSH2 0xF08 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST DUP1 DUP3 MUL PUSH0 DUP3 SLT PUSH1 0x1 PUSH1 0xFF SHL DUP5 EQ AND ISZERO PUSH2 0xF88 JUMPI PUSH2 0xF88 PUSH2 0xB52 JUMP JUMPDEST DUP2 DUP2 SDIV DUP4 EQ DUP3 ISZERO OR PUSH2 0x9B3 JUMPI PUSH2 0x9B3 PUSH2 0xB52 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA5 SWAP12 0xAE PREVRANDAO SWAP3 0xBA 0x1E SWAP5 0xE6 DUP15 0xDF CALLDATACOPY 0x4D 0xBB JUMPDEST 0xF6 0x49 0xB2 CALLVALUE 0xED 0x2C PUSH29 0xAAE362AA4D69602DA4D164736F6C634300081400330000000000000000 ",
							"sourceMap": "941:6687:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3261:9;3243:14;;:27;;;;;;;:::i;:::-;;;;-1:-1:-1;3315:3:0;;-1:-1:-1;3297:14:0;:9;3309:2;3297:14;:::i;:::-;3296:22;;;;:::i;:::-;3280:12;;:38;;;;;;;:::i;:::-;;;;-1:-1:-1;3368:3:0;;-1:-1:-1;3350:14:0;:9;3362:2;3350:14;:::i;:::-;3349:22;;;;:::i;:::-;3328:17;;:43;;;;;;;:::i;:::-;;;;;;;;941:6687;;;;1427:24;;;;;;;;;;-1:-1:-1;1427:24:0;;;;-1:-1:-1;;;;;1427:24:0;;;;;;-1:-1:-1;;;;;835:32:23;;;817:51;;805:2;790:18;1427:24:0;;;;;;;;1058:27;;;;;;;;;;;;;;;;;;;1025:25:23;;;1013:2;998:18;1058:27:0;879:177:23;4858:84:0;;;;;;;;;;;;;:::i;:::-;;1283:26;;;;;;;;;;;;;;;;1607:47;;;;;;;;;;-1:-1:-1;1607:47:0;;;;-1:-1:-1;;;;;1607:47:0;;;3880:164;;;;;;;;;;-1:-1:-1;3880:164:0;;;;;:::i;:::-;;:::i;4185:474::-;;;;;;;;;;-1:-1:-1;4185:474:0;;;;;:::i;:::-;;:::i;:::-;;;2933:14:23;;2926:22;2908:41;;2896:2;2881:18;4185:474:0;2768:187:23;5204:103:0;;;;;;;;;;;;;:::i;4948:250::-;;;;;;;;;;-1:-1:-1;4948:250:0;;;;;:::i;:::-;;:::i;991:26::-;;;;;;;;;;-1:-1:-1;991:26:0;;;;-1:-1:-1;;;991:26:0;;;;;;1661:44;;;;;;;;;;-1:-1:-1;1661:44:0;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1661:44:0;;;1091:32;;;;;;;;;;;;;;;;1315:46;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;1530:28::-;;;;;;;;;;-1:-1:-1;1530:28:0;;;;-1:-1:-1;;;;;1530:28:0;;;3384:365;;;;;;;;;;-1:-1:-1;3384:365:0;;;;;:::i;:::-;;:::i;964:20::-;;;;;;;;;;-1:-1:-1;964:20:0;;;;-1:-1:-1;;;;;964:20:0;;;3755:119;;;;;;;;;;;;;:::i;3103:97::-;;;;;;;;;;-1:-1:-1;3103:97:0;;;;;:::i;:::-;;:::i;4050:129::-;;;;;;;;;;;;;:::i;1199:36::-;;;;;;;;;;;;;;;;1397:24;;;;;;;;;;-1:-1:-1;1397:24:0;;;;-1:-1:-1;;;;;1397:24:0;;;1241:36;;;;;;;;;;;;;;;;1368:23;;;;;;;;;;-1:-1:-1;1368:23:0;;;;-1:-1:-1;;;;;1368:23:0;;;1165:28;;;;;;;;;;;;;;;;1023:29;;;;;;;;;;;;;;;;1493:31;;;;;;;;;;-1:-1:-1;1493:31:0;;;;-1:-1:-1;;;;;1493:31:0;;;1457:30;;;;;;;;;;-1:-1:-1;1457:30:0;;;;-1:-1:-1;;;;;1457:30:0;;;1564:37;;;;;;;;;;-1:-1:-1;1564:37:0;;;;-1:-1:-1;;;;;1564:37:0;;;1129:30;;;;;;;;;;;;;;;;4858:84;2021:5;;-1:-1:-1;;;;;2021:5:0;2007:10;:19;1999:45;;;;-1:-1:-1;;;1999:45:0;;;;;;;:::i;:::-;;;;;;;;;4930:5:::1;4913:22:::0;;-1:-1:-1;;;;4913:22:0::1;::::0;;4858:84::o;3880:164::-;2021:5;;-1:-1:-1;;;;;2021:5:0;2007:10;:19;1999:45;;;;-1:-1:-1;;;1999:45:0;;;;;;;:::i;:::-;3992:10:::1;3978:59;4004:9:::0;4015:6;4023:1:::1;4026:10;:8;:10::i;:::-;3978:59;;;;;;;;;:::i;:::-;;;;;;;;3880:164:::0;;:::o;4185:474::-;4269:24;4305:19;4342:11;4305:49;;4365:20;4395:4;-1:-1:-1;;;;;4395:10:0;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4364:43;;;;;;;;4417:17;4437:4;-1:-1:-1;;;;;4437:14:0;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4417:36:0;;;4463:17;4483:53;4502:8;4512:12;4526:9;4483:18;:53::i;:::-;4463:73;-1:-1:-1;4546:16:0;4583:3;4566:13;4463:73;4578:1;4566:13;:::i;:::-;4565:21;;;;:::i;:::-;4546:40;-1:-1:-1;4632:19:0;4546:40;4632:8;:19;:::i;:::-;4619:32;;;;;4185:474;-1:-1:-1;;;;;;;4185:474:0:o;5204:103::-;2021:5;;-1:-1:-1;;;;;2021:5:0;2007:10;:19;1999:45;;;;-1:-1:-1;;;1999:45:0;;;;;;;:::i;:::-;5249:51:::1;::::0;5257:10:::1;::::0;5278:21:::1;5249:51:::0;::::1;;;::::0;::::1;::::0;;;5278:21;5257:10;5249:51;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;5204:103::o:0;4948:250::-;2021:5;;-1:-1:-1;;;;;2021:5:0;2007:10;:19;1999:45;;;;-1:-1:-1;;;1999:45:0;;;;;;;:::i;:::-;5023:19:::1;5045:21;:12:::0;5060:6:::1;5045:21;:::i;:::-;5023:43;;5109:11;5084:21;:36;;5076:69;;;::::0;-1:-1:-1;;;5076:69:0;;6971:2:23;5076:69:0::1;::::0;::::1;6953:21:23::0;7010:2;6990:18;;;6983:30;-1:-1:-1;;;7029:18:23;;;7022:50;7089:18;;5076:69:0::1;6769:344:23::0;5076:69:0::1;5163:5;::::0;;5155:36:::1;::::0;-1:-1:-1;;;;;5163:5:0;;::::1;::::0;5155:36;::::1;;;::::0;5179:11;;5155:36;5163:5;5155:36;5179:11;5163:5;5155:36;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;5013:185;4948:250:::0;:::o;1315:46::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3384:365::-;2021:5;;-1:-1:-1;;;;;2021:5:0;2007:10;:19;1999:45;;;;-1:-1:-1;;;1999:45:0;;;;;;;:::i;:::-;3675:10:::1;3661:81;3709:17:::0;3728:1:::1;3731:10;:8;:10::i;:::-;3661:81;::::0;;7797:3:23;7779:22;;;7838:2;7817:19;;;7810:31;-1:-1:-1;;;7872:3:23;7857:19;;7850:49;7966:4;7951:20;;7944:36;;;;7996:18;;7989:34;;;;-1:-1:-1;8039:18:23;;8032:34;7931:3;7916:19;3661:81:0::1;;;;;;;3384:365:::0;:::o;3755:119::-;3800:7;3819:13;3835:10;:8;:10::i;:::-;3819:26;3755:119;-1:-1:-1;;3755:119:0:o;3103:97::-;2021:5;;-1:-1:-1;;;;;2021:5:0;2007:10;:19;1999:45;;;;-1:-1:-1;;;1999:45:0;;;;;;;:::i;:::-;3175:5:::1;:18:::0;;-1:-1:-1;;;;;;3175:18:0::1;-1:-1:-1::0;;;;;3175:18:0;;;::::1;::::0;;;::::1;::::0;;3103:97::o;4050:129::-;2021:5;;-1:-1:-1;;;;;2021:5:0;2007:10;:19;1999:45;;;;-1:-1:-1;;;1999:45:0;;;;;;;:::i;:::-;4125:10:::1;4111:61;4155:1;::::0;4161:10:::1;:8;:10::i;:::-;4111:61;::::0;;8379:3:23;8361:22;;;8420:2;8399:19;;;8392:31;-1:-1:-1;;;8454:3:23;8439:19;;8432:45;8544:4;8529:20;;8522:36;;;;8574:18;;8567:34;;;;-1:-1:-1;8617:18:23;;8610:34;8509:3;8494:19;4111:61:0::1;;;;;;;4050:129::o:0;7386:240::-;7504:16;;7550:27;;;-1:-1:-1;;;7550:27:0;;;;7429:7;;-1:-1:-1;;;;;7504:16:0;;7429:7;;7504:16;;7550:25;;:27;;;;;;;;;;;;;;7504:16;7550:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7531:46;;;;;;7602:5;7610:8;7602:16;;;;:::i;:::-;7587:32;;;;7386:240;:::o;4665:187::-;4775:7;4835:9;4809:23;-1:-1:-1;;;;;4809:23:0;;:8;:23;:::i;:::-;:35;;;;:::i;:::-;4794:51;4665:187;-1:-1:-1;;;;4665:187:0:o;14:127:23:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:125;211:9;;;232:10;;;229:36;;;245:18;;:::i;276:168::-;349:9;;;380;;397:15;;;391:22;;377:37;367:71;;418:18;;:::i;449:217::-;489:1;515;505:132;;559:10;554:3;550:20;547:1;540:31;594:4;591:1;584:15;622:4;619:1;612:15;505:132;-1:-1:-1;651:9:23;;449:217::o;1061:127::-;1122:10;1117:3;1113:20;1110:1;1103:31;1153:4;1150:1;1143:15;1177:4;1174:1;1167:15;1193:719;1236:5;1289:3;1282:4;1274:6;1270:17;1266:27;1256:55;;1307:1;1304;1297:12;1256:55;1343:6;1330:20;1369:18;1406:2;1402;1399:10;1396:36;;;1412:18;;:::i;:::-;1487:2;1481:9;1455:2;1541:13;;-1:-1:-1;;1537:22:23;;;1561:2;1533:31;1529:40;1517:53;;;1585:18;;;1605:22;;;1582:46;1579:72;;;1631:18;;:::i;:::-;1671:10;1667:2;1660:22;1706:2;1698:6;1691:18;1752:3;1745:4;1740:2;1732:6;1728:15;1724:26;1721:35;1718:55;;;1769:1;1766;1759:12;1718:55;1833:2;1826:4;1818:6;1814:17;1807:4;1799:6;1795:17;1782:54;1880:1;1873:4;1868:2;1860:6;1856:15;1852:26;1845:37;1900:6;1891:15;;;;;;1193:719;;;;:::o;1917:390::-;1995:6;2003;2056:2;2044:9;2035:7;2031:23;2027:32;2024:52;;;2072:1;2069;2062:12;2024:52;2112:9;2099:23;2145:18;2137:6;2134:30;2131:50;;;2177:1;2174;2167:12;2131:50;2200;2242:7;2233:6;2222:9;2218:22;2200:50;:::i;:::-;2190:60;2297:2;2282:18;;;;2269:32;;-1:-1:-1;;;;1917:390:23:o;2312:131::-;-1:-1:-1;;;;;2387:31:23;;2377:42;;2367:70;;2433:1;2430;2423:12;2448:315;2516:6;2524;2577:2;2565:9;2556:7;2552:23;2548:32;2545:52;;;2593:1;2590;2583:12;2545:52;2629:9;2616:23;2606:33;;2689:2;2678:9;2674:18;2661:32;2702:31;2727:5;2702:31;:::i;:::-;2752:5;2742:15;;;2448:315;;;;;:::o;2960:180::-;3019:6;3072:2;3060:9;3051:7;3047:23;3043:32;3040:52;;;3088:1;3085;3078:12;3040:52;-1:-1:-1;3111:23:23;;2960:180;-1:-1:-1;2960:180:23:o;3145:322::-;3214:6;3267:2;3255:9;3246:7;3242:23;3238:32;3235:52;;;3283:1;3280;3273:12;3235:52;3323:9;3310:23;3356:18;3348:6;3345:30;3342:50;;;3388:1;3385;3378:12;3342:50;3411;3453:7;3444:6;3433:9;3429:22;3411:50;:::i;3472:423::-;3514:3;3552:5;3546:12;3579:6;3574:3;3567:19;3604:1;3614:162;3628:6;3625:1;3622:13;3614:162;;;3690:4;3746:13;;;3742:22;;3736:29;3718:11;;;3714:20;;3707:59;3643:12;3614:162;;;3618:3;3821:1;3814:4;3805:6;3800:3;3796:16;3792:27;3785:38;3884:4;3877:2;3873:7;3868:2;3860:6;3856:15;3852:29;3847:3;3843:39;3839:50;3832:57;;;3472:423;;;;:::o;3900:220::-;4049:2;4038:9;4031:21;4012:4;4069:45;4110:2;4099:9;4095:18;4087:6;4069:45;:::i;:::-;4061:53;3900:220;-1:-1:-1;;;3900:220:23:o;4125:247::-;4184:6;4237:2;4225:9;4216:7;4212:23;4208:32;4205:52;;;4253:1;4250;4243:12;4205:52;4292:9;4279:23;4311:31;4336:5;4311:31;:::i;4377:337::-;4579:2;4561:21;;;4618:2;4598:18;;;4591:30;-1:-1:-1;;;4652:2:23;4637:18;;4630:43;4705:2;4690:18;;4377:337::o;4719:443::-;4960:3;4949:9;4942:22;4923:4;4981:46;5022:3;5011:9;5007:19;4999:6;4981:46;:::i;:::-;5058:2;5043:18;;5036:34;;;;-1:-1:-1;5101:2:23;5086:18;;5079:34;;;;5144:2;5129:18;;;5122:34;4973:54;4719:443;-1:-1:-1;4719:443:23:o;5167:163::-;5245:13;;5298:6;5287:18;;5277:29;;5267:57;;5320:1;5317;5310:12;5267:57;5167:163;;;:::o;5335:986::-;5449:6;5457;5465;5473;5481;5489;5497;5550:3;5538:9;5529:7;5525:23;5521:33;5518:53;;;5567:1;5564;5557:12;5518:53;5599:9;5593:16;5618:31;5643:5;5618:31;:::i;:::-;5668:5;5658:15;;;5718:2;5707:9;5703:18;5697:25;5767:7;5764:1;5753:22;5744:7;5741:35;5731:63;;5790:1;5787;5780:12;5731:63;5813:7;-1:-1:-1;5839:48:23;5883:2;5868:18;;5839:48;:::i;:::-;5829:58;;5906:48;5950:2;5939:9;5935:18;5906:48;:::i;:::-;5896:58;;5973:49;6017:3;6006:9;6002:19;5973:49;:::i;:::-;5963:59;;6067:3;6056:9;6052:19;6046:26;6116:4;6107:7;6103:18;6094:7;6091:31;6081:59;;6136:1;6133;6126:12;6081:59;6211:3;6196:19;;6190:26;6159:7;;-1:-1:-1;6254:15:23;;6247:23;6235:36;;6225:64;;6285:1;6282;6275:12;6225:64;6308:7;6298:17;;;5335:986;;;;;;;;;;:::o;6326:305::-;6396:6;6449:2;6437:9;6428:7;6424:23;6420:32;6417:52;;;6465:1;6462;6455:12;6417:52;6497:9;6491:16;-1:-1:-1;;;;;6540:5:23;6536:46;6529:5;6526:57;6516:85;;6597:1;6594;6587:12;6636:128;6703:9;;;6724:11;;;6721:37;;;6738:18;;:::i;7118:380::-;7197:1;7193:12;;;;7240;;;7261:61;;7315:4;7307:6;7303:17;7293:27;;7261:61;7368:2;7360:6;7357:14;7337:18;7334:38;7331:161;;7414:10;7409:3;7405:20;7402:1;7395:31;7449:4;7446:1;7439:15;7477:4;7474:1;7467:15;7331:161;;7118:380;;;:::o;8655:179::-;8733:13;;8786:22;8775:34;;8765:45;;8755:73;;8824:1;8821;8814:12;8839:473;8942:6;8950;8958;8966;8974;9027:3;9015:9;9006:7;9002:23;8998:33;8995:53;;;9044:1;9041;9034:12;8995:53;9067:39;9096:9;9067:39;:::i;:::-;9057:49;;9146:2;9135:9;9131:18;9125:25;9115:35;;9190:2;9179:9;9175:18;9169:25;9159:35;;9234:2;9223:9;9219:18;9213:25;9203:35;;9257:49;9301:3;9290:9;9286:19;9257:49;:::i;:::-;9247:59;;8839:473;;;;;;;;:::o;9317:237::-;9389:9;;;9356:7;9414:9;;-1:-1:-1;;;9425:18:23;;9410:34;9407:60;;;9447:18;;:::i;:::-;9520:1;9511:7;9506:16;9503:1;9500:23;9496:1;9489:9;9486:38;9476:72;;9528:18;;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "810000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"aaveLendingPoolAddressesProvider()": "2393",
								"adjustTimeframe(uint256)": "infinite",
								"checkLiquidity(uint256,address)": "infinite",
								"checkPrice()": "infinite",
								"convertAllToPOL()": "infinite",
								"currentActivity()": "infinite",
								"dexRouters(string)": "infinite",
								"disableTrading()": "26596",
								"gasCostMultiplier()": "2383",
								"initialDeposit()": "2405",
								"initiateTrade(string,uint256)": "infinite",
								"kill()": "infinite",
								"lossThreshold()": "2383",
								"maticBalance()": "2363",
								"nextLogTime()": "2340",
								"owner()": "2392",
								"polToken()": "2392",
								"priceFeedAddress()": "2369",
								"profitThreshold()": "2404",
								"quickSwapRouter()": "2391",
								"setController(address)": "26746",
								"stablecoinBalance()": "2361",
								"tradingEnabled()": "2415",
								"trailingStopLoss()": "2339",
								"uniswapPositionManager()": "2413",
								"uniswapRouter()": "2436",
								"usdcToken()": "2372",
								"usdtToken()": "2436",
								"withdrawInGwei(uint256)": "infinite"
							},
							"internal": {
								"calculateAmountOut(uint256,uint160,uint256)": "196",
								"calculateEMA(uint256[] memory,uint256)": "infinite",
								"calculateFibonacci(uint256,uint256)": "infinite",
								"calculateMACD(uint256[] memory)": "infinite",
								"calculateRSI(uint256[] memory)": "infinite",
								"getPrice()": "infinite",
								"logCurrentActivity()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1234,
									"end": 1235,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1199,
									"end": 1235,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1199,
									"end": 1235,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1275,
									"end": 1277,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 1241,
									"end": 1277,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1241,
									"end": 1277,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1315,
									"end": 1361,
									"name": "PUSH",
									"source": 0,
									"value": "C0"
								},
								{
									"begin": 941,
									"end": 7628,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1315,
									"end": 1361,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1315,
									"end": 1361,
									"name": "PUSH",
									"source": 0,
									"value": "C"
								},
								{
									"begin": 941,
									"end": 7628,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 1315,
									"end": 1361,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1315,
									"end": 1361,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1315,
									"end": 1361,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "496E697469616C697A696E67"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1315,
									"end": 1361,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 1315,
									"end": 1361,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1315,
									"end": 1361,
									"name": "PUSH",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1315,
									"end": 1361,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1315,
									"end": 1361,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1315,
									"end": 1361,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1315,
									"end": 1361,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1315,
									"end": 1361,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1315,
									"end": 1361,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1315,
									"end": 1361,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1315,
									"end": 1361,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1315,
									"end": 1361,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2178,
									"end": 3097,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 2178,
									"end": 3097,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2178,
									"end": 3097,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 2178,
									"end": 3097,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 2178,
									"end": 3097,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 2178,
									"end": 3097,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2178,
									"end": 3097,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2178,
									"end": 3097,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 2178,
									"end": 3097,
									"name": "tag",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 2178,
									"end": 3097,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2178,
									"end": 3097,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2178,
									"end": 3097,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2178,
									"end": 3097,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2178,
									"end": 3097,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 2178,
									"end": 3097,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 2178,
									"end": 3097,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2178,
									"end": 3097,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2178,
									"end": 3097,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 2178,
									"end": 3097,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2178,
									"end": 3097,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 2178,
									"end": 3097,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2178,
									"end": 3097,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2178,
									"end": 3097,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2178,
									"end": 3097,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2178,
									"end": 3097,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2178,
									"end": 3097,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2178,
									"end": 3097,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 2178,
									"end": 3097,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2178,
									"end": 3097,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 2178,
									"end": 3097,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2178,
									"end": 3097,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 2178,
									"end": 3097,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2482,
									"end": 2487,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2482,
									"end": 2500,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2482,
									"end": 2500,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2490,
									"end": 2500,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2482,
									"end": 2500,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2482,
									"end": 2500,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2482,
									"end": 2500,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2482,
									"end": 2500,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2482,
									"end": 2500,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2482,
									"end": 2500,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2482,
									"end": 2500,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2510,
									"end": 2518,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 2510,
									"end": 2530,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2510,
									"end": 2530,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2510,
									"end": 2530,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2510,
									"end": 2530,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2510,
									"end": 2530,
									"name": "DUP12",
									"source": 0
								},
								{
									"begin": 2510,
									"end": 2530,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2510,
									"end": 2530,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2510,
									"end": 2530,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2510,
									"end": 2530,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2510,
									"end": 2530,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2510,
									"end": 2530,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2510,
									"end": 2530,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2510,
									"end": 2530,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2510,
									"end": 2530,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2540,
									"end": 2549,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 2540,
									"end": 2562,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2540,
									"end": 2562,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2540,
									"end": 2562,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2540,
									"end": 2562,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2540,
									"end": 2562,
									"name": "DUP11",
									"source": 0
								},
								{
									"begin": 2540,
									"end": 2562,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2540,
									"end": 2562,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2540,
									"end": 2562,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2540,
									"end": 2562,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2540,
									"end": 2562,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2572,
									"end": 2581,
									"name": "PUSH",
									"source": 0,
									"value": "C"
								},
								{
									"begin": 2572,
									"end": 2594,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2572,
									"end": 2594,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2572,
									"end": 2594,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2572,
									"end": 2594,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2572,
									"end": 2594,
									"name": "DUP10",
									"source": 0
								},
								{
									"begin": 2572,
									"end": 2594,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2572,
									"end": 2594,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2572,
									"end": 2594,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2572,
									"end": 2594,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2572,
									"end": 2594,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2604,
									"end": 2619,
									"name": "PUSH",
									"source": 0,
									"value": "D"
								},
								{
									"begin": 2604,
									"end": 2638,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2604,
									"end": 2638,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2604,
									"end": 2638,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2604,
									"end": 2638,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2604,
									"end": 2638,
									"name": "DUP9",
									"source": 0
								},
								{
									"begin": 2604,
									"end": 2638,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2604,
									"end": 2638,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2604,
									"end": 2638,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2604,
									"end": 2638,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2604,
									"end": 2638,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2604,
									"end": 2638,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2604,
									"end": 2638,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2604,
									"end": 2638,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2648,
									"end": 2664,
									"name": "PUSH",
									"source": 0,
									"value": "E"
								},
								{
									"begin": 2648,
									"end": 2684,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2648,
									"end": 2684,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2648,
									"end": 2684,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2648,
									"end": 2684,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2648,
									"end": 2684,
									"name": "DUP9",
									"source": 0
								},
								{
									"begin": 2648,
									"end": 2684,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2648,
									"end": 2684,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2648,
									"end": 2684,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2648,
									"end": 2684,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2648,
									"end": 2684,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2694,
									"end": 2707,
									"name": "PUSH",
									"source": 0,
									"value": "F"
								},
								{
									"begin": 2694,
									"end": 2724,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2694,
									"end": 2724,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2694,
									"end": 2724,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2694,
									"end": 2724,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2694,
									"end": 2724,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 2694,
									"end": 2724,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2694,
									"end": 2724,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2694,
									"end": 2724,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2694,
									"end": 2724,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2694,
									"end": 2724,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2734,
									"end": 2756,
									"name": "PUSH",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 2734,
									"end": 2782,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2734,
									"end": 2782,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2734,
									"end": 2782,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2734,
									"end": 2782,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2734,
									"end": 2782,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 2734,
									"end": 2782,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2734,
									"end": 2782,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2734,
									"end": 2782,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2734,
									"end": 2782,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2734,
									"end": 2782,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2792,
									"end": 2824,
									"name": "PUSH",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2792,
									"end": 2860,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2792,
									"end": 2860,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2792,
									"end": 2860,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2792,
									"end": 2860,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 2792,
									"end": 2860,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2792,
									"end": 2860,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2792,
									"end": 2860,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2792,
									"end": 2860,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2792,
									"end": 2860,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2792,
									"end": 2860,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2792,
									"end": 2860,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2792,
									"end": 2860,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2792,
									"end": 2860,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2792,
									"end": 2860,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2792,
									"end": 2860,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2879,
									"end": 2902,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2879,
									"end": 2902,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "517569636B5377617"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "BC"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3932,
									"end": 3956,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 3932,
									"end": 3956,
									"name": "MSTORE",
									"source": 23
								},
								{
									"begin": 2879,
									"end": 2889,
									"name": "PUSH",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 2879,
									"end": 2889,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3981,
									"end": 3982,
									"name": "PUSH",
									"source": 23,
									"value": "9"
								},
								{
									"begin": 3972,
									"end": 3983,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 2879,
									"end": 2902,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2879,
									"end": 2902,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2879,
									"end": 2902,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2879,
									"end": 2902,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2879,
									"end": 2902,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2879,
									"end": 2902,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2879,
									"end": 2902,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2879,
									"end": 2902,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2879,
									"end": 2902,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2879,
									"end": 2902,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2879,
									"end": 2902,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2879,
									"end": 2902,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2879,
									"end": 2902,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2879,
									"end": 2920,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2879,
									"end": 2920,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2879,
									"end": 2920,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2879,
									"end": 2920,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2879,
									"end": 2920,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2879,
									"end": 2920,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2879,
									"end": 2920,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2879,
									"end": 2920,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2879,
									"end": 2920,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2879,
									"end": 2920,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2879,
									"end": 2920,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2879,
									"end": 2920,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2879,
									"end": 2920,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2879,
									"end": 2920,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2879,
									"end": 2920,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2879,
									"end": 2902,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2930,
									"end": 2952,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2952,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2930,
									"end": 2952,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2952,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2952,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2980,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "6E"
								},
								{
									"begin": 2962,
									"end": 2977,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 2962,
									"end": 2983,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3023,
									"end": 3025,
									"name": "PUSH",
									"source": 0,
									"value": "55"
								},
								{
									"begin": 3007,
									"end": 3020,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3007,
									"end": 3025,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3075,
									"end": 3090,
									"name": "TIMESTAMP",
									"source": 0
								},
								{
									"begin": 3061,
									"end": 3072,
									"name": "PUSH",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 3061,
									"end": 3090,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 941,
									"end": 7628,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 941,
									"end": 7628,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 23,
									"value": "11"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 23,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 23,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 23
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 23
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 23,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 23,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 23
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 23,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 23
								},
								{
									"begin": 146,
									"end": 526,
									"name": "tag",
									"source": 23,
									"value": "12"
								},
								{
									"begin": 146,
									"end": 526,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 225,
									"end": 226,
									"name": "PUSH",
									"source": 23,
									"value": "1"
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SHR",
									"source": 23
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 268,
									"end": 280,
									"name": "AND",
									"source": 23
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP1",
									"source": 23
								},
								{
									"begin": 289,
									"end": 350,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "20"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPI",
									"source": 23
								},
								{
									"begin": 343,
									"end": 347,
									"name": "PUSH",
									"source": 23,
									"value": "7F"
								},
								{
									"begin": 335,
									"end": 341,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 331,
									"end": 348,
									"name": "AND",
									"source": 23
								},
								{
									"begin": 321,
									"end": 348,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 321,
									"end": 348,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 289,
									"end": 350,
									"name": "tag",
									"source": 23,
									"value": "20"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 396,
									"end": 398,
									"name": "PUSH",
									"source": 23,
									"value": "20"
								},
								{
									"begin": 388,
									"end": 394,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 385,
									"end": 399,
									"name": "LT",
									"source": 23
								},
								{
									"begin": 365,
									"end": 383,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 362,
									"end": 400,
									"name": "SUB",
									"source": 23
								},
								{
									"begin": 359,
									"end": 520,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "21"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPI",
									"source": 23
								},
								{
									"begin": 442,
									"end": 452,
									"name": "PUSH",
									"source": 23,
									"value": "4E487B71"
								},
								{
									"begin": 437,
									"end": 440,
									"name": "PUSH",
									"source": 23,
									"value": "E0"
								},
								{
									"begin": 433,
									"end": 453,
									"name": "SHL",
									"source": 23
								},
								{
									"begin": 430,
									"end": 431,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 423,
									"end": 454,
									"name": "MSTORE",
									"source": 23
								},
								{
									"begin": 477,
									"end": 481,
									"name": "PUSH",
									"source": 23,
									"value": "22"
								},
								{
									"begin": 474,
									"end": 475,
									"name": "PUSH",
									"source": 23,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 482,
									"name": "MSTORE",
									"source": 23
								},
								{
									"begin": 505,
									"end": 509,
									"name": "PUSH",
									"source": 23,
									"value": "24"
								},
								{
									"begin": 502,
									"end": 503,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 495,
									"end": 510,
									"name": "REVERT",
									"source": 23
								},
								{
									"begin": 359,
									"end": 520,
									"name": "tag",
									"source": 23,
									"value": "21"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 359,
									"end": 520,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 146,
									"end": 526,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 146,
									"end": 526,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "tag",
									"source": 23,
									"value": "14"
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 759,
									"end": 761,
									"name": "PUSH",
									"source": 23,
									"value": "1F"
								},
								{
									"begin": 754,
									"end": 757,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 751,
									"end": 762,
									"name": "GT",
									"source": 23
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "ISZERO",
									"source": 23
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "24"
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "JUMPI",
									"source": 23
								},
								{
									"begin": 795,
									"end": 796,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 820,
									"end": 825,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 816,
									"end": 818,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 809,
									"end": 826,
									"name": "MSTORE",
									"source": 23
								},
								{
									"begin": 865,
									"end": 869,
									"name": "PUSH",
									"source": 23,
									"value": "20"
								},
								{
									"begin": 861,
									"end": 863,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 851,
									"end": 870,
									"name": "KECCAK256",
									"source": 23
								},
								{
									"begin": 935,
									"end": 937,
									"name": "PUSH",
									"source": 23,
									"value": "1F"
								},
								{
									"begin": 923,
									"end": 933,
									"name": "DUP6",
									"source": 23
								},
								{
									"begin": 919,
									"end": 938,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 916,
									"end": 917,
									"name": "PUSH",
									"source": 23,
									"value": "5"
								},
								{
									"begin": 912,
									"end": 939,
									"name": "SHR",
									"source": 23
								},
								{
									"begin": 906,
									"end": 910,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 902,
									"end": 940,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 971,
									"end": 975,
									"name": "PUSH",
									"source": 23,
									"value": "20"
								},
								{
									"begin": 959,
									"end": 969,
									"name": "DUP7",
									"source": 23
								},
								{
									"begin": 956,
									"end": 976,
									"name": "LT",
									"source": 23
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "ISZERO",
									"source": 23
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "25"
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "JUMPI",
									"source": 23
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 994,
									"end": 998,
									"name": "DUP1",
									"source": 23
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "tag",
									"source": 23,
									"value": "25"
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 1049,
									"end": 1051,
									"name": "PUSH",
									"source": 23,
									"value": "1F"
								},
								{
									"begin": 1044,
									"end": 1047,
									"name": "DUP6",
									"source": 23
								},
								{
									"begin": 1040,
									"end": 1052,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "PUSH",
									"source": 23,
									"value": "5"
								},
								{
									"begin": 1033,
									"end": 1053,
									"name": "SHR",
									"source": 23
								},
								{
									"begin": 1027,
									"end": 1031,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 1023,
									"end": 1054,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 1013,
									"end": 1054,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 1013,
									"end": 1054,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "tag",
									"source": 23,
									"value": "26"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 1122,
									"end": 1124,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 1115,
									"end": 1120,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 1112,
									"end": 1125,
									"name": "LT",
									"source": 23
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "ISZERO",
									"source": 23
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "28"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMPI",
									"source": 23
								},
								{
									"begin": 1167,
									"end": 1184,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 1167,
									"end": 1184,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 1167,
									"end": 1184,
									"name": "SSTORE",
									"source": 23
								},
								{
									"begin": 1148,
									"end": 1149,
									"name": "PUSH",
									"source": 23,
									"value": "1"
								},
								{
									"begin": 1137,
									"end": 1150,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "26"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "tag",
									"source": 23,
									"value": "28"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 1108,
									"end": 1111,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 1108,
									"end": 1111,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 1108,
									"end": 1111,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "tag",
									"source": 23,
									"value": "24"
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 657,
									"end": 1202,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 1378,
									"end": 2730,
									"name": "tag",
									"source": 23,
									"value": "2"
								},
								{
									"begin": 1378,
									"end": 2730,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 1498,
									"end": 1508,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 1498,
									"end": 1508,
									"name": "MLOAD",
									"source": 23
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1520,
									"end": 1550,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 1520,
									"end": 1550,
									"name": "GT",
									"source": 23
								},
								{
									"begin": 1517,
									"end": 1573,
									"name": "ISZERO",
									"source": 23
								},
								{
									"begin": 1517,
									"end": 1573,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "32"
								},
								{
									"begin": 1517,
									"end": 1573,
									"name": "JUMPI",
									"source": 23
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "32"
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "11"
								},
								{
									"begin": 1553,
									"end": 1571,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "tag",
									"source": 23,
									"value": "32"
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "33"
								},
								{
									"begin": 1672,
									"end": 1678,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "34"
								},
								{
									"begin": 1664,
									"end": 1668,
									"name": "DUP5",
									"source": 23
								},
								{
									"begin": 1658,
									"end": 1669,
									"name": "SLOAD",
									"source": 23
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "12"
								},
								{
									"begin": 1632,
									"end": 1670,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "tag",
									"source": 23,
									"value": "34"
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 1626,
									"end": 1630,
									"name": "DUP5",
									"source": 23
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "14"
								},
								{
									"begin": 1582,
									"end": 1679,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "tag",
									"source": 23,
									"value": "33"
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 1734,
									"end": 1738,
									"name": "PUSH",
									"source": 23,
									"value": "20"
								},
								{
									"begin": 1734,
									"end": 1738,
									"name": "DUP1",
									"source": 23
								},
								{
									"begin": 1798,
									"end": 1800,
									"name": "PUSH",
									"source": 23,
									"value": "1F"
								},
								{
									"begin": 1787,
									"end": 1801,
									"name": "DUP4",
									"source": 23
								},
								{
									"begin": 1787,
									"end": 1801,
									"name": "GT",
									"source": 23
								},
								{
									"begin": 1815,
									"end": 1816,
									"name": "PUSH",
									"source": 23,
									"value": "1"
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "EQ",
									"source": 23
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "36"
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "JUMPI",
									"source": 23
								},
								{
									"begin": 2517,
									"end": 2518,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 2534,
									"end": 2540,
									"name": "DUP5",
									"source": 23
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "ISZERO",
									"source": 23
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "37"
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "JUMPI",
									"source": 23
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2586,
									"end": 2605,
									"name": "DUP6",
									"source": 23
								},
								{
									"begin": 2586,
									"end": 2605,
									"name": "DUP4",
									"source": 23
								},
								{
									"begin": 2586,
									"end": 2605,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 2580,
									"end": 2606,
									"name": "MLOAD",
									"source": 23
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "tag",
									"source": 23,
									"value": "37"
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1335,
									"end": 1336,
									"name": "PUSH",
									"source": 23,
									"value": "3"
								},
								{
									"begin": 1331,
									"end": 1342,
									"name": "DUP7",
									"source": 23
								},
								{
									"begin": 1331,
									"end": 1342,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 1331,
									"end": 1342,
									"name": "SHL",
									"source": 23
								},
								{
									"begin": 1327,
									"end": 1351,
									"name": "SHR",
									"source": 23
								},
								{
									"begin": 1323,
									"end": 1352,
									"name": "NOT",
									"source": 23
								},
								{
									"begin": 1313,
									"end": 1353,
									"name": "AND",
									"source": 23
								},
								{
									"begin": 1359,
									"end": 1360,
									"name": "PUSH",
									"source": 23,
									"value": "1"
								},
								{
									"begin": 1355,
									"end": 1366,
									"name": "DUP6",
									"source": 23
								},
								{
									"begin": 1355,
									"end": 1366,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 1355,
									"end": 1366,
									"name": "SHL",
									"source": 23
								},
								{
									"begin": 1310,
									"end": 1367,
									"name": "OR",
									"source": 23
								},
								{
									"begin": 2633,
									"end": 2714,
									"name": "DUP6",
									"source": 23
								},
								{
									"begin": 2633,
									"end": 2714,
									"name": "SSTORE",
									"source": 23
								},
								{
									"begin": 1780,
									"end": 2724,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "28"
								},
								{
									"begin": 1780,
									"end": 2724,
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "tag",
									"source": 23,
									"value": "36"
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 604,
									"end": 605,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP6",
									"source": 23
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 597,
									"end": 611,
									"name": "MSTORE",
									"source": 23
								},
								{
									"begin": 641,
									"end": 645,
									"name": "PUSH",
									"source": 23,
									"value": "20"
								},
								{
									"begin": 628,
									"end": 646,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 628,
									"end": 646,
									"name": "KECCAK256",
									"source": 23
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1846,
									"end": 1866,
									"name": "DUP7",
									"source": 23
								},
								{
									"begin": 1846,
									"end": 1866,
									"name": "AND",
									"source": 23
								},
								{
									"begin": 1846,
									"end": 1866,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "tag",
									"source": 23,
									"value": "40"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 1978,
									"end": 1985,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 1975,
									"end": 1976,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 1972,
									"end": 1986,
									"name": "LT",
									"source": 23
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "ISZERO",
									"source": 23
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "42"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMPI",
									"source": 23
								},
								{
									"begin": 2067,
									"end": 2086,
									"name": "DUP9",
									"source": 23
								},
								{
									"begin": 2067,
									"end": 2086,
									"name": "DUP7",
									"source": 23
								},
								{
									"begin": 2067,
									"end": 2086,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 2061,
									"end": 2087,
									"name": "MLOAD",
									"source": 23
								},
								{
									"begin": 2046,
									"end": 2088,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 2046,
									"end": 2088,
									"name": "SSTORE",
									"source": 23
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "SWAP5",
									"source": 23
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "DUP5",
									"source": 23
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "SWAP5",
									"source": 23
								},
								{
									"begin": 2127,
									"end": 2128,
									"name": "PUSH",
									"source": 23,
									"value": "1"
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "DUP5",
									"source": 23
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "40"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "tag",
									"source": 23,
									"value": "42"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 1968,
									"end": 1971,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 2228,
									"end": 2234,
									"name": "DUP6",
									"source": 23
								},
								{
									"begin": 2219,
									"end": 2226,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 2216,
									"end": 2235,
									"name": "LT",
									"source": 23
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "ISZERO",
									"source": 23
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "43"
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "JUMPI",
									"source": 23
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "DUP8",
									"source": 23
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "DUP6",
									"source": 23
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 2283,
									"end": 2309,
									"name": "MLOAD",
									"source": 23
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2372,
									"end": 2373,
									"name": "PUSH",
									"source": 23,
									"value": "3"
								},
								{
									"begin": 2368,
									"end": 2382,
									"name": "DUP9",
									"source": 23
								},
								{
									"begin": 2368,
									"end": 2382,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 2368,
									"end": 2382,
									"name": "SHL",
									"source": 23
								},
								{
									"begin": 2384,
									"end": 2387,
									"name": "PUSH",
									"source": 23,
									"value": "F8"
								},
								{
									"begin": 2364,
									"end": 2388,
									"name": "AND",
									"source": 23
								},
								{
									"begin": 2360,
									"end": 2397,
									"name": "SHR",
									"source": 23
								},
								{
									"begin": 2356,
									"end": 2398,
									"name": "NOT",
									"source": 23
								},
								{
									"begin": 2341,
									"end": 2399,
									"name": "AND",
									"source": 23
								},
								{
									"begin": 2326,
									"end": 2400,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 2326,
									"end": 2400,
									"name": "SSTORE",
									"source": 23
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "tag",
									"source": 23,
									"value": "43"
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2460,
									"end": 2461,
									"name": "PUSH",
									"source": 23,
									"value": "1"
								},
								{
									"begin": 2444,
									"end": 2458,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 2444,
									"end": 2458,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 2444,
									"end": 2458,
									"name": "SHL",
									"source": 23
								},
								{
									"begin": 2440,
									"end": 2462,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 2427,
									"end": 2463,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 2427,
									"end": 2463,
									"name": "SSTORE",
									"source": 23
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1378,
									"end": 2730,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 2735,
									"end": 2912,
									"name": "tag",
									"source": 23,
									"value": "16"
								},
								{
									"begin": 2735,
									"end": 2912,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 2814,
									"end": 2827,
									"name": "DUP1",
									"source": 23
								},
								{
									"begin": 2814,
									"end": 2827,
									"name": "MLOAD",
									"source": 23
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2856,
									"end": 2887,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 2856,
									"end": 2887,
									"name": "AND",
									"source": 23
								},
								{
									"begin": 2846,
									"end": 2888,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 2846,
									"end": 2888,
									"name": "EQ",
									"source": 23
								},
								{
									"begin": 2836,
									"end": 2906,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "45"
								},
								{
									"begin": 2836,
									"end": 2906,
									"name": "JUMPI",
									"source": 23
								},
								{
									"begin": 2902,
									"end": 2903,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 2899,
									"end": 2900,
									"name": "DUP1",
									"source": 23
								},
								{
									"begin": 2892,
									"end": 2904,
									"name": "REVERT",
									"source": 23
								},
								{
									"begin": 2836,
									"end": 2906,
									"name": "tag",
									"source": 23,
									"value": "45"
								},
								{
									"begin": 2836,
									"end": 2906,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 2735,
									"end": 2912,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 2735,
									"end": 2912,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 2735,
									"end": 2912,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 2735,
									"end": 2912,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 2917,
									"end": 3725,
									"name": "tag",
									"source": 23,
									"value": "5"
								},
								{
									"begin": 2917,
									"end": 3725,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 3050,
									"end": 3056,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 3058,
									"end": 3064,
									"name": "DUP1",
									"source": 23
								},
								{
									"begin": 3066,
									"end": 3072,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 3074,
									"end": 3080,
									"name": "DUP1",
									"source": 23
								},
								{
									"begin": 3082,
									"end": 3088,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 3090,
									"end": 3096,
									"name": "DUP1",
									"source": 23
								},
								{
									"begin": 3098,
									"end": 3104,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 3106,
									"end": 3112,
									"name": "DUP1",
									"source": 23
								},
								{
									"begin": 3159,
									"end": 3162,
									"name": "PUSH",
									"source": 23,
									"value": "100"
								},
								{
									"begin": 3147,
									"end": 3156,
									"name": "DUP10",
									"source": 23
								},
								{
									"begin": 3138,
									"end": 3145,
									"name": "DUP12",
									"source": 23
								},
								{
									"begin": 3134,
									"end": 3157,
									"name": "SUB",
									"source": 23
								},
								{
									"begin": 3130,
									"end": 3163,
									"name": "SLT",
									"source": 23
								},
								{
									"begin": 3127,
									"end": 3180,
									"name": "ISZERO",
									"source": 23
								},
								{
									"begin": 3127,
									"end": 3180,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "47"
								},
								{
									"begin": 3127,
									"end": 3180,
									"name": "JUMPI",
									"source": 23
								},
								{
									"begin": 3176,
									"end": 3177,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 3173,
									"end": 3174,
									"name": "DUP1",
									"source": 23
								},
								{
									"begin": 3166,
									"end": 3178,
									"name": "REVERT",
									"source": 23
								},
								{
									"begin": 3127,
									"end": 3180,
									"name": "tag",
									"source": 23,
									"value": "47"
								},
								{
									"begin": 3127,
									"end": 3180,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 3199,
									"end": 3239,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "48"
								},
								{
									"begin": 3229,
									"end": 3238,
									"name": "DUP10",
									"source": 23
								},
								{
									"begin": 3199,
									"end": 3239,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "16"
								},
								{
									"begin": 3199,
									"end": 3239,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 3199,
									"end": 3239,
									"name": "tag",
									"source": 23,
									"value": "48"
								},
								{
									"begin": 3199,
									"end": 3239,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 3189,
									"end": 3239,
									"name": "SWAP8",
									"source": 23
								},
								{
									"begin": 3189,
									"end": 3239,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 3258,
									"end": 3307,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "49"
								},
								{
									"begin": 3303,
									"end": 3305,
									"name": "PUSH",
									"source": 23,
									"value": "20"
								},
								{
									"begin": 3292,
									"end": 3301,
									"name": "DUP11",
									"source": 23
								},
								{
									"begin": 3288,
									"end": 3306,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 3258,
									"end": 3307,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "16"
								},
								{
									"begin": 3258,
									"end": 3307,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 3258,
									"end": 3307,
									"name": "tag",
									"source": 23,
									"value": "49"
								},
								{
									"begin": 3258,
									"end": 3307,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 3248,
									"end": 3307,
									"name": "SWAP7",
									"source": 23
								},
								{
									"begin": 3248,
									"end": 3307,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 3326,
									"end": 3375,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "50"
								},
								{
									"begin": 3371,
									"end": 3373,
									"name": "PUSH",
									"source": 23,
									"value": "40"
								},
								{
									"begin": 3360,
									"end": 3369,
									"name": "DUP11",
									"source": 23
								},
								{
									"begin": 3356,
									"end": 3374,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 3326,
									"end": 3375,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "16"
								},
								{
									"begin": 3326,
									"end": 3375,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 3326,
									"end": 3375,
									"name": "tag",
									"source": 23,
									"value": "50"
								},
								{
									"begin": 3326,
									"end": 3375,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 3316,
									"end": 3375,
									"name": "SWAP6",
									"source": 23
								},
								{
									"begin": 3316,
									"end": 3375,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 3394,
									"end": 3443,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "51"
								},
								{
									"begin": 3439,
									"end": 3441,
									"name": "PUSH",
									"source": 23,
									"value": "60"
								},
								{
									"begin": 3428,
									"end": 3437,
									"name": "DUP11",
									"source": 23
								},
								{
									"begin": 3424,
									"end": 3442,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 3394,
									"end": 3443,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "16"
								},
								{
									"begin": 3394,
									"end": 3443,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 3394,
									"end": 3443,
									"name": "tag",
									"source": 23,
									"value": "51"
								},
								{
									"begin": 3394,
									"end": 3443,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 3384,
									"end": 3443,
									"name": "SWAP5",
									"source": 23
								},
								{
									"begin": 3384,
									"end": 3443,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 3462,
									"end": 3512,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "52"
								},
								{
									"begin": 3507,
									"end": 3510,
									"name": "PUSH",
									"source": 23,
									"value": "80"
								},
								{
									"begin": 3496,
									"end": 3505,
									"name": "DUP11",
									"source": 23
								},
								{
									"begin": 3492,
									"end": 3511,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 3462,
									"end": 3512,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "16"
								},
								{
									"begin": 3462,
									"end": 3512,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 3462,
									"end": 3512,
									"name": "tag",
									"source": 23,
									"value": "52"
								},
								{
									"begin": 3462,
									"end": 3512,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 3452,
									"end": 3512,
									"name": "SWAP4",
									"source": 23
								},
								{
									"begin": 3452,
									"end": 3512,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 3531,
									"end": 3581,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "53"
								},
								{
									"begin": 3576,
									"end": 3579,
									"name": "PUSH",
									"source": 23,
									"value": "A0"
								},
								{
									"begin": 3565,
									"end": 3574,
									"name": "DUP11",
									"source": 23
								},
								{
									"begin": 3561,
									"end": 3580,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 3531,
									"end": 3581,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "16"
								},
								{
									"begin": 3531,
									"end": 3581,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 3531,
									"end": 3581,
									"name": "tag",
									"source": 23,
									"value": "53"
								},
								{
									"begin": 3531,
									"end": 3581,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 3521,
									"end": 3581,
									"name": "SWAP3",
									"source": 23
								},
								{
									"begin": 3521,
									"end": 3581,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 3600,
									"end": 3650,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "54"
								},
								{
									"begin": 3645,
									"end": 3648,
									"name": "PUSH",
									"source": 23,
									"value": "C0"
								},
								{
									"begin": 3634,
									"end": 3643,
									"name": "DUP11",
									"source": 23
								},
								{
									"begin": 3630,
									"end": 3649,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 3600,
									"end": 3650,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "16"
								},
								{
									"begin": 3600,
									"end": 3650,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 3600,
									"end": 3650,
									"name": "tag",
									"source": 23,
									"value": "54"
								},
								{
									"begin": 3600,
									"end": 3650,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 3590,
									"end": 3650,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 3590,
									"end": 3650,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 3669,
									"end": 3719,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "55"
								},
								{
									"begin": 3714,
									"end": 3717,
									"name": "PUSH",
									"source": 23,
									"value": "E0"
								},
								{
									"begin": 3703,
									"end": 3712,
									"name": "DUP11",
									"source": 23
								},
								{
									"begin": 3699,
									"end": 3718,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 3669,
									"end": 3719,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "16"
								},
								{
									"begin": 3669,
									"end": 3719,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 3669,
									"end": 3719,
									"name": "tag",
									"source": 23,
									"value": "55"
								},
								{
									"begin": 3669,
									"end": 3719,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 3659,
									"end": 3719,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 3659,
									"end": 3719,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 2917,
									"end": 3725,
									"name": "SWAP3",
									"source": 23
								},
								{
									"begin": 2917,
									"end": 3725,
									"name": "SWAP6",
									"source": 23
								},
								{
									"begin": 2917,
									"end": 3725,
									"name": "SWAP9",
									"source": 23
								},
								{
									"begin": 2917,
									"end": 3725,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 2917,
									"end": 3725,
									"name": "SWAP3",
									"source": 23
								},
								{
									"begin": 2917,
									"end": 3725,
									"name": "SWAP6",
									"source": 23
								},
								{
									"begin": 2917,
									"end": 3725,
									"name": "SWAP9",
									"source": 23
								},
								{
									"begin": 2917,
									"end": 3725,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 2917,
									"end": 3725,
									"name": "SWAP4",
									"source": 23
								},
								{
									"begin": 2917,
									"end": 3725,
									"name": "SWAP7",
									"source": 23
								},
								{
									"begin": 2917,
									"end": 3725,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 2917,
									"end": 3725,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 3730,
									"end": 3989,
									"name": "tag",
									"source": 23,
									"value": "17"
								},
								{
									"begin": 3730,
									"end": 3989,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 941,
									"end": 7628,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 941,
									"end": 7628,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 941,
									"end": 7628,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 941,
									"end": 7628,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 941,
									"end": 7628,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 941,
									"end": 7628,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 941,
									"end": 7628,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a59bae4492ba1e94e68edf374dbb5bf649b234ed2c7caae362aa4d69602da4d164736f6c63430008140033",
									".code": [
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH",
											"source": 0,
											"value": "869665E9"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH",
											"source": 0,
											"value": "B3CE56A2"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH",
											"source": 0,
											"value": "E0ABCA0B"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH",
											"source": 0,
											"value": "E0ABCA0B"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH",
											"source": 0,
											"value": "E189EB42"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH",
											"source": 0,
											"value": "E5047B30"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH",
											"source": 0,
											"value": "F974821A"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH",
											"source": 0,
											"value": "B3CE56A2"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH",
											"source": 0,
											"value": "B6658D07"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH",
											"source": 0,
											"value": "C0FC247F"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH",
											"source": 0,
											"value": "E037F889"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH",
											"source": 0,
											"value": "92EEFE9B"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH",
											"source": 0,
											"value": "92EEFE9B"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH",
											"source": 0,
											"value": "9D8EF1E1"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH",
											"source": 0,
											"value": "A30FB905"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH",
											"source": 0,
											"value": "A98AD46C"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH",
											"source": 0,
											"value": "869665E9"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH",
											"source": 0,
											"value": "8FC3047D"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH",
											"source": 0,
											"value": "41C0E1B5"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH",
											"source": 0,
											"value": "5E7FFA67"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH",
											"source": 0,
											"value": "5E7FFA67"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH",
											"source": 0,
											"value": "64AABB9E"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH",
											"source": 0,
											"value": "6D546CDD"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH",
											"source": 0,
											"value": "735DE9F7"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH",
											"source": 0,
											"value": "41C0E1B5"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH",
											"source": 0,
											"value": "457F3CB0"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH",
											"source": 0,
											"value": "4ADA218B"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH",
											"source": 0,
											"value": "1BF41362"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH",
											"source": 0,
											"value": "1BF41362"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH",
											"source": 0,
											"value": "238F9B7A"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH",
											"source": 0,
											"value": "26C403ED"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH",
											"source": 0,
											"value": "3FB47A3B"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH",
											"source": 0,
											"value": "11EAC855"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH",
											"source": 0,
											"value": "1458D9D8"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH",
											"source": 0,
											"value": "17700F01"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3261,
											"end": 3270,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3243,
											"end": 3257,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3243,
											"end": 3257,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3243,
											"end": 3270,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3243,
											"end": 3270,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3243,
											"end": 3270,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3243,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 3243,
											"end": 3270,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3243,
											"end": 3270,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3243,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 3243,
											"end": 3270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3243,
											"end": 3270,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 3243,
											"end": 3270,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3243,
											"end": 3270,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3243,
											"end": 3270,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3243,
											"end": 3270,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3315,
											"end": 3318,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 3315,
											"end": 3318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3297,
											"end": 3311,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3297,
											"end": 3306,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3309,
											"end": 3311,
											"name": "PUSH",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 3297,
											"end": 3311,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3297,
											"end": 3311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3297,
											"end": 3311,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3297,
											"end": 3311,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3296,
											"end": 3318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3296,
											"end": 3318,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3296,
											"end": 3318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3296,
											"end": 3318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 3296,
											"end": 3318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3296,
											"end": 3318,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3296,
											"end": 3318,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3280,
											"end": 3292,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3280,
											"end": 3292,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3280,
											"end": 3318,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3280,
											"end": 3318,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3280,
											"end": 3318,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3280,
											"end": 3318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 3280,
											"end": 3318,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3280,
											"end": 3318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3280,
											"end": 3318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 3280,
											"end": 3318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3280,
											"end": 3318,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 3280,
											"end": 3318,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3280,
											"end": 3318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3280,
											"end": 3318,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3280,
											"end": 3318,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3368,
											"end": 3371,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 3368,
											"end": 3371,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3350,
											"end": 3364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 3350,
											"end": 3359,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3362,
											"end": 3364,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 3350,
											"end": 3364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3350,
											"end": 3364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3350,
											"end": 3364,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 3350,
											"end": 3364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3349,
											"end": 3371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 3349,
											"end": 3371,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3349,
											"end": 3371,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3349,
											"end": 3371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 3349,
											"end": 3371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3349,
											"end": 3371,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 3349,
											"end": 3371,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3328,
											"end": 3345,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3328,
											"end": 3345,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3328,
											"end": 3371,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3328,
											"end": 3371,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3328,
											"end": 3371,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3328,
											"end": 3371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 3328,
											"end": 3371,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3328,
											"end": 3371,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3328,
											"end": 3371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 3328,
											"end": 3371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3328,
											"end": 3371,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 3328,
											"end": 3371,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3328,
											"end": 3371,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3328,
											"end": 3371,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3328,
											"end": 3371,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3328,
											"end": 3371,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3328,
											"end": 3371,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3328,
											"end": 3371,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3328,
											"end": 3371,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1451,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1427,
											"end": 1451,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1451,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1451,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1451,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1427,
											"end": 1451,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1451,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1451,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1451,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1451,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1427,
											"end": 1451,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1427,
											"end": 1451,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 1427,
											"end": 1451,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1427,
											"end": 1451,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1427,
											"end": 1451,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1451,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1451,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1451,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1427,
											"end": 1451,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1451,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1427,
											"end": 1451,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 835,
											"end": 867,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 835,
											"end": 867,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 835,
											"end": 867,
											"name": "AND",
											"source": 23
										},
										{
											"begin": 817,
											"end": 868,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 817,
											"end": 868,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 805,
											"end": 807,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 790,
											"end": 808,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 1427,
											"end": 1451,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1427,
											"end": 1451,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1451,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1427,
											"end": 1451,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1451,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1451,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1451,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1451,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1451,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1058,
											"end": 1085,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1058,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1058,
											"end": 1085,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1058,
											"end": 1085,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1058,
											"end": 1085,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1058,
											"end": 1085,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1058,
											"end": 1085,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1058,
											"end": 1085,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1058,
											"end": 1085,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1058,
											"end": 1085,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1058,
											"end": 1085,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1058,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1058,
											"end": 1085,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1058,
											"end": 1085,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1058,
											"end": 1085,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1058,
											"end": 1085,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1058,
											"end": 1085,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1058,
											"end": 1085,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1058,
											"end": 1085,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1058,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1058,
											"end": 1085,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1058,
											"end": 1085,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1025,
											"end": 1050,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 1025,
											"end": 1050,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 1025,
											"end": 1050,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 1013,
											"end": 1015,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 998,
											"end": 1016,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 1058,
											"end": 1085,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 879,
											"end": 1056,
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 4858,
											"end": 4942,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4858,
											"end": 4942,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4858,
											"end": 4942,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4858,
											"end": 4942,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4858,
											"end": 4942,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4858,
											"end": 4942,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 4858,
											"end": 4942,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4858,
											"end": 4942,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4858,
											"end": 4942,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4858,
											"end": 4942,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4858,
											"end": 4942,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 4858,
											"end": 4942,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4858,
											"end": 4942,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4858,
											"end": 4942,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 4858,
											"end": 4942,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 4858,
											"end": 4942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4858,
											"end": 4942,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 4858,
											"end": 4942,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4858,
											"end": 4942,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1283,
											"end": 1309,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1283,
											"end": 1309,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1283,
											"end": 1309,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1283,
											"end": 1309,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1283,
											"end": 1309,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1283,
											"end": 1309,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1283,
											"end": 1309,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1283,
											"end": 1309,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1283,
											"end": 1309,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1283,
											"end": 1309,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1283,
											"end": 1309,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1283,
											"end": 1309,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1283,
											"end": 1309,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1283,
											"end": 1309,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1283,
											"end": 1309,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1283,
											"end": 1309,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1283,
											"end": 1309,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1283,
											"end": 1309,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1607,
											"end": 1654,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1607,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1607,
											"end": 1654,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1607,
											"end": 1654,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1607,
											"end": 1654,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1607,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1607,
											"end": 1654,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1607,
											"end": 1654,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1607,
											"end": 1654,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1607,
											"end": 1654,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1607,
											"end": 1654,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1607,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1607,
											"end": 1654,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1607,
											"end": 1654,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1607,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1607,
											"end": 1654,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1607,
											"end": 1654,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1607,
											"end": 1654,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1607,
											"end": 1654,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3880,
											"end": 4044,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3880,
											"end": 4044,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3880,
											"end": 4044,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3880,
											"end": 4044,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3880,
											"end": 4044,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3880,
											"end": 4044,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 3880,
											"end": 4044,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3880,
											"end": 4044,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3880,
											"end": 4044,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3880,
											"end": 4044,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3880,
											"end": 4044,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 3880,
											"end": 4044,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3880,
											"end": 4044,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 3880,
											"end": 4044,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 3880,
											"end": 4044,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3880,
											"end": 4044,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3880,
											"end": 4044,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 3880,
											"end": 4044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3880,
											"end": 4044,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 3880,
											"end": 4044,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3880,
											"end": 4044,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 3880,
											"end": 4044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4185,
											"end": 4659,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 4185,
											"end": 4659,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4185,
											"end": 4659,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4185,
											"end": 4659,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4185,
											"end": 4659,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4185,
											"end": 4659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 4185,
											"end": 4659,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4185,
											"end": 4659,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4185,
											"end": 4659,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4185,
											"end": 4659,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4185,
											"end": 4659,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 4185,
											"end": 4659,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4185,
											"end": 4659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 4185,
											"end": 4659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 4185,
											"end": 4659,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4185,
											"end": 4659,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4185,
											"end": 4659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 4185,
											"end": 4659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4185,
											"end": 4659,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 4185,
											"end": 4659,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4185,
											"end": 4659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 4185,
											"end": 4659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4185,
											"end": 4659,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 4185,
											"end": 4659,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4185,
											"end": 4659,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4185,
											"end": 4659,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2933,
											"end": 2947,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 2933,
											"end": 2947,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 2926,
											"end": 2948,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 2908,
											"end": 2949,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 2908,
											"end": 2949,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 2896,
											"end": 2898,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 2881,
											"end": 2899,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 4185,
											"end": 4659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2768,
											"end": 2955,
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 5204,
											"end": 5307,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 5204,
											"end": 5307,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5204,
											"end": 5307,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5204,
											"end": 5307,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5204,
											"end": 5307,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5204,
											"end": 5307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 5204,
											"end": 5307,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5204,
											"end": 5307,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5204,
											"end": 5307,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5204,
											"end": 5307,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5204,
											"end": 5307,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 5204,
											"end": 5307,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5204,
											"end": 5307,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5204,
											"end": 5307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 5204,
											"end": 5307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 5204,
											"end": 5307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4948,
											"end": 5198,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 4948,
											"end": 5198,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4948,
											"end": 5198,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4948,
											"end": 5198,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4948,
											"end": 5198,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4948,
											"end": 5198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 4948,
											"end": 5198,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4948,
											"end": 5198,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4948,
											"end": 5198,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4948,
											"end": 5198,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4948,
											"end": 5198,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 4948,
											"end": 5198,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4948,
											"end": 5198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 4948,
											"end": 5198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 4948,
											"end": 5198,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4948,
											"end": 5198,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4948,
											"end": 5198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 4948,
											"end": 5198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4948,
											"end": 5198,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 4948,
											"end": 5198,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4948,
											"end": 5198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 4948,
											"end": 5198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 991,
											"end": 1017,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 991,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 991,
											"end": 1017,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 991,
											"end": 1017,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 991,
											"end": 1017,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 991,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 991,
											"end": 1017,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 991,
											"end": 1017,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 991,
											"end": 1017,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 991,
											"end": 1017,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 991,
											"end": 1017,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 991,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 991,
											"end": 1017,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 991,
											"end": 1017,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 991,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 991,
											"end": 1017,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 991,
											"end": 1017,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 991,
											"end": 1017,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 991,
											"end": 1017,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 991,
											"end": 1017,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 991,
											"end": 1017,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 991,
											"end": 1017,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1661,
											"end": 1705,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1661,
											"end": 1705,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1661,
											"end": 1705,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1661,
											"end": 1705,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1661,
											"end": 1705,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1661,
											"end": 1705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1661,
											"end": 1705,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1661,
											"end": 1705,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1661,
											"end": 1705,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1661,
											"end": 1705,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1661,
											"end": 1705,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1661,
											"end": 1705,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1661,
											"end": 1705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1661,
											"end": 1705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1661,
											"end": 1705,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1661,
											"end": 1705,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1661,
											"end": 1705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1661,
											"end": 1705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1661,
											"end": 1705,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1661,
											"end": 1705,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1661,
											"end": 1705,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1661,
											"end": 1705,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1661,
											"end": 1705,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1661,
											"end": 1705,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1661,
											"end": 1705,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1661,
											"end": 1705,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1661,
											"end": 1705,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1661,
											"end": 1705,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1661,
											"end": 1705,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1661,
											"end": 1705,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1661,
											"end": 1705,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1661,
											"end": 1705,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1661,
											"end": 1705,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1661,
											"end": 1705,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1661,
											"end": 1705,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1661,
											"end": 1705,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1661,
											"end": 1705,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1661,
											"end": 1705,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1661,
											"end": 1705,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1661,
											"end": 1705,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1661,
											"end": 1705,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1661,
											"end": 1705,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1661,
											"end": 1705,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1661,
											"end": 1705,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1661,
											"end": 1705,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1661,
											"end": 1705,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1661,
											"end": 1705,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1123,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1091,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1123,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1123,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1123,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1091,
											"end": 1123,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1123,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1091,
											"end": 1123,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1123,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1123,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1091,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1123,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1091,
											"end": 1123,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1091,
											"end": 1123,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1123,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1123,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1315,
											"end": 1361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1315,
											"end": 1361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1530,
											"end": 1558,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1530,
											"end": 1558,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1530,
											"end": 1558,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1530,
											"end": 1558,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1530,
											"end": 1558,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1530,
											"end": 1558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1530,
											"end": 1558,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1530,
											"end": 1558,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1530,
											"end": 1558,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1530,
											"end": 1558,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1530,
											"end": 1558,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1530,
											"end": 1558,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1530,
											"end": 1558,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 1530,
											"end": 1558,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1530,
											"end": 1558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1530,
											"end": 1558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1530,
											"end": 1558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1530,
											"end": 1558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1530,
											"end": 1558,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3384,
											"end": 3749,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 3384,
											"end": 3749,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3384,
											"end": 3749,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3384,
											"end": 3749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3384,
											"end": 3749,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3384,
											"end": 3749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 3384,
											"end": 3749,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3384,
											"end": 3749,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3384,
											"end": 3749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3384,
											"end": 3749,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3384,
											"end": 3749,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 3384,
											"end": 3749,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3384,
											"end": 3749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 3384,
											"end": 3749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 3384,
											"end": 3749,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3384,
											"end": 3749,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3384,
											"end": 3749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 3384,
											"end": 3749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3384,
											"end": 3749,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 3384,
											"end": 3749,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3384,
											"end": 3749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 3384,
											"end": 3749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 964,
											"end": 984,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 964,
											"end": 984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 964,
											"end": 984,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 964,
											"end": 984,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 964,
											"end": 984,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 964,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 964,
											"end": 984,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 964,
											"end": 984,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 964,
											"end": 984,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 964,
											"end": 984,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 964,
											"end": 984,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 964,
											"end": 984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 964,
											"end": 984,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 964,
											"end": 984,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 964,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 964,
											"end": 984,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 964,
											"end": 984,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 964,
											"end": 984,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 964,
											"end": 984,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3755,
											"end": 3874,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 3755,
											"end": 3874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3755,
											"end": 3874,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3755,
											"end": 3874,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3755,
											"end": 3874,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3755,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 3755,
											"end": 3874,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3755,
											"end": 3874,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3755,
											"end": 3874,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3755,
											"end": 3874,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3755,
											"end": 3874,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 3755,
											"end": 3874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3755,
											"end": 3874,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3755,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 3755,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 3755,
											"end": 3874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3103,
											"end": 3200,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3103,
											"end": 3200,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3103,
											"end": 3200,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3103,
											"end": 3200,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3103,
											"end": 3200,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3103,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 3103,
											"end": 3200,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3103,
											"end": 3200,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3103,
											"end": 3200,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3103,
											"end": 3200,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3103,
											"end": 3200,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 3103,
											"end": 3200,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3103,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 3103,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 3103,
											"end": 3200,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3103,
											"end": 3200,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3103,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 3103,
											"end": 3200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3103,
											"end": 3200,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 3103,
											"end": 3200,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3103,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 3103,
											"end": 3200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4050,
											"end": 4179,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 4050,
											"end": 4179,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4050,
											"end": 4179,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4050,
											"end": 4179,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4050,
											"end": 4179,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4050,
											"end": 4179,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 4050,
											"end": 4179,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4050,
											"end": 4179,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4050,
											"end": 4179,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4050,
											"end": 4179,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4050,
											"end": 4179,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 4050,
											"end": 4179,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4050,
											"end": 4179,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4050,
											"end": 4179,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 4050,
											"end": 4179,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 4050,
											"end": 4179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1199,
											"end": 1235,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1199,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1199,
											"end": 1235,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1199,
											"end": 1235,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1199,
											"end": 1235,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1199,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1199,
											"end": 1235,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1199,
											"end": 1235,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1199,
											"end": 1235,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1199,
											"end": 1235,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1199,
											"end": 1235,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1199,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1199,
											"end": 1235,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1199,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1199,
											"end": 1235,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1199,
											"end": 1235,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1199,
											"end": 1235,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1199,
											"end": 1235,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 1421,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1397,
											"end": 1421,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 1421,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 1421,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 1421,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 1421,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 1397,
											"end": 1421,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 1421,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1397,
											"end": 1421,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 1421,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 1421,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 1397,
											"end": 1421,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1397,
											"end": 1421,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 1397,
											"end": 1421,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 1421,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1397,
											"end": 1421,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1397,
											"end": 1421,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 1421,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 1421,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1241,
											"end": 1277,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1241,
											"end": 1277,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1241,
											"end": 1277,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1241,
											"end": 1277,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1241,
											"end": 1277,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1241,
											"end": 1277,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1241,
											"end": 1277,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1241,
											"end": 1277,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 1277,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1241,
											"end": 1277,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1241,
											"end": 1277,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1241,
											"end": 1277,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1241,
											"end": 1277,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1241,
											"end": 1277,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1241,
											"end": 1277,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1241,
											"end": 1277,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1241,
											"end": 1277,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1241,
											"end": 1277,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1368,
											"end": 1391,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1368,
											"end": 1391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1368,
											"end": 1391,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1368,
											"end": 1391,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1368,
											"end": 1391,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1368,
											"end": 1391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 1368,
											"end": 1391,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1368,
											"end": 1391,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1368,
											"end": 1391,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1368,
											"end": 1391,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1368,
											"end": 1391,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 1368,
											"end": 1391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1368,
											"end": 1391,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 1368,
											"end": 1391,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1368,
											"end": 1391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1368,
											"end": 1391,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1368,
											"end": 1391,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1368,
											"end": 1391,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1368,
											"end": 1391,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1165,
											"end": 1193,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1165,
											"end": 1193,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1165,
											"end": 1193,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1165,
											"end": 1193,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1165,
											"end": 1193,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1165,
											"end": 1193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1165,
											"end": 1193,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1165,
											"end": 1193,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1165,
											"end": 1193,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1165,
											"end": 1193,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1165,
											"end": 1193,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1165,
											"end": 1193,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1165,
											"end": 1193,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1165,
											"end": 1193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1165,
											"end": 1193,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1165,
											"end": 1193,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1165,
											"end": 1193,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1165,
											"end": 1193,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1052,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1023,
											"end": 1052,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1052,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1052,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1052,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1052,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1023,
											"end": 1052,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1052,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1023,
											"end": 1052,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1052,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1052,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1023,
											"end": 1052,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1052,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1052,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1023,
											"end": 1052,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1023,
											"end": 1052,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1052,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1052,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1493,
											"end": 1524,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1493,
											"end": 1524,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1493,
											"end": 1524,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1493,
											"end": 1524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1493,
											"end": 1524,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1493,
											"end": 1524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 1493,
											"end": 1524,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1493,
											"end": 1524,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1493,
											"end": 1524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1493,
											"end": 1524,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1493,
											"end": 1524,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 1493,
											"end": 1524,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1493,
											"end": 1524,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 1493,
											"end": 1524,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1493,
											"end": 1524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1493,
											"end": 1524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1493,
											"end": 1524,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1493,
											"end": 1524,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1493,
											"end": 1524,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1457,
											"end": 1487,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1457,
											"end": 1487,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1457,
											"end": 1487,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1457,
											"end": 1487,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1457,
											"end": 1487,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1457,
											"end": 1487,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 1457,
											"end": 1487,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1457,
											"end": 1487,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1457,
											"end": 1487,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1457,
											"end": 1487,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1457,
											"end": 1487,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 1457,
											"end": 1487,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1457,
											"end": 1487,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 1457,
											"end": 1487,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1457,
											"end": 1487,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1457,
											"end": 1487,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1457,
											"end": 1487,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1457,
											"end": 1487,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1457,
											"end": 1487,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1564,
											"end": 1601,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1564,
											"end": 1601,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1564,
											"end": 1601,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1564,
											"end": 1601,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1564,
											"end": 1601,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1564,
											"end": 1601,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 1564,
											"end": 1601,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1564,
											"end": 1601,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1564,
											"end": 1601,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1564,
											"end": 1601,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1564,
											"end": 1601,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 1564,
											"end": 1601,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1564,
											"end": 1601,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1564,
											"end": 1601,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1564,
											"end": 1601,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1564,
											"end": 1601,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1564,
											"end": 1601,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1564,
											"end": 1601,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1564,
											"end": 1601,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1129,
											"end": 1159,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1129,
											"end": 1159,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1129,
											"end": 1159,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1129,
											"end": 1159,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1129,
											"end": 1159,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1129,
											"end": 1159,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 1129,
											"end": 1159,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1129,
											"end": 1159,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1129,
											"end": 1159,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1129,
											"end": 1159,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1129,
											"end": 1159,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 1129,
											"end": 1159,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1129,
											"end": 1159,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1129,
											"end": 1159,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1129,
											"end": 1159,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1129,
											"end": 1159,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1129,
											"end": 1159,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1129,
											"end": 1159,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4858,
											"end": 4942,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 4858,
											"end": 4942,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2021,
											"end": 2026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2026,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2021,
											"end": 2026,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2007,
											"end": 2017,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2007,
											"end": 2026,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 1999,
											"end": 2044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4930,
											"end": 4935,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4913,
											"end": 4935,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4913,
											"end": 4935,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4913,
											"end": 4935,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4913,
											"end": 4935,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4913,
											"end": 4935,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4858,
											"end": 4942,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3880,
											"end": 4044,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 3880,
											"end": 4044,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2021,
											"end": 2026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2026,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2021,
											"end": 2026,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2007,
											"end": 2017,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2007,
											"end": 2026,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 1999,
											"end": 2044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3992,
											"end": 4002,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3978,
											"end": 4037,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "30FDCD4F0C28C5DBCBC3F59AA8E2260C7F58AC45BE2A2DCA652999AF89C33E0"
										},
										{
											"begin": 4004,
											"end": 4013,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4015,
											"end": 4021,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4023,
											"end": 4024,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4026,
											"end": 4036,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 4026,
											"end": 4034,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 4026,
											"end": 4036,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4026,
											"end": 4036,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 4026,
											"end": 4036,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3978,
											"end": 4037,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3978,
											"end": 4037,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3978,
											"end": 4037,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 3978,
											"end": 4037,
											"modifierDepth": 1,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 3978,
											"end": 4037,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3978,
											"end": 4037,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3978,
											"end": 4037,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3978,
											"end": 4037,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3978,
											"end": 4037,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 3978,
											"end": 4037,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3978,
											"end": 4037,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 3978,
											"end": 4037,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3978,
											"end": 4037,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3978,
											"end": 4037,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3978,
											"end": 4037,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3978,
											"end": 4037,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3978,
											"end": 4037,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3978,
											"end": 4037,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3978,
											"end": 4037,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 3880,
											"end": 4044,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3880,
											"end": 4044,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3880,
											"end": 4044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4185,
											"end": 4659,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 4185,
											"end": 4659,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4269,
											"end": 4293,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4305,
											"end": 4324,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4342,
											"end": 4353,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4305,
											"end": 4354,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4305,
											"end": 4354,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4365,
											"end": 4385,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4395,
											"end": 4399,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4395,
											"end": 4405,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4395,
											"end": 4405,
											"name": "PUSH",
											"source": 0,
											"value": "3850C7BD"
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 4395,
											"end": 4407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4364,
											"end": 4407,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4364,
											"end": 4407,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4364,
											"end": 4407,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4364,
											"end": 4407,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4364,
											"end": 4407,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4364,
											"end": 4407,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4364,
											"end": 4407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4364,
											"end": 4407,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4417,
											"end": 4434,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4437,
											"end": 4441,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4437,
											"end": 4451,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4437,
											"end": 4451,
											"name": "PUSH",
											"source": 0,
											"value": "1A686502"
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 4437,
											"end": 4453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4417,
											"end": 4453,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4417,
											"end": 4453,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4417,
											"end": 4453,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4463,
											"end": 4480,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4483,
											"end": 4536,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 4502,
											"end": 4510,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 4512,
											"end": 4524,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4526,
											"end": 4535,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4483,
											"end": 4501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 4483,
											"end": 4536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4483,
											"end": 4536,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 4483,
											"end": 4536,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4463,
											"end": 4536,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4546,
											"end": 4562,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4583,
											"end": 4586,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 4566,
											"end": 4579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 4463,
											"end": 4536,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4578,
											"end": 4579,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4566,
											"end": 4579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 4566,
											"end": 4579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4566,
											"end": 4579,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 4566,
											"end": 4579,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4565,
											"end": 4586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 4565,
											"end": 4586,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4565,
											"end": 4586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4565,
											"end": 4586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 4565,
											"end": 4586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4565,
											"end": 4586,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 4565,
											"end": 4586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4546,
											"end": 4586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4632,
											"end": 4651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 4546,
											"end": 4586,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4632,
											"end": 4640,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 4632,
											"end": 4651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 4632,
											"end": 4651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4632,
											"end": 4651,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 4632,
											"end": 4651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4619,
											"end": 4651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4619,
											"end": 4651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4619,
											"end": 4651,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4619,
											"end": 4651,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4619,
											"end": 4651,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 4185,
											"end": 4659,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4185,
											"end": 4659,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5204,
											"end": 5307,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 5204,
											"end": 5307,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2021,
											"end": 2026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2026,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2021,
											"end": 2026,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2007,
											"end": 2017,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2007,
											"end": 2026,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 1999,
											"end": 2044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5300,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5249,
											"end": 5300,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5257,
											"end": 5267,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5257,
											"end": 5267,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5278,
											"end": 5299,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5300,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5300,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5300,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 5249,
											"end": 5300,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5300,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5300,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5249,
											"end": 5300,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5300,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5300,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5278,
											"end": 5299,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5257,
											"end": 5267,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5300,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5300,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5300,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5300,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5300,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5300,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5300,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5300,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5300,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5300,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5300,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 5249,
											"end": 5300,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5300,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5300,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5249,
											"end": 5300,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5300,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5300,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5300,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5249,
											"end": 5300,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5300,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 5249,
											"end": 5300,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5300,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5204,
											"end": 5307,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4948,
											"end": 5198,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 4948,
											"end": 5198,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2021,
											"end": 2026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2026,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2021,
											"end": 2026,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2007,
											"end": 2017,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2007,
											"end": 2026,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 1999,
											"end": 2044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5023,
											"end": 5042,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5045,
											"end": 5066,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 5045,
											"end": 5057,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5060,
											"end": 5066,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "3B9ACA00"
										},
										{
											"begin": 5045,
											"end": 5066,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 5045,
											"end": 5066,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5045,
											"end": 5066,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 5045,
											"end": 5066,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5023,
											"end": 5066,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5023,
											"end": 5066,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5109,
											"end": 5120,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5084,
											"end": 5105,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 5084,
											"end": 5120,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5084,
											"end": 5120,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5076,
											"end": 5145,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 5076,
											"end": 5145,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5076,
											"end": 5145,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5076,
											"end": 5145,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5076,
											"end": 5145,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5076,
											"end": 5145,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6971,
											"end": 6973,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 5076,
											"end": 5145,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5076,
											"end": 5145,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5076,
											"end": 5145,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6953,
											"end": 6974,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 7010,
											"end": 7012,
											"name": "PUSH",
											"source": 23,
											"value": "14"
										},
										{
											"begin": 6990,
											"end": 7008,
											"name": "PUSH",
											"source": 23,
											"value": "24"
										},
										{
											"begin": 6990,
											"end": 7008,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 6990,
											"end": 7008,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 6983,
											"end": 7013,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E73756666696369656E742062616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7029,
											"end": 7047,
											"name": "PUSH",
											"source": 23,
											"value": "44"
										},
										{
											"begin": 7029,
											"end": 7047,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 7029,
											"end": 7047,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 7022,
											"end": 7072,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 7089,
											"end": 7107,
											"name": "PUSH",
											"source": 23,
											"value": "64"
										},
										{
											"begin": 7089,
											"end": 7107,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 5076,
											"end": 5145,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 6769,
											"end": 7113,
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 5076,
											"end": 5145,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 5076,
											"end": 5145,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5163,
											"end": 5168,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5163,
											"end": 5168,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5163,
											"end": 5168,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5155,
											"end": 5191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5155,
											"end": 5191,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5163,
											"end": 5168,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5163,
											"end": 5168,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5163,
											"end": 5168,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5163,
											"end": 5168,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5155,
											"end": 5191,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5155,
											"end": 5191,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5155,
											"end": 5191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 5155,
											"end": 5191,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5155,
											"end": 5191,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5179,
											"end": 5190,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5179,
											"end": 5190,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5155,
											"end": 5191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5163,
											"end": 5168,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5155,
											"end": 5191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5179,
											"end": 5190,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5163,
											"end": 5168,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 5155,
											"end": 5191,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 5155,
											"end": 5191,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 5155,
											"end": 5191,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 5155,
											"end": 5191,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5155,
											"end": 5191,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5155,
											"end": 5191,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5155,
											"end": 5191,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5155,
											"end": 5191,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5155,
											"end": 5191,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5155,
											"end": 5191,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5155,
											"end": 5191,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 5155,
											"end": 5191,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5155,
											"end": 5191,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5155,
											"end": 5191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5155,
											"end": 5191,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5155,
											"end": 5191,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 5155,
											"end": 5191,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5155,
											"end": 5191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5155,
											"end": 5191,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5155,
											"end": 5191,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 5155,
											"end": 5191,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5155,
											"end": 5191,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5198,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4948,
											"end": 5198,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4948,
											"end": 5198,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 1315,
											"end": 1361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 1315,
											"end": 1361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1361,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3384,
											"end": 3749,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 3384,
											"end": 3749,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2021,
											"end": 2026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2026,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2021,
											"end": 2026,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2007,
											"end": 2017,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2007,
											"end": 2026,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 1999,
											"end": 2044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3675,
											"end": 3685,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3661,
											"end": 3742,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "30FDCD4F0C28C5DBCBC3F59AA8E2260C7F58AC45BE2A2DCA652999AF89C33E0"
										},
										{
											"begin": 3709,
											"end": 3726,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3728,
											"end": 3729,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3731,
											"end": 3741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 3731,
											"end": 3739,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 3731,
											"end": 3741,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3731,
											"end": 3741,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 3731,
											"end": 3741,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3661,
											"end": 3742,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3661,
											"end": 3742,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3661,
											"end": 3742,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7797,
											"end": 7800,
											"name": "PUSH",
											"source": 23,
											"value": "80"
										},
										{
											"begin": 7779,
											"end": 7801,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 7779,
											"end": 7801,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 7779,
											"end": 7801,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 7838,
											"end": 7840,
											"name": "PUSH",
											"source": 23,
											"value": "12"
										},
										{
											"begin": 7817,
											"end": 7836,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 7817,
											"end": 7836,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 7817,
											"end": 7836,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 7810,
											"end": 7841,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "151A5B59599C985B594818591A9D5CDD1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7872,
											"end": 7875,
											"name": "PUSH",
											"source": 23,
											"value": "A0"
										},
										{
											"begin": 7857,
											"end": 7876,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 7857,
											"end": 7876,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 7850,
											"end": 7899,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 7966,
											"end": 7970,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 7951,
											"end": 7971,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 7951,
											"end": 7971,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 7944,
											"end": 7980,
											"name": "SWAP5",
											"source": 23
										},
										{
											"begin": 7944,
											"end": 7980,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 7944,
											"end": 7980,
											"name": "SWAP5",
											"source": 23
										},
										{
											"begin": 7944,
											"end": 7980,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 7996,
											"end": 8014,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 7996,
											"end": 8014,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 7989,
											"end": 8023,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 7989,
											"end": 8023,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 7989,
											"end": 8023,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 7989,
											"end": 8023,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 8039,
											"end": 8057,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 8039,
											"end": 8057,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 8032,
											"end": 8066,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 7931,
											"end": 7934,
											"name": "PUSH",
											"source": 23,
											"value": "C0"
										},
										{
											"begin": 7916,
											"end": 7935,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 3661,
											"end": 3742,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3661,
											"end": 3742,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3661,
											"end": 3742,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3661,
											"end": 3742,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3661,
											"end": 3742,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3661,
											"end": 3742,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3661,
											"end": 3742,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 3384,
											"end": 3749,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3384,
											"end": 3749,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3755,
											"end": 3874,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 3755,
											"end": 3874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3800,
											"end": 3807,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3819,
											"end": 3832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3835,
											"end": 3845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 3835,
											"end": 3843,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 3835,
											"end": 3845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3835,
											"end": 3845,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 3835,
											"end": 3845,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3819,
											"end": 3845,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3755,
											"end": 3874,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3755,
											"end": 3874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3103,
											"end": 3200,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 3103,
											"end": 3200,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2021,
											"end": 2026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2026,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2021,
											"end": 2026,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2007,
											"end": 2017,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2007,
											"end": 2026,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 1999,
											"end": 2044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3175,
											"end": 3180,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3175,
											"end": 3193,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3175,
											"end": 3193,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3175,
											"end": 3193,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3175,
											"end": 3193,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3175,
											"end": 3193,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3175,
											"end": 3193,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3175,
											"end": 3193,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3175,
											"end": 3193,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3175,
											"end": 3193,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3175,
											"end": 3193,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3175,
											"end": 3193,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3175,
											"end": 3193,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3175,
											"end": 3193,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3103,
											"end": 3200,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4050,
											"end": 4179,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 4050,
											"end": 4179,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2021,
											"end": 2026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2026,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2021,
											"end": 2026,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2007,
											"end": 2017,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2007,
											"end": 2026,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 1999,
											"end": 2044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4125,
											"end": 4135,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4111,
											"end": 4172,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "30FDCD4F0C28C5DBCBC3F59AA8E2260C7F58AC45BE2A2DCA652999AF89C33E0"
										},
										{
											"begin": 4155,
											"end": 4156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4155,
											"end": 4156,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4161,
											"end": 4171,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 4161,
											"end": 4169,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 4161,
											"end": 4171,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4161,
											"end": 4171,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 4161,
											"end": 4171,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4111,
											"end": 4172,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4111,
											"end": 4172,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4111,
											"end": 4172,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8379,
											"end": 8382,
											"name": "PUSH",
											"source": 23,
											"value": "80"
										},
										{
											"begin": 8361,
											"end": 8383,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 8361,
											"end": 8383,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 8361,
											"end": 8383,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 8420,
											"end": 8422,
											"name": "PUSH",
											"source": 23,
											"value": "E"
										},
										{
											"begin": 8399,
											"end": 8418,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 8399,
											"end": 8418,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 8399,
											"end": 8418,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 8392,
											"end": 8423,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "18DBDB9D995C9D081D1BC81413D3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8454,
											"end": 8457,
											"name": "PUSH",
											"source": 23,
											"value": "A0"
										},
										{
											"begin": 8439,
											"end": 8458,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 8439,
											"end": 8458,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 8432,
											"end": 8477,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 8544,
											"end": 8548,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 8529,
											"end": 8549,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 8529,
											"end": 8549,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 8522,
											"end": 8558,
											"name": "SWAP5",
											"source": 23
										},
										{
											"begin": 8522,
											"end": 8558,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 8522,
											"end": 8558,
											"name": "SWAP5",
											"source": 23
										},
										{
											"begin": 8522,
											"end": 8558,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 8574,
											"end": 8592,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 8574,
											"end": 8592,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 8567,
											"end": 8601,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 8567,
											"end": 8601,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 8567,
											"end": 8601,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 8567,
											"end": 8601,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 8617,
											"end": 8635,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 8617,
											"end": 8635,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 8610,
											"end": 8644,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 8509,
											"end": 8512,
											"name": "PUSH",
											"source": 23,
											"value": "C0"
										},
										{
											"begin": 8494,
											"end": 8513,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 4111,
											"end": 4172,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4111,
											"end": 4172,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4111,
											"end": 4172,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4111,
											"end": 4172,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4111,
											"end": 4172,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4111,
											"end": 4172,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4111,
											"end": 4172,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 4050,
											"end": 4179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7386,
											"end": 7626,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 7386,
											"end": 7626,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7504,
											"end": 7520,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 7504,
											"end": 7520,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3FABE5A3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7429,
											"end": 7436,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7429,
											"end": 7436,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7504,
											"end": 7520,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7504,
											"end": 7520,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7429,
											"end": 7436,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7429,
											"end": 7436,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7504,
											"end": 7520,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7504,
											"end": 7520,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7550,
											"end": 7575,
											"name": "PUSH",
											"source": 0,
											"value": "FEAF968C"
										},
										{
											"begin": 7550,
											"end": 7575,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7504,
											"end": 7520,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 7550,
											"end": 7577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7531,
											"end": 7577,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7531,
											"end": 7577,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7531,
											"end": 7577,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7531,
											"end": 7577,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7531,
											"end": 7577,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7531,
											"end": 7577,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7602,
											"end": 7607,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7610,
											"end": 7618,
											"name": "PUSH",
											"source": 0,
											"value": "2540BE400"
										},
										{
											"begin": 7602,
											"end": 7618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 7602,
											"end": 7618,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7602,
											"end": 7618,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7602,
											"end": 7618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 7602,
											"end": 7618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7602,
											"end": 7618,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 7602,
											"end": 7618,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7587,
											"end": 7619,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7587,
											"end": 7619,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7587,
											"end": 7619,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7587,
											"end": 7619,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7386,
											"end": 7626,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7386,
											"end": 7626,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4665,
											"end": 4852,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 4665,
											"end": 4852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4775,
											"end": 4782,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4835,
											"end": 4844,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4809,
											"end": 4832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4809,
											"end": 4832,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4809,
											"end": 4832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4809,
											"end": 4817,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 4809,
											"end": 4832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 4809,
											"end": 4832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4809,
											"end": 4832,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 4809,
											"end": 4832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4809,
											"end": 4844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 4809,
											"end": 4844,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4809,
											"end": 4844,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4809,
											"end": 4844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 4809,
											"end": 4844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4809,
											"end": 4844,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 4809,
											"end": 4844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4794,
											"end": 4845,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 4665,
											"end": 4852,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4665,
											"end": 4852,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 141,
											"name": "tag",
											"source": 23,
											"value": "258"
										},
										{
											"begin": 14,
											"end": 141,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 75,
											"end": 85,
											"name": "PUSH",
											"source": 23,
											"value": "4E487B71"
										},
										{
											"begin": 70,
											"end": 73,
											"name": "PUSH",
											"source": 23,
											"value": "E0"
										},
										{
											"begin": 66,
											"end": 86,
											"name": "SHL",
											"source": 23
										},
										{
											"begin": 63,
											"end": 64,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 56,
											"end": 87,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 106,
											"end": 110,
											"name": "PUSH",
											"source": 23,
											"value": "11"
										},
										{
											"begin": 103,
											"end": 104,
											"name": "PUSH",
											"source": 23,
											"value": "4"
										},
										{
											"begin": 96,
											"end": 111,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 130,
											"end": 134,
											"name": "PUSH",
											"source": 23,
											"value": "24"
										},
										{
											"begin": 127,
											"end": 128,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 120,
											"end": 135,
											"name": "REVERT",
											"source": 23
										},
										{
											"begin": 146,
											"end": 271,
											"name": "tag",
											"source": 23,
											"value": "42"
										},
										{
											"begin": 146,
											"end": 271,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 211,
											"end": 220,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 211,
											"end": 220,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 211,
											"end": 220,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 232,
											"end": 242,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 232,
											"end": 242,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 232,
											"end": 242,
											"name": "GT",
											"source": 23
										},
										{
											"begin": 229,
											"end": 265,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 229,
											"end": 265,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "236"
										},
										{
											"begin": 229,
											"end": 265,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 245,
											"end": 263,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "236"
										},
										{
											"begin": 245,
											"end": 263,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "258"
										},
										{
											"begin": 245,
											"end": 263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 276,
											"end": 444,
											"name": "tag",
											"source": 23,
											"value": "44"
										},
										{
											"begin": 276,
											"end": 444,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 349,
											"end": 358,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 349,
											"end": 358,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 349,
											"end": 358,
											"name": "MUL",
											"source": 23
										},
										{
											"begin": 380,
											"end": 389,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 380,
											"end": 389,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 397,
											"end": 412,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 397,
											"end": 412,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 397,
											"end": 412,
											"name": "DIV",
											"source": 23
										},
										{
											"begin": 391,
											"end": 413,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 391,
											"end": 413,
											"name": "EQ",
											"source": 23
										},
										{
											"begin": 377,
											"end": 414,
											"name": "OR",
											"source": 23
										},
										{
											"begin": 367,
											"end": 438,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "236"
										},
										{
											"begin": 367,
											"end": 438,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 418,
											"end": 436,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "236"
										},
										{
											"begin": 418,
											"end": 436,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "258"
										},
										{
											"begin": 418,
											"end": 436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 449,
											"end": 666,
											"name": "tag",
											"source": 23,
											"value": "46"
										},
										{
											"begin": 449,
											"end": 666,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 489,
											"end": 490,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 515,
											"end": 516,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 505,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "274"
										},
										{
											"begin": 505,
											"end": 637,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 559,
											"end": 569,
											"name": "PUSH",
											"source": 23,
											"value": "4E487B71"
										},
										{
											"begin": 554,
											"end": 557,
											"name": "PUSH",
											"source": 23,
											"value": "E0"
										},
										{
											"begin": 550,
											"end": 570,
											"name": "SHL",
											"source": 23
										},
										{
											"begin": 547,
											"end": 548,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 540,
											"end": 571,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 594,
											"end": 598,
											"name": "PUSH",
											"source": 23,
											"value": "12"
										},
										{
											"begin": 591,
											"end": 592,
											"name": "PUSH",
											"source": 23,
											"value": "4"
										},
										{
											"begin": 584,
											"end": 599,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 622,
											"end": 626,
											"name": "PUSH",
											"source": 23,
											"value": "24"
										},
										{
											"begin": 619,
											"end": 620,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 612,
											"end": 627,
											"name": "REVERT",
											"source": 23
										},
										{
											"begin": 505,
											"end": 637,
											"name": "tag",
											"source": 23,
											"value": "274"
										},
										{
											"begin": 505,
											"end": 637,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 651,
											"end": 660,
											"name": "DIV",
											"source": 23
										},
										{
											"begin": 651,
											"end": 660,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 449,
											"end": 666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 1061,
											"end": 1188,
											"name": "tag",
											"source": 23,
											"value": "259"
										},
										{
											"begin": 1061,
											"end": 1188,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1122,
											"end": 1132,
											"name": "PUSH",
											"source": 23,
											"value": "4E487B71"
										},
										{
											"begin": 1117,
											"end": 1120,
											"name": "PUSH",
											"source": 23,
											"value": "E0"
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SHL",
											"source": 23
										},
										{
											"begin": 1110,
											"end": 1111,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 1103,
											"end": 1134,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 1153,
											"end": 1157,
											"name": "PUSH",
											"source": 23,
											"value": "41"
										},
										{
											"begin": 1150,
											"end": 1151,
											"name": "PUSH",
											"source": 23,
											"value": "4"
										},
										{
											"begin": 1143,
											"end": 1158,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 1177,
											"end": 1181,
											"name": "PUSH",
											"source": 23,
											"value": "24"
										},
										{
											"begin": 1174,
											"end": 1175,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 1167,
											"end": 1182,
											"name": "REVERT",
											"source": 23
										},
										{
											"begin": 1193,
											"end": 1912,
											"name": "tag",
											"source": 23,
											"value": "260"
										},
										{
											"begin": 1193,
											"end": 1912,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1236,
											"end": 1241,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 1289,
											"end": 1292,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 1282,
											"end": 1286,
											"name": "PUSH",
											"source": 23,
											"value": "1F"
										},
										{
											"begin": 1274,
											"end": 1280,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 1270,
											"end": 1287,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 1266,
											"end": 1293,
											"name": "SLT",
											"source": 23
										},
										{
											"begin": 1256,
											"end": 1311,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "279"
										},
										{
											"begin": 1256,
											"end": 1311,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 1307,
											"end": 1308,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 1304,
											"end": 1305,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 1297,
											"end": 1309,
											"name": "REVERT",
											"source": 23
										},
										{
											"begin": 1256,
											"end": 1311,
											"name": "tag",
											"source": 23,
											"value": "279"
										},
										{
											"begin": 1256,
											"end": 1311,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1343,
											"end": 1349,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 1330,
											"end": 1350,
											"name": "CALLDATALOAD",
											"source": 23
										},
										{
											"begin": 1369,
											"end": 1387,
											"name": "PUSH",
											"source": 23,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1406,
											"end": 1408,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 1402,
											"end": 1404,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 1399,
											"end": 1409,
											"name": "GT",
											"source": 23
										},
										{
											"begin": 1396,
											"end": 1432,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 1396,
											"end": 1432,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "281"
										},
										{
											"begin": 1396,
											"end": 1432,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "281"
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "259"
										},
										{
											"begin": 1412,
											"end": 1430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "tag",
											"source": 23,
											"value": "281"
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1487,
											"end": 1489,
											"name": "PUSH",
											"source": 23,
											"value": "40"
										},
										{
											"begin": 1481,
											"end": 1490,
											"name": "MLOAD",
											"source": 23
										},
										{
											"begin": 1455,
											"end": 1457,
											"name": "PUSH",
											"source": 23,
											"value": "1F"
										},
										{
											"begin": 1541,
											"end": 1554,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 1541,
											"end": 1554,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1537,
											"end": 1559,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 1537,
											"end": 1559,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 1537,
											"end": 1559,
											"name": "AND",
											"source": 23
										},
										{
											"begin": 1561,
											"end": 1563,
											"name": "PUSH",
											"source": 23,
											"value": "3F"
										},
										{
											"begin": 1533,
											"end": 1564,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 1529,
											"end": 1569,
											"name": "AND",
											"source": 23
										},
										{
											"begin": 1517,
											"end": 1570,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 1517,
											"end": 1570,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 1517,
											"end": 1570,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 1585,
											"end": 1603,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 1585,
											"end": 1603,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 1585,
											"end": 1603,
											"name": "GT",
											"source": 23
										},
										{
											"begin": 1605,
											"end": 1627,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 1605,
											"end": 1627,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 1605,
											"end": 1627,
											"name": "LT",
											"source": 23
										},
										{
											"begin": 1582,
											"end": 1628,
											"name": "OR",
											"source": 23
										},
										{
											"begin": 1579,
											"end": 1651,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 1579,
											"end": 1651,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "283"
										},
										{
											"begin": 1579,
											"end": 1651,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 1631,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "283"
										},
										{
											"begin": 1631,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "259"
										},
										{
											"begin": 1631,
											"end": 1649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 1631,
											"end": 1649,
											"name": "tag",
											"source": 23,
											"value": "283"
										},
										{
											"begin": 1631,
											"end": 1649,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1671,
											"end": 1681,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 1667,
											"end": 1669,
											"name": "PUSH",
											"source": 23,
											"value": "40"
										},
										{
											"begin": 1660,
											"end": 1682,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 1706,
											"end": 1708,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 1698,
											"end": 1704,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 1691,
											"end": 1709,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 1752,
											"end": 1755,
											"name": "DUP7",
											"source": 23
										},
										{
											"begin": 1745,
											"end": 1749,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 1740,
											"end": 1742,
											"name": "DUP6",
											"source": 23
										},
										{
											"begin": 1732,
											"end": 1738,
											"name": "DUP9",
											"source": 23
										},
										{
											"begin": 1728,
											"end": 1743,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 1724,
											"end": 1750,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 1721,
											"end": 1756,
											"name": "GT",
											"source": 23
										},
										{
											"begin": 1718,
											"end": 1773,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 1718,
											"end": 1773,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "284"
										},
										{
											"begin": 1718,
											"end": 1773,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 1769,
											"end": 1770,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 1766,
											"end": 1767,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 1759,
											"end": 1771,
											"name": "REVERT",
											"source": 23
										},
										{
											"begin": 1718,
											"end": 1773,
											"name": "tag",
											"source": 23,
											"value": "284"
										},
										{
											"begin": 1718,
											"end": 1773,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1833,
											"end": 1835,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 1826,
											"end": 1830,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 1818,
											"end": 1824,
											"name": "DUP8",
											"source": 23
										},
										{
											"begin": 1814,
											"end": 1831,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 1807,
											"end": 1811,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 1799,
											"end": 1805,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 1795,
											"end": 1812,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 1782,
											"end": 1836,
											"name": "CALLDATACOPY",
											"source": 23
										},
										{
											"begin": 1880,
											"end": 1881,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 1873,
											"end": 1877,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 1868,
											"end": 1870,
											"name": "DUP6",
											"source": 23
										},
										{
											"begin": 1860,
											"end": 1866,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 1856,
											"end": 1871,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 1852,
											"end": 1878,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 1845,
											"end": 1882,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 1900,
											"end": 1906,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 1891,
											"end": 1906,
											"name": "SWAP5",
											"source": 23
										},
										{
											"begin": 1891,
											"end": 1906,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 1891,
											"end": 1906,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 1891,
											"end": 1906,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 1891,
											"end": 1906,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 1891,
											"end": 1906,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 1193,
											"end": 1912,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 1193,
											"end": 1912,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 1193,
											"end": 1912,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 1193,
											"end": 1912,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 1193,
											"end": 1912,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 1917,
											"end": 2307,
											"name": "tag",
											"source": 23,
											"value": "75"
										},
										{
											"begin": 1917,
											"end": 2307,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1995,
											"end": 2001,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 2003,
											"end": 2009,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 2056,
											"end": 2058,
											"name": "PUSH",
											"source": 23,
											"value": "40"
										},
										{
											"begin": 2044,
											"end": 2053,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 2035,
											"end": 2042,
											"name": "DUP6",
											"source": 23
										},
										{
											"begin": 2031,
											"end": 2054,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 2027,
											"end": 2059,
											"name": "SLT",
											"source": 23
										},
										{
											"begin": 2024,
											"end": 2076,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 2024,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "286"
										},
										{
											"begin": 2024,
											"end": 2076,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 2072,
											"end": 2073,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 2069,
											"end": 2070,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 2062,
											"end": 2074,
											"name": "REVERT",
											"source": 23
										},
										{
											"begin": 2024,
											"end": 2076,
											"name": "tag",
											"source": 23,
											"value": "286"
										},
										{
											"begin": 2024,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 2112,
											"end": 2121,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 2099,
											"end": 2122,
											"name": "CALLDATALOAD",
											"source": 23
										},
										{
											"begin": 2145,
											"end": 2163,
											"name": "PUSH",
											"source": 23,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2137,
											"end": 2143,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 2134,
											"end": 2164,
											"name": "GT",
											"source": 23
										},
										{
											"begin": 2131,
											"end": 2181,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 2131,
											"end": 2181,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "287"
										},
										{
											"begin": 2131,
											"end": 2181,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 2177,
											"end": 2178,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 2174,
											"end": 2175,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 2167,
											"end": 2179,
											"name": "REVERT",
											"source": 23
										},
										{
											"begin": 2131,
											"end": 2181,
											"name": "tag",
											"source": 23,
											"value": "287"
										},
										{
											"begin": 2131,
											"end": 2181,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 2200,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "288"
										},
										{
											"begin": 2242,
											"end": 2249,
											"name": "DUP6",
											"source": 23
										},
										{
											"begin": 2233,
											"end": 2239,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 2222,
											"end": 2231,
											"name": "DUP7",
											"source": 23
										},
										{
											"begin": 2218,
											"end": 2240,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 2200,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "260"
										},
										{
											"begin": 2200,
											"end": 2250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 2200,
											"end": 2250,
											"name": "tag",
											"source": 23,
											"value": "288"
										},
										{
											"begin": 2200,
											"end": 2250,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 2190,
											"end": 2250,
											"name": "SWAP6",
											"source": 23
										},
										{
											"begin": 2297,
											"end": 2299,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 2282,
											"end": 2300,
											"name": "SWAP5",
											"source": 23
										},
										{
											"begin": 2282,
											"end": 2300,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 2282,
											"end": 2300,
											"name": "SWAP5",
											"source": 23
										},
										{
											"begin": 2282,
											"end": 2300,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 2269,
											"end": 2301,
											"name": "CALLDATALOAD",
											"source": 23
										},
										{
											"begin": 2269,
											"end": 2301,
											"name": "SWAP5",
											"source": 23
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1917,
											"end": 2307,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 2312,
											"end": 2443,
											"name": "tag",
											"source": 23,
											"value": "261"
										},
										{
											"begin": 2312,
											"end": 2443,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2387,
											"end": 2418,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 2387,
											"end": 2418,
											"name": "AND",
											"source": 23
										},
										{
											"begin": 2377,
											"end": 2419,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 2377,
											"end": 2419,
											"name": "EQ",
											"source": 23
										},
										{
											"begin": 2367,
											"end": 2437,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "208"
										},
										{
											"begin": 2367,
											"end": 2437,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 2433,
											"end": 2434,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 2430,
											"end": 2431,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 2423,
											"end": 2435,
											"name": "REVERT",
											"source": 23
										},
										{
											"begin": 2448,
											"end": 2763,
											"name": "tag",
											"source": 23,
											"value": "80"
										},
										{
											"begin": 2448,
											"end": 2763,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 2516,
											"end": 2522,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 2524,
											"end": 2530,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 2577,
											"end": 2579,
											"name": "PUSH",
											"source": 23,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2574,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 2556,
											"end": 2563,
											"name": "DUP6",
											"source": 23
										},
										{
											"begin": 2552,
											"end": 2575,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 2548,
											"end": 2580,
											"name": "SLT",
											"source": 23
										},
										{
											"begin": 2545,
											"end": 2597,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 2545,
											"end": 2597,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "292"
										},
										{
											"begin": 2545,
											"end": 2597,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 2593,
											"end": 2594,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 2590,
											"end": 2591,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 2583,
											"end": 2595,
											"name": "REVERT",
											"source": 23
										},
										{
											"begin": 2545,
											"end": 2597,
											"name": "tag",
											"source": 23,
											"value": "292"
										},
										{
											"begin": 2545,
											"end": 2597,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 2629,
											"end": 2638,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 2616,
											"end": 2639,
											"name": "CALLDATALOAD",
											"source": 23
										},
										{
											"begin": 2606,
											"end": 2639,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 2606,
											"end": 2639,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 2689,
											"end": 2691,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 2678,
											"end": 2687,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 2674,
											"end": 2692,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 2661,
											"end": 2693,
											"name": "CALLDATALOAD",
											"source": 23
										},
										{
											"begin": 2702,
											"end": 2733,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "293"
										},
										{
											"begin": 2727,
											"end": 2732,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 2702,
											"end": 2733,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "261"
										},
										{
											"begin": 2702,
											"end": 2733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 2702,
											"end": 2733,
											"name": "tag",
											"source": 23,
											"value": "293"
										},
										{
											"begin": 2702,
											"end": 2733,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 2752,
											"end": 2757,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 2742,
											"end": 2757,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 2742,
											"end": 2757,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 2742,
											"end": 2757,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 2448,
											"end": 2763,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 2448,
											"end": 2763,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 2448,
											"end": 2763,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 2448,
											"end": 2763,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 2448,
											"end": 2763,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 2448,
											"end": 2763,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 2960,
											"end": 3140,
											"name": "tag",
											"source": 23,
											"value": "90"
										},
										{
											"begin": 2960,
											"end": 3140,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 3019,
											"end": 3025,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 3072,
											"end": 3074,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 3060,
											"end": 3069,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 3051,
											"end": 3058,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 3047,
											"end": 3070,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 3043,
											"end": 3075,
											"name": "SLT",
											"source": 23
										},
										{
											"begin": 3040,
											"end": 3092,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 3040,
											"end": 3092,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "296"
										},
										{
											"begin": 3040,
											"end": 3092,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 3088,
											"end": 3089,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 3085,
											"end": 3086,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 3078,
											"end": 3090,
											"name": "REVERT",
											"source": 23
										},
										{
											"begin": 3040,
											"end": 3092,
											"name": "tag",
											"source": 23,
											"value": "296"
										},
										{
											"begin": 3040,
											"end": 3092,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3111,
											"end": 3134,
											"name": "CALLDATALOAD",
											"source": 23
										},
										{
											"begin": 3111,
											"end": 3134,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 2960,
											"end": 3140,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2960,
											"end": 3140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 3145,
											"end": 3467,
											"name": "tag",
											"source": 23,
											"value": "99"
										},
										{
											"begin": 3145,
											"end": 3467,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 3214,
											"end": 3220,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 3267,
											"end": 3269,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 3255,
											"end": 3264,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 3246,
											"end": 3253,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 3242,
											"end": 3265,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 3238,
											"end": 3270,
											"name": "SLT",
											"source": 23
										},
										{
											"begin": 3235,
											"end": 3287,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 3235,
											"end": 3287,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "298"
										},
										{
											"begin": 3235,
											"end": 3287,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 3283,
											"end": 3284,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 3280,
											"end": 3281,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 3273,
											"end": 3285,
											"name": "REVERT",
											"source": 23
										},
										{
											"begin": 3235,
											"end": 3287,
											"name": "tag",
											"source": 23,
											"value": "298"
										},
										{
											"begin": 3235,
											"end": 3287,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 3323,
											"end": 3332,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 3310,
											"end": 3333,
											"name": "CALLDATALOAD",
											"source": 23
										},
										{
											"begin": 3356,
											"end": 3374,
											"name": "PUSH",
											"source": 23,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3348,
											"end": 3354,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 3345,
											"end": 3375,
											"name": "GT",
											"source": 23
										},
										{
											"begin": 3342,
											"end": 3392,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 3342,
											"end": 3392,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "299"
										},
										{
											"begin": 3342,
											"end": 3392,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 3388,
											"end": 3389,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 3385,
											"end": 3386,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 3378,
											"end": 3390,
											"name": "REVERT",
											"source": 23
										},
										{
											"begin": 3342,
											"end": 3392,
											"name": "tag",
											"source": 23,
											"value": "299"
										},
										{
											"begin": 3342,
											"end": 3392,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 3411,
											"end": 3461,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "257"
										},
										{
											"begin": 3453,
											"end": 3460,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 3444,
											"end": 3450,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 3433,
											"end": 3442,
											"name": "DUP6",
											"source": 23
										},
										{
											"begin": 3429,
											"end": 3451,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 3411,
											"end": 3461,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "260"
										},
										{
											"begin": 3411,
											"end": 3461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 3472,
											"end": 3895,
											"name": "tag",
											"source": 23,
											"value": "262"
										},
										{
											"begin": 3472,
											"end": 3895,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 3514,
											"end": 3517,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 3552,
											"end": 3557,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 3546,
											"end": 3558,
											"name": "MLOAD",
											"source": 23
										},
										{
											"begin": 3579,
											"end": 3585,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 3574,
											"end": 3577,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 3567,
											"end": 3586,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 3604,
											"end": 3605,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 3614,
											"end": 3776,
											"name": "tag",
											"source": 23,
											"value": "302"
										},
										{
											"begin": 3614,
											"end": 3776,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 3628,
											"end": 3634,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 3625,
											"end": 3626,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 3622,
											"end": 3635,
											"name": "LT",
											"source": 23
										},
										{
											"begin": 3614,
											"end": 3776,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 3614,
											"end": 3776,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "304"
										},
										{
											"begin": 3614,
											"end": 3776,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 3690,
											"end": 3694,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 3746,
											"end": 3759,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 3746,
											"end": 3759,
											"name": "DUP6",
											"source": 23
										},
										{
											"begin": 3746,
											"end": 3759,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 3742,
											"end": 3764,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 3742,
											"end": 3764,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 3736,
											"end": 3765,
											"name": "MLOAD",
											"source": 23
										},
										{
											"begin": 3718,
											"end": 3729,
											"name": "DUP7",
											"source": 23
										},
										{
											"begin": 3718,
											"end": 3729,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 3718,
											"end": 3729,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 3714,
											"end": 3734,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 3714,
											"end": 3734,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 3707,
											"end": 3766,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 3643,
											"end": 3655,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 3614,
											"end": 3776,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "302"
										},
										{
											"begin": 3614,
											"end": 3776,
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 3614,
											"end": 3776,
											"name": "tag",
											"source": 23,
											"value": "304"
										},
										{
											"begin": 3614,
											"end": 3776,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 3618,
											"end": 3621,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 3821,
											"end": 3822,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 3814,
											"end": 3818,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 3805,
											"end": 3811,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 3800,
											"end": 3803,
											"name": "DUP7",
											"source": 23
										},
										{
											"begin": 3796,
											"end": 3812,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 3792,
											"end": 3819,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 3785,
											"end": 3823,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 3884,
											"end": 3888,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 3877,
											"end": 3879,
											"name": "PUSH",
											"source": 23,
											"value": "1F"
										},
										{
											"begin": 3873,
											"end": 3880,
											"name": "NOT",
											"source": 23
										},
										{
											"begin": 3868,
											"end": 3870,
											"name": "PUSH",
											"source": 23,
											"value": "1F"
										},
										{
											"begin": 3860,
											"end": 3866,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 3856,
											"end": 3871,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 3852,
											"end": 3881,
											"name": "AND",
											"source": 23
										},
										{
											"begin": 3847,
											"end": 3850,
											"name": "DUP6",
											"source": 23
										},
										{
											"begin": 3843,
											"end": 3882,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 3839,
											"end": 3889,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 3832,
											"end": 3889,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 3832,
											"end": 3889,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 3832,
											"end": 3889,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 3472,
											"end": 3895,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 3472,
											"end": 3895,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 3472,
											"end": 3895,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 3472,
											"end": 3895,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 3472,
											"end": 3895,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 3900,
											"end": 4120,
											"name": "tag",
											"source": 23,
											"value": "110"
										},
										{
											"begin": 3900,
											"end": 4120,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 4049,
											"end": 4051,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 4038,
											"end": 4047,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 4031,
											"end": 4052,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 4012,
											"end": 4016,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 4069,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "306"
										},
										{
											"begin": 4110,
											"end": 4112,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 4099,
											"end": 4108,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 4095,
											"end": 4113,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 4087,
											"end": 4093,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 4069,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "262"
										},
										{
											"begin": 4069,
											"end": 4114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 4069,
											"end": 4114,
											"name": "tag",
											"source": 23,
											"value": "306"
										},
										{
											"begin": 4069,
											"end": 4114,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 4061,
											"end": 4114,
											"name": "SWAP4",
											"source": 23
										},
										{
											"begin": 3900,
											"end": 4120,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3900,
											"end": 4120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 4125,
											"end": 4372,
											"name": "tag",
											"source": 23,
											"value": "130"
										},
										{
											"begin": 4125,
											"end": 4372,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 4184,
											"end": 4190,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 4237,
											"end": 4239,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 4225,
											"end": 4234,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 4216,
											"end": 4223,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 4212,
											"end": 4235,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 4208,
											"end": 4240,
											"name": "SLT",
											"source": 23
										},
										{
											"begin": 4205,
											"end": 4257,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 4205,
											"end": 4257,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "308"
										},
										{
											"begin": 4205,
											"end": 4257,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 4253,
											"end": 4254,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 4250,
											"end": 4251,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 4243,
											"end": 4255,
											"name": "REVERT",
											"source": 23
										},
										{
											"begin": 4205,
											"end": 4257,
											"name": "tag",
											"source": 23,
											"value": "308"
										},
										{
											"begin": 4205,
											"end": 4257,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 4292,
											"end": 4301,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 4279,
											"end": 4302,
											"name": "CALLDATALOAD",
											"source": 23
										},
										{
											"begin": 4311,
											"end": 4342,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "306"
										},
										{
											"begin": 4336,
											"end": 4341,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 4311,
											"end": 4342,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "261"
										},
										{
											"begin": 4311,
											"end": 4342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 4377,
											"end": 4714,
											"name": "tag",
											"source": 23,
											"value": "178"
										},
										{
											"begin": 4377,
											"end": 4714,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 4579,
											"end": 4581,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 4561,
											"end": 4582,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 4561,
											"end": 4582,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 4561,
											"end": 4582,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 4618,
											"end": 4620,
											"name": "PUSH",
											"source": 23,
											"value": "D"
										},
										{
											"begin": 4598,
											"end": 4616,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 4598,
											"end": 4616,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 4598,
											"end": 4616,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 4591,
											"end": 4621,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2737BA103A34329037BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "99"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4652,
											"end": 4654,
											"name": "PUSH",
											"source": 23,
											"value": "40"
										},
										{
											"begin": 4637,
											"end": 4655,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 4637,
											"end": 4655,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 4630,
											"end": 4673,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 4705,
											"end": 4707,
											"name": "PUSH",
											"source": 23,
											"value": "60"
										},
										{
											"begin": 4690,
											"end": 4708,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 4690,
											"end": 4708,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 4377,
											"end": 4714,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 4719,
											"end": 5162,
											"name": "tag",
											"source": 23,
											"value": "187"
										},
										{
											"begin": 4719,
											"end": 5162,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 4960,
											"end": 4963,
											"name": "PUSH",
											"source": 23,
											"value": "80"
										},
										{
											"begin": 4949,
											"end": 4958,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 4942,
											"end": 4964,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 4923,
											"end": 4927,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 4981,
											"end": 5027,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "312"
										},
										{
											"begin": 5022,
											"end": 5025,
											"name": "PUSH",
											"source": 23,
											"value": "80"
										},
										{
											"begin": 5011,
											"end": 5020,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 5007,
											"end": 5026,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 4999,
											"end": 5005,
											"name": "DUP8",
											"source": 23
										},
										{
											"begin": 4981,
											"end": 5027,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "262"
										},
										{
											"begin": 4981,
											"end": 5027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 4981,
											"end": 5027,
											"name": "tag",
											"source": 23,
											"value": "312"
										},
										{
											"begin": 4981,
											"end": 5027,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 5058,
											"end": 5060,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 5043,
											"end": 5061,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 5043,
											"end": 5061,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 5036,
											"end": 5070,
											"name": "SWAP6",
											"source": 23
										},
										{
											"begin": 5036,
											"end": 5070,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 5036,
											"end": 5070,
											"name": "SWAP6",
											"source": 23
										},
										{
											"begin": 5036,
											"end": 5070,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5101,
											"end": 5103,
											"name": "PUSH",
											"source": 23,
											"value": "40"
										},
										{
											"begin": 5086,
											"end": 5104,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 5086,
											"end": 5104,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 5079,
											"end": 5113,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 5079,
											"end": 5113,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 5079,
											"end": 5113,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 5079,
											"end": 5113,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 5144,
											"end": 5146,
											"name": "PUSH",
											"source": 23,
											"value": "60"
										},
										{
											"begin": 5129,
											"end": 5147,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 5129,
											"end": 5147,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 5129,
											"end": 5147,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 5122,
											"end": 5156,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 4973,
											"end": 5027,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 4719,
											"end": 5162,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4719,
											"end": 5162,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 5167,
											"end": 5330,
											"name": "tag",
											"source": 23,
											"value": "263"
										},
										{
											"begin": 5167,
											"end": 5330,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 5245,
											"end": 5258,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 5245,
											"end": 5258,
											"name": "MLOAD",
											"source": 23
										},
										{
											"begin": 5298,
											"end": 5304,
											"name": "PUSH",
											"source": 23,
											"value": "FFFF"
										},
										{
											"begin": 5287,
											"end": 5305,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 5287,
											"end": 5305,
											"name": "AND",
											"source": 23
										},
										{
											"begin": 5277,
											"end": 5306,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 5277,
											"end": 5306,
											"name": "EQ",
											"source": 23
										},
										{
											"begin": 5267,
											"end": 5324,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "314"
										},
										{
											"begin": 5267,
											"end": 5324,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 5320,
											"end": 5321,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 5317,
											"end": 5318,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 5310,
											"end": 5322,
											"name": "REVERT",
											"source": 23
										},
										{
											"begin": 5267,
											"end": 5324,
											"name": "tag",
											"source": 23,
											"value": "314"
										},
										{
											"begin": 5267,
											"end": 5324,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 5167,
											"end": 5330,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 5167,
											"end": 5330,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 5167,
											"end": 5330,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 5167,
											"end": 5330,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 5335,
											"end": 6321,
											"name": "tag",
											"source": 23,
											"value": "192"
										},
										{
											"begin": 5335,
											"end": 6321,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 5449,
											"end": 5455,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 5457,
											"end": 5463,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 5465,
											"end": 5471,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 5473,
											"end": 5479,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 5481,
											"end": 5487,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 5489,
											"end": 5495,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 5497,
											"end": 5503,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 5550,
											"end": 5553,
											"name": "PUSH",
											"source": 23,
											"value": "E0"
										},
										{
											"begin": 5538,
											"end": 5547,
											"name": "DUP9",
											"source": 23
										},
										{
											"begin": 5529,
											"end": 5536,
											"name": "DUP11",
											"source": 23
										},
										{
											"begin": 5525,
											"end": 5548,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 5521,
											"end": 5554,
											"name": "SLT",
											"source": 23
										},
										{
											"begin": 5518,
											"end": 5571,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 5518,
											"end": 5571,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "316"
										},
										{
											"begin": 5518,
											"end": 5571,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 5567,
											"end": 5568,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 5564,
											"end": 5565,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 5557,
											"end": 5569,
											"name": "REVERT",
											"source": 23
										},
										{
											"begin": 5518,
											"end": 5571,
											"name": "tag",
											"source": 23,
											"value": "316"
										},
										{
											"begin": 5518,
											"end": 5571,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 5599,
											"end": 5608,
											"name": "DUP8",
											"source": 23
										},
										{
											"begin": 5593,
											"end": 5609,
											"name": "MLOAD",
											"source": 23
										},
										{
											"begin": 5618,
											"end": 5649,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "317"
										},
										{
											"begin": 5643,
											"end": 5648,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 5618,
											"end": 5649,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "261"
										},
										{
											"begin": 5618,
											"end": 5649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 5618,
											"end": 5649,
											"name": "tag",
											"source": 23,
											"value": "317"
										},
										{
											"begin": 5618,
											"end": 5649,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 5668,
											"end": 5673,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 5658,
											"end": 5673,
											"name": "SWAP8",
											"source": 23
										},
										{
											"begin": 5658,
											"end": 5673,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 5658,
											"end": 5673,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 5718,
											"end": 5720,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 5707,
											"end": 5716,
											"name": "DUP9",
											"source": 23
										},
										{
											"begin": 5703,
											"end": 5721,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 5697,
											"end": 5722,
											"name": "MLOAD",
											"source": 23
										},
										{
											"begin": 5767,
											"end": 5774,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 5764,
											"end": 5765,
											"name": "PUSH",
											"source": 23,
											"value": "2"
										},
										{
											"begin": 5753,
											"end": 5775,
											"name": "SIGNEXTEND",
											"source": 23
										},
										{
											"begin": 5744,
											"end": 5751,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 5741,
											"end": 5776,
											"name": "EQ",
											"source": 23
										},
										{
											"begin": 5731,
											"end": 5794,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "318"
										},
										{
											"begin": 5731,
											"end": 5794,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 5790,
											"end": 5791,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 5787,
											"end": 5788,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 5780,
											"end": 5792,
											"name": "REVERT",
											"source": 23
										},
										{
											"begin": 5731,
											"end": 5794,
											"name": "tag",
											"source": 23,
											"value": "318"
										},
										{
											"begin": 5731,
											"end": 5794,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 5813,
											"end": 5820,
											"name": "SWAP6",
											"source": 23
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5839,
											"end": 5887,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "319"
										},
										{
											"begin": 5883,
											"end": 5885,
											"name": "PUSH",
											"source": 23,
											"value": "40"
										},
										{
											"begin": 5868,
											"end": 5886,
											"name": "DUP10",
											"source": 23
										},
										{
											"begin": 5868,
											"end": 5886,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 5839,
											"end": 5887,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "263"
										},
										{
											"begin": 5839,
											"end": 5887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 5839,
											"end": 5887,
											"name": "tag",
											"source": 23,
											"value": "319"
										},
										{
											"begin": 5839,
											"end": 5887,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 5829,
											"end": 5887,
											"name": "SWAP5",
											"source": 23
										},
										{
											"begin": 5829,
											"end": 5887,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 5906,
											"end": 5954,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "320"
										},
										{
											"begin": 5950,
											"end": 5952,
											"name": "PUSH",
											"source": 23,
											"value": "60"
										},
										{
											"begin": 5939,
											"end": 5948,
											"name": "DUP10",
											"source": 23
										},
										{
											"begin": 5935,
											"end": 5953,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 5906,
											"end": 5954,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "263"
										},
										{
											"begin": 5906,
											"end": 5954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 5906,
											"end": 5954,
											"name": "tag",
											"source": 23,
											"value": "320"
										},
										{
											"begin": 5906,
											"end": 5954,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 5896,
											"end": 5954,
											"name": "SWAP4",
											"source": 23
										},
										{
											"begin": 5896,
											"end": 5954,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 5973,
											"end": 6022,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "321"
										},
										{
											"begin": 6017,
											"end": 6020,
											"name": "PUSH",
											"source": 23,
											"value": "80"
										},
										{
											"begin": 6006,
											"end": 6015,
											"name": "DUP10",
											"source": 23
										},
										{
											"begin": 6002,
											"end": 6021,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 5973,
											"end": 6022,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "263"
										},
										{
											"begin": 5973,
											"end": 6022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 5973,
											"end": 6022,
											"name": "tag",
											"source": 23,
											"value": "321"
										},
										{
											"begin": 5973,
											"end": 6022,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 5963,
											"end": 6022,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 5963,
											"end": 6022,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 6067,
											"end": 6070,
											"name": "PUSH",
											"source": 23,
											"value": "A0"
										},
										{
											"begin": 6056,
											"end": 6065,
											"name": "DUP9",
											"source": 23
										},
										{
											"begin": 6052,
											"end": 6071,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 6046,
											"end": 6072,
											"name": "MLOAD",
											"source": 23
										},
										{
											"begin": 6116,
											"end": 6120,
											"name": "PUSH",
											"source": 23,
											"value": "FF"
										},
										{
											"begin": 6107,
											"end": 6114,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 6103,
											"end": 6121,
											"name": "AND",
											"source": 23
										},
										{
											"begin": 6094,
											"end": 6101,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 6091,
											"end": 6122,
											"name": "EQ",
											"source": 23
										},
										{
											"begin": 6081,
											"end": 6140,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "322"
										},
										{
											"begin": 6081,
											"end": 6140,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 6136,
											"end": 6137,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 6133,
											"end": 6134,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 6126,
											"end": 6138,
											"name": "REVERT",
											"source": 23
										},
										{
											"begin": 6081,
											"end": 6140,
											"name": "tag",
											"source": 23,
											"value": "322"
										},
										{
											"begin": 6081,
											"end": 6140,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 6211,
											"end": 6214,
											"name": "PUSH",
											"source": 23,
											"value": "C0"
										},
										{
											"begin": 6196,
											"end": 6215,
											"name": "DUP10",
											"source": 23
										},
										{
											"begin": 6196,
											"end": 6215,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 6190,
											"end": 6216,
											"name": "MLOAD",
											"source": 23
										},
										{
											"begin": 6159,
											"end": 6166,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 6159,
											"end": 6166,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6254,
											"end": 6269,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 6254,
											"end": 6269,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 6247,
											"end": 6270,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 6235,
											"end": 6271,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 6235,
											"end": 6271,
											"name": "EQ",
											"source": 23
										},
										{
											"begin": 6225,
											"end": 6289,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "323"
										},
										{
											"begin": 6225,
											"end": 6289,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 6285,
											"end": 6286,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 6282,
											"end": 6283,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 6275,
											"end": 6287,
											"name": "REVERT",
											"source": 23
										},
										{
											"begin": 6225,
											"end": 6289,
											"name": "tag",
											"source": 23,
											"value": "323"
										},
										{
											"begin": 6225,
											"end": 6289,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 6308,
											"end": 6315,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 6298,
											"end": 6315,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 6298,
											"end": 6315,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 6298,
											"end": 6315,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 5335,
											"end": 6321,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 5335,
											"end": 6321,
											"name": "SWAP6",
											"source": 23
										},
										{
											"begin": 5335,
											"end": 6321,
											"name": "SWAP9",
											"source": 23
										},
										{
											"begin": 5335,
											"end": 6321,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 5335,
											"end": 6321,
											"name": "SWAP5",
											"source": 23
										},
										{
											"begin": 5335,
											"end": 6321,
											"name": "SWAP8",
											"source": 23
										},
										{
											"begin": 5335,
											"end": 6321,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 5335,
											"end": 6321,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 5335,
											"end": 6321,
											"name": "SWAP6",
											"source": 23
										},
										{
											"begin": 5335,
											"end": 6321,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 5335,
											"end": 6321,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 6326,
											"end": 6631,
											"name": "tag",
											"source": 23,
											"value": "196"
										},
										{
											"begin": 6326,
											"end": 6631,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 6396,
											"end": 6402,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 6449,
											"end": 6451,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 6437,
											"end": 6446,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 6428,
											"end": 6435,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 6424,
											"end": 6447,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 6420,
											"end": 6452,
											"name": "SLT",
											"source": 23
										},
										{
											"begin": 6417,
											"end": 6469,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 6417,
											"end": 6469,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "325"
										},
										{
											"begin": 6417,
											"end": 6469,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 6465,
											"end": 6466,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 6462,
											"end": 6463,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 6455,
											"end": 6467,
											"name": "REVERT",
											"source": 23
										},
										{
											"begin": 6417,
											"end": 6469,
											"name": "tag",
											"source": 23,
											"value": "325"
										},
										{
											"begin": 6417,
											"end": 6469,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 6497,
											"end": 6506,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 6491,
											"end": 6507,
											"name": "MLOAD",
											"source": 23
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6540,
											"end": 6545,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 6536,
											"end": 6582,
											"name": "AND",
											"source": 23
										},
										{
											"begin": 6529,
											"end": 6534,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 6526,
											"end": 6583,
											"name": "EQ",
											"source": 23
										},
										{
											"begin": 6516,
											"end": 6601,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "306"
										},
										{
											"begin": 6516,
											"end": 6601,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 6597,
											"end": 6598,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 6594,
											"end": 6595,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 6587,
											"end": 6599,
											"name": "REVERT",
											"source": 23
										},
										{
											"begin": 6636,
											"end": 6764,
											"name": "tag",
											"source": 23,
											"value": "202"
										},
										{
											"begin": 6636,
											"end": 6764,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 6703,
											"end": 6712,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 6703,
											"end": 6712,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 6703,
											"end": 6712,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 6724,
											"end": 6735,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 6724,
											"end": 6735,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 6724,
											"end": 6735,
											"name": "GT",
											"source": 23
										},
										{
											"begin": 6721,
											"end": 6758,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 6721,
											"end": 6758,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "236"
										},
										{
											"begin": 6721,
											"end": 6758,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 6738,
											"end": 6756,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "236"
										},
										{
											"begin": 6738,
											"end": 6756,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "258"
										},
										{
											"begin": 6738,
											"end": 6756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 7118,
											"end": 7498,
											"name": "tag",
											"source": 23,
											"value": "220"
										},
										{
											"begin": 7118,
											"end": 7498,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 7197,
											"end": 7198,
											"name": "PUSH",
											"source": 23,
											"value": "1"
										},
										{
											"begin": 7193,
											"end": 7205,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 7193,
											"end": 7205,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 7193,
											"end": 7205,
											"name": "SHR",
											"source": 23
										},
										{
											"begin": 7193,
											"end": 7205,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 7240,
											"end": 7252,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 7240,
											"end": 7252,
											"name": "AND",
											"source": 23
										},
										{
											"begin": 7240,
											"end": 7252,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 7261,
											"end": 7322,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "332"
										},
										{
											"begin": 7261,
											"end": 7322,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 7315,
											"end": 7319,
											"name": "PUSH",
											"source": 23,
											"value": "7F"
										},
										{
											"begin": 7307,
											"end": 7313,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 7303,
											"end": 7320,
											"name": "AND",
											"source": 23
										},
										{
											"begin": 7293,
											"end": 7320,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 7293,
											"end": 7320,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 7261,
											"end": 7322,
											"name": "tag",
											"source": 23,
											"value": "332"
										},
										{
											"begin": 7261,
											"end": 7322,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 7368,
											"end": 7370,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 7360,
											"end": 7366,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 7357,
											"end": 7371,
											"name": "LT",
											"source": 23
										},
										{
											"begin": 7337,
											"end": 7355,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 7334,
											"end": 7372,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 7331,
											"end": 7492,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "333"
										},
										{
											"begin": 7331,
											"end": 7492,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 7414,
											"end": 7424,
											"name": "PUSH",
											"source": 23,
											"value": "4E487B71"
										},
										{
											"begin": 7409,
											"end": 7412,
											"name": "PUSH",
											"source": 23,
											"value": "E0"
										},
										{
											"begin": 7405,
											"end": 7425,
											"name": "SHL",
											"source": 23
										},
										{
											"begin": 7402,
											"end": 7403,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 7395,
											"end": 7426,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 7449,
											"end": 7453,
											"name": "PUSH",
											"source": 23,
											"value": "22"
										},
										{
											"begin": 7446,
											"end": 7447,
											"name": "PUSH",
											"source": 23,
											"value": "4"
										},
										{
											"begin": 7439,
											"end": 7454,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 7477,
											"end": 7481,
											"name": "PUSH",
											"source": 23,
											"value": "24"
										},
										{
											"begin": 7474,
											"end": 7475,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 7467,
											"end": 7482,
											"name": "REVERT",
											"source": 23
										},
										{
											"begin": 7331,
											"end": 7492,
											"name": "tag",
											"source": 23,
											"value": "333"
										},
										{
											"begin": 7331,
											"end": 7492,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 7331,
											"end": 7492,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 7118,
											"end": 7498,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 7118,
											"end": 7498,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 7118,
											"end": 7498,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 7118,
											"end": 7498,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 8655,
											"end": 8834,
											"name": "tag",
											"source": 23,
											"value": "264"
										},
										{
											"begin": 8655,
											"end": 8834,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 8733,
											"end": 8746,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 8733,
											"end": 8746,
											"name": "MLOAD",
											"source": 23
										},
										{
											"begin": 8786,
											"end": 8808,
											"name": "PUSH",
											"source": 23,
											"value": "FFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8775,
											"end": 8809,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 8775,
											"end": 8809,
											"name": "AND",
											"source": 23
										},
										{
											"begin": 8765,
											"end": 8810,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 8765,
											"end": 8810,
											"name": "EQ",
											"source": 23
										},
										{
											"begin": 8755,
											"end": 8828,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "314"
										},
										{
											"begin": 8755,
											"end": 8828,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 8824,
											"end": 8825,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 8821,
											"end": 8822,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 8814,
											"end": 8826,
											"name": "REVERT",
											"source": 23
										},
										{
											"begin": 8839,
											"end": 9312,
											"name": "tag",
											"source": 23,
											"value": "252"
										},
										{
											"begin": 8839,
											"end": 9312,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 8942,
											"end": 8948,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 8950,
											"end": 8956,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 8958,
											"end": 8964,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 8966,
											"end": 8972,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 8974,
											"end": 8980,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 9027,
											"end": 9030,
											"name": "PUSH",
											"source": 23,
											"value": "A0"
										},
										{
											"begin": 9015,
											"end": 9024,
											"name": "DUP7",
											"source": 23
										},
										{
											"begin": 9006,
											"end": 9013,
											"name": "DUP9",
											"source": 23
										},
										{
											"begin": 9002,
											"end": 9025,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 8998,
											"end": 9031,
											"name": "SLT",
											"source": 23
										},
										{
											"begin": 8995,
											"end": 9048,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 8995,
											"end": 9048,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "339"
										},
										{
											"begin": 8995,
											"end": 9048,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 9044,
											"end": 9045,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 9041,
											"end": 9042,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 9034,
											"end": 9046,
											"name": "REVERT",
											"source": 23
										},
										{
											"begin": 8995,
											"end": 9048,
											"name": "tag",
											"source": 23,
											"value": "339"
										},
										{
											"begin": 8995,
											"end": 9048,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 9067,
											"end": 9106,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "340"
										},
										{
											"begin": 9096,
											"end": 9105,
											"name": "DUP7",
											"source": 23
										},
										{
											"begin": 9067,
											"end": 9106,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "264"
										},
										{
											"begin": 9067,
											"end": 9106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 9067,
											"end": 9106,
											"name": "tag",
											"source": 23,
											"value": "340"
										},
										{
											"begin": 9067,
											"end": 9106,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 9057,
											"end": 9106,
											"name": "SWAP5",
											"source": 23
										},
										{
											"begin": 9057,
											"end": 9106,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 9146,
											"end": 9148,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 9135,
											"end": 9144,
											"name": "DUP7",
											"source": 23
										},
										{
											"begin": 9131,
											"end": 9149,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 9125,
											"end": 9150,
											"name": "MLOAD",
											"source": 23
										},
										{
											"begin": 9115,
											"end": 9150,
											"name": "SWAP4",
											"source": 23
										},
										{
											"begin": 9115,
											"end": 9150,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 9190,
											"end": 9192,
											"name": "PUSH",
											"source": 23,
											"value": "40"
										},
										{
											"begin": 9179,
											"end": 9188,
											"name": "DUP7",
											"source": 23
										},
										{
											"begin": 9175,
											"end": 9193,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 9169,
											"end": 9194,
											"name": "MLOAD",
											"source": 23
										},
										{
											"begin": 9159,
											"end": 9194,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 9159,
											"end": 9194,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 9234,
											"end": 9236,
											"name": "PUSH",
											"source": 23,
											"value": "60"
										},
										{
											"begin": 9223,
											"end": 9232,
											"name": "DUP7",
											"source": 23
										},
										{
											"begin": 9219,
											"end": 9237,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 9213,
											"end": 9238,
											"name": "MLOAD",
											"source": 23
										},
										{
											"begin": 9203,
											"end": 9238,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 9203,
											"end": 9238,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 9257,
											"end": 9306,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "341"
										},
										{
											"begin": 9301,
											"end": 9304,
											"name": "PUSH",
											"source": 23,
											"value": "80"
										},
										{
											"begin": 9290,
											"end": 9299,
											"name": "DUP8",
											"source": 23
										},
										{
											"begin": 9286,
											"end": 9305,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 9257,
											"end": 9306,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "264"
										},
										{
											"begin": 9257,
											"end": 9306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 9257,
											"end": 9306,
											"name": "tag",
											"source": 23,
											"value": "341"
										},
										{
											"begin": 9257,
											"end": 9306,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 9247,
											"end": 9306,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 9247,
											"end": 9306,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 8839,
											"end": 9312,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 8839,
											"end": 9312,
											"name": "SWAP6",
											"source": 23
										},
										{
											"begin": 8839,
											"end": 9312,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 8839,
											"end": 9312,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 8839,
											"end": 9312,
											"name": "SWAP6",
											"source": 23
										},
										{
											"begin": 8839,
											"end": 9312,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 8839,
											"end": 9312,
											"name": "SWAP4",
											"source": 23
										},
										{
											"begin": 8839,
											"end": 9312,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 8839,
											"end": 9312,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 9317,
											"end": 9554,
											"name": "tag",
											"source": 23,
											"value": "254"
										},
										{
											"begin": 9317,
											"end": 9554,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 9389,
											"end": 9398,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 9389,
											"end": 9398,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 9389,
											"end": 9398,
											"name": "MUL",
											"source": 23
										},
										{
											"begin": 9356,
											"end": 9363,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 9414,
											"end": 9423,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 9414,
											"end": 9423,
											"name": "SLT",
											"source": 23
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9425,
											"end": 9443,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 9425,
											"end": 9443,
											"name": "EQ",
											"source": 23
										},
										{
											"begin": 9410,
											"end": 9444,
											"name": "AND",
											"source": 23
										},
										{
											"begin": 9407,
											"end": 9467,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 9407,
											"end": 9467,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "344"
										},
										{
											"begin": 9407,
											"end": 9467,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 9447,
											"end": 9465,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "344"
										},
										{
											"begin": 9447,
											"end": 9465,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "258"
										},
										{
											"begin": 9447,
											"end": 9465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 9447,
											"end": 9465,
											"name": "tag",
											"source": 23,
											"value": "344"
										},
										{
											"begin": 9447,
											"end": 9465,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 9520,
											"end": 9521,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 9511,
											"end": 9518,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 9506,
											"end": 9522,
											"name": "SDIV",
											"source": 23
										},
										{
											"begin": 9503,
											"end": 9504,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 9500,
											"end": 9523,
											"name": "EQ",
											"source": 23
										},
										{
											"begin": 9496,
											"end": 9497,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 9489,
											"end": 9498,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 9486,
											"end": 9524,
											"name": "OR",
											"source": 23
										},
										{
											"begin": 9476,
											"end": 9548,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "236"
										},
										{
											"begin": 9476,
											"end": 9548,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 9528,
											"end": 9546,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "236"
										},
										{
											"begin": 9528,
											"end": 9546,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "258"
										},
										{
											"begin": 9528,
											"end": 9546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										}
									]
								}
							},
							"sourceList": [
								"contracts/MainBot.sol",
								"contracts/aave/protocol-v2/contracts/interfaces/DataTypes.sol",
								"contracts/aave/protocol-v2/contracts/interfaces/ILendingPool.sol",
								"contracts/aave/protocol-v2/contracts/interfaces/ILendingPoolAddressesProvider.sol",
								"contracts/chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol",
								"contracts/openzeppelin/contracts/token/ERC721/IERC721.sol",
								"contracts/openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol",
								"contracts/openzeppelin/contracts/token/ERC721/IERC721Metadata.sol",
								"contracts/openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/uniswap/v3-periphery/contracts/interfaces/IERC721Permit.sol",
								"contracts/uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol",
								"contracts/uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol",
								"contracts/uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol",
								"contracts/uniswap/v3-periphery/contracts/interfaces/IPoolInitializer.sol",
								"contracts/uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
								"contracts/uniswap/v3-periphery/contracts/interfaces/IUniswapV3Pool.sol",
								"contracts/uniswap/v3-periphery/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
								"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
								"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
								"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
								"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
								"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
								"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolState.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"aaveLendingPoolAddressesProvider()": "238f9b7a",
							"adjustTimeframe(uint256)": "869665e9",
							"checkLiquidity(uint256,address)": "3fb47a3b",
							"checkPrice()": "8fc3047d",
							"convertAllToPOL()": "9d8ef1e1",
							"currentActivity()": "6d546cdd",
							"dexRouters(string)": "5e7ffa67",
							"disableTrading()": "17700f01",
							"gasCostMultiplier()": "a30fb905",
							"initialDeposit()": "e037f889",
							"initiateTrade(string,uint256)": "26c403ed",
							"kill()": "41c0e1b5",
							"lossThreshold()": "c0fc247f",
							"maticBalance()": "1458d9d8",
							"nextLogTime()": "1bf41362",
							"owner()": "8da5cb5b",
							"polToken()": "b6658d07",
							"priceFeedAddress()": "e0abca0b",
							"profitThreshold()": "f974821a",
							"quickSwapRouter()": "e189eb42",
							"setController(address)": "92eefe9b",
							"stablecoinBalance()": "64aabb9e",
							"tradingEnabled()": "4ada218b",
							"trailingStopLoss()": "b3ce56a2",
							"uniswapPositionManager()": "e5047b30",
							"uniswapRouter()": "735de9f7",
							"usdcToken()": "11eac855",
							"usdtToken()": "a98ad46c",
							"withdrawInGwei(uint256)": "457f3cb0"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_polToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_usdtToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_usdcToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_quickSwapRouter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_priceFeedAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_uniswapRouter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_uniswapPositionManager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_aaveLendingPoolAddressesProvider\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"activity\",\"type\":\"string\"}],\"name\":\"CurrentActivity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"currentBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"}],\"name\":\"StopLossTriggered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"TestEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"tradeType\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"TradeExecuted\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"aaveLendingPoolAddressesProvider\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"selectedTimeframe\",\"type\":\"uint256\"}],\"name\":\"adjustTimeframe\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"}],\"name\":\"checkLiquidity\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"sufficientLiquidity\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"convertAllToPOL\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentActivity\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"dexRouters\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disableTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gasCostMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tradeType\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"initiateTrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lossThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maticBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextLogTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"polToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeedAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"profitThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quickSwapRouter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stablecoinBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tradingEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trailingStopLoss\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapPositionManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapRouter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdcToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdtToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountInGwei\",\"type\":\"uint256\"}],\"name\":\"withdrawInGwei\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MainBot.sol\":\"MainBot\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MainBot.sol\":{\"keccak256\":\"0x56eac8493c21c7d33dee50c4cf271f22d8956d11c5c11e4246256ae2d5b4330b\",\"license\":\"MITs\",\"urls\":[\"bzz-raw://42088ce0a38c5bd89f60629db180c1e24ccd28b1ef15b33629fa075e3cbfad47\",\"dweb:/ipfs/QmbbcVx6DmRDiYNyKCqrJzebyc8mEe452PCC2wQhW1Haxu\"]},\"contracts/aave/protocol-v2/contracts/interfaces/DataTypes.sol\":{\"keccak256\":\"0x3c126df12782518f7ae20a35358d4b55b57a64dfac2fca4b3d6a8a4ca6aed911\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be9e0c1d61b42fbdce8524013b225ed8352978d6a0035552109bfa76065ae275\",\"dweb:/ipfs/QmcStYcnoGywFhiUXAZk6fhypW9BFwqQrnfw9gf6UfeqP3\"]},\"contracts/aave/protocol-v2/contracts/interfaces/ILendingPool.sol\":{\"keccak256\":\"0x4553509caee0ee64cb12064b790dc8b584c9241cba8d293c314872999b0148bf\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://0bcb9ae40fe4f04f2247fae2c879d5c5b970fe8fbaa524c7169f977c91802d31\",\"dweb:/ipfs/QmZ2U1LRC2TRA3LNEjBbdMpa7gW585JfjMkngyDotyxXzG\"]},\"contracts/aave/protocol-v2/contracts/interfaces/ILendingPoolAddressesProvider.sol\":{\"keccak256\":\"0x267db09e307b8277d4cba65a3c5e39dfda037d4ac97d7d49cbadf36de49fc56c\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://501733182665064d8151f48ad54cc39533d7787cac975682ee852fc22b626b76\",\"dweb:/ipfs/QmTLr1zY1sSNEZ37RAjcEp8Ed8iHfyvEULrq6KjiwFuLJs\"]},\"contracts/chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x8c2fcdd0da835dee59d8846ff082d7526de2aa3388ddcba3d8bf60c612b45d06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://18b462620819cb963be7458a56d88fc2fd38c66795f92a39150783c767df3406\",\"dweb:/ipfs/QmXbGDZiodT4hKMocBXkQhUsuMZYur7EMKvbYZKFctN6ti\"]},\"contracts/openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"contracts/openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol\":{\"keccak256\":\"0x214335376e334c64038a801e7350ccbff96d67bae9a0cd5913b65ae0d675136b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://79061c6351c2071e2dbb6b2948771ba3f53d93546fe45b620604b32a5620c76e\",\"dweb:/ipfs/QmXDgY4iuF9yi8fNLvzu3AquiQnf4D1aZ9kKDyGDE8N1aK\"]},\"contracts/openzeppelin/contracts/token/ERC721/IERC721Metadata.sol\":{\"keccak256\":\"0x02bb611e43322b705eaf170703fc39eadc9aa898e8a4e06be726451792573a39\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c9a6787d8bd19d079c25bf1b2c60416031fe7ba908f526c7f11bc8fb7708912\",\"dweb:/ipfs/Qmb2kTcVaRE5gMCV1rZoBUmdYqdK1UH57FLt4k3ZUVBvaj\"]},\"contracts/openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/IERC721Permit.sol\":{\"keccak256\":\"0x759a0bd1bfaf084c9f34071c10d665861b5f2858d3755bfa5c52a9d74146e733\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://2224edfcf78039bd5eab48c8e9ca45275efa8f62d87f701a6ab5ddf682a13706\",\"dweb:/ipfs/QmQD3NwFvLTZtE6B2mdBW5Kf2c85UaAaknMCr5xy1Syt7a\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol\":{\"keccak256\":\"0xec8be19b3492587beec5f8b7d3bc0fbd14b761e4e7c10e37c883a22d5453eb87\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://88a24c7310ac26efaf77c679753889184182f9d160b1fe359376347b5617bdd5\",\"dweb:/ipfs/QmexmcDURHMDMHebhjT19K6q4nFhbBDm3eKhBbBP4hqGaC\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol\":{\"keccak256\":\"0x761c61ac9e453c7eef8fed6da0ad285c37cee6dfa8b1457056933e5d286d16f5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://9019992fdf0e25b664b77a72d1ea84b09dd70439f6a47400de3ebdcaf3ea9f41\",\"dweb:/ipfs/QmRSCM2Wf9b3Hi6ggkkxFt2piPW3g6q5VsVFSHessmuiXZ\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol\":{\"keccak256\":\"0xe8ad7afca9e540b647c2fe96b3545f69fd387f414bf707f6af7a153a689c396f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d50a147bd8e89a74c838d7d8314c94ac53485d10d721beeb6a0863a79f3b02af\",\"dweb:/ipfs/QmcjZrUv7QAZERPC1ChfsUy9EDFbHiuoW1D2ydSHTdaSGX\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/IPoolInitializer.sol\":{\"keccak256\":\"0x2dabdc5d0514dd0e46b6b0e7787b69986abef98d42636867c436ad93d6aa8f2d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8cb47e81cf597c80a394aeadd63d9b20b7e2c49e0fd3c83b615b07715f4ebb4d\",\"dweb:/ipfs/QmeTUN5rCRXgE7ebHyukDezhQHG5HSWTB82oqtrtjALSrg\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0xce7610a700cf6c760af022724574b71f6cb8a1b474718b1148c41c4e59f8c91c\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://986c5048d84fd4ec19a6f94c523edf15ae9c09e702d2c55b5a518cb2bd747cef\",\"dweb:/ipfs/Qmc1VpG83GXfok8qAudpaXQDCtHRu76wosByiV4DBf7VFn\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0x8cc5fdc36f72b60fbaae4cfdec0860e52966bc696687a6748740036a9351e0d8\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://612d2f4508cbfb26493b7fc1afd55dfc49bafd7a41568874072677cb2f9fbac2\",\"dweb:/ipfs/QmZqDWJg7cocG2eHe3DHLHFX2q8WYSUhuRaN7GLStxAkPf\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3e7a79fe15138d3f5662f52cb6e4fe290609ab8682747234da4a3c1f5c2c36e9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e779dbd454468595a65d69e2e465a2a0644849c60e843689ed09fb629c4aff7e\",\"dweb:/ipfs/QmQjrixc6dLbQV3jj5FGYB4Eyxfi3g7XQ7Crz1nLw64KQ9\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0xbda9a49a6477d17ea7aee446c520d84439821b392e0739fb2d13d639b2d0a518\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://9d77965c193a9996f934bfc74f5a51228efa2472351d4ea04fab1f4c84e1fc59\",\"dweb:/ipfs/QmUgeuPbTj6pB2fVHhdCLXf28PfvGLyHQMMgCVRaajXMzz\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xf52a9196f5ad0e013eea7865e23b0d55c7eb985c54d7999fdfbf25cc09ff89b6\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://9915a96570d3714e122505db18d312b89cff05e8412efd063c1010c51e871172\",\"dweb:/ipfs/QmWrUtH46EJ15JudFuTKFqXpFHaXupU6ToCJch1xhh27Q2\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0xc68758d899d618e71a0b6c41a0f3c0f910cb97e769131290b9b2e83521b162e4\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://9da49cb2294b63dbb46e0375160701a1623ea6227724d876e14f99d903d14b3c\",\"dweb:/ipfs/QmUDNHtMJsvWYJpy7rQ8yj1kLbA4kJtQ6CbweXSwwmryfH\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0x7817d3fe66d25358dda3b9ce7e531c544bb3a1bf5cd35bd897d0bb782ae8fc15\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b37a8e4a99e169c9787ed9d0b57c879e439c780beda61c397119a6596fa6794d\",\"dweb:/ipfs/QmeeNDyF6BBJwQNNvoeTjJhLkx3L7eiTRWRUhQ8wNyyoNK\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x007ade6bc9ccc96311c12182045de8fa65c5d42476f9e3d08a0b8ed03be7e77d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://24b7835a505f81d181b17964a5c7a38cfdbeaced376021bfd3b02cd42640023a\",\"dweb:/ipfs/QmTqC1uHg1KNKiA8QgP8cTAzuJFTFPUne93izW2PFgKApv\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0xe77ec56f09b05e9cb034a59f83f7925bb33b06787011339166097fcbf3ba8ef6\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://4c400a8119e27ae73b2ec8b271609afb7a42757c92a366bc6c95f2df9eb52981\",\"dweb:/ipfs/QmRarxpXNNpkf5tHXoSFD3gD9GvXWUxyGiWamG7dPd2e9t\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 37,
								"contract": "contracts/MainBot.sol:MainBot",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 39,
								"contract": "contracts/MainBot.sol:MainBot",
								"label": "tradingEnabled",
								"offset": 20,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 41,
								"contract": "contracts/MainBot.sol:MainBot",
								"label": "initialDeposit",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 43,
								"contract": "contracts/MainBot.sol:MainBot",
								"label": "maticBalance",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 45,
								"contract": "contracts/MainBot.sol:MainBot",
								"label": "stablecoinBalance",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 47,
								"contract": "contracts/MainBot.sol:MainBot",
								"label": "profitThreshold",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 49,
								"contract": "contracts/MainBot.sol:MainBot",
								"label": "lossThreshold",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 52,
								"contract": "contracts/MainBot.sol:MainBot",
								"label": "gasCostMultiplier",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 55,
								"contract": "contracts/MainBot.sol:MainBot",
								"label": "trailingStopLoss",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 57,
								"contract": "contracts/MainBot.sol:MainBot",
								"label": "nextLogTime",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 60,
								"contract": "contracts/MainBot.sol:MainBot",
								"label": "currentActivity",
								"offset": 0,
								"slot": "9",
								"type": "t_string_storage"
							},
							{
								"astId": 62,
								"contract": "contracts/MainBot.sol:MainBot",
								"label": "polToken",
								"offset": 0,
								"slot": "10",
								"type": "t_address"
							},
							{
								"astId": 64,
								"contract": "contracts/MainBot.sol:MainBot",
								"label": "usdtToken",
								"offset": 0,
								"slot": "11",
								"type": "t_address"
							},
							{
								"astId": 66,
								"contract": "contracts/MainBot.sol:MainBot",
								"label": "usdcToken",
								"offset": 0,
								"slot": "12",
								"type": "t_address"
							},
							{
								"astId": 68,
								"contract": "contracts/MainBot.sol:MainBot",
								"label": "quickSwapRouter",
								"offset": 0,
								"slot": "13",
								"type": "t_address"
							},
							{
								"astId": 70,
								"contract": "contracts/MainBot.sol:MainBot",
								"label": "priceFeedAddress",
								"offset": 0,
								"slot": "14",
								"type": "t_address"
							},
							{
								"astId": 72,
								"contract": "contracts/MainBot.sol:MainBot",
								"label": "uniswapRouter",
								"offset": 0,
								"slot": "15",
								"type": "t_address"
							},
							{
								"astId": 74,
								"contract": "contracts/MainBot.sol:MainBot",
								"label": "uniswapPositionManager",
								"offset": 0,
								"slot": "16",
								"type": "t_address"
							},
							{
								"astId": 76,
								"contract": "contracts/MainBot.sol:MainBot",
								"label": "aaveLendingPoolAddressesProvider",
								"offset": 0,
								"slot": "17",
								"type": "t_address"
							},
							{
								"astId": 80,
								"contract": "contracts/MainBot.sol:MainBot",
								"label": "dexRouters",
								"offset": 0,
								"slot": "18",
								"type": "t_mapping(t_string_memory_ptr,t_address)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_string_memory_ptr,t_address)": {
								"encoding": "mapping",
								"key": "t_string_memory_ptr",
								"label": "mapping(string => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_memory_ptr": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/aave/protocol-v2/contracts/interfaces/DataTypes.sol": {
				"DataTypes": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/aave/protocol-v2/contracts/interfaces/DataTypes.sol\":58:983  library DataTypes {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/aave/protocol-v2/contracts/interfaces/DataTypes.sol\":58:983  library DataTypes {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b5b117ead1a68fe33fabfd1a225e678e5c2d0fc134753c3d21f66a0ae6d7d52864736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220b5b117ead1a68fe33fabfd1a225e678e5c2d0fc134753c3d21f66a0ae6d7d52864736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB5 0xB1 OR 0xEA 0xD1 0xA6 DUP16 0xE3 EXTCODEHASH 0xAB REVERT BYTE 0x22 0x5E PUSH8 0x8E5C2D0FC134753C RETURNDATASIZE 0x21 0xF6 PUSH11 0xAE6D7D52864736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "58:925:1:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;58:925:1;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220b5b117ead1a68fe33fabfd1a225e678e5c2d0fc134753c3d21f66a0ae6d7d52864736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB5 0xB1 OR 0xEA 0xD1 0xA6 DUP16 0xE3 EXTCODEHASH 0xAB REVERT BYTE 0x22 0x5E PUSH8 0x8E5C2D0FC134753C RETURNDATASIZE 0x21 0xF6 PUSH11 0xAE6D7D52864736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "58:925:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 58,
									"end": 983,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 983,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 983,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 58,
									"end": 983,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 58,
									"end": 983,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 58,
									"end": 983,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 58,
									"end": 983,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 58,
									"end": 983,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 58,
									"end": 983,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 58,
									"end": 983,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 983,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 58,
									"end": 983,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 58,
									"end": 983,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 58,
									"end": 983,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 58,
									"end": 983,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 58,
									"end": 983,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 983,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 58,
									"end": 983,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 983,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 58,
									"end": 983,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 58,
									"end": 983,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 58,
									"end": 983,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 983,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 58,
									"end": 983,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 58,
									"end": 983,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 58,
									"end": 983,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 58,
									"end": 983,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 983,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 58,
									"end": 983,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 58,
									"end": 983,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 58,
									"end": 983,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 58,
									"end": 983,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 58,
									"end": 983,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 58,
									"end": 983,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b5b117ead1a68fe33fabfd1a225e678e5c2d0fc134753c3d21f66a0ae6d7d52864736f6c63430008140033",
									".code": [
										{
											"begin": 58,
											"end": 983,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 58,
											"end": 983,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 58,
											"end": 983,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 58,
											"end": 983,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 58,
											"end": 983,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 58,
											"end": 983,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 58,
											"end": 983,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 983,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 58,
											"end": 983,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/MainBot.sol",
								"contracts/aave/protocol-v2/contracts/interfaces/DataTypes.sol",
								"contracts/aave/protocol-v2/contracts/interfaces/ILendingPool.sol",
								"contracts/aave/protocol-v2/contracts/interfaces/ILendingPoolAddressesProvider.sol",
								"contracts/chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol",
								"contracts/openzeppelin/contracts/token/ERC721/IERC721.sol",
								"contracts/openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol",
								"contracts/openzeppelin/contracts/token/ERC721/IERC721Metadata.sol",
								"contracts/openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/uniswap/v3-periphery/contracts/interfaces/IERC721Permit.sol",
								"contracts/uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol",
								"contracts/uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol",
								"contracts/uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol",
								"contracts/uniswap/v3-periphery/contracts/interfaces/IPoolInitializer.sol",
								"contracts/uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
								"contracts/uniswap/v3-periphery/contracts/interfaces/IUniswapV3Pool.sol",
								"contracts/uniswap/v3-periphery/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
								"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
								"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
								"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
								"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
								"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
								"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolState.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/aave/protocol-v2/contracts/interfaces/DataTypes.sol\":\"DataTypes\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/aave/protocol-v2/contracts/interfaces/DataTypes.sol\":{\"keccak256\":\"0x3c126df12782518f7ae20a35358d4b55b57a64dfac2fca4b3d6a8a4ca6aed911\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be9e0c1d61b42fbdce8524013b225ed8352978d6a0035552109bfa76065ae275\",\"dweb:/ipfs/QmcStYcnoGywFhiUXAZk6fhypW9BFwqQrnfw9gf6UfeqP3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/aave/protocol-v2/contracts/interfaces/ILendingPool.sol": {
				"ILendingPool": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "onBehalfOf",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "borrowRateMode",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "borrowRate",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint16",
									"name": "referral",
									"type": "uint16"
								}
							],
							"name": "Borrow",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "onBehalfOf",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint16",
									"name": "referral",
									"type": "uint16"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "target",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "initiator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "premium",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "referralCode",
									"type": "uint16"
								}
							],
							"name": "FlashLoan",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "collateralAsset",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "debtAsset",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "debtToCover",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "liquidatedCollateralAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "liquidator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "receiveAToken",
									"type": "bool"
								}
							],
							"name": "LiquidationCall",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "RebalanceStableBorrowRate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "repayer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Repay",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "liquidityRate",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "stableBorrowRate",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "variableBorrowRate",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "liquidityIndex",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "variableBorrowIndex",
									"type": "uint256"
								}
							],
							"name": "ReserveDataUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "ReserveUsedAsCollateralDisabled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "ReserveUsedAsCollateralEnabled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "rateMode",
									"type": "uint256"
								}
							],
							"name": "Swap",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "interestRateMode",
									"type": "uint256"
								},
								{
									"internalType": "uint16",
									"name": "referralCode",
									"type": "uint16"
								},
								{
									"internalType": "address",
									"name": "onBehalfOf",
									"type": "address"
								}
							],
							"name": "borrow",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "onBehalfOf",
									"type": "address"
								},
								{
									"internalType": "uint16",
									"name": "referralCode",
									"type": "uint16"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "balanceFromAfter",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "balanceToBefore",
									"type": "uint256"
								}
							],
							"name": "finalizeTransfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiverAddress",
									"type": "address"
								},
								{
									"internalType": "address[]",
									"name": "assets",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "modes",
									"type": "uint256[]"
								},
								{
									"internalType": "address",
									"name": "onBehalfOf",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "params",
									"type": "bytes"
								},
								{
									"internalType": "uint16",
									"name": "referralCode",
									"type": "uint16"
								}
							],
							"name": "flashLoan",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getAddressesProvider",
							"outputs": [
								{
									"internalType": "contract ILendingPoolAddressesProvider",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								}
							],
							"name": "getConfiguration",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "data",
											"type": "uint256"
										}
									],
									"internalType": "struct DataTypes.ReserveConfigurationMap",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								}
							],
							"name": "getReserveData",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "totalLiquidity",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "availableLiquidity",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "totalStableDebt",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "totalVariableDebt",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "liquidityRate",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "variableBorrowRate",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "stableBorrowRate",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "averageStableBorrowRate",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "liquidityIndex",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "variableBorrowIndex",
											"type": "uint256"
										},
										{
											"internalType": "uint40",
											"name": "lastUpdateTimestamp",
											"type": "uint40"
										}
									],
									"internalType": "struct DataTypes.ReserveData",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								}
							],
							"name": "getReserveNormalizedIncome",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								}
							],
							"name": "getReserveNormalizedVariableDebt",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getReservesList",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getUserAccountData",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "totalCollateralETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalDebtETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "availableBorrowsETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "currentLiquidationThreshold",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "ltv",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "healthFactor",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getUserConfiguration",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "data",
											"type": "uint256"
										}
									],
									"internalType": "struct DataTypes.UserConfigurationMap",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "aTokenAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "stableDebtAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "variableDebtAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "interestRateStrategyAddress",
									"type": "address"
								}
							],
							"name": "initReserve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collateralAsset",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "debtAsset",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "debtToCover",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "receiveAToken",
									"type": "bool"
								}
							],
							"name": "liquidationCall",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "rebalanceStableBorrowRate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rateMode",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "onBehalfOf",
									"type": "address"
								}
							],
							"name": "repay",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "configuration",
									"type": "uint256"
								}
							],
							"name": "setConfiguration",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "val",
									"type": "bool"
								}
							],
							"name": "setPause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "rateStrategyAddress",
									"type": "address"
								}
							],
							"name": "setReserveInterestRateStrategyAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "useAsCollateral",
									"type": "bool"
								}
							],
							"name": "setUserUseReserveAsCollateral",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "rateMode",
									"type": "uint256"
								}
							],
							"name": "swapBorrowRateMode",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "withdraw",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Borrow(address,address,address,uint256,uint256,uint256,uint16)": {
								"details": "Emitted on borrow() and flashLoan() when debt needs to be opened",
								"params": {
									"amount": "The amount borrowed out",
									"borrowRate": "The numeric rate at which the user has borrowed",
									"borrowRateMode": "The rate mode: 1 for Stable, 2 for Variable",
									"onBehalfOf": "The address that will be getting the debt",
									"referral": "The referral code used*",
									"reserve": "The address of the underlying asset being borrowed",
									"user": "The address of the user initiating the borrow(), receiving the funds on borrow() or just initiator of the transaction on flashLoan()"
								}
							},
							"Deposit(address,address,address,uint256,uint16)": {
								"details": "Emitted on deposit()",
								"params": {
									"amount": "The amount deposited",
									"onBehalfOf": "The beneficiary of the deposit, receiving the aTokens",
									"referral": "The referral code used*",
									"reserve": "The address of the underlying asset of the reserve",
									"user": "The address initiating the deposit"
								}
							},
							"FlashLoan(address,address,address,uint256,uint256,uint16)": {
								"details": "Emitted on flashLoan()",
								"params": {
									"amount": "The amount flash borrowed",
									"asset": "The address of the asset being flash borrowed",
									"initiator": "The address initiating the flash loan",
									"premium": "The fee flash borrowed",
									"referralCode": "The referral code used*",
									"target": "The address of the flash loan receiver contract"
								}
							},
							"LiquidationCall(address,address,address,uint256,uint256,address,bool)": {
								"details": "Emitted when a borrower is liquidated. This event is emitted by the LendingPool via LendingPoolCollateral manager using a DELEGATECALL This allows to have the events in the generated ABI for LendingPool.",
								"params": {
									"collateralAsset": "The address of the underlying asset used as collateral, to receive as result of the liquidation",
									"debtAsset": "The address of the underlying borrowed asset to be repaid with the liquidation",
									"debtToCover": "The debt amount of borrowed `asset` the liquidator wants to cover",
									"liquidatedCollateralAmount": "The amount of collateral received by the liiquidator",
									"liquidator": "The address of the liquidator",
									"receiveAToken": "`true` if the liquidators wants to receive the collateral aTokens, `false` if he wants to receive the underlying collateral asset directly*",
									"user": "The address of the borrower getting liquidated"
								}
							},
							"Paused()": {
								"details": "Emitted when the pause is triggered."
							},
							"RebalanceStableBorrowRate(address,address)": {
								"details": "Emitted on rebalanceStableBorrowRate()",
								"params": {
									"reserve": "The address of the underlying asset of the reserve",
									"user": "The address of the user for which the rebalance has been executed*"
								}
							},
							"Repay(address,address,address,uint256)": {
								"details": "Emitted on repay()",
								"params": {
									"amount": "The amount repaid*",
									"repayer": "The address of the user initiating the repay(), providing the funds",
									"reserve": "The address of the underlying asset of the reserve",
									"user": "The beneficiary of the repayment, getting his debt reduced"
								}
							},
							"ReserveDataUpdated(address,uint256,uint256,uint256,uint256,uint256)": {
								"details": "Emitted when the state of a reserve is updated. NOTE: This event is actually declared in the ReserveLogic library and emitted in the updateInterestRates() function. Since the function is internal, the event will actually be fired by the LendingPool contract. The event is therefore replicated here so it gets added to the LendingPool ABI",
								"params": {
									"liquidityIndex": "The new liquidity index",
									"liquidityRate": "The new liquidity rate",
									"reserve": "The address of the underlying asset of the reserve",
									"stableBorrowRate": "The new stable borrow rate",
									"variableBorrowIndex": "The new variable borrow index*",
									"variableBorrowRate": "The new variable borrow rate"
								}
							},
							"ReserveUsedAsCollateralDisabled(address,address)": {
								"details": "Emitted on setUserUseReserveAsCollateral()",
								"params": {
									"reserve": "The address of the underlying asset of the reserve",
									"user": "The address of the user enabling the usage as collateral*"
								}
							},
							"ReserveUsedAsCollateralEnabled(address,address)": {
								"details": "Emitted on setUserUseReserveAsCollateral()",
								"params": {
									"reserve": "The address of the underlying asset of the reserve",
									"user": "The address of the user enabling the usage as collateral*"
								}
							},
							"Swap(address,address,uint256)": {
								"details": "Emitted on swapBorrowRateMode()",
								"params": {
									"rateMode": "The rate mode that the user wants to swap to*",
									"reserve": "The address of the underlying asset of the reserve",
									"user": "The address of the user swapping his rate mode"
								}
							},
							"Unpaused()": {
								"details": "Emitted when the pause is lifted."
							},
							"Withdraw(address,address,address,uint256)": {
								"details": "Emitted on withdraw()",
								"params": {
									"amount": "The amount to be withdrawn*",
									"reserve": "The address of the underlyng asset being withdrawn",
									"to": "Address that will receive the underlying",
									"user": "The address initiating the withdrawal, owner of aTokens"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"borrow(address,uint256,uint256,uint16,address)": {
								"details": "Allows users to borrow a specific `amount` of the reserve underlying asset, provided that the borrower already deposited enough collateral, or he was given enough allowance by a credit delegator on the corresponding debt token (StableDebtToken or VariableDebtToken) - E.g. User borrows 100 USDC passing as `onBehalfOf` his own address, receiving the 100 USDC in his wallet   and 100 stable/variable debt tokens, depending on the `interestRateMode`",
								"params": {
									"amount": "The amount to be borrowed",
									"asset": "The address of the underlying asset to borrow",
									"interestRateMode": "The interest rate mode at which the user wants to borrow: 1 for Stable, 2 for Variable",
									"onBehalfOf": "Address of the user who will receive the debt. Should be the address of the borrower itself calling the function if he wants to borrow against his own collateral, or the address of the credit delegator if he has been given credit delegation allowance*",
									"referralCode": "Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man"
								}
							},
							"deposit(address,uint256,address,uint16)": {
								"details": "Deposits an `amount` of underlying asset into the reserve, receiving in return overlying aTokens. - E.g. User deposits 100 USDC and gets in return 100 aUSDC",
								"params": {
									"amount": "The amount to be deposited",
									"asset": "The address of the underlying asset to deposit",
									"onBehalfOf": "The address that will receive the aTokens, same as msg.sender if the user   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens   is a different wallet",
									"referralCode": "Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man*"
								}
							},
							"flashLoan(address,address[],uint256[],uint256[],address,bytes,uint16)": {
								"details": "Allows smartcontracts to access the liquidity of the pool within one transaction, as long as the amount taken plus a fee is returned. IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept into consideration. For further details please visit https://developers.aave.com",
								"params": {
									"amounts": "The amounts amounts being flash-borrowed",
									"assets": "The addresses of the assets being flash-borrowed",
									"modes": "Types of the debt to open if the flash loan is not returned:   0 -> Don't open any debt, just revert if funds can't be transferred from the receiver   1 -> Open debt at stable rate for the value of the amount flash-borrowed to the `onBehalfOf` address   2 -> Open debt at variable rate for the value of the amount flash-borrowed to the `onBehalfOf` address",
									"onBehalfOf": "The address  that will receive the debt in the case of using on `modes` 1 or 2",
									"params": "Variadic packed params to pass to the receiver as extra information",
									"receiverAddress": "The address of the contract receiving the funds, implementing the IFlashLoanReceiver interface",
									"referralCode": "Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man*"
								}
							},
							"getConfiguration(address)": {
								"details": "Returns the configuration of the reserve",
								"params": {
									"asset": "The address of the underlying asset of the reserve"
								},
								"returns": {
									"_0": "The configuration of the reserve*"
								}
							},
							"getReserveData(address)": {
								"details": "Returns the state and configuration of the reserve",
								"params": {
									"asset": "The address of the underlying asset of the reserve"
								},
								"returns": {
									"_0": "The state of the reserve*"
								}
							},
							"getReserveNormalizedIncome(address)": {
								"details": "Returns the normalized income normalized income of the reserve",
								"params": {
									"asset": "The address of the underlying asset of the reserve"
								},
								"returns": {
									"_0": "The reserve's normalized income"
								}
							},
							"getReserveNormalizedVariableDebt(address)": {
								"details": "Returns the normalized variable debt per unit of asset",
								"params": {
									"asset": "The address of the underlying asset of the reserve"
								},
								"returns": {
									"_0": "The reserve normalized variable debt"
								}
							},
							"getUserAccountData(address)": {
								"details": "Returns the user account data across all the reserves",
								"params": {
									"user": "The address of the user"
								},
								"returns": {
									"availableBorrowsETH": "the borrowing power left of the user",
									"currentLiquidationThreshold": "the liquidation threshold of the user",
									"healthFactor": "the current health factor of the user*",
									"ltv": "the loan to value of the user",
									"totalCollateralETH": "the total collateral in ETH of the user",
									"totalDebtETH": "the total debt in ETH of the user"
								}
							},
							"getUserConfiguration(address)": {
								"details": "Returns the configuration of the user across all the reserves",
								"params": {
									"user": "The user address"
								},
								"returns": {
									"_0": "The configuration of the user*"
								}
							},
							"liquidationCall(address,address,address,uint256,bool)": {
								"details": "Function to liquidate a non-healthy position collateral-wise, with Health Factor below 1 - The caller (liquidator) covers `debtToCover` amount of debt of the user getting liquidated, and receives   a proportionally amount of the `collateralAsset` plus a bonus to cover market risk",
								"params": {
									"collateralAsset": "The address of the underlying asset used as collateral, to receive as result of the liquidation",
									"debtAsset": "The address of the underlying borrowed asset to be repaid with the liquidation",
									"debtToCover": "The debt amount of borrowed `asset` the liquidator wants to cover",
									"receiveAToken": "`true` if the liquidators wants to receive the collateral aTokens, `false` if he wants to receive the underlying collateral asset directly*",
									"user": "The address of the borrower getting liquidated"
								}
							},
							"rebalanceStableBorrowRate(address,address)": {
								"details": "Rebalances the stable interest rate of a user to the current stable rate defined on the reserve. - Users can be rebalanced if the following conditions are satisfied:     1. Usage ratio is above 95%     2. the current deposit APY is below REBALANCE_UP_THRESHOLD * maxVariableBorrowRate, which means that too much has been        borrowed at a stable rate and depositors are not earning enough",
								"params": {
									"asset": "The address of the underlying asset borrowed",
									"user": "The address of the user to be rebalanced*"
								}
							},
							"repay(address,uint256,uint256,address)": {
								"params": {
									"amount": "The amount to repay - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`",
									"asset": "The address of the borrowed underlying asset previously borrowed",
									"onBehalfOf": "Address of the user who will get his debt reduced/removed. Should be the address of the user calling the function if he wants to reduce/remove his own debt, or the address of any other other borrower whose debt should be removed",
									"rateMode": "The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable"
								},
								"returns": {
									"_0": "The final amount repaid*"
								}
							},
							"setUserUseReserveAsCollateral(address,bool)": {
								"details": "Allows depositors to enable/disable a specific deposited asset as collateral",
								"params": {
									"asset": "The address of the underlying asset deposited",
									"useAsCollateral": "`true` if the user wants to use the deposit as collateral, `false` otherwise*"
								}
							},
							"swapBorrowRateMode(address,uint256)": {
								"details": "Allows a borrower to swap his debt between stable and variable mode, or viceversa",
								"params": {
									"asset": "The address of the underlying asset borrowed",
									"rateMode": "The rate mode that the user wants to swap to*"
								}
							},
							"withdraw(address,uint256,address)": {
								"details": "Withdraws an `amount` of underlying asset from the reserve, burning the equivalent aTokens owned E.g. User has 100 aUSDC, calls withdraw() and receives 100 USDC, burning the 100 aUSDC",
								"params": {
									"amount": "The underlying amount to be withdrawn   - Send the value type(uint256).max in order to withdraw the whole aToken balance",
									"asset": "The address of the underlying asset to withdraw",
									"to": "Address that will receive the underlying, same as msg.sender if the user   wants to receive it on his own wallet, or a different address if the beneficiary is a   different wallet"
								},
								"returns": {
									"_0": "The final amount withdrawn*"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"borrow(address,uint256,uint256,uint16,address)": "a415bcad",
							"deposit(address,uint256,address,uint16)": "e8eda9df",
							"finalizeTransfer(address,address,address,uint256,uint256,uint256)": "d5ed3933",
							"flashLoan(address,address[],uint256[],uint256[],address,bytes,uint16)": "ab9c4b5d",
							"getAddressesProvider()": "fe65acfe",
							"getConfiguration(address)": "c44b11f7",
							"getReserveData(address)": "35ea6a75",
							"getReserveNormalizedIncome(address)": "d15e0053",
							"getReserveNormalizedVariableDebt(address)": "386497fd",
							"getReservesList()": "d1946dbc",
							"getUserAccountData(address)": "bf92857c",
							"getUserConfiguration(address)": "4417a583",
							"initReserve(address,address,address,address,address)": "7a708e92",
							"liquidationCall(address,address,address,uint256,bool)": "00a718a9",
							"paused()": "5c975abb",
							"rebalanceStableBorrowRate(address,address)": "cd112382",
							"repay(address,uint256,uint256,address)": "573ade81",
							"setConfiguration(address,uint256)": "b8d29276",
							"setPause(bool)": "bedb86fb",
							"setReserveInterestRateStrategyAddress(address,address)": "1d2118f9",
							"setUserUseReserveAsCollateral(address,bool)": "5a3b74b9",
							"swapBorrowRateMode(address,uint256)": "94ba89a2",
							"withdraw(address,uint256,address)": "69328dec"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"borrowRateMode\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"borrowRate\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"referral\",\"type\":\"uint16\"}],\"name\":\"Borrow\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"referral\",\"type\":\"uint16\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"initiator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"premium\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"FlashLoan\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"collateralAsset\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"debtAsset\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"debtToCover\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidatedCollateralAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"receiveAToken\",\"type\":\"bool\"}],\"name\":\"LiquidationCall\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"RebalanceStableBorrowRate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"repayer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Repay\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidityRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stableBorrowRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"variableBorrowRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidityIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"variableBorrowIndex\",\"type\":\"uint256\"}],\"name\":\"ReserveDataUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"ReserveUsedAsCollateralDisabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"ReserveUsedAsCollateralEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rateMode\",\"type\":\"uint256\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestRateMode\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"}],\"name\":\"borrow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balanceFromAfter\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balanceToBefore\",\"type\":\"uint256\"}],\"name\":\"finalizeTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverAddress\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"modes\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"flashLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddressesProvider\",\"outputs\":[{\"internalType\":\"contract ILendingPoolAddressesProvider\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getConfiguration\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"data\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.ReserveConfigurationMap\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getReserveData\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"totalLiquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"availableLiquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalStableDebt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalVariableDebt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidityRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"variableBorrowRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stableBorrowRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"averageStableBorrowRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidityIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"variableBorrowIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint40\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint40\"}],\"internalType\":\"struct DataTypes.ReserveData\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getReserveNormalizedIncome\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getReserveNormalizedVariableDebt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReservesList\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserAccountData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalCollateralETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalDebtETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"availableBorrowsETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentLiquidationThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ltv\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"healthFactor\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserConfiguration\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"data\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.UserConfigurationMap\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"aTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"stableDebtAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"variableDebtAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"interestRateStrategyAddress\",\"type\":\"address\"}],\"name\":\"initReserve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collateralAsset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"debtAsset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"debtToCover\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"receiveAToken\",\"type\":\"bool\"}],\"name\":\"liquidationCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"rebalanceStableBorrowRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateMode\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"}],\"name\":\"repay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"configuration\",\"type\":\"uint256\"}],\"name\":\"setConfiguration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"val\",\"type\":\"bool\"}],\"name\":\"setPause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"rateStrategyAddress\",\"type\":\"address\"}],\"name\":\"setReserveInterestRateStrategyAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useAsCollateral\",\"type\":\"bool\"}],\"name\":\"setUserUseReserveAsCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rateMode\",\"type\":\"uint256\"}],\"name\":\"swapBorrowRateMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Borrow(address,address,address,uint256,uint256,uint256,uint16)\":{\"details\":\"Emitted on borrow() and flashLoan() when debt needs to be opened\",\"params\":{\"amount\":\"The amount borrowed out\",\"borrowRate\":\"The numeric rate at which the user has borrowed\",\"borrowRateMode\":\"The rate mode: 1 for Stable, 2 for Variable\",\"onBehalfOf\":\"The address that will be getting the debt\",\"referral\":\"The referral code used*\",\"reserve\":\"The address of the underlying asset being borrowed\",\"user\":\"The address of the user initiating the borrow(), receiving the funds on borrow() or just initiator of the transaction on flashLoan()\"}},\"Deposit(address,address,address,uint256,uint16)\":{\"details\":\"Emitted on deposit()\",\"params\":{\"amount\":\"The amount deposited\",\"onBehalfOf\":\"The beneficiary of the deposit, receiving the aTokens\",\"referral\":\"The referral code used*\",\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address initiating the deposit\"}},\"FlashLoan(address,address,address,uint256,uint256,uint16)\":{\"details\":\"Emitted on flashLoan()\",\"params\":{\"amount\":\"The amount flash borrowed\",\"asset\":\"The address of the asset being flash borrowed\",\"initiator\":\"The address initiating the flash loan\",\"premium\":\"The fee flash borrowed\",\"referralCode\":\"The referral code used*\",\"target\":\"The address of the flash loan receiver contract\"}},\"LiquidationCall(address,address,address,uint256,uint256,address,bool)\":{\"details\":\"Emitted when a borrower is liquidated. This event is emitted by the LendingPool via LendingPoolCollateral manager using a DELEGATECALL This allows to have the events in the generated ABI for LendingPool.\",\"params\":{\"collateralAsset\":\"The address of the underlying asset used as collateral, to receive as result of the liquidation\",\"debtAsset\":\"The address of the underlying borrowed asset to be repaid with the liquidation\",\"debtToCover\":\"The debt amount of borrowed `asset` the liquidator wants to cover\",\"liquidatedCollateralAmount\":\"The amount of collateral received by the liiquidator\",\"liquidator\":\"The address of the liquidator\",\"receiveAToken\":\"`true` if the liquidators wants to receive the collateral aTokens, `false` if he wants to receive the underlying collateral asset directly*\",\"user\":\"The address of the borrower getting liquidated\"}},\"Paused()\":{\"details\":\"Emitted when the pause is triggered.\"},\"RebalanceStableBorrowRate(address,address)\":{\"details\":\"Emitted on rebalanceStableBorrowRate()\",\"params\":{\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address of the user for which the rebalance has been executed*\"}},\"Repay(address,address,address,uint256)\":{\"details\":\"Emitted on repay()\",\"params\":{\"amount\":\"The amount repaid*\",\"repayer\":\"The address of the user initiating the repay(), providing the funds\",\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The beneficiary of the repayment, getting his debt reduced\"}},\"ReserveDataUpdated(address,uint256,uint256,uint256,uint256,uint256)\":{\"details\":\"Emitted when the state of a reserve is updated. NOTE: This event is actually declared in the ReserveLogic library and emitted in the updateInterestRates() function. Since the function is internal, the event will actually be fired by the LendingPool contract. The event is therefore replicated here so it gets added to the LendingPool ABI\",\"params\":{\"liquidityIndex\":\"The new liquidity index\",\"liquidityRate\":\"The new liquidity rate\",\"reserve\":\"The address of the underlying asset of the reserve\",\"stableBorrowRate\":\"The new stable borrow rate\",\"variableBorrowIndex\":\"The new variable borrow index*\",\"variableBorrowRate\":\"The new variable borrow rate\"}},\"ReserveUsedAsCollateralDisabled(address,address)\":{\"details\":\"Emitted on setUserUseReserveAsCollateral()\",\"params\":{\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address of the user enabling the usage as collateral*\"}},\"ReserveUsedAsCollateralEnabled(address,address)\":{\"details\":\"Emitted on setUserUseReserveAsCollateral()\",\"params\":{\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address of the user enabling the usage as collateral*\"}},\"Swap(address,address,uint256)\":{\"details\":\"Emitted on swapBorrowRateMode()\",\"params\":{\"rateMode\":\"The rate mode that the user wants to swap to*\",\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address of the user swapping his rate mode\"}},\"Unpaused()\":{\"details\":\"Emitted when the pause is lifted.\"},\"Withdraw(address,address,address,uint256)\":{\"details\":\"Emitted on withdraw()\",\"params\":{\"amount\":\"The amount to be withdrawn*\",\"reserve\":\"The address of the underlyng asset being withdrawn\",\"to\":\"Address that will receive the underlying\",\"user\":\"The address initiating the withdrawal, owner of aTokens\"}}},\"kind\":\"dev\",\"methods\":{\"borrow(address,uint256,uint256,uint16,address)\":{\"details\":\"Allows users to borrow a specific `amount` of the reserve underlying asset, provided that the borrower already deposited enough collateral, or he was given enough allowance by a credit delegator on the corresponding debt token (StableDebtToken or VariableDebtToken) - E.g. User borrows 100 USDC passing as `onBehalfOf` his own address, receiving the 100 USDC in his wallet   and 100 stable/variable debt tokens, depending on the `interestRateMode`\",\"params\":{\"amount\":\"The amount to be borrowed\",\"asset\":\"The address of the underlying asset to borrow\",\"interestRateMode\":\"The interest rate mode at which the user wants to borrow: 1 for Stable, 2 for Variable\",\"onBehalfOf\":\"Address of the user who will receive the debt. Should be the address of the borrower itself calling the function if he wants to borrow against his own collateral, or the address of the credit delegator if he has been given credit delegation allowance*\",\"referralCode\":\"Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man\"}},\"deposit(address,uint256,address,uint16)\":{\"details\":\"Deposits an `amount` of underlying asset into the reserve, receiving in return overlying aTokens. - E.g. User deposits 100 USDC and gets in return 100 aUSDC\",\"params\":{\"amount\":\"The amount to be deposited\",\"asset\":\"The address of the underlying asset to deposit\",\"onBehalfOf\":\"The address that will receive the aTokens, same as msg.sender if the user   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens   is a different wallet\",\"referralCode\":\"Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man*\"}},\"flashLoan(address,address[],uint256[],uint256[],address,bytes,uint16)\":{\"details\":\"Allows smartcontracts to access the liquidity of the pool within one transaction, as long as the amount taken plus a fee is returned. IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept into consideration. For further details please visit https://developers.aave.com\",\"params\":{\"amounts\":\"The amounts amounts being flash-borrowed\",\"assets\":\"The addresses of the assets being flash-borrowed\",\"modes\":\"Types of the debt to open if the flash loan is not returned:   0 -> Don't open any debt, just revert if funds can't be transferred from the receiver   1 -> Open debt at stable rate for the value of the amount flash-borrowed to the `onBehalfOf` address   2 -> Open debt at variable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\",\"onBehalfOf\":\"The address  that will receive the debt in the case of using on `modes` 1 or 2\",\"params\":\"Variadic packed params to pass to the receiver as extra information\",\"receiverAddress\":\"The address of the contract receiving the funds, implementing the IFlashLoanReceiver interface\",\"referralCode\":\"Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man*\"}},\"getConfiguration(address)\":{\"details\":\"Returns the configuration of the reserve\",\"params\":{\"asset\":\"The address of the underlying asset of the reserve\"},\"returns\":{\"_0\":\"The configuration of the reserve*\"}},\"getReserveData(address)\":{\"details\":\"Returns the state and configuration of the reserve\",\"params\":{\"asset\":\"The address of the underlying asset of the reserve\"},\"returns\":{\"_0\":\"The state of the reserve*\"}},\"getReserveNormalizedIncome(address)\":{\"details\":\"Returns the normalized income normalized income of the reserve\",\"params\":{\"asset\":\"The address of the underlying asset of the reserve\"},\"returns\":{\"_0\":\"The reserve's normalized income\"}},\"getReserveNormalizedVariableDebt(address)\":{\"details\":\"Returns the normalized variable debt per unit of asset\",\"params\":{\"asset\":\"The address of the underlying asset of the reserve\"},\"returns\":{\"_0\":\"The reserve normalized variable debt\"}},\"getUserAccountData(address)\":{\"details\":\"Returns the user account data across all the reserves\",\"params\":{\"user\":\"The address of the user\"},\"returns\":{\"availableBorrowsETH\":\"the borrowing power left of the user\",\"currentLiquidationThreshold\":\"the liquidation threshold of the user\",\"healthFactor\":\"the current health factor of the user*\",\"ltv\":\"the loan to value of the user\",\"totalCollateralETH\":\"the total collateral in ETH of the user\",\"totalDebtETH\":\"the total debt in ETH of the user\"}},\"getUserConfiguration(address)\":{\"details\":\"Returns the configuration of the user across all the reserves\",\"params\":{\"user\":\"The user address\"},\"returns\":{\"_0\":\"The configuration of the user*\"}},\"liquidationCall(address,address,address,uint256,bool)\":{\"details\":\"Function to liquidate a non-healthy position collateral-wise, with Health Factor below 1 - The caller (liquidator) covers `debtToCover` amount of debt of the user getting liquidated, and receives   a proportionally amount of the `collateralAsset` plus a bonus to cover market risk\",\"params\":{\"collateralAsset\":\"The address of the underlying asset used as collateral, to receive as result of the liquidation\",\"debtAsset\":\"The address of the underlying borrowed asset to be repaid with the liquidation\",\"debtToCover\":\"The debt amount of borrowed `asset` the liquidator wants to cover\",\"receiveAToken\":\"`true` if the liquidators wants to receive the collateral aTokens, `false` if he wants to receive the underlying collateral asset directly*\",\"user\":\"The address of the borrower getting liquidated\"}},\"rebalanceStableBorrowRate(address,address)\":{\"details\":\"Rebalances the stable interest rate of a user to the current stable rate defined on the reserve. - Users can be rebalanced if the following conditions are satisfied:     1. Usage ratio is above 95%     2. the current deposit APY is below REBALANCE_UP_THRESHOLD * maxVariableBorrowRate, which means that too much has been        borrowed at a stable rate and depositors are not earning enough\",\"params\":{\"asset\":\"The address of the underlying asset borrowed\",\"user\":\"The address of the user to be rebalanced*\"}},\"repay(address,uint256,uint256,address)\":{\"params\":{\"amount\":\"The amount to repay - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\",\"asset\":\"The address of the borrowed underlying asset previously borrowed\",\"onBehalfOf\":\"Address of the user who will get his debt reduced/removed. Should be the address of the user calling the function if he wants to reduce/remove his own debt, or the address of any other other borrower whose debt should be removed\",\"rateMode\":\"The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\"},\"returns\":{\"_0\":\"The final amount repaid*\"}},\"setUserUseReserveAsCollateral(address,bool)\":{\"details\":\"Allows depositors to enable/disable a specific deposited asset as collateral\",\"params\":{\"asset\":\"The address of the underlying asset deposited\",\"useAsCollateral\":\"`true` if the user wants to use the deposit as collateral, `false` otherwise*\"}},\"swapBorrowRateMode(address,uint256)\":{\"details\":\"Allows a borrower to swap his debt between stable and variable mode, or viceversa\",\"params\":{\"asset\":\"The address of the underlying asset borrowed\",\"rateMode\":\"The rate mode that the user wants to swap to*\"}},\"withdraw(address,uint256,address)\":{\"details\":\"Withdraws an `amount` of underlying asset from the reserve, burning the equivalent aTokens owned E.g. User has 100 aUSDC, calls withdraw() and receives 100 USDC, burning the 100 aUSDC\",\"params\":{\"amount\":\"The underlying amount to be withdrawn   - Send the value type(uint256).max in order to withdraw the whole aToken balance\",\"asset\":\"The address of the underlying asset to withdraw\",\"to\":\"Address that will receive the underlying, same as msg.sender if the user   wants to receive it on his own wallet, or a different address if the beneficiary is a   different wallet\"},\"returns\":{\"_0\":\"The final amount withdrawn*\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"repay(address,uint256,uint256,address)\":{\"notice\":\"Repays a borrowed `amount` on a specific reserve, burning the equivalent debt tokens owned - E.g. User repays 100 USDC, burning 100 variable/stable debt tokens of the `onBehalfOf` address\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/aave/protocol-v2/contracts/interfaces/ILendingPool.sol\":\"ILendingPool\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/aave/protocol-v2/contracts/interfaces/DataTypes.sol\":{\"keccak256\":\"0x3c126df12782518f7ae20a35358d4b55b57a64dfac2fca4b3d6a8a4ca6aed911\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be9e0c1d61b42fbdce8524013b225ed8352978d6a0035552109bfa76065ae275\",\"dweb:/ipfs/QmcStYcnoGywFhiUXAZk6fhypW9BFwqQrnfw9gf6UfeqP3\"]},\"contracts/aave/protocol-v2/contracts/interfaces/ILendingPool.sol\":{\"keccak256\":\"0x4553509caee0ee64cb12064b790dc8b584c9241cba8d293c314872999b0148bf\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://0bcb9ae40fe4f04f2247fae2c879d5c5b970fe8fbaa524c7169f977c91802d31\",\"dweb:/ipfs/QmZ2U1LRC2TRA3LNEjBbdMpa7gW585JfjMkngyDotyxXzG\"]},\"contracts/aave/protocol-v2/contracts/interfaces/ILendingPoolAddressesProvider.sol\":{\"keccak256\":\"0x267db09e307b8277d4cba65a3c5e39dfda037d4ac97d7d49cbadf36de49fc56c\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://501733182665064d8151f48ad54cc39533d7787cac975682ee852fc22b626b76\",\"dweb:/ipfs/QmTLr1zY1sSNEZ37RAjcEp8Ed8iHfyvEULrq6KjiwFuLJs\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"repay(address,uint256,uint256,address)": {
								"notice": "Repays a borrowed `amount` on a specific reserve, burning the equivalent debt tokens owned - E.g. User repays 100 USDC, burning 100 variable/stable debt tokens of the `onBehalfOf` address"
							}
						},
						"version": 1
					}
				}
			},
			"contracts/aave/protocol-v2/contracts/interfaces/ILendingPoolAddressesProvider.sol": {
				"ILendingPoolAddressesProvider": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "hasProxy",
									"type": "bool"
								}
							],
							"name": "AddressSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "ConfigurationAdminUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "EmergencyAdminUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "LendingPoolCollateralManagerUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "LendingPoolConfiguratorUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "LendingPoolUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "LendingRateOracleUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "newMarketId",
									"type": "string"
								}
							],
							"name": "MarketIdSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "PriceOracleUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "ProxyCreated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								}
							],
							"name": "getAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getEmergencyAdmin",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getLendingPool",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getLendingPoolCollateralManager",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getLendingPoolConfigurator",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getLendingRateOracle",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getMarketId",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPoolAdmin",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPriceOracle",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "setAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "impl",
									"type": "address"
								}
							],
							"name": "setAddressAsProxy",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								}
							],
							"name": "setEmergencyAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "manager",
									"type": "address"
								}
							],
							"name": "setLendingPoolCollateralManager",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "configurator",
									"type": "address"
								}
							],
							"name": "setLendingPoolConfiguratorImpl",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "setLendingPoolImpl",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "lendingRateOracle",
									"type": "address"
								}
							],
							"name": "setLendingRateOracle",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "marketId",
									"type": "string"
								}
							],
							"name": "setMarketId",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								}
							],
							"name": "setPoolAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "priceOracle",
									"type": "address"
								}
							],
							"name": "setPriceOracle",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Aave*",
						"details": "Main registry of addresses part of or connected to the protocol, including permissioned roles - Acting also as factory of proxies and admin of those, so with right to change its implementations - Owned by the Aave Governance",
						"kind": "dev",
						"methods": {},
						"title": "LendingPoolAddressesProvider contract",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getAddress(bytes32)": "21f8a721",
							"getEmergencyAdmin()": "ddcaa9ea",
							"getLendingPool()": "0261bf8b",
							"getLendingPoolCollateralManager()": "712d9171",
							"getLendingPoolConfigurator()": "85c858b1",
							"getLendingRateOracle()": "3618abba",
							"getMarketId()": "568ef470",
							"getPoolAdmin()": "aecda378",
							"getPriceOracle()": "fca513a8",
							"setAddress(bytes32,address)": "ca446dd9",
							"setAddressAsProxy(bytes32,address)": "5dcc528c",
							"setEmergencyAdmin(address)": "35da3394",
							"setLendingPoolCollateralManager(address)": "398e5553",
							"setLendingPoolConfiguratorImpl(address)": "c12542df",
							"setLendingPoolImpl(address)": "5aef021f",
							"setLendingRateOracle(address)": "820d1274",
							"setMarketId(string)": "f67b1847",
							"setPoolAdmin(address)": "283d62ad",
							"setPriceOracle(address)": "530e784f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"hasProxy\",\"type\":\"bool\"}],\"name\":\"AddressSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"ConfigurationAdminUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"EmergencyAdminUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"LendingPoolCollateralManagerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"LendingPoolConfiguratorUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"LendingPoolUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"LendingRateOracleUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newMarketId\",\"type\":\"string\"}],\"name\":\"MarketIdSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"PriceOracleUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"ProxyCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"getAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEmergencyAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLendingPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLendingPoolCollateralManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLendingPoolConfigurator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLendingRateOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMarketId\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"setAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"impl\",\"type\":\"address\"}],\"name\":\"setAddressAsProxy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"setEmergencyAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"}],\"name\":\"setLendingPoolCollateralManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"configurator\",\"type\":\"address\"}],\"name\":\"setLendingPoolConfiguratorImpl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"setLendingPoolImpl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lendingRateOracle\",\"type\":\"address\"}],\"name\":\"setLendingRateOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"marketId\",\"type\":\"string\"}],\"name\":\"setMarketId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"setPoolAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceOracle\",\"type\":\"address\"}],\"name\":\"setPriceOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Aave*\",\"details\":\"Main registry of addresses part of or connected to the protocol, including permissioned roles - Acting also as factory of proxies and admin of those, so with right to change its implementations - Owned by the Aave Governance\",\"kind\":\"dev\",\"methods\":{},\"title\":\"LendingPoolAddressesProvider contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/aave/protocol-v2/contracts/interfaces/ILendingPoolAddressesProvider.sol\":\"ILendingPoolAddressesProvider\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/aave/protocol-v2/contracts/interfaces/ILendingPoolAddressesProvider.sol\":{\"keccak256\":\"0x267db09e307b8277d4cba65a3c5e39dfda037d4ac97d7d49cbadf36de49fc56c\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://501733182665064d8151f48ad54cc39533d7787cac975682ee852fc22b626b76\",\"dweb:/ipfs/QmTLr1zY1sSNEZ37RAjcEp8Ed8iHfyvEULrq6KjiwFuLJs\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol": {
				"AggregatorV3Interface": {
					"abi": [
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "description",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint80",
									"name": "_roundId",
									"type": "uint80"
								}
							],
							"name": "getRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"decimals()": "313ce567",
							"description()": "7284e416",
							"getRoundData(uint80)": "9a6fc8f5",
							"latestRoundData()": "feaf968c",
							"version()": "54fd4d50"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x8c2fcdd0da835dee59d8846ff082d7526de2aa3388ddcba3d8bf60c612b45d06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://18b462620819cb963be7458a56d88fc2fd38c66795f92a39150783c767df3406\",\"dweb:/ipfs/QmXbGDZiodT4hKMocBXkQhUsuMZYur7EMKvbYZKFctN6ti\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC-721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"contracts/openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol": {
				"IERC721Enumerable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenOfOwnerByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"tokenByIndex(uint256)": {
								"details": "Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens."
							},
							"tokenOfOwnerByIndex(address,uint256)": {
								"details": "Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
							},
							"totalSupply()": {
								"details": "Returns the total amount of tokens stored by the contract."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional enumeration extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"tokenByIndex(uint256)": "4f6ccce7",
							"tokenOfOwnerByIndex(address,uint256)": "2f745c59",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"tokenByIndex(uint256)\":{\"details\":\"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional enumeration extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol\":\"IERC721Enumerable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"contracts/openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol\":{\"keccak256\":\"0x214335376e334c64038a801e7350ccbff96d67bae9a0cd5913b65ae0d675136b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://79061c6351c2071e2dbb6b2948771ba3f53d93546fe45b620604b32a5620c76e\",\"dweb:/ipfs/QmXDgY4iuF9yi8fNLvzu3AquiQnf4D1aZ9kKDyGDE8N1aK\"]},\"contracts/openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/openzeppelin/contracts/token/ERC721/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/openzeppelin/contracts/token/ERC721/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"contracts/openzeppelin/contracts/token/ERC721/IERC721Metadata.sol\":{\"keccak256\":\"0x02bb611e43322b705eaf170703fc39eadc9aa898e8a4e06be726451792573a39\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c9a6787d8bd19d079c25bf1b2c60416031fe7ba908f526c7f11bc8fb7708912\",\"dweb:/ipfs/Qmb2kTcVaRE5gMCV1rZoBUmdYqdK1UH57FLt4k3ZUVBvaj\"]},\"contracts/openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/IERC721Permit.sol": {
				"IERC721Permit": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"returns": {
									"_0": "The domain seperator used in encoding of permit signature"
								}
							},
							"PERMIT_TYPEHASH()": {
								"returns": {
									"_0": "The typehash for the permit"
								}
							},
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"permit(address,uint256,uint256,uint8,bytes32,bytes32)": {
								"params": {
									"deadline": "The deadline timestamp by which the call must be mined for the approve to work",
									"r": "Must produce valid secp256k1 signature from the holder along with `v` and `s`",
									"s": "Must produce valid secp256k1 signature from the holder along with `r` and `v`",
									"spender": "The account that is being approved",
									"tokenId": "The ID of the token that is being approved for spending",
									"v": "Must produce valid secp256k1 signature from the holder along with `r` and `s`"
								}
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC721 with permit",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"PERMIT_TYPEHASH()": "30adf81f",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"permit(address,uint256,uint256,uint8,bytes32,bytes32)": "7ac2ff7b",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"returns\":{\"_0\":\"The domain seperator used in encoding of permit signature\"}},\"PERMIT_TYPEHASH()\":{\"returns\":{\"_0\":\"The typehash for the permit\"}},\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"permit(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"params\":{\"deadline\":\"The deadline timestamp by which the call must be mined for the approve to work\",\"r\":\"Must produce valid secp256k1 signature from the holder along with `v` and `s`\",\"s\":\"Must produce valid secp256k1 signature from the holder along with `r` and `v`\",\"spender\":\"The account that is being approved\",\"tokenId\":\"The ID of the token that is being approved for spending\",\"v\":\"Must produce valid secp256k1 signature from the holder along with `r` and `s`\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC721 with permit\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"notice\":\"The domain separator used in the permit signature\"},\"PERMIT_TYPEHASH()\":{\"notice\":\"The permit typehash used in the permit signature\"},\"permit(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Approve of a specific token ID for spending by spender via signature\"}},\"notice\":\"Extension to ERC721 that includes a permit function for signature based approvals\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/uniswap/v3-periphery/contracts/interfaces/IERC721Permit.sol\":\"IERC721Permit\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"contracts/openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/IERC721Permit.sol\":{\"keccak256\":\"0x759a0bd1bfaf084c9f34071c10d665861b5f2858d3755bfa5c52a9d74146e733\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://2224edfcf78039bd5eab48c8e9ca45275efa8f62d87f701a6ab5ddf682a13706\",\"dweb:/ipfs/QmQD3NwFvLTZtE6B2mdBW5Kf2c85UaAaknMCr5xy1Syt7a\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"notice": "The domain separator used in the permit signature"
							},
							"PERMIT_TYPEHASH()": {
								"notice": "The permit typehash used in the permit signature"
							},
							"permit(address,uint256,uint256,uint8,bytes32,bytes32)": {
								"notice": "Approve of a specific token ID for spending by spender via signature"
							}
						},
						"notice": "Extension to ERC721 that includes a permit function for signature based approvals",
						"version": 1
					}
				}
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol": {
				"INonfungiblePositionManager": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Collect",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "DecreaseLiquidity",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "IncreaseLiquidity",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "WETH9",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint128",
											"name": "amount0Max",
											"type": "uint128"
										},
										{
											"internalType": "uint128",
											"name": "amount1Max",
											"type": "uint128"
										}
									],
									"internalType": "struct INonfungiblePositionManager.CollectParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "collect",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								}
							],
							"name": "createAndInitializePoolIfNecessary",
							"outputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint128",
											"name": "liquidity",
											"type": "uint128"
										},
										{
											"internalType": "uint256",
											"name": "amount0Min",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount1Min",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										}
									],
									"internalType": "struct INonfungiblePositionManager.DecreaseLiquidityParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "decreaseLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount0Desired",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount1Desired",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount0Min",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount1Min",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										}
									],
									"internalType": "struct INonfungiblePositionManager.IncreaseLiquidityParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "increaseLiquidity",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "token0",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "token1",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "int24",
											"name": "tickLower",
											"type": "int24"
										},
										{
											"internalType": "int24",
											"name": "tickUpper",
											"type": "int24"
										},
										{
											"internalType": "uint256",
											"name": "amount0Desired",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount1Desired",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount0Min",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount1Min",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										}
									],
									"internalType": "struct INonfungiblePositionManager.MintParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "positions",
							"outputs": [
								{
									"internalType": "uint96",
									"name": "nonce",
									"type": "uint96"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside0LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside1LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "refundETH",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountMinimum",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "sweepToken",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenOfOwnerByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountMinimum",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "unwrapWETH9",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Collect(uint256,address,uint256,uint256)": {
								"details": "The amounts reported may not be exactly equivalent to the amounts transferred, due to rounding behavior",
								"params": {
									"amount0": "The amount of token0 owed to the position that was collected",
									"amount1": "The amount of token1 owed to the position that was collected",
									"recipient": "The address of the account that received the collected tokens",
									"tokenId": "The ID of the token for which underlying tokens were collected"
								}
							},
							"DecreaseLiquidity(uint256,uint128,uint256,uint256)": {
								"params": {
									"amount0": "The amount of token0 that was accounted for the decrease in liquidity",
									"amount1": "The amount of token1 that was accounted for the decrease in liquidity",
									"liquidity": "The amount by which liquidity for the NFT position was decreased",
									"tokenId": "The ID of the token for which liquidity was decreased"
								}
							},
							"IncreaseLiquidity(uint256,uint128,uint256,uint256)": {
								"details": "Also emitted when a token is minted",
								"params": {
									"amount0": "The amount of token0 that was paid for the increase in liquidity",
									"amount1": "The amount of token1 that was paid for the increase in liquidity",
									"liquidity": "The amount by which liquidity for the NFT position was increased",
									"tokenId": "The ID of the token for which liquidity was increased"
								}
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"returns": {
									"_0": "The domain seperator used in encoding of permit signature"
								}
							},
							"PERMIT_TYPEHASH()": {
								"returns": {
									"_0": "The typehash for the permit"
								}
							},
							"WETH9()": {
								"returns": {
									"_0": "Returns the address of WETH9"
								}
							},
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"burn(uint256)": {
								"params": {
									"tokenId": "The ID of the token that is being burned"
								}
							},
							"collect((uint256,address,uint128,uint128))": {
								"params": {
									"params": "tokenId The ID of the NFT for which tokens are being collected, recipient The account that should receive the tokens, amount0Max The maximum amount of token0 to collect, amount1Max The maximum amount of token1 to collect"
								},
								"returns": {
									"amount0": "The amount of fees collected in token0",
									"amount1": "The amount of fees collected in token1"
								}
							},
							"createAndInitializePoolIfNecessary(address,address,uint24,uint160)": {
								"details": "This method can be bundled with others via IMulticall for the first action (e.g. mint) performed against a pool",
								"params": {
									"fee": "The fee amount of the v3 pool for the specified token pair",
									"sqrtPriceX96": "The initial square root price of the pool as a Q64.96 value",
									"token0": "The contract address of token0 of the pool",
									"token1": "The contract address of token1 of the pool"
								},
								"returns": {
									"pool": "Returns the pool address based on the pair of tokens and fee, will return the newly created pool address if necessary"
								}
							},
							"decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))": {
								"params": {
									"params": "tokenId The ID of the token for which liquidity is being decreased, amount The amount by which liquidity will be decreased, amount0Min The minimum amount of token0 that should be accounted for the burned liquidity, amount1Min The minimum amount of token1 that should be accounted for the burned liquidity, deadline The time by which the transaction must be included to effect the change"
								},
								"returns": {
									"amount0": "The amount of token0 accounted to the position's tokens owed",
									"amount1": "The amount of token1 accounted to the position's tokens owed"
								}
							},
							"factory()": {
								"returns": {
									"_0": "Returns the address of the Uniswap V3 factory"
								}
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))": {
								"params": {
									"params": "tokenId The ID of the token for which liquidity is being increased, amount0Desired The desired amount of token0 to be spent, amount1Desired The desired amount of token1 to be spent, amount0Min The minimum amount of token0 to spend, which serves as a slippage check, amount1Min The minimum amount of token1 to spend, which serves as a slippage check, deadline The time by which the transaction must be included to effect the change"
								},
								"returns": {
									"amount0": "The amount of token0 to acheive resulting liquidity",
									"amount1": "The amount of token1 to acheive resulting liquidity",
									"liquidity": "The new liquidity amount as a result of the increase"
								}
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"mint((address,address,uint24,int24,int24,uint256,uint256,uint256,uint256,address,uint256))": {
								"details": "Call this when the pool does exist and is initialized. Note that if the pool is created but not initialized a method does not exist, i.e. the pool is assumed to be initialized.",
								"params": {
									"params": "The params necessary to mint a position, encoded as `MintParams` in calldata"
								},
								"returns": {
									"amount0": "The amount of token0",
									"amount1": "The amount of token1",
									"liquidity": "The amount of liquidity for this position",
									"tokenId": "The ID of the token that represents the minted position"
								}
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"permit(address,uint256,uint256,uint8,bytes32,bytes32)": {
								"params": {
									"deadline": "The deadline timestamp by which the call must be mined for the approve to work",
									"r": "Must produce valid secp256k1 signature from the holder along with `v` and `s`",
									"s": "Must produce valid secp256k1 signature from the holder along with `r` and `v`",
									"spender": "The account that is being approved",
									"tokenId": "The ID of the token that is being approved for spending",
									"v": "Must produce valid secp256k1 signature from the holder along with `r` and `s`"
								}
							},
							"positions(uint256)": {
								"details": "Throws if the token ID is not valid.",
								"params": {
									"tokenId": "The ID of the token that represents the position"
								},
								"returns": {
									"fee": "The fee associated with the pool",
									"feeGrowthInside0LastX128": "The fee growth of token0 as of the last action on the individual position",
									"feeGrowthInside1LastX128": "The fee growth of token1 as of the last action on the individual position",
									"liquidity": "The liquidity of the position",
									"nonce": "The nonce for permits",
									"operator": "The address that is approved for spending",
									"tickLower": "The lower end of the tick range for the position",
									"tickUpper": "The higher end of the tick range for the position",
									"token0": "The address of the token0 for a specific pool",
									"token1": "The address of the token1 for a specific pool",
									"tokensOwed0": "The uncollected amount of token0 owed to the position as of the last computation",
									"tokensOwed1": "The uncollected amount of token1 owed to the position as of the last computation"
								}
							},
							"refundETH()": {
								"details": "Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps that use ether for the input amount"
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"sweepToken(address,uint256,address)": {
								"details": "The amountMinimum parameter prevents malicious contracts from stealing the token from users",
								"params": {
									"amountMinimum": "The minimum amount of token required for a transfer",
									"recipient": "The destination address of the token",
									"token": "The contract address of the token which will be transferred to `recipient`"
								}
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenByIndex(uint256)": {
								"details": "Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens."
							},
							"tokenOfOwnerByIndex(address,uint256)": {
								"details": "Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"totalSupply()": {
								"details": "Returns the total amount of tokens stored by the contract."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							},
							"unwrapWETH9(uint256,address)": {
								"details": "The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.",
								"params": {
									"amountMinimum": "The minimum amount of WETH9 to unwrap",
									"recipient": "The address receiving ETH"
								}
							}
						},
						"title": "Non-fungible token for positions",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"PERMIT_TYPEHASH()": "30adf81f",
							"WETH9()": "4aa4a4fc",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"collect((uint256,address,uint128,uint128))": "fc6f7865",
							"createAndInitializePoolIfNecessary(address,address,uint24,uint160)": "13ead562",
							"decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))": "0c49ccbe",
							"factory()": "c45a0155",
							"getApproved(uint256)": "081812fc",
							"increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))": "219f5d17",
							"isApprovedForAll(address,address)": "e985e9c5",
							"mint((address,address,uint24,int24,int24,uint256,uint256,uint256,uint256,address,uint256))": "88316456",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"permit(address,uint256,uint256,uint8,bytes32,bytes32)": "7ac2ff7b",
							"positions(uint256)": "99fbab88",
							"refundETH()": "12210e8a",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"sweepToken(address,uint256,address)": "df2ab5bb",
							"symbol()": "95d89b41",
							"tokenByIndex(uint256)": "4f6ccce7",
							"tokenOfOwnerByIndex(address,uint256)": "2f745c59",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd",
							"unwrapWETH9(uint256,address)": "49404b7c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"DecreaseLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"IncreaseLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WETH9\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Max\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Max\",\"type\":\"uint128\"}],\"internalType\":\"struct INonfungiblePositionManager.CollectParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"createAndInitializePoolIfNecessary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"amount0Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct INonfungiblePositionManager.DecreaseLiquidityParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"decreaseLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount0Desired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Desired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount0Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct INonfungiblePositionManager.IncreaseLiquidityParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"increaseLiquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint256\",\"name\":\"amount0Desired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Desired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount0Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Min\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct INonfungiblePositionManager.MintParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"nonce\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"refundETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"sweepToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"unwrapWETH9\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Collect(uint256,address,uint256,uint256)\":{\"details\":\"The amounts reported may not be exactly equivalent to the amounts transferred, due to rounding behavior\",\"params\":{\"amount0\":\"The amount of token0 owed to the position that was collected\",\"amount1\":\"The amount of token1 owed to the position that was collected\",\"recipient\":\"The address of the account that received the collected tokens\",\"tokenId\":\"The ID of the token for which underlying tokens were collected\"}},\"DecreaseLiquidity(uint256,uint128,uint256,uint256)\":{\"params\":{\"amount0\":\"The amount of token0 that was accounted for the decrease in liquidity\",\"amount1\":\"The amount of token1 that was accounted for the decrease in liquidity\",\"liquidity\":\"The amount by which liquidity for the NFT position was decreased\",\"tokenId\":\"The ID of the token for which liquidity was decreased\"}},\"IncreaseLiquidity(uint256,uint128,uint256,uint256)\":{\"details\":\"Also emitted when a token is minted\",\"params\":{\"amount0\":\"The amount of token0 that was paid for the increase in liquidity\",\"amount1\":\"The amount of token1 that was paid for the increase in liquidity\",\"liquidity\":\"The amount by which liquidity for the NFT position was increased\",\"tokenId\":\"The ID of the token for which liquidity was increased\"}},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"returns\":{\"_0\":\"The domain seperator used in encoding of permit signature\"}},\"PERMIT_TYPEHASH()\":{\"returns\":{\"_0\":\"The typehash for the permit\"}},\"WETH9()\":{\"returns\":{\"_0\":\"Returns the address of WETH9\"}},\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"burn(uint256)\":{\"params\":{\"tokenId\":\"The ID of the token that is being burned\"}},\"collect((uint256,address,uint128,uint128))\":{\"params\":{\"params\":\"tokenId The ID of the NFT for which tokens are being collected, recipient The account that should receive the tokens, amount0Max The maximum amount of token0 to collect, amount1Max The maximum amount of token1 to collect\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"createAndInitializePoolIfNecessary(address,address,uint24,uint160)\":{\"details\":\"This method can be bundled with others via IMulticall for the first action (e.g. mint) performed against a pool\",\"params\":{\"fee\":\"The fee amount of the v3 pool for the specified token pair\",\"sqrtPriceX96\":\"The initial square root price of the pool as a Q64.96 value\",\"token0\":\"The contract address of token0 of the pool\",\"token1\":\"The contract address of token1 of the pool\"},\"returns\":{\"pool\":\"Returns the pool address based on the pair of tokens and fee, will return the newly created pool address if necessary\"}},\"decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))\":{\"params\":{\"params\":\"tokenId The ID of the token for which liquidity is being decreased, amount The amount by which liquidity will be decreased, amount0Min The minimum amount of token0 that should be accounted for the burned liquidity, amount1Min The minimum amount of token1 that should be accounted for the burned liquidity, deadline The time by which the transaction must be included to effect the change\"},\"returns\":{\"amount0\":\"The amount of token0 accounted to the position's tokens owed\",\"amount1\":\"The amount of token1 accounted to the position's tokens owed\"}},\"factory()\":{\"returns\":{\"_0\":\"Returns the address of the Uniswap V3 factory\"}},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))\":{\"params\":{\"params\":\"tokenId The ID of the token for which liquidity is being increased, amount0Desired The desired amount of token0 to be spent, amount1Desired The desired amount of token1 to be spent, amount0Min The minimum amount of token0 to spend, which serves as a slippage check, amount1Min The minimum amount of token1 to spend, which serves as a slippage check, deadline The time by which the transaction must be included to effect the change\"},\"returns\":{\"amount0\":\"The amount of token0 to acheive resulting liquidity\",\"amount1\":\"The amount of token1 to acheive resulting liquidity\",\"liquidity\":\"The new liquidity amount as a result of the increase\"}},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"mint((address,address,uint24,int24,int24,uint256,uint256,uint256,uint256,address,uint256))\":{\"details\":\"Call this when the pool does exist and is initialized. Note that if the pool is created but not initialized a method does not exist, i.e. the pool is assumed to be initialized.\",\"params\":{\"params\":\"The params necessary to mint a position, encoded as `MintParams` in calldata\"},\"returns\":{\"amount0\":\"The amount of token0\",\"amount1\":\"The amount of token1\",\"liquidity\":\"The amount of liquidity for this position\",\"tokenId\":\"The ID of the token that represents the minted position\"}},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"permit(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"params\":{\"deadline\":\"The deadline timestamp by which the call must be mined for the approve to work\",\"r\":\"Must produce valid secp256k1 signature from the holder along with `v` and `s`\",\"s\":\"Must produce valid secp256k1 signature from the holder along with `r` and `v`\",\"spender\":\"The account that is being approved\",\"tokenId\":\"The ID of the token that is being approved for spending\",\"v\":\"Must produce valid secp256k1 signature from the holder along with `r` and `s`\"}},\"positions(uint256)\":{\"details\":\"Throws if the token ID is not valid.\",\"params\":{\"tokenId\":\"The ID of the token that represents the position\"},\"returns\":{\"fee\":\"The fee associated with the pool\",\"feeGrowthInside0LastX128\":\"The fee growth of token0 as of the last action on the individual position\",\"feeGrowthInside1LastX128\":\"The fee growth of token1 as of the last action on the individual position\",\"liquidity\":\"The liquidity of the position\",\"nonce\":\"The nonce for permits\",\"operator\":\"The address that is approved for spending\",\"tickLower\":\"The lower end of the tick range for the position\",\"tickUpper\":\"The higher end of the tick range for the position\",\"token0\":\"The address of the token0 for a specific pool\",\"token1\":\"The address of the token1 for a specific pool\",\"tokensOwed0\":\"The uncollected amount of token0 owed to the position as of the last computation\",\"tokensOwed1\":\"The uncollected amount of token1 owed to the position as of the last computation\"}},\"refundETH()\":{\"details\":\"Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps that use ether for the input amount\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"sweepToken(address,uint256,address)\":{\"details\":\"The amountMinimum parameter prevents malicious contracts from stealing the token from users\",\"params\":{\"amountMinimum\":\"The minimum amount of token required for a transfer\",\"recipient\":\"The destination address of the token\",\"token\":\"The contract address of the token which will be transferred to `recipient`\"}},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenByIndex(uint256)\":{\"details\":\"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"},\"unwrapWETH9(uint256,address)\":{\"details\":\"The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.\",\"params\":{\"amountMinimum\":\"The minimum amount of WETH9 to unwrap\",\"recipient\":\"The address receiving ETH\"}}},\"title\":\"Non-fungible token for positions\",\"version\":1},\"userdoc\":{\"events\":{\"Collect(uint256,address,uint256,uint256)\":{\"notice\":\"Emitted when tokens are collected for a position NFT\"},\"DecreaseLiquidity(uint256,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is decreased for a position NFT\"},\"IncreaseLiquidity(uint256,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is increased for a position NFT\"}},\"kind\":\"user\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"notice\":\"The domain separator used in the permit signature\"},\"PERMIT_TYPEHASH()\":{\"notice\":\"The permit typehash used in the permit signature\"},\"burn(uint256)\":{\"notice\":\"Burns a token ID, which deletes it from the NFT contract. The token must have 0 liquidity and all tokens must be collected first.\"},\"collect((uint256,address,uint128,uint128))\":{\"notice\":\"Collects up to a maximum amount of fees owed to a specific position to the recipient\"},\"createAndInitializePoolIfNecessary(address,address,uint24,uint160)\":{\"notice\":\"Creates a new pool if it does not exist, then initializes if not initialized\"},\"decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))\":{\"notice\":\"Decreases the amount of liquidity in a position and accounts it to the position\"},\"increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))\":{\"notice\":\"Increases the amount of liquidity in a position, with tokens paid by the `msg.sender`\"},\"mint((address,address,uint24,int24,int24,uint256,uint256,uint256,uint256,address,uint256))\":{\"notice\":\"Creates a new position wrapped in a NFT\"},\"permit(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Approve of a specific token ID for spending by spender via signature\"},\"positions(uint256)\":{\"notice\":\"Returns the position information associated with a given token ID.\"},\"refundETH()\":{\"notice\":\"Refunds any ETH balance held by this contract to the `msg.sender`\"},\"sweepToken(address,uint256,address)\":{\"notice\":\"Transfers the full amount of a token held by this contract to recipient\"},\"unwrapWETH9(uint256,address)\":{\"notice\":\"Unwraps the contract's WETH9 balance and sends it to recipient as ETH.\"}},\"notice\":\"Wraps Uniswap V3 positions in a non-fungible token interface which allows for them to be transferred and authorized.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol\":\"INonfungiblePositionManager\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"contracts/openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol\":{\"keccak256\":\"0x214335376e334c64038a801e7350ccbff96d67bae9a0cd5913b65ae0d675136b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://79061c6351c2071e2dbb6b2948771ba3f53d93546fe45b620604b32a5620c76e\",\"dweb:/ipfs/QmXDgY4iuF9yi8fNLvzu3AquiQnf4D1aZ9kKDyGDE8N1aK\"]},\"contracts/openzeppelin/contracts/token/ERC721/IERC721Metadata.sol\":{\"keccak256\":\"0x02bb611e43322b705eaf170703fc39eadc9aa898e8a4e06be726451792573a39\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c9a6787d8bd19d079c25bf1b2c60416031fe7ba908f526c7f11bc8fb7708912\",\"dweb:/ipfs/Qmb2kTcVaRE5gMCV1rZoBUmdYqdK1UH57FLt4k3ZUVBvaj\"]},\"contracts/openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/IERC721Permit.sol\":{\"keccak256\":\"0x759a0bd1bfaf084c9f34071c10d665861b5f2858d3755bfa5c52a9d74146e733\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://2224edfcf78039bd5eab48c8e9ca45275efa8f62d87f701a6ab5ddf682a13706\",\"dweb:/ipfs/QmQD3NwFvLTZtE6B2mdBW5Kf2c85UaAaknMCr5xy1Syt7a\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol\":{\"keccak256\":\"0xec8be19b3492587beec5f8b7d3bc0fbd14b761e4e7c10e37c883a22d5453eb87\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://88a24c7310ac26efaf77c679753889184182f9d160b1fe359376347b5617bdd5\",\"dweb:/ipfs/QmexmcDURHMDMHebhjT19K6q4nFhbBDm3eKhBbBP4hqGaC\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol\":{\"keccak256\":\"0x761c61ac9e453c7eef8fed6da0ad285c37cee6dfa8b1457056933e5d286d16f5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://9019992fdf0e25b664b77a72d1ea84b09dd70439f6a47400de3ebdcaf3ea9f41\",\"dweb:/ipfs/QmRSCM2Wf9b3Hi6ggkkxFt2piPW3g6q5VsVFSHessmuiXZ\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol\":{\"keccak256\":\"0xe8ad7afca9e540b647c2fe96b3545f69fd387f414bf707f6af7a153a689c396f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d50a147bd8e89a74c838d7d8314c94ac53485d10d721beeb6a0863a79f3b02af\",\"dweb:/ipfs/QmcjZrUv7QAZERPC1ChfsUy9EDFbHiuoW1D2ydSHTdaSGX\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/IPoolInitializer.sol\":{\"keccak256\":\"0x2dabdc5d0514dd0e46b6b0e7787b69986abef98d42636867c436ad93d6aa8f2d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8cb47e81cf597c80a394aeadd63d9b20b7e2c49e0fd3c83b615b07715f4ebb4d\",\"dweb:/ipfs/QmeTUN5rCRXgE7ebHyukDezhQHG5HSWTB82oqtrtjALSrg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Collect(uint256,address,uint256,uint256)": {
								"notice": "Emitted when tokens are collected for a position NFT"
							},
							"DecreaseLiquidity(uint256,uint128,uint256,uint256)": {
								"notice": "Emitted when liquidity is decreased for a position NFT"
							},
							"IncreaseLiquidity(uint256,uint128,uint256,uint256)": {
								"notice": "Emitted when liquidity is increased for a position NFT"
							}
						},
						"kind": "user",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"notice": "The domain separator used in the permit signature"
							},
							"PERMIT_TYPEHASH()": {
								"notice": "The permit typehash used in the permit signature"
							},
							"burn(uint256)": {
								"notice": "Burns a token ID, which deletes it from the NFT contract. The token must have 0 liquidity and all tokens must be collected first."
							},
							"collect((uint256,address,uint128,uint128))": {
								"notice": "Collects up to a maximum amount of fees owed to a specific position to the recipient"
							},
							"createAndInitializePoolIfNecessary(address,address,uint24,uint160)": {
								"notice": "Creates a new pool if it does not exist, then initializes if not initialized"
							},
							"decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))": {
								"notice": "Decreases the amount of liquidity in a position and accounts it to the position"
							},
							"increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))": {
								"notice": "Increases the amount of liquidity in a position, with tokens paid by the `msg.sender`"
							},
							"mint((address,address,uint24,int24,int24,uint256,uint256,uint256,uint256,address,uint256))": {
								"notice": "Creates a new position wrapped in a NFT"
							},
							"permit(address,uint256,uint256,uint8,bytes32,bytes32)": {
								"notice": "Approve of a specific token ID for spending by spender via signature"
							},
							"positions(uint256)": {
								"notice": "Returns the position information associated with a given token ID."
							},
							"refundETH()": {
								"notice": "Refunds any ETH balance held by this contract to the `msg.sender`"
							},
							"sweepToken(address,uint256,address)": {
								"notice": "Transfers the full amount of a token held by this contract to recipient"
							},
							"unwrapWETH9(uint256,address)": {
								"notice": "Unwraps the contract's WETH9 balance and sends it to recipient as ETH."
							}
						},
						"notice": "Wraps Uniswap V3 positions in a non-fungible token interface which allows for them to be transferred and authorized.",
						"version": 1
					}
				}
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol": {
				"IPeripheryImmutableState": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH9",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"WETH9()": {
								"returns": {
									"_0": "Returns the address of WETH9"
								}
							},
							"factory()": {
								"returns": {
									"_0": "Returns the address of the Uniswap V3 factory"
								}
							}
						},
						"title": "Immutable state",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH9()": "4aa4a4fc",
							"factory()": "c45a0155"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH9\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"WETH9()\":{\"returns\":{\"_0\":\"Returns the address of WETH9\"}},\"factory()\":{\"returns\":{\"_0\":\"Returns the address of the Uniswap V3 factory\"}}},\"title\":\"Immutable state\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Functions that return immutable state of the router\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol\":\"IPeripheryImmutableState\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol\":{\"keccak256\":\"0x761c61ac9e453c7eef8fed6da0ad285c37cee6dfa8b1457056933e5d286d16f5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://9019992fdf0e25b664b77a72d1ea84b09dd70439f6a47400de3ebdcaf3ea9f41\",\"dweb:/ipfs/QmRSCM2Wf9b3Hi6ggkkxFt2piPW3g6q5VsVFSHessmuiXZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Functions that return immutable state of the router",
						"version": 1
					}
				}
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol": {
				"IPeripheryPayments": {
					"abi": [
						{
							"inputs": [],
							"name": "refundETH",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountMinimum",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "sweepToken",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountMinimum",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "unwrapWETH9",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"refundETH()": {
								"details": "Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps that use ether for the input amount"
							},
							"sweepToken(address,uint256,address)": {
								"details": "The amountMinimum parameter prevents malicious contracts from stealing the token from users",
								"params": {
									"amountMinimum": "The minimum amount of token required for a transfer",
									"recipient": "The destination address of the token",
									"token": "The contract address of the token which will be transferred to `recipient`"
								}
							},
							"unwrapWETH9(uint256,address)": {
								"details": "The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.",
								"params": {
									"amountMinimum": "The minimum amount of WETH9 to unwrap",
									"recipient": "The address receiving ETH"
								}
							}
						},
						"title": "Periphery Payments",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"refundETH()": "12210e8a",
							"sweepToken(address,uint256,address)": "df2ab5bb",
							"unwrapWETH9(uint256,address)": "49404b7c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"refundETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"sweepToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"unwrapWETH9\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"refundETH()\":{\"details\":\"Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps that use ether for the input amount\"},\"sweepToken(address,uint256,address)\":{\"details\":\"The amountMinimum parameter prevents malicious contracts from stealing the token from users\",\"params\":{\"amountMinimum\":\"The minimum amount of token required for a transfer\",\"recipient\":\"The destination address of the token\",\"token\":\"The contract address of the token which will be transferred to `recipient`\"}},\"unwrapWETH9(uint256,address)\":{\"details\":\"The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.\",\"params\":{\"amountMinimum\":\"The minimum amount of WETH9 to unwrap\",\"recipient\":\"The address receiving ETH\"}}},\"title\":\"Periphery Payments\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"refundETH()\":{\"notice\":\"Refunds any ETH balance held by this contract to the `msg.sender`\"},\"sweepToken(address,uint256,address)\":{\"notice\":\"Transfers the full amount of a token held by this contract to recipient\"},\"unwrapWETH9(uint256,address)\":{\"notice\":\"Unwraps the contract's WETH9 balance and sends it to recipient as ETH.\"}},\"notice\":\"Functions to ease deposits and withdrawals of ETH\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol\":\"IPeripheryPayments\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol\":{\"keccak256\":\"0xe8ad7afca9e540b647c2fe96b3545f69fd387f414bf707f6af7a153a689c396f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d50a147bd8e89a74c838d7d8314c94ac53485d10d721beeb6a0863a79f3b02af\",\"dweb:/ipfs/QmcjZrUv7QAZERPC1ChfsUy9EDFbHiuoW1D2ydSHTdaSGX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"refundETH()": {
								"notice": "Refunds any ETH balance held by this contract to the `msg.sender`"
							},
							"sweepToken(address,uint256,address)": {
								"notice": "Transfers the full amount of a token held by this contract to recipient"
							},
							"unwrapWETH9(uint256,address)": {
								"notice": "Unwraps the contract's WETH9 balance and sends it to recipient as ETH."
							}
						},
						"notice": "Functions to ease deposits and withdrawals of ETH",
						"version": 1
					}
				}
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/IPoolInitializer.sol": {
				"IPoolInitializer": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								}
							],
							"name": "createAndInitializePoolIfNecessary",
							"outputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"createAndInitializePoolIfNecessary(address,address,uint24,uint160)": {
								"details": "This method can be bundled with others via IMulticall for the first action (e.g. mint) performed against a pool",
								"params": {
									"fee": "The fee amount of the v3 pool for the specified token pair",
									"sqrtPriceX96": "The initial square root price of the pool as a Q64.96 value",
									"token0": "The contract address of token0 of the pool",
									"token1": "The contract address of token1 of the pool"
								},
								"returns": {
									"pool": "Returns the pool address based on the pair of tokens and fee, will return the newly created pool address if necessary"
								}
							}
						},
						"title": "Creates and initializes V3 Pools",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"createAndInitializePoolIfNecessary(address,address,uint24,uint160)": "13ead562"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"createAndInitializePoolIfNecessary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"createAndInitializePoolIfNecessary(address,address,uint24,uint160)\":{\"details\":\"This method can be bundled with others via IMulticall for the first action (e.g. mint) performed against a pool\",\"params\":{\"fee\":\"The fee amount of the v3 pool for the specified token pair\",\"sqrtPriceX96\":\"The initial square root price of the pool as a Q64.96 value\",\"token0\":\"The contract address of token0 of the pool\",\"token1\":\"The contract address of token1 of the pool\"},\"returns\":{\"pool\":\"Returns the pool address based on the pair of tokens and fee, will return the newly created pool address if necessary\"}}},\"title\":\"Creates and initializes V3 Pools\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createAndInitializePoolIfNecessary(address,address,uint24,uint160)\":{\"notice\":\"Creates a new pool if it does not exist, then initializes if not initialized\"}},\"notice\":\"Provides a method for creating and initializing a pool, if necessary, for bundling with other methods that require the pool to exist.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/uniswap/v3-periphery/contracts/interfaces/IPoolInitializer.sol\":\"IPoolInitializer\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/uniswap/v3-periphery/contracts/interfaces/IPoolInitializer.sol\":{\"keccak256\":\"0x2dabdc5d0514dd0e46b6b0e7787b69986abef98d42636867c436ad93d6aa8f2d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8cb47e81cf597c80a394aeadd63d9b20b7e2c49e0fd3c83b615b07715f4ebb4d\",\"dweb:/ipfs/QmeTUN5rCRXgE7ebHyukDezhQHG5HSWTB82oqtrtjALSrg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"createAndInitializePoolIfNecessary(address,address,uint24,uint160)": {
								"notice": "Creates a new pool if it does not exist, then initializes if not initialized"
							}
						},
						"notice": "Provides a method for creating and initializing a pool, if necessary, for bundling with other methods that require the pool to exist.",
						"version": 1
					}
				}
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
				"ISwapRouter": {
					"abi": [
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes",
											"name": "path",
											"type": "bytes"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountIn",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOutMinimum",
											"type": "uint256"
										}
									],
									"internalType": "struct ISwapRouter.ExactInputParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactInput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "tokenIn",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "tokenOut",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountIn",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOutMinimum",
											"type": "uint256"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceLimitX96",
											"type": "uint160"
										}
									],
									"internalType": "struct ISwapRouter.ExactInputSingleParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactInputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes",
											"name": "path",
											"type": "bytes"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOut",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountInMaximum",
											"type": "uint256"
										}
									],
									"internalType": "struct ISwapRouter.ExactOutputParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactOutput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "tokenIn",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "tokenOut",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOut",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountInMaximum",
											"type": "uint256"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceLimitX96",
											"type": "uint160"
										}
									],
									"internalType": "struct ISwapRouter.ExactOutputSingleParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactOutputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "amount0Delta",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1Delta",
									"type": "int256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "uniswapV3SwapCallback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"exactInput((bytes,address,uint256,uint256,uint256))": {
								"params": {
									"params": "The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata"
								},
								"returns": {
									"amountOut": "The amount of the received token"
								}
							},
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"params": {
									"params": "The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata"
								},
								"returns": {
									"amountOut": "The amount of the received token"
								}
							},
							"exactOutput((bytes,address,uint256,uint256,uint256))": {
								"params": {
									"params": "The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata"
								},
								"returns": {
									"amountIn": "The amount of the input token"
								}
							},
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"params": {
									"params": "The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata"
								},
								"returns": {
									"amountIn": "The amount of the input token"
								}
							},
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"details": "In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.",
								"params": {
									"amount0Delta": "The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.",
									"amount1Delta": "The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.",
									"data": "Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
								}
							}
						},
						"title": "Router token swapping functionality",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"exactInput((bytes,address,uint256,uint256,uint256))": "c04b8d59",
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": "414bf389",
							"exactOutput((bytes,address,uint256,uint256,uint256))": "f28c0498",
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": "db3e2198",
							"uniswapV3SwapCallback(int256,int256,bytes)": "fa461e33"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactInputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactInputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactOutputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactOutputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Router token swapping functionality\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another along the specified path\"},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another token\"},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\"},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another token\"},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Functions for swapping tokens via Uniswap V3\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":\"ISwapRouter\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0xce7610a700cf6c760af022724574b71f6cb8a1b474718b1148c41c4e59f8c91c\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://986c5048d84fd4ec19a6f94c523edf15ae9c09e702d2c55b5a518cb2bd747cef\",\"dweb:/ipfs/Qmc1VpG83GXfok8qAudpaXQDCtHRu76wosByiV4DBf7VFn\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3e7a79fe15138d3f5662f52cb6e4fe290609ab8682747234da4a3c1f5c2c36e9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e779dbd454468595a65d69e2e465a2a0644849c60e843689ed09fb629c4aff7e\",\"dweb:/ipfs/QmQjrixc6dLbQV3jj5FGYB4Eyxfi3g7XQ7Crz1nLw64KQ9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"exactInput((bytes,address,uint256,uint256,uint256))": {
								"notice": "Swaps `amountIn` of one token for as much as possible of another along the specified path"
							},
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"notice": "Swaps `amountIn` of one token for as much as possible of another token"
							},
							"exactOutput((bytes,address,uint256,uint256,uint256))": {
								"notice": "Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)"
							},
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"notice": "Swaps as little as possible of one token for `amountOut` of another token"
							},
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"notice": "Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."
							}
						},
						"notice": "Functions for swapping tokens via Uniswap V3",
						"version": 1
					}
				}
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/IUniswapV3Pool.sol": {
				"IUniswapV3Pool": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "Collect",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "CollectProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid1",
									"type": "uint256"
								}
							],
							"name": "Flash",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextOld",
									"type": "uint16"
								},
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextNew",
									"type": "uint16"
								}
							],
							"name": "IncreaseObservationCardinalityNext",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Initialize",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0New",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1New",
									"type": "uint8"
								}
							],
							"name": "SetFeeProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Swap",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collect",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collectProtocol",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fee",
							"outputs": [
								{
									"internalType": "uint24",
									"name": "",
									"type": "uint24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeGrowthGlobal0X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeGrowthGlobal1X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "flash",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								}
							],
							"name": "increaseObservationCardinalityNext",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidity",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxLiquidityPerTick",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "observations",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "blockTimestamp",
									"type": "uint32"
								},
								{
									"internalType": "int56",
									"name": "tickCumulative",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityCumulativeX128",
									"type": "uint160"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint32[]",
									"name": "secondsAgos",
									"type": "uint32[]"
								}
							],
							"name": "observe",
							"outputs": [
								{
									"internalType": "int56[]",
									"name": "tickCumulatives",
									"type": "int56[]"
								},
								{
									"internalType": "uint160[]",
									"name": "secondsPerLiquidityCumulativeX128s",
									"type": "uint160[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								}
							],
							"name": "positions",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "_liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside0LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside1LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "protocolFees",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "token0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "token1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "feeProtocol0",
									"type": "uint8"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol1",
									"type": "uint8"
								}
							],
							"name": "setFeeProtocol",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "slot0",
							"outputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								},
								{
									"internalType": "uint16",
									"name": "observationIndex",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinality",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol",
									"type": "uint8"
								},
								{
									"internalType": "bool",
									"name": "unlocked",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								}
							],
							"name": "snapshotCumulativesInside",
							"outputs": [
								{
									"internalType": "int56",
									"name": "tickCumulativeInside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityInsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsInside",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "zeroForOne",
									"type": "bool"
								},
								{
									"internalType": "int256",
									"name": "amountSpecified",
									"type": "int256"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceLimitX96",
									"type": "uint160"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [
								{
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int16",
									"name": "wordPosition",
									"type": "int16"
								}
							],
							"name": "tickBitmap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tickSpacing",
							"outputs": [
								{
									"internalType": "int24",
									"name": "",
									"type": "int24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "ticks",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "liquidityGross",
									"type": "uint128"
								},
								{
									"internalType": "int128",
									"name": "liquidityNet",
									"type": "int128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside0X128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside1X128",
									"type": "uint256"
								},
								{
									"internalType": "int56",
									"name": "tickCumulativeOutside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityOutsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsOutside",
									"type": "uint32"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "The pool interface is broken up into many smaller pieces",
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"details": "Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect",
								"params": {
									"amount": "The amount of liquidity to remove",
									"amount0": "The amount of token0 withdrawn",
									"amount1": "The amount of token1 withdrawn",
									"owner": "The owner of the position for which liquidity is removed",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"details": "Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees",
								"params": {
									"amount0": "The amount of token0 fees collected",
									"amount1": "The amount of token1 fees collected",
									"owner": "The owner of the position for which fees are collected",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"params": {
									"amount0": "The amount of token1 protocol fees that is withdrawn",
									"recipient": "The address that receives the collected protocol fees",
									"sender": "The address that collects the protocol fees"
								}
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"params": {
									"amount0": "The amount of token0 that was flashed",
									"amount1": "The amount of token1 that was flashed",
									"paid0": "The amount of token0 paid for the flash, which can exceed the amount0 plus the fee",
									"paid1": "The amount of token1 paid for the flash, which can exceed the amount1 plus the fee",
									"recipient": "The address that received the tokens from flash",
									"sender": "The address that initiated the swap call, and that received the callback"
								}
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"details": "observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.",
								"params": {
									"observationCardinalityNextNew": "The updated value of the next observation cardinality",
									"observationCardinalityNextOld": "The previous value of the next observation cardinality"
								}
							},
							"Initialize(uint160,int24)": {
								"details": "Mint/Burn/Swap cannot be emitted by the pool before Initialize",
								"params": {
									"sqrtPriceX96": "The initial sqrt price of the pool, as a Q64.96",
									"tick": "The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool"
								}
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"params": {
									"amount": "The amount of liquidity minted to the position range",
									"amount0": "How much token0 was required for the minted liquidity",
									"amount1": "How much token1 was required for the minted liquidity",
									"owner": "The owner of the position and recipient of any minted liquidity",
									"sender": "The address that minted the liquidity",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"params": {
									"feeProtocol0New": "The updated value of the token0 protocol fee",
									"feeProtocol0Old": "The previous value of the token0 protocol fee",
									"feeProtocol1New": "The updated value of the token1 protocol fee",
									"feeProtocol1Old": "The previous value of the token1 protocol fee"
								}
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"params": {
									"amount0": "The delta of the token0 balance of the pool",
									"amount1": "The delta of the token1 balance of the pool",
									"liquidity": "The liquidity of the pool after the swap",
									"recipient": "The address that received the output of the swap",
									"sender": "The address that initiated the swap call, and that received the callback",
									"sqrtPriceX96": "The sqrt(price) of the pool after the swap, as a Q64.96",
									"tick": "The log base 1.0001 of price of the pool after the swap"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"burn(int24,int24,uint128)": {
								"details": "Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect",
								"params": {
									"amount": "How much liquidity to burn",
									"tickLower": "The lower tick of the position for which to burn liquidity",
									"tickUpper": "The upper tick of the position for which to burn liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 sent to the recipient",
									"amount1": "The amount of token1 sent to the recipient"
								}
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"details": "Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.",
								"params": {
									"amount0Requested": "How much token0 should be withdrawn from the fees owed",
									"amount1Requested": "How much token1 should be withdrawn from the fees owed",
									"recipient": "The address which should receive the fees collected",
									"tickLower": "The lower tick of the position for which to collect fees",
									"tickUpper": "The upper tick of the position for which to collect fees"
								},
								"returns": {
									"amount0": "The amount of fees collected in token0",
									"amount1": "The amount of fees collected in token1"
								}
							},
							"collectProtocol(address,uint128,uint128)": {
								"params": {
									"amount0Requested": "The maximum amount of token0 to send, can be 0 to collect fees in only token1",
									"amount1Requested": "The maximum amount of token1 to send, can be 0 to collect fees in only token0",
									"recipient": "The address to which collected protocol fees should be sent"
								},
								"returns": {
									"amount0": "The protocol fee collected in token0",
									"amount1": "The protocol fee collected in token1"
								}
							},
							"factory()": {
								"returns": {
									"_0": "The contract address"
								}
							},
							"fee()": {
								"returns": {
									"_0": "The fee"
								}
							},
							"feeGrowthGlobal0X128()": {
								"details": "This value can overflow the uint256"
							},
							"feeGrowthGlobal1X128()": {
								"details": "This value can overflow the uint256"
							},
							"flash(address,uint256,uint256,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback",
								"params": {
									"amount0": "The amount of token0 to send",
									"amount1": "The amount of token1 to send",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address which will receive the token0 and token1 amounts"
								}
							},
							"increaseObservationCardinalityNext(uint16)": {
								"details": "This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.",
								"params": {
									"observationCardinalityNext": "The desired minimum number of observations for the pool to store"
								}
							},
							"initialize(uint160)": {
								"details": "Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value",
								"params": {
									"sqrtPriceX96": "the initial sqrt price of the pool as a Q64.96"
								}
							},
							"liquidity()": {
								"details": "This value has no relationship to the total liquidity across all ticks"
							},
							"maxLiquidityPerTick()": {
								"details": "This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool",
								"returns": {
									"_0": "The max amount of liquidity per tick"
								}
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.",
								"params": {
									"amount": "The amount of liquidity to mint",
									"data": "Any data that should be passed through to the callback",
									"recipient": "The address for which the liquidity will be created",
									"tickLower": "The lower tick of the position in which to add liquidity",
									"tickUpper": "The upper tick of the position in which to add liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback",
									"amount1": "The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"
								}
							},
							"observations(uint256)": {
								"details": "You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.",
								"params": {
									"index": "The element of the observations array to fetch"
								},
								"returns": {
									"blockTimestamp": "The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use"
								}
							},
							"observe(uint32[])": {
								"details": "To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.",
								"params": {
									"secondsAgos": "From how long ago each cumulative tick and liquidity value should be returned"
								},
								"returns": {
									"secondsPerLiquidityCumulativeX128s": "Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp",
									"tickCumulatives": "Cumulative tick values as of each `secondsAgos` from the current block timestamp"
								}
							},
							"positions(bytes32)": {
								"params": {
									"key": "The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper"
								},
								"returns": {
									"_liquidity": "The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"
								}
							},
							"protocolFees()": {
								"details": "Protocol fees will never exceed uint128 max in either token"
							},
							"setFeeProtocol(uint8,uint8)": {
								"params": {
									"feeProtocol0": "new protocol fee for token0 of the pool",
									"feeProtocol1": "new protocol fee for token1 of the pool"
								}
							},
							"slot0()": {
								"returns": {
									"sqrtPriceX96": "The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy"
								}
							},
							"snapshotCumulativesInside(int24,int24)": {
								"details": "Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.",
								"params": {
									"tickLower": "The lower tick of the range",
									"tickUpper": "The upper tick of the range"
								},
								"returns": {
									"secondsInside": "The snapshot of seconds per liquidity for the range",
									"secondsPerLiquidityInsideX128": "The snapshot of seconds per liquidity for the range",
									"tickCumulativeInside": "The snapshot of the tick accumulator for the range"
								}
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback",
								"params": {
									"amountSpecified": "The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address to receive the output of the swap",
									"sqrtPriceLimitX96": "The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap",
									"zeroForOne": "The direction of the swap, true for token0 to token1, false for token1 to token0"
								},
								"returns": {
									"amount0": "The delta of the balance of token0 of the pool, exact when negative, minimum when positive",
									"amount1": "The delta of the balance of token1 of the pool, exact when negative, minimum when positive"
								}
							},
							"tickSpacing()": {
								"details": "Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.",
								"returns": {
									"_0": "The tick spacing"
								}
							},
							"ticks(int24)": {
								"params": {
									"tick": "The tick to look up"
								},
								"returns": {
									"liquidityGross": "the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position."
								}
							},
							"token0()": {
								"returns": {
									"_0": "The token contract address"
								}
							},
							"token1()": {
								"returns": {
									"_0": "The token contract address"
								}
							}
						},
						"title": "The interface for a Uniswap V3 Pool",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"burn(int24,int24,uint128)": "a34123a7",
							"collect(address,int24,int24,uint128,uint128)": "4f1eb3d8",
							"collectProtocol(address,uint128,uint128)": "85b66729",
							"factory()": "c45a0155",
							"fee()": "ddca3f43",
							"feeGrowthGlobal0X128()": "f3058399",
							"feeGrowthGlobal1X128()": "46141319",
							"flash(address,uint256,uint256,bytes)": "490e6cbc",
							"increaseObservationCardinalityNext(uint16)": "32148f67",
							"initialize(uint160)": "f637731d",
							"liquidity()": "1a686502",
							"maxLiquidityPerTick()": "70cf754a",
							"mint(address,int24,int24,uint128,bytes)": "3c8a7d8d",
							"observations(uint256)": "252c09d7",
							"observe(uint32[])": "883bdbfd",
							"positions(bytes32)": "514ea4bf",
							"protocolFees()": "1ad8b03b",
							"setFeeProtocol(uint8,uint8)": "8206a4d1",
							"slot0()": "3850c7bd",
							"snapshotCumulativesInside(int24,int24)": "a38807f2",
							"swap(address,bool,int256,uint160,bytes)": "128acb08",
							"tickBitmap(int16)": "5339c296",
							"tickSpacing()": "d0c93a7c",
							"ticks(int24)": "f30dba93",
							"token0()": "0dfe1681",
							"token1()": "d21220a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"CollectProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid1\",\"type\":\"uint256\"}],\"name\":\"Flash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextOld\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextNew\",\"type\":\"uint16\"}],\"name\":\"IncreaseObservationCardinalityNext\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0New\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1New\",\"type\":\"uint8\"}],\"name\":\"SetFeeProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collectProtocol\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal0X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal1X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"}],\"name\":\"increaseObservationCardinalityNext\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLiquidityPerTick\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"observations\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"blockTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"int56\",\"name\":\"tickCumulative\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityCumulativeX128\",\"type\":\"uint160\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32[]\",\"name\":\"secondsAgos\",\"type\":\"uint32[]\"}],\"name\":\"observe\",\"outputs\":[{\"internalType\":\"int56[]\",\"name\":\"tickCumulatives\",\"type\":\"int56[]\"},{\"internalType\":\"uint160[]\",\"name\":\"secondsPerLiquidityCumulativeX128s\",\"type\":\"uint160[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"_liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"token0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"token1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"feeProtocol0\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol1\",\"type\":\"uint8\"}],\"name\":\"setFeeProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slot0\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"observationIndex\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinality\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"snapshotCumulativesInside\",\"outputs\":[{\"internalType\":\"int56\",\"name\":\"tickCumulativeInside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityInsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsInside\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int16\",\"name\":\"wordPosition\",\"type\":\"int16\"}],\"name\":\"tickBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"ticks\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidityGross\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"liquidityNet\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside0X128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside1X128\",\"type\":\"uint256\"},{\"internalType\":\"int56\",\"name\":\"tickCumulativeOutside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityOutsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsOutside\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The pool interface is broken up into many smaller pieces\",\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"details\":\"Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\",\"params\":{\"amount\":\"The amount of liquidity to remove\",\"amount0\":\"The amount of token0 withdrawn\",\"amount1\":\"The amount of token1 withdrawn\",\"owner\":\"The owner of the position for which liquidity is removed\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"details\":\"Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\",\"params\":{\"amount0\":\"The amount of token0 fees collected\",\"amount1\":\"The amount of token1 fees collected\",\"owner\":\"The owner of the position for which fees are collected\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"CollectProtocol(address,address,uint128,uint128)\":{\"params\":{\"amount0\":\"The amount of token1 protocol fees that is withdrawn\",\"recipient\":\"The address that receives the collected protocol fees\",\"sender\":\"The address that collects the protocol fees\"}},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"params\":{\"amount0\":\"The amount of token0 that was flashed\",\"amount1\":\"The amount of token1 that was flashed\",\"paid0\":\"The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\",\"paid1\":\"The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\",\"recipient\":\"The address that received the tokens from flash\",\"sender\":\"The address that initiated the swap call, and that received the callback\"}},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"details\":\"observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.\",\"params\":{\"observationCardinalityNextNew\":\"The updated value of the next observation cardinality\",\"observationCardinalityNextOld\":\"The previous value of the next observation cardinality\"}},\"Initialize(uint160,int24)\":{\"details\":\"Mint/Burn/Swap cannot be emitted by the pool before Initialize\",\"params\":{\"sqrtPriceX96\":\"The initial sqrt price of the pool, as a Q64.96\",\"tick\":\"The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\"}},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of liquidity minted to the position range\",\"amount0\":\"How much token0 was required for the minted liquidity\",\"amount1\":\"How much token1 was required for the minted liquidity\",\"owner\":\"The owner of the position and recipient of any minted liquidity\",\"sender\":\"The address that minted the liquidity\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"params\":{\"feeProtocol0New\":\"The updated value of the token0 protocol fee\",\"feeProtocol0Old\":\"The previous value of the token0 protocol fee\",\"feeProtocol1New\":\"The updated value of the token1 protocol fee\",\"feeProtocol1Old\":\"The previous value of the token1 protocol fee\"}},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"params\":{\"amount0\":\"The delta of the token0 balance of the pool\",\"amount1\":\"The delta of the token1 balance of the pool\",\"liquidity\":\"The liquidity of the pool after the swap\",\"recipient\":\"The address that received the output of the swap\",\"sender\":\"The address that initiated the swap call, and that received the callback\",\"sqrtPriceX96\":\"The sqrt(price) of the pool after the swap, as a Q64.96\",\"tick\":\"The log base 1.0001 of price of the pool after the swap\"}}},\"kind\":\"dev\",\"methods\":{\"burn(int24,int24,uint128)\":{\"details\":\"Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect\",\"params\":{\"amount\":\"How much liquidity to burn\",\"tickLower\":\"The lower tick of the position for which to burn liquidity\",\"tickUpper\":\"The upper tick of the position for which to burn liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 sent to the recipient\",\"amount1\":\"The amount of token1 sent to the recipient\"}},\"collect(address,int24,int24,uint128,uint128)\":{\"details\":\"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\",\"params\":{\"amount0Requested\":\"How much token0 should be withdrawn from the fees owed\",\"amount1Requested\":\"How much token1 should be withdrawn from the fees owed\",\"recipient\":\"The address which should receive the fees collected\",\"tickLower\":\"The lower tick of the position for which to collect fees\",\"tickUpper\":\"The upper tick of the position for which to collect fees\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"collectProtocol(address,uint128,uint128)\":{\"params\":{\"amount0Requested\":\"The maximum amount of token0 to send, can be 0 to collect fees in only token1\",\"amount1Requested\":\"The maximum amount of token1 to send, can be 0 to collect fees in only token0\",\"recipient\":\"The address to which collected protocol fees should be sent\"},\"returns\":{\"amount0\":\"The protocol fee collected in token0\",\"amount1\":\"The protocol fee collected in token1\"}},\"factory()\":{\"returns\":{\"_0\":\"The contract address\"}},\"fee()\":{\"returns\":{\"_0\":\"The fee\"}},\"feeGrowthGlobal0X128()\":{\"details\":\"This value can overflow the uint256\"},\"feeGrowthGlobal1X128()\":{\"details\":\"This value can overflow the uint256\"},\"flash(address,uint256,uint256,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback\",\"params\":{\"amount0\":\"The amount of token0 to send\",\"amount1\":\"The amount of token1 to send\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address which will receive the token0 and token1 amounts\"}},\"increaseObservationCardinalityNext(uint16)\":{\"details\":\"This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.\",\"params\":{\"observationCardinalityNext\":\"The desired minimum number of observations for the pool to store\"}},\"initialize(uint160)\":{\"details\":\"Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\",\"params\":{\"sqrtPriceX96\":\"the initial sqrt price of the pool as a Q64.96\"}},\"liquidity()\":{\"details\":\"This value has no relationship to the total liquidity across all ticks\"},\"maxLiquidityPerTick()\":{\"details\":\"This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\",\"returns\":{\"_0\":\"The max amount of liquidity per tick\"}},\"mint(address,int24,int24,uint128,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.\",\"params\":{\"amount\":\"The amount of liquidity to mint\",\"data\":\"Any data that should be passed through to the callback\",\"recipient\":\"The address for which the liquidity will be created\",\"tickLower\":\"The lower tick of the position in which to add liquidity\",\"tickUpper\":\"The upper tick of the position in which to add liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\",\"amount1\":\"The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\"}},\"observations(uint256)\":{\"details\":\"You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.\",\"params\":{\"index\":\"The element of the observations array to fetch\"},\"returns\":{\"blockTimestamp\":\"The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use\"}},\"observe(uint32[])\":{\"details\":\"To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\",\"params\":{\"secondsAgos\":\"From how long ago each cumulative tick and liquidity value should be returned\"},\"returns\":{\"secondsPerLiquidityCumulativeX128s\":\"Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp\",\"tickCumulatives\":\"Cumulative tick values as of each `secondsAgos` from the current block timestamp\"}},\"positions(bytes32)\":{\"params\":{\"key\":\"The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\"},\"returns\":{\"_liquidity\":\"The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\"}},\"protocolFees()\":{\"details\":\"Protocol fees will never exceed uint128 max in either token\"},\"setFeeProtocol(uint8,uint8)\":{\"params\":{\"feeProtocol0\":\"new protocol fee for token0 of the pool\",\"feeProtocol1\":\"new protocol fee for token1 of the pool\"}},\"slot0()\":{\"returns\":{\"sqrtPriceX96\":\"The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy\"}},\"snapshotCumulativesInside(int24,int24)\":{\"details\":\"Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.\",\"params\":{\"tickLower\":\"The lower tick of the range\",\"tickUpper\":\"The upper tick of the range\"},\"returns\":{\"secondsInside\":\"The snapshot of seconds per liquidity for the range\",\"secondsPerLiquidityInsideX128\":\"The snapshot of seconds per liquidity for the range\",\"tickCumulativeInside\":\"The snapshot of the tick accumulator for the range\"}},\"swap(address,bool,int256,uint160,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\",\"params\":{\"amountSpecified\":\"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address to receive the output of the swap\",\"sqrtPriceLimitX96\":\"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\",\"zeroForOne\":\"The direction of the swap, true for token0 to token1, false for token1 to token0\"},\"returns\":{\"amount0\":\"The delta of the balance of token0 of the pool, exact when negative, minimum when positive\",\"amount1\":\"The delta of the balance of token1 of the pool, exact when negative, minimum when positive\"}},\"tickSpacing()\":{\"details\":\"Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.\",\"returns\":{\"_0\":\"The tick spacing\"}},\"ticks(int24)\":{\"params\":{\"tick\":\"The tick to look up\"},\"returns\":{\"liquidityGross\":\"the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position.\"}},\"token0()\":{\"returns\":{\"_0\":\"The token contract address\"}},\"token1()\":{\"returns\":{\"_0\":\"The token contract address\"}}},\"title\":\"The interface for a Uniswap V3 Pool\",\"version\":1},\"userdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when a position's liquidity is removed\"},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"notice\":\"Emitted when fees are collected by the owner of a position\"},\"CollectProtocol(address,address,uint128,uint128)\":{\"notice\":\"Emitted when the collected protocol fees are withdrawn by the factory owner\"},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted by the pool for any flashes of token0/token1\"},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"notice\":\"Emitted by the pool for increases to the number of observations that can be stored\"},\"Initialize(uint160,int24)\":{\"notice\":\"Emitted exactly once by a pool when #initialize is first called on the pool\"},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is minted for a given position\"},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"notice\":\"Emitted when the protocol fee is changed by the pool\"},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"notice\":\"Emitted by the pool for any swaps between token0 and token1\"}},\"kind\":\"user\",\"methods\":{\"burn(int24,int24,uint128)\":{\"notice\":\"Burn liquidity from the sender and account tokens owed for the liquidity to the position\"},\"collect(address,int24,int24,uint128,uint128)\":{\"notice\":\"Collects tokens owed to a position\"},\"collectProtocol(address,uint128,uint128)\":{\"notice\":\"Collect the protocol fee accrued to the pool\"},\"factory()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"},\"fee()\":{\"notice\":\"The pool's fee in hundredths of a bip, i.e. 1e-6\"},\"feeGrowthGlobal0X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\"},\"feeGrowthGlobal1X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\"},\"flash(address,uint256,uint256,bytes)\":{\"notice\":\"Receive token0 and/or token1 and pay it back, plus a fee, in the callback\"},\"increaseObservationCardinalityNext(uint16)\":{\"notice\":\"Increase the maximum number of price and liquidity observations that this pool will store\"},\"initialize(uint160)\":{\"notice\":\"Sets the initial price for the pool\"},\"liquidity()\":{\"notice\":\"The currently in range liquidity available to the pool\"},\"maxLiquidityPerTick()\":{\"notice\":\"The maximum amount of position liquidity that can use any tick in the range\"},\"mint(address,int24,int24,uint128,bytes)\":{\"notice\":\"Adds liquidity for the given recipient/tickLower/tickUpper position\"},\"observations(uint256)\":{\"notice\":\"Returns data about a specific observation index\"},\"observe(uint32[])\":{\"notice\":\"Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\"},\"positions(bytes32)\":{\"notice\":\"Returns the information about a position by the position's key\"},\"protocolFees()\":{\"notice\":\"The amounts of token0 and token1 that are owed to the protocol\"},\"setFeeProtocol(uint8,uint8)\":{\"notice\":\"Set the denominator of the protocol's % share of the fees\"},\"slot0()\":{\"notice\":\"The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally.\"},\"snapshotCumulativesInside(int24,int24)\":{\"notice\":\"Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\"},\"swap(address,bool,int256,uint160,bytes)\":{\"notice\":\"Swap token0 for token1, or token1 for token0\"},\"tickBitmap(int16)\":{\"notice\":\"Returns 256 packed tick initialized boolean values. See TickBitmap for more information\"},\"tickSpacing()\":{\"notice\":\"The pool tick spacing\"},\"ticks(int24)\":{\"notice\":\"Look up information about a specific tick in the pool\"},\"token0()\":{\"notice\":\"The first of the two tokens of the pool, sorted by address\"},\"token1()\":{\"notice\":\"The second of the two tokens of the pool, sorted by address\"}},\"notice\":\"A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform to the ERC20 specification\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/uniswap/v3-periphery/contracts/interfaces/IUniswapV3Pool.sol\":\"IUniswapV3Pool\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/uniswap/v3-periphery/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0x8cc5fdc36f72b60fbaae4cfdec0860e52966bc696687a6748740036a9351e0d8\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://612d2f4508cbfb26493b7fc1afd55dfc49bafd7a41568874072677cb2f9fbac2\",\"dweb:/ipfs/QmZqDWJg7cocG2eHe3DHLHFX2q8WYSUhuRaN7GLStxAkPf\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0xbda9a49a6477d17ea7aee446c520d84439821b392e0739fb2d13d639b2d0a518\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://9d77965c193a9996f934bfc74f5a51228efa2472351d4ea04fab1f4c84e1fc59\",\"dweb:/ipfs/QmUgeuPbTj6pB2fVHhdCLXf28PfvGLyHQMMgCVRaajXMzz\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xf52a9196f5ad0e013eea7865e23b0d55c7eb985c54d7999fdfbf25cc09ff89b6\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://9915a96570d3714e122505db18d312b89cff05e8412efd063c1010c51e871172\",\"dweb:/ipfs/QmWrUtH46EJ15JudFuTKFqXpFHaXupU6ToCJch1xhh27Q2\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0xc68758d899d618e71a0b6c41a0f3c0f910cb97e769131290b9b2e83521b162e4\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://9da49cb2294b63dbb46e0375160701a1623ea6227724d876e14f99d903d14b3c\",\"dweb:/ipfs/QmUDNHtMJsvWYJpy7rQ8yj1kLbA4kJtQ6CbweXSwwmryfH\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0x7817d3fe66d25358dda3b9ce7e531c544bb3a1bf5cd35bd897d0bb782ae8fc15\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b37a8e4a99e169c9787ed9d0b57c879e439c780beda61c397119a6596fa6794d\",\"dweb:/ipfs/QmeeNDyF6BBJwQNNvoeTjJhLkx3L7eiTRWRUhQ8wNyyoNK\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x007ade6bc9ccc96311c12182045de8fa65c5d42476f9e3d08a0b8ed03be7e77d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://24b7835a505f81d181b17964a5c7a38cfdbeaced376021bfd3b02cd42640023a\",\"dweb:/ipfs/QmTqC1uHg1KNKiA8QgP8cTAzuJFTFPUne93izW2PFgKApv\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0xe77ec56f09b05e9cb034a59f83f7925bb33b06787011339166097fcbf3ba8ef6\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://4c400a8119e27ae73b2ec8b271609afb7a42757c92a366bc6c95f2df9eb52981\",\"dweb:/ipfs/QmRarxpXNNpkf5tHXoSFD3gD9GvXWUxyGiWamG7dPd2e9t\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when a position's liquidity is removed"
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"notice": "Emitted when fees are collected by the owner of a position"
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"notice": "Emitted when the collected protocol fees are withdrawn by the factory owner"
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"notice": "Emitted by the pool for any flashes of token0/token1"
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"notice": "Emitted by the pool for increases to the number of observations that can be stored"
							},
							"Initialize(uint160,int24)": {
								"notice": "Emitted exactly once by a pool when #initialize is first called on the pool"
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when liquidity is minted for a given position"
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"notice": "Emitted when the protocol fee is changed by the pool"
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"notice": "Emitted by the pool for any swaps between token0 and token1"
							}
						},
						"kind": "user",
						"methods": {
							"burn(int24,int24,uint128)": {
								"notice": "Burn liquidity from the sender and account tokens owed for the liquidity to the position"
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"notice": "Collects tokens owed to a position"
							},
							"collectProtocol(address,uint128,uint128)": {
								"notice": "Collect the protocol fee accrued to the pool"
							},
							"factory()": {
								"notice": "The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface"
							},
							"fee()": {
								"notice": "The pool's fee in hundredths of a bip, i.e. 1e-6"
							},
							"feeGrowthGlobal0X128()": {
								"notice": "The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool"
							},
							"feeGrowthGlobal1X128()": {
								"notice": "The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool"
							},
							"flash(address,uint256,uint256,bytes)": {
								"notice": "Receive token0 and/or token1 and pay it back, plus a fee, in the callback"
							},
							"increaseObservationCardinalityNext(uint16)": {
								"notice": "Increase the maximum number of price and liquidity observations that this pool will store"
							},
							"initialize(uint160)": {
								"notice": "Sets the initial price for the pool"
							},
							"liquidity()": {
								"notice": "The currently in range liquidity available to the pool"
							},
							"maxLiquidityPerTick()": {
								"notice": "The maximum amount of position liquidity that can use any tick in the range"
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"notice": "Adds liquidity for the given recipient/tickLower/tickUpper position"
							},
							"observations(uint256)": {
								"notice": "Returns data about a specific observation index"
							},
							"observe(uint32[])": {
								"notice": "Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp"
							},
							"positions(bytes32)": {
								"notice": "Returns the information about a position by the position's key"
							},
							"protocolFees()": {
								"notice": "The amounts of token0 and token1 that are owed to the protocol"
							},
							"setFeeProtocol(uint8,uint8)": {
								"notice": "Set the denominator of the protocol's % share of the fees"
							},
							"slot0()": {
								"notice": "The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally."
							},
							"snapshotCumulativesInside(int24,int24)": {
								"notice": "Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range"
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"notice": "Swap token0 for token1, or token1 for token0"
							},
							"tickBitmap(int16)": {
								"notice": "Returns 256 packed tick initialized boolean values. See TickBitmap for more information"
							},
							"tickSpacing()": {
								"notice": "The pool tick spacing"
							},
							"ticks(int24)": {
								"notice": "Look up information about a specific tick in the pool"
							},
							"token0()": {
								"notice": "The first of the two tokens of the pool, sorted by address"
							},
							"token1()": {
								"notice": "The second of the two tokens of the pool, sorted by address"
							}
						},
						"notice": "A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform to the ERC20 specification",
						"version": 1
					}
				}
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"IUniswapV3SwapCallback": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "amount0Delta",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1Delta",
									"type": "int256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "uniswapV3SwapCallback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"details": "In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.",
								"params": {
									"amount0Delta": "The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.",
									"amount1Delta": "The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.",
									"data": "Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
								}
							}
						},
						"title": "Callback for IUniswapV3PoolActions#swap",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"uniswapV3SwapCallback(int256,int256,bytes)": "fa461e33"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Callback for IUniswapV3PoolActions#swap\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Any contract that calls IUniswapV3PoolActions#swap must implement this interface\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/uniswap/v3-periphery/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":\"IUniswapV3SwapCallback\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/uniswap/v3-periphery/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3e7a79fe15138d3f5662f52cb6e4fe290609ab8682747234da4a3c1f5c2c36e9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e779dbd454468595a65d69e2e465a2a0644849c60e843689ed09fb629c4aff7e\",\"dweb:/ipfs/QmQjrixc6dLbQV3jj5FGYB4Eyxfi3g7XQ7Crz1nLw64KQ9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"notice": "Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."
							}
						},
						"notice": "Any contract that calls IUniswapV3PoolActions#swap must implement this interface",
						"version": 1
					}
				}
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
				"IUniswapV3PoolActions": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collect",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "flash",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								}
							],
							"name": "increaseObservationCardinalityNext",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "zeroForOne",
									"type": "bool"
								},
								{
									"internalType": "int256",
									"name": "amountSpecified",
									"type": "int256"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceLimitX96",
									"type": "uint160"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [
								{
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"burn(int24,int24,uint128)": {
								"details": "Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect",
								"params": {
									"amount": "How much liquidity to burn",
									"tickLower": "The lower tick of the position for which to burn liquidity",
									"tickUpper": "The upper tick of the position for which to burn liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 sent to the recipient",
									"amount1": "The amount of token1 sent to the recipient"
								}
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"details": "Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.",
								"params": {
									"amount0Requested": "How much token0 should be withdrawn from the fees owed",
									"amount1Requested": "How much token1 should be withdrawn from the fees owed",
									"recipient": "The address which should receive the fees collected",
									"tickLower": "The lower tick of the position for which to collect fees",
									"tickUpper": "The upper tick of the position for which to collect fees"
								},
								"returns": {
									"amount0": "The amount of fees collected in token0",
									"amount1": "The amount of fees collected in token1"
								}
							},
							"flash(address,uint256,uint256,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback",
								"params": {
									"amount0": "The amount of token0 to send",
									"amount1": "The amount of token1 to send",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address which will receive the token0 and token1 amounts"
								}
							},
							"increaseObservationCardinalityNext(uint16)": {
								"details": "This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.",
								"params": {
									"observationCardinalityNext": "The desired minimum number of observations for the pool to store"
								}
							},
							"initialize(uint160)": {
								"details": "Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value",
								"params": {
									"sqrtPriceX96": "the initial sqrt price of the pool as a Q64.96"
								}
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.",
								"params": {
									"amount": "The amount of liquidity to mint",
									"data": "Any data that should be passed through to the callback",
									"recipient": "The address for which the liquidity will be created",
									"tickLower": "The lower tick of the position in which to add liquidity",
									"tickUpper": "The upper tick of the position in which to add liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback",
									"amount1": "The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"
								}
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback",
								"params": {
									"amountSpecified": "The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address to receive the output of the swap",
									"sqrtPriceLimitX96": "The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap",
									"zeroForOne": "The direction of the swap, true for token0 to token1, false for token1 to token0"
								},
								"returns": {
									"amount0": "The delta of the balance of token0 of the pool, exact when negative, minimum when positive",
									"amount1": "The delta of the balance of token1 of the pool, exact when negative, minimum when positive"
								}
							}
						},
						"title": "Permissionless pool actions",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"burn(int24,int24,uint128)": "a34123a7",
							"collect(address,int24,int24,uint128,uint128)": "4f1eb3d8",
							"flash(address,uint256,uint256,bytes)": "490e6cbc",
							"increaseObservationCardinalityNext(uint16)": "32148f67",
							"initialize(uint160)": "f637731d",
							"mint(address,int24,int24,uint128,bytes)": "3c8a7d8d",
							"swap(address,bool,int256,uint160,bytes)": "128acb08"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"}],\"name\":\"increaseObservationCardinalityNext\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"burn(int24,int24,uint128)\":{\"details\":\"Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect\",\"params\":{\"amount\":\"How much liquidity to burn\",\"tickLower\":\"The lower tick of the position for which to burn liquidity\",\"tickUpper\":\"The upper tick of the position for which to burn liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 sent to the recipient\",\"amount1\":\"The amount of token1 sent to the recipient\"}},\"collect(address,int24,int24,uint128,uint128)\":{\"details\":\"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\",\"params\":{\"amount0Requested\":\"How much token0 should be withdrawn from the fees owed\",\"amount1Requested\":\"How much token1 should be withdrawn from the fees owed\",\"recipient\":\"The address which should receive the fees collected\",\"tickLower\":\"The lower tick of the position for which to collect fees\",\"tickUpper\":\"The upper tick of the position for which to collect fees\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"flash(address,uint256,uint256,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback\",\"params\":{\"amount0\":\"The amount of token0 to send\",\"amount1\":\"The amount of token1 to send\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address which will receive the token0 and token1 amounts\"}},\"increaseObservationCardinalityNext(uint16)\":{\"details\":\"This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.\",\"params\":{\"observationCardinalityNext\":\"The desired minimum number of observations for the pool to store\"}},\"initialize(uint160)\":{\"details\":\"Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\",\"params\":{\"sqrtPriceX96\":\"the initial sqrt price of the pool as a Q64.96\"}},\"mint(address,int24,int24,uint128,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.\",\"params\":{\"amount\":\"The amount of liquidity to mint\",\"data\":\"Any data that should be passed through to the callback\",\"recipient\":\"The address for which the liquidity will be created\",\"tickLower\":\"The lower tick of the position in which to add liquidity\",\"tickUpper\":\"The upper tick of the position in which to add liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\",\"amount1\":\"The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\"}},\"swap(address,bool,int256,uint160,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\",\"params\":{\"amountSpecified\":\"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address to receive the output of the swap\",\"sqrtPriceLimitX96\":\"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\",\"zeroForOne\":\"The direction of the swap, true for token0 to token1, false for token1 to token0\"},\"returns\":{\"amount0\":\"The delta of the balance of token0 of the pool, exact when negative, minimum when positive\",\"amount1\":\"The delta of the balance of token1 of the pool, exact when negative, minimum when positive\"}}},\"title\":\"Permissionless pool actions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burn(int24,int24,uint128)\":{\"notice\":\"Burn liquidity from the sender and account tokens owed for the liquidity to the position\"},\"collect(address,int24,int24,uint128,uint128)\":{\"notice\":\"Collects tokens owed to a position\"},\"flash(address,uint256,uint256,bytes)\":{\"notice\":\"Receive token0 and/or token1 and pay it back, plus a fee, in the callback\"},\"increaseObservationCardinalityNext(uint16)\":{\"notice\":\"Increase the maximum number of price and liquidity observations that this pool will store\"},\"initialize(uint160)\":{\"notice\":\"Sets the initial price for the pool\"},\"mint(address,int24,int24,uint128,bytes)\":{\"notice\":\"Adds liquidity for the given recipient/tickLower/tickUpper position\"},\"swap(address,bool,int256,uint160,bytes)\":{\"notice\":\"Swap token0 for token1, or token1 for token0\"}},\"notice\":\"Contains pool methods that can be called by anyone\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":\"IUniswapV3PoolActions\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0xbda9a49a6477d17ea7aee446c520d84439821b392e0739fb2d13d639b2d0a518\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://9d77965c193a9996f934bfc74f5a51228efa2472351d4ea04fab1f4c84e1fc59\",\"dweb:/ipfs/QmUgeuPbTj6pB2fVHhdCLXf28PfvGLyHQMMgCVRaajXMzz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"burn(int24,int24,uint128)": {
								"notice": "Burn liquidity from the sender and account tokens owed for the liquidity to the position"
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"notice": "Collects tokens owed to a position"
							},
							"flash(address,uint256,uint256,bytes)": {
								"notice": "Receive token0 and/or token1 and pay it back, plus a fee, in the callback"
							},
							"increaseObservationCardinalityNext(uint16)": {
								"notice": "Increase the maximum number of price and liquidity observations that this pool will store"
							},
							"initialize(uint160)": {
								"notice": "Sets the initial price for the pool"
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"notice": "Adds liquidity for the given recipient/tickLower/tickUpper position"
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"notice": "Swap token0 for token1, or token1 for token0"
							}
						},
						"notice": "Contains pool methods that can be called by anyone",
						"version": 1
					}
				}
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
				"IUniswapV3PoolDerivedState": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint32[]",
									"name": "secondsAgos",
									"type": "uint32[]"
								}
							],
							"name": "observe",
							"outputs": [
								{
									"internalType": "int56[]",
									"name": "tickCumulatives",
									"type": "int56[]"
								},
								{
									"internalType": "uint160[]",
									"name": "secondsPerLiquidityCumulativeX128s",
									"type": "uint160[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								}
							],
							"name": "snapshotCumulativesInside",
							"outputs": [
								{
									"internalType": "int56",
									"name": "tickCumulativeInside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityInsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsInside",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"observe(uint32[])": {
								"details": "To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.",
								"params": {
									"secondsAgos": "From how long ago each cumulative tick and liquidity value should be returned"
								},
								"returns": {
									"secondsPerLiquidityCumulativeX128s": "Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp",
									"tickCumulatives": "Cumulative tick values as of each `secondsAgos` from the current block timestamp"
								}
							},
							"snapshotCumulativesInside(int24,int24)": {
								"details": "Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.",
								"params": {
									"tickLower": "The lower tick of the range",
									"tickUpper": "The upper tick of the range"
								},
								"returns": {
									"secondsInside": "The snapshot of seconds per liquidity for the range",
									"secondsPerLiquidityInsideX128": "The snapshot of seconds per liquidity for the range",
									"tickCumulativeInside": "The snapshot of the tick accumulator for the range"
								}
							}
						},
						"title": "Pool state that is not stored",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"observe(uint32[])": "883bdbfd",
							"snapshotCumulativesInside(int24,int24)": "a38807f2"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint32[]\",\"name\":\"secondsAgos\",\"type\":\"uint32[]\"}],\"name\":\"observe\",\"outputs\":[{\"internalType\":\"int56[]\",\"name\":\"tickCumulatives\",\"type\":\"int56[]\"},{\"internalType\":\"uint160[]\",\"name\":\"secondsPerLiquidityCumulativeX128s\",\"type\":\"uint160[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"snapshotCumulativesInside\",\"outputs\":[{\"internalType\":\"int56\",\"name\":\"tickCumulativeInside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityInsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsInside\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"observe(uint32[])\":{\"details\":\"To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\",\"params\":{\"secondsAgos\":\"From how long ago each cumulative tick and liquidity value should be returned\"},\"returns\":{\"secondsPerLiquidityCumulativeX128s\":\"Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp\",\"tickCumulatives\":\"Cumulative tick values as of each `secondsAgos` from the current block timestamp\"}},\"snapshotCumulativesInside(int24,int24)\":{\"details\":\"Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.\",\"params\":{\"tickLower\":\"The lower tick of the range\",\"tickUpper\":\"The upper tick of the range\"},\"returns\":{\"secondsInside\":\"The snapshot of seconds per liquidity for the range\",\"secondsPerLiquidityInsideX128\":\"The snapshot of seconds per liquidity for the range\",\"tickCumulativeInside\":\"The snapshot of the tick accumulator for the range\"}}},\"title\":\"Pool state that is not stored\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"observe(uint32[])\":{\"notice\":\"Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\"},\"snapshotCumulativesInside(int24,int24)\":{\"notice\":\"Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\"}},\"notice\":\"Contains view functions to provide information about the pool that is computed rather than stored on the blockchain. The functions here may have variable gas costs.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":\"IUniswapV3PoolDerivedState\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xf52a9196f5ad0e013eea7865e23b0d55c7eb985c54d7999fdfbf25cc09ff89b6\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://9915a96570d3714e122505db18d312b89cff05e8412efd063c1010c51e871172\",\"dweb:/ipfs/QmWrUtH46EJ15JudFuTKFqXpFHaXupU6ToCJch1xhh27Q2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"observe(uint32[])": {
								"notice": "Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp"
							},
							"snapshotCumulativesInside(int24,int24)": {
								"notice": "Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range"
							}
						},
						"notice": "Contains view functions to provide information about the pool that is computed rather than stored on the blockchain. The functions here may have variable gas costs.",
						"version": 1
					}
				}
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
				"IUniswapV3PoolEvents": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "Collect",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "CollectProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid1",
									"type": "uint256"
								}
							],
							"name": "Flash",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextOld",
									"type": "uint16"
								},
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextNew",
									"type": "uint16"
								}
							],
							"name": "IncreaseObservationCardinalityNext",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Initialize",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0New",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1New",
									"type": "uint8"
								}
							],
							"name": "SetFeeProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Swap",
							"type": "event"
						}
					],
					"devdoc": {
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"details": "Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect",
								"params": {
									"amount": "The amount of liquidity to remove",
									"amount0": "The amount of token0 withdrawn",
									"amount1": "The amount of token1 withdrawn",
									"owner": "The owner of the position for which liquidity is removed",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"details": "Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees",
								"params": {
									"amount0": "The amount of token0 fees collected",
									"amount1": "The amount of token1 fees collected",
									"owner": "The owner of the position for which fees are collected",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"params": {
									"amount0": "The amount of token1 protocol fees that is withdrawn",
									"recipient": "The address that receives the collected protocol fees",
									"sender": "The address that collects the protocol fees"
								}
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"params": {
									"amount0": "The amount of token0 that was flashed",
									"amount1": "The amount of token1 that was flashed",
									"paid0": "The amount of token0 paid for the flash, which can exceed the amount0 plus the fee",
									"paid1": "The amount of token1 paid for the flash, which can exceed the amount1 plus the fee",
									"recipient": "The address that received the tokens from flash",
									"sender": "The address that initiated the swap call, and that received the callback"
								}
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"details": "observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.",
								"params": {
									"observationCardinalityNextNew": "The updated value of the next observation cardinality",
									"observationCardinalityNextOld": "The previous value of the next observation cardinality"
								}
							},
							"Initialize(uint160,int24)": {
								"details": "Mint/Burn/Swap cannot be emitted by the pool before Initialize",
								"params": {
									"sqrtPriceX96": "The initial sqrt price of the pool, as a Q64.96",
									"tick": "The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool"
								}
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"params": {
									"amount": "The amount of liquidity minted to the position range",
									"amount0": "How much token0 was required for the minted liquidity",
									"amount1": "How much token1 was required for the minted liquidity",
									"owner": "The owner of the position and recipient of any minted liquidity",
									"sender": "The address that minted the liquidity",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"params": {
									"feeProtocol0New": "The updated value of the token0 protocol fee",
									"feeProtocol0Old": "The previous value of the token0 protocol fee",
									"feeProtocol1New": "The updated value of the token1 protocol fee",
									"feeProtocol1Old": "The previous value of the token1 protocol fee"
								}
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"params": {
									"amount0": "The delta of the token0 balance of the pool",
									"amount1": "The delta of the token1 balance of the pool",
									"liquidity": "The liquidity of the pool after the swap",
									"recipient": "The address that received the output of the swap",
									"sender": "The address that initiated the swap call, and that received the callback",
									"sqrtPriceX96": "The sqrt(price) of the pool after the swap, as a Q64.96",
									"tick": "The log base 1.0001 of price of the pool after the swap"
								}
							}
						},
						"kind": "dev",
						"methods": {},
						"title": "Events emitted by a pool",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"CollectProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid1\",\"type\":\"uint256\"}],\"name\":\"Flash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextOld\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextNew\",\"type\":\"uint16\"}],\"name\":\"IncreaseObservationCardinalityNext\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0New\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1New\",\"type\":\"uint8\"}],\"name\":\"SetFeeProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Swap\",\"type\":\"event\"}],\"devdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"details\":\"Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\",\"params\":{\"amount\":\"The amount of liquidity to remove\",\"amount0\":\"The amount of token0 withdrawn\",\"amount1\":\"The amount of token1 withdrawn\",\"owner\":\"The owner of the position for which liquidity is removed\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"details\":\"Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\",\"params\":{\"amount0\":\"The amount of token0 fees collected\",\"amount1\":\"The amount of token1 fees collected\",\"owner\":\"The owner of the position for which fees are collected\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"CollectProtocol(address,address,uint128,uint128)\":{\"params\":{\"amount0\":\"The amount of token1 protocol fees that is withdrawn\",\"recipient\":\"The address that receives the collected protocol fees\",\"sender\":\"The address that collects the protocol fees\"}},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"params\":{\"amount0\":\"The amount of token0 that was flashed\",\"amount1\":\"The amount of token1 that was flashed\",\"paid0\":\"The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\",\"paid1\":\"The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\",\"recipient\":\"The address that received the tokens from flash\",\"sender\":\"The address that initiated the swap call, and that received the callback\"}},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"details\":\"observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.\",\"params\":{\"observationCardinalityNextNew\":\"The updated value of the next observation cardinality\",\"observationCardinalityNextOld\":\"The previous value of the next observation cardinality\"}},\"Initialize(uint160,int24)\":{\"details\":\"Mint/Burn/Swap cannot be emitted by the pool before Initialize\",\"params\":{\"sqrtPriceX96\":\"The initial sqrt price of the pool, as a Q64.96\",\"tick\":\"The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\"}},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of liquidity minted to the position range\",\"amount0\":\"How much token0 was required for the minted liquidity\",\"amount1\":\"How much token1 was required for the minted liquidity\",\"owner\":\"The owner of the position and recipient of any minted liquidity\",\"sender\":\"The address that minted the liquidity\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"params\":{\"feeProtocol0New\":\"The updated value of the token0 protocol fee\",\"feeProtocol0Old\":\"The previous value of the token0 protocol fee\",\"feeProtocol1New\":\"The updated value of the token1 protocol fee\",\"feeProtocol1Old\":\"The previous value of the token1 protocol fee\"}},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"params\":{\"amount0\":\"The delta of the token0 balance of the pool\",\"amount1\":\"The delta of the token1 balance of the pool\",\"liquidity\":\"The liquidity of the pool after the swap\",\"recipient\":\"The address that received the output of the swap\",\"sender\":\"The address that initiated the swap call, and that received the callback\",\"sqrtPriceX96\":\"The sqrt(price) of the pool after the swap, as a Q64.96\",\"tick\":\"The log base 1.0001 of price of the pool after the swap\"}}},\"kind\":\"dev\",\"methods\":{},\"title\":\"Events emitted by a pool\",\"version\":1},\"userdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when a position's liquidity is removed\"},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"notice\":\"Emitted when fees are collected by the owner of a position\"},\"CollectProtocol(address,address,uint128,uint128)\":{\"notice\":\"Emitted when the collected protocol fees are withdrawn by the factory owner\"},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted by the pool for any flashes of token0/token1\"},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"notice\":\"Emitted by the pool for increases to the number of observations that can be stored\"},\"Initialize(uint160,int24)\":{\"notice\":\"Emitted exactly once by a pool when #initialize is first called on the pool\"},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is minted for a given position\"},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"notice\":\"Emitted when the protocol fee is changed by the pool\"},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"notice\":\"Emitted by the pool for any swaps between token0 and token1\"}},\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains all events emitted by the pool\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":\"IUniswapV3PoolEvents\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0xc68758d899d618e71a0b6c41a0f3c0f910cb97e769131290b9b2e83521b162e4\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://9da49cb2294b63dbb46e0375160701a1623ea6227724d876e14f99d903d14b3c\",\"dweb:/ipfs/QmUDNHtMJsvWYJpy7rQ8yj1kLbA4kJtQ6CbweXSwwmryfH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when a position's liquidity is removed"
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"notice": "Emitted when fees are collected by the owner of a position"
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"notice": "Emitted when the collected protocol fees are withdrawn by the factory owner"
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"notice": "Emitted by the pool for any flashes of token0/token1"
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"notice": "Emitted by the pool for increases to the number of observations that can be stored"
							},
							"Initialize(uint160,int24)": {
								"notice": "Emitted exactly once by a pool when #initialize is first called on the pool"
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when liquidity is minted for a given position"
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"notice": "Emitted when the protocol fee is changed by the pool"
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"notice": "Emitted by the pool for any swaps between token0 and token1"
							}
						},
						"kind": "user",
						"methods": {},
						"notice": "Contains all events emitted by the pool",
						"version": 1
					}
				}
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
				"IUniswapV3PoolImmutables": {
					"abi": [
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fee",
							"outputs": [
								{
									"internalType": "uint24",
									"name": "",
									"type": "uint24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxLiquidityPerTick",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tickSpacing",
							"outputs": [
								{
									"internalType": "int24",
									"name": "",
									"type": "int24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"factory()": {
								"returns": {
									"_0": "The contract address"
								}
							},
							"fee()": {
								"returns": {
									"_0": "The fee"
								}
							},
							"maxLiquidityPerTick()": {
								"details": "This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool",
								"returns": {
									"_0": "The max amount of liquidity per tick"
								}
							},
							"tickSpacing()": {
								"details": "Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.",
								"returns": {
									"_0": "The tick spacing"
								}
							},
							"token0()": {
								"returns": {
									"_0": "The token contract address"
								}
							},
							"token1()": {
								"returns": {
									"_0": "The token contract address"
								}
							}
						},
						"title": "Pool state that never changes",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"factory()": "c45a0155",
							"fee()": "ddca3f43",
							"maxLiquidityPerTick()": "70cf754a",
							"tickSpacing()": "d0c93a7c",
							"token0()": "0dfe1681",
							"token1()": "d21220a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLiquidityPerTick\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"factory()\":{\"returns\":{\"_0\":\"The contract address\"}},\"fee()\":{\"returns\":{\"_0\":\"The fee\"}},\"maxLiquidityPerTick()\":{\"details\":\"This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\",\"returns\":{\"_0\":\"The max amount of liquidity per tick\"}},\"tickSpacing()\":{\"details\":\"Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.\",\"returns\":{\"_0\":\"The tick spacing\"}},\"token0()\":{\"returns\":{\"_0\":\"The token contract address\"}},\"token1()\":{\"returns\":{\"_0\":\"The token contract address\"}}},\"title\":\"Pool state that never changes\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"factory()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"},\"fee()\":{\"notice\":\"The pool's fee in hundredths of a bip, i.e. 1e-6\"},\"maxLiquidityPerTick()\":{\"notice\":\"The maximum amount of position liquidity that can use any tick in the range\"},\"tickSpacing()\":{\"notice\":\"The pool tick spacing\"},\"token0()\":{\"notice\":\"The first of the two tokens of the pool, sorted by address\"},\"token1()\":{\"notice\":\"The second of the two tokens of the pool, sorted by address\"}},\"notice\":\"These parameters are fixed for a pool forever, i.e., the methods will always return the same values\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":\"IUniswapV3PoolImmutables\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0x7817d3fe66d25358dda3b9ce7e531c544bb3a1bf5cd35bd897d0bb782ae8fc15\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b37a8e4a99e169c9787ed9d0b57c879e439c780beda61c397119a6596fa6794d\",\"dweb:/ipfs/QmeeNDyF6BBJwQNNvoeTjJhLkx3L7eiTRWRUhQ8wNyyoNK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"factory()": {
								"notice": "The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface"
							},
							"fee()": {
								"notice": "The pool's fee in hundredths of a bip, i.e. 1e-6"
							},
							"maxLiquidityPerTick()": {
								"notice": "The maximum amount of position liquidity that can use any tick in the range"
							},
							"tickSpacing()": {
								"notice": "The pool tick spacing"
							},
							"token0()": {
								"notice": "The first of the two tokens of the pool, sorted by address"
							},
							"token1()": {
								"notice": "The second of the two tokens of the pool, sorted by address"
							}
						},
						"notice": "These parameters are fixed for a pool forever, i.e., the methods will always return the same values",
						"version": 1
					}
				}
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
				"IUniswapV3PoolOwnerActions": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collectProtocol",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "feeProtocol0",
									"type": "uint8"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol1",
									"type": "uint8"
								}
							],
							"name": "setFeeProtocol",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"collectProtocol(address,uint128,uint128)": {
								"params": {
									"amount0Requested": "The maximum amount of token0 to send, can be 0 to collect fees in only token1",
									"amount1Requested": "The maximum amount of token1 to send, can be 0 to collect fees in only token0",
									"recipient": "The address to which collected protocol fees should be sent"
								},
								"returns": {
									"amount0": "The protocol fee collected in token0",
									"amount1": "The protocol fee collected in token1"
								}
							},
							"setFeeProtocol(uint8,uint8)": {
								"params": {
									"feeProtocol0": "new protocol fee for token0 of the pool",
									"feeProtocol1": "new protocol fee for token1 of the pool"
								}
							}
						},
						"title": "Permissioned pool actions",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"collectProtocol(address,uint128,uint128)": "85b66729",
							"setFeeProtocol(uint8,uint8)": "8206a4d1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collectProtocol\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"feeProtocol0\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol1\",\"type\":\"uint8\"}],\"name\":\"setFeeProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"collectProtocol(address,uint128,uint128)\":{\"params\":{\"amount0Requested\":\"The maximum amount of token0 to send, can be 0 to collect fees in only token1\",\"amount1Requested\":\"The maximum amount of token1 to send, can be 0 to collect fees in only token0\",\"recipient\":\"The address to which collected protocol fees should be sent\"},\"returns\":{\"amount0\":\"The protocol fee collected in token0\",\"amount1\":\"The protocol fee collected in token1\"}},\"setFeeProtocol(uint8,uint8)\":{\"params\":{\"feeProtocol0\":\"new protocol fee for token0 of the pool\",\"feeProtocol1\":\"new protocol fee for token1 of the pool\"}}},\"title\":\"Permissioned pool actions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"collectProtocol(address,uint128,uint128)\":{\"notice\":\"Collect the protocol fee accrued to the pool\"},\"setFeeProtocol(uint8,uint8)\":{\"notice\":\"Set the denominator of the protocol's % share of the fees\"}},\"notice\":\"Contains pool methods that may only be called by the factory owner\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":\"IUniswapV3PoolOwnerActions\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x007ade6bc9ccc96311c12182045de8fa65c5d42476f9e3d08a0b8ed03be7e77d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://24b7835a505f81d181b17964a5c7a38cfdbeaced376021bfd3b02cd42640023a\",\"dweb:/ipfs/QmTqC1uHg1KNKiA8QgP8cTAzuJFTFPUne93izW2PFgKApv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"collectProtocol(address,uint128,uint128)": {
								"notice": "Collect the protocol fee accrued to the pool"
							},
							"setFeeProtocol(uint8,uint8)": {
								"notice": "Set the denominator of the protocol's % share of the fees"
							}
						},
						"notice": "Contains pool methods that may only be called by the factory owner",
						"version": 1
					}
				}
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
				"IUniswapV3PoolState": {
					"abi": [
						{
							"inputs": [],
							"name": "feeGrowthGlobal0X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeGrowthGlobal1X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidity",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "observations",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "blockTimestamp",
									"type": "uint32"
								},
								{
									"internalType": "int56",
									"name": "tickCumulative",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityCumulativeX128",
									"type": "uint160"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								}
							],
							"name": "positions",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "_liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside0LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside1LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "protocolFees",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "token0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "token1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "slot0",
							"outputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								},
								{
									"internalType": "uint16",
									"name": "observationIndex",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinality",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol",
									"type": "uint8"
								},
								{
									"internalType": "bool",
									"name": "unlocked",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int16",
									"name": "wordPosition",
									"type": "int16"
								}
							],
							"name": "tickBitmap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "ticks",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "liquidityGross",
									"type": "uint128"
								},
								{
									"internalType": "int128",
									"name": "liquidityNet",
									"type": "int128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside0X128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside1X128",
									"type": "uint256"
								},
								{
									"internalType": "int56",
									"name": "tickCumulativeOutside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityOutsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsOutside",
									"type": "uint32"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"feeGrowthGlobal0X128()": {
								"details": "This value can overflow the uint256"
							},
							"feeGrowthGlobal1X128()": {
								"details": "This value can overflow the uint256"
							},
							"liquidity()": {
								"details": "This value has no relationship to the total liquidity across all ticks"
							},
							"observations(uint256)": {
								"details": "You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.",
								"params": {
									"index": "The element of the observations array to fetch"
								},
								"returns": {
									"blockTimestamp": "The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use"
								}
							},
							"positions(bytes32)": {
								"params": {
									"key": "The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper"
								},
								"returns": {
									"_liquidity": "The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"
								}
							},
							"protocolFees()": {
								"details": "Protocol fees will never exceed uint128 max in either token"
							},
							"slot0()": {
								"returns": {
									"sqrtPriceX96": "The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy"
								}
							},
							"ticks(int24)": {
								"params": {
									"tick": "The tick to look up"
								},
								"returns": {
									"liquidityGross": "the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position."
								}
							}
						},
						"title": "Pool state that can change",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"feeGrowthGlobal0X128()": "f3058399",
							"feeGrowthGlobal1X128()": "46141319",
							"liquidity()": "1a686502",
							"observations(uint256)": "252c09d7",
							"positions(bytes32)": "514ea4bf",
							"protocolFees()": "1ad8b03b",
							"slot0()": "3850c7bd",
							"tickBitmap(int16)": "5339c296",
							"ticks(int24)": "f30dba93"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"feeGrowthGlobal0X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal1X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"observations\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"blockTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"int56\",\"name\":\"tickCumulative\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityCumulativeX128\",\"type\":\"uint160\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"_liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"token0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"token1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slot0\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"observationIndex\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinality\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int16\",\"name\":\"wordPosition\",\"type\":\"int16\"}],\"name\":\"tickBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"ticks\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidityGross\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"liquidityNet\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside0X128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside1X128\",\"type\":\"uint256\"},{\"internalType\":\"int56\",\"name\":\"tickCumulativeOutside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityOutsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsOutside\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"feeGrowthGlobal0X128()\":{\"details\":\"This value can overflow the uint256\"},\"feeGrowthGlobal1X128()\":{\"details\":\"This value can overflow the uint256\"},\"liquidity()\":{\"details\":\"This value has no relationship to the total liquidity across all ticks\"},\"observations(uint256)\":{\"details\":\"You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.\",\"params\":{\"index\":\"The element of the observations array to fetch\"},\"returns\":{\"blockTimestamp\":\"The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use\"}},\"positions(bytes32)\":{\"params\":{\"key\":\"The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\"},\"returns\":{\"_liquidity\":\"The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\"}},\"protocolFees()\":{\"details\":\"Protocol fees will never exceed uint128 max in either token\"},\"slot0()\":{\"returns\":{\"sqrtPriceX96\":\"The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy\"}},\"ticks(int24)\":{\"params\":{\"tick\":\"The tick to look up\"},\"returns\":{\"liquidityGross\":\"the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position.\"}}},\"title\":\"Pool state that can change\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"feeGrowthGlobal0X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\"},\"feeGrowthGlobal1X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\"},\"liquidity()\":{\"notice\":\"The currently in range liquidity available to the pool\"},\"observations(uint256)\":{\"notice\":\"Returns data about a specific observation index\"},\"positions(bytes32)\":{\"notice\":\"Returns the information about a position by the position's key\"},\"protocolFees()\":{\"notice\":\"The amounts of token0 and token1 that are owed to the protocol\"},\"slot0()\":{\"notice\":\"The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally.\"},\"tickBitmap(int16)\":{\"notice\":\"Returns 256 packed tick initialized boolean values. See TickBitmap for more information\"},\"ticks(int24)\":{\"notice\":\"Look up information about a specific tick in the pool\"}},\"notice\":\"These methods compose the pool's state, and can change with any frequency including multiple times per transaction\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolState.sol\":\"IUniswapV3PoolState\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0xe77ec56f09b05e9cb034a59f83f7925bb33b06787011339166097fcbf3ba8ef6\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://4c400a8119e27ae73b2ec8b271609afb7a42757c92a366bc6c95f2df9eb52981\",\"dweb:/ipfs/QmRarxpXNNpkf5tHXoSFD3gD9GvXWUxyGiWamG7dPd2e9t\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"feeGrowthGlobal0X128()": {
								"notice": "The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool"
							},
							"feeGrowthGlobal1X128()": {
								"notice": "The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool"
							},
							"liquidity()": {
								"notice": "The currently in range liquidity available to the pool"
							},
							"observations(uint256)": {
								"notice": "Returns data about a specific observation index"
							},
							"positions(bytes32)": {
								"notice": "Returns the information about a position by the position's key"
							},
							"protocolFees()": {
								"notice": "The amounts of token0 and token1 that are owed to the protocol"
							},
							"slot0()": {
								"notice": "The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally."
							},
							"tickBitmap(int16)": {
								"notice": "Returns 256 packed tick initialized boolean values. See TickBitmap for more information"
							},
							"ticks(int24)": {
								"notice": "Look up information about a specific tick in the pool"
							}
						},
						"notice": "These methods compose the pool's state, and can change with any frequency including multiple times per transaction",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/MainBot.sol": {
				"ast": {
					"absolutePath": "contracts/MainBot.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							1490
						],
						"DataTypes": [
							914
						],
						"IERC165": [
							1677
						],
						"IERC20": [
							35
						],
						"IERC721": [
							1607
						],
						"IERC721Enumerable": [
							1638
						],
						"IERC721Metadata": [
							1665
						],
						"IERC721Permit": [
							1712
						],
						"ILendingPool": [
							1293
						],
						"ILendingPoolAddressesProvider": [
							1444
						],
						"INonfungiblePositionManager": [
							1910
						],
						"IPeripheryImmutableState": [
							1926
						],
						"IPeripheryPayments": [
							1952
						],
						"IPoolInitializer": [
							1971
						],
						"ISwapRouter": [
							2071
						],
						"IUniswapV3Pool": [
							2093
						],
						"IUniswapV3PoolActions": [
							2203
						],
						"IUniswapV3PoolDerivedState": [
							2234
						],
						"IUniswapV3PoolEvents": [
							2353
						],
						"IUniswapV3PoolImmutables": [
							2393
						],
						"IUniswapV3PoolOwnerActions": [
							2419
						],
						"IUniswapV3PoolState": [
							2527
						],
						"IUniswapV3SwapCallback": [
							2107
						],
						"MainBot": [
							863
						]
					},
					"id": 864,
					"license": "MITs",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:0"
						},
						{
							"absolutePath": "contracts/chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol",
							"file": "./chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 864,
							"sourceUnit": 1491,
							"src": "59:84:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
							"file": "./uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 864,
							"sourceUnit": 2072,
							"src": "144:69:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/uniswap/v3-periphery/contracts/interfaces/IUniswapV3Pool.sol",
							"file": "./uniswap/v3-periphery/contracts/interfaces/IUniswapV3Pool.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 864,
							"sourceUnit": 2094,
							"src": "214:72:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol",
							"file": "./uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 864,
							"sourceUnit": 1927,
							"src": "287:82:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol",
							"file": "./uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol",
							"id": 6,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 864,
							"sourceUnit": 1953,
							"src": "370:76:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol",
							"file": "./uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 864,
							"sourceUnit": 1911,
							"src": "447:85:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/aave/protocol-v2/contracts/interfaces/ILendingPool.sol",
							"file": "./aave/protocol-v2/contracts/interfaces/ILendingPool.sol",
							"id": 8,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 864,
							"sourceUnit": 1294,
							"src": "533:66:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/aave/protocol-v2/contracts/interfaces/ILendingPoolAddressesProvider.sol",
							"file": "./aave/protocol-v2/contracts/interfaces/ILendingPoolAddressesProvider.sol",
							"id": 9,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 864,
							"sourceUnit": 1445,
							"src": "600:83:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 35,
							"linearizedBaseContracts": [
								35
							],
							"name": "IERC20",
							"nameLocation": "695:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "a9059cbb",
									"id": 18,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "717:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "734:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "726:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "726:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "753:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "745:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 12,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "745:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "725:35:0"
									},
									"returnParameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "779:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 15,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "779:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "778:6:0"
									},
									"scope": 35,
									"src": "708:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 25,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "799:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "817:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "809:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "809:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:17:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "849:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 22,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "849:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "848:9:0"
									},
									"scope": 35,
									"src": "790:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "095ea7b3",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "872:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "888:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "880:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "880:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "905:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "897:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 28,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "897:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "879:33:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "931:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 31,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "931:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:6:0"
									},
									"scope": 35,
									"src": "863:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 864,
							"src": "685:254:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MainBot",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 863,
							"linearizedBaseContracts": [
								863
							],
							"name": "MainBot",
							"nameLocation": "950:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 37,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "979:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 863,
									"src": "964:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 36,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "964:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4ada218b",
									"id": 39,
									"mutability": "mutable",
									"name": "tradingEnabled",
									"nameLocation": "1003:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 863,
									"src": "991:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 38,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "991:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e037f889",
									"id": 41,
									"mutability": "mutable",
									"name": "initialDeposit",
									"nameLocation": "1038:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 863,
									"src": "1023:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 40,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1023:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1458d9d8",
									"id": 43,
									"mutability": "mutable",
									"name": "maticBalance",
									"nameLocation": "1073:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 863,
									"src": "1058:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 42,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1058:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "64aabb9e",
									"id": 45,
									"mutability": "mutable",
									"name": "stablecoinBalance",
									"nameLocation": "1106:17:0",
									"nodeType": "VariableDeclaration",
									"scope": 863,
									"src": "1091:32:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 44,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1091:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f974821a",
									"id": 47,
									"mutability": "mutable",
									"name": "profitThreshold",
									"nameLocation": "1144:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 863,
									"src": "1129:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 46,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1129:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c0fc247f",
									"id": 49,
									"mutability": "mutable",
									"name": "lossThreshold",
									"nameLocation": "1180:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 863,
									"src": "1165:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 48,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1165:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a30fb905",
									"id": 52,
									"mutability": "mutable",
									"name": "gasCostMultiplier",
									"nameLocation": "1214:17:0",
									"nodeType": "VariableDeclaration",
									"scope": 863,
									"src": "1199:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 50,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1199:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "33",
										"id": 51,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1234:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3_by_1",
											"typeString": "int_const 3"
										},
										"value": "3"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b3ce56a2",
									"id": 55,
									"mutability": "mutable",
									"name": "trailingStopLoss",
									"nameLocation": "1256:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 863,
									"src": "1241:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 53,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1241:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130",
										"id": 54,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1275:2:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10_by_1",
											"typeString": "int_const 10"
										},
										"value": "10"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1bf41362",
									"id": 57,
									"mutability": "mutable",
									"name": "nextLogTime",
									"nameLocation": "1298:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 863,
									"src": "1283:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 56,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1283:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6d546cdd",
									"id": 60,
									"mutability": "mutable",
									"name": "currentActivity",
									"nameLocation": "1329:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 863,
									"src": "1315:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 58,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1315:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "496e697469616c697a696e67",
										"id": 59,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1347:14:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_9536fd274b1da513899715f101ac7dd4165956a4323c575571d0d2c5d0ec45f9",
											"typeString": "literal_string \"Initializing\""
										},
										"value": "Initializing"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b6658d07",
									"id": 62,
									"mutability": "mutable",
									"name": "polToken",
									"nameLocation": "1383:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 863,
									"src": "1368:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 61,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1368:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a98ad46c",
									"id": 64,
									"mutability": "mutable",
									"name": "usdtToken",
									"nameLocation": "1412:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 863,
									"src": "1397:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 63,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1397:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "11eac855",
									"id": 66,
									"mutability": "mutable",
									"name": "usdcToken",
									"nameLocation": "1442:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 863,
									"src": "1427:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 65,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1427:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e189eb42",
									"id": 68,
									"mutability": "mutable",
									"name": "quickSwapRouter",
									"nameLocation": "1472:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 863,
									"src": "1457:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 67,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1457:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e0abca0b",
									"id": 70,
									"mutability": "mutable",
									"name": "priceFeedAddress",
									"nameLocation": "1508:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 863,
									"src": "1493:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 69,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1493:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "735de9f7",
									"id": 72,
									"mutability": "mutable",
									"name": "uniswapRouter",
									"nameLocation": "1545:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 863,
									"src": "1530:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 71,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1530:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e5047b30",
									"id": 74,
									"mutability": "mutable",
									"name": "uniswapPositionManager",
									"nameLocation": "1579:22:0",
									"nodeType": "VariableDeclaration",
									"scope": 863,
									"src": "1564:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 73,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1564:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "238f9b7a",
									"id": 76,
									"mutability": "mutable",
									"name": "aaveLendingPoolAddressesProvider",
									"nameLocation": "1622:32:0",
									"nodeType": "VariableDeclaration",
									"scope": 863,
									"src": "1607:47:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 75,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1607:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5e7ffa67",
									"id": 80,
									"mutability": "mutable",
									"name": "dexRouters",
									"nameLocation": "1695:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 863,
									"src": "1661:44:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
										"typeString": "mapping(string => address)"
									},
									"typeName": {
										"id": 79,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 77,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "1669:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										},
										"nodeType": "Mapping",
										"src": "1661:26:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
											"typeString": "mapping(string => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 78,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1679:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "030fdcd4f0c28c5dbcbc3f59aa8e2260c7f58ac45be2a2dca652999af89c33e0",
									"id": 92,
									"name": "TradeExecuted",
									"nameLocation": "1718:13:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1748:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "1732:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 81,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1732:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 84,
												"indexed": false,
												"mutability": "mutable",
												"name": "tradeType",
												"nameLocation": "1761:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "1754:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 83,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1754:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 86,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "1777:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "1772:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 85,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1772:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 88,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "1792:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "1787:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 87,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1787:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 90,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "1808:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "1803:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 89,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1803:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1731:83:0"
									},
									"src": "1712:103:0"
								},
								{
									"anonymous": false,
									"eventSelector": "84f286df5a264707bc5e32ccd269f47ddd90c52ff6d1753459246a4dded9b9e5",
									"id": 98,
									"name": "StopLossTriggered",
									"nameLocation": "1826:17:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"indexed": false,
												"mutability": "mutable",
												"name": "currentBalance",
												"nameLocation": "1849:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "1844:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 93,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1844:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 96,
												"indexed": false,
												"mutability": "mutable",
												"name": "threshold",
												"nameLocation": "1870:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "1865:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 95,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1865:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1843:37:0"
									},
									"src": "1820:61:0"
								},
								{
									"anonymous": false,
									"eventSelector": "6e001753e59c246317b708b3090a58d44776f3b9e74dcd996149a49758f4d487",
									"id": 102,
									"name": "CurrentActivity",
									"nameLocation": "1892:15:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 100,
												"indexed": false,
												"mutability": "mutable",
												"name": "activity",
												"nameLocation": "1915:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "1908:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 99,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:17:0"
									},
									"src": "1886:39:0"
								},
								{
									"anonymous": false,
									"eventSelector": "e75028ff36bb6473da3731a30e1aeeae9988e2415dba2c4e91e0357955065fba",
									"id": 106,
									"name": "TestEvent",
									"nameLocation": "1936:9:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"indexed": false,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "1953:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "1946:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 103,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1946:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1945:16:0"
									},
									"src": "1930:32:0"
								},
								{
									"body": {
										"id": 117,
										"nodeType": "Block",
										"src": "1989:73:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 112,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 109,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2007:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 110,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2011:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2007:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 111,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 37,
																"src": "2021:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2007:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420746865206f776e6572",
															"id": 113,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2028:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5",
																"typeString": "literal_string \"Not the owner\""
															},
															"value": "Not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5",
																"typeString": "literal_string \"Not the owner\""
															}
														],
														"id": 108,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1999:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1999:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 115,
												"nodeType": "ExpressionStatement",
												"src": "1999:45:0"
											},
											{
												"id": 116,
												"nodeType": "PlaceholderStatement",
												"src": "2054:1:0"
											}
										]
									},
									"id": 118,
									"name": "onlyOwner",
									"nameLocation": "1977:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1986:2:0"
									},
									"src": "1968:94:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 126,
										"nodeType": "Block",
										"src": "2098:74:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 121,
															"name": "tradingEnabled",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 39,
															"src": "2116:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54726164696e672069732064697361626c6564",
															"id": 122,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2132:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_946a67ad1237df6dd5563413d72a6b321f0b7e3cee2668a783fe11689a85e004",
																"typeString": "literal_string \"Trading is disabled\""
															},
															"value": "Trading is disabled"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_946a67ad1237df6dd5563413d72a6b321f0b7e3cee2668a783fe11689a85e004",
																"typeString": "literal_string \"Trading is disabled\""
															}
														],
														"id": 120,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2108:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2108:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2108:46:0"
											},
											{
												"id": 125,
												"nodeType": "PlaceholderStatement",
												"src": "2164:1:0"
											}
										]
									},
									"id": 127,
									"name": "whenTradingEnabled",
									"nameLocation": "2077:18:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2095:2:0"
									},
									"src": "2068:104:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 206,
										"nodeType": "Block",
										"src": "2472:625:0",
										"statements": [
											{
												"expression": {
													"id": 149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 146,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 37,
														"src": "2482:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 147,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2490:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 148,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2494:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2490:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2482:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 150,
												"nodeType": "ExpressionStatement",
												"src": "2482:18:0"
											},
											{
												"expression": {
													"id": 153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 151,
														"name": "polToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 62,
														"src": "2510:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 152,
														"name": "_polToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "2521:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2510:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 154,
												"nodeType": "ExpressionStatement",
												"src": "2510:20:0"
											},
											{
												"expression": {
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 155,
														"name": "usdtToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 64,
														"src": "2540:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 156,
														"name": "_usdtToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 131,
														"src": "2552:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2540:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 158,
												"nodeType": "ExpressionStatement",
												"src": "2540:22:0"
											},
											{
												"expression": {
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 159,
														"name": "usdcToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 66,
														"src": "2572:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 160,
														"name": "_usdcToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 133,
														"src": "2584:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2572:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 162,
												"nodeType": "ExpressionStatement",
												"src": "2572:22:0"
											},
											{
												"expression": {
													"id": 165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 163,
														"name": "quickSwapRouter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 68,
														"src": "2604:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 164,
														"name": "_quickSwapRouter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 135,
														"src": "2622:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2604:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 166,
												"nodeType": "ExpressionStatement",
												"src": "2604:34:0"
											},
											{
												"expression": {
													"id": 169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 167,
														"name": "priceFeedAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 70,
														"src": "2648:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 168,
														"name": "_priceFeedAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 137,
														"src": "2667:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2648:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 170,
												"nodeType": "ExpressionStatement",
												"src": "2648:36:0"
											},
											{
												"expression": {
													"id": 173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 171,
														"name": "uniswapRouter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 72,
														"src": "2694:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 172,
														"name": "_uniswapRouter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 139,
														"src": "2710:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2694:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 174,
												"nodeType": "ExpressionStatement",
												"src": "2694:30:0"
											},
											{
												"expression": {
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 175,
														"name": "uniswapPositionManager",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 74,
														"src": "2734:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 176,
														"name": "_uniswapPositionManager",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "2759:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2734:48:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 178,
												"nodeType": "ExpressionStatement",
												"src": "2734:48:0"
											},
											{
												"expression": {
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 179,
														"name": "aaveLendingPoolAddressesProvider",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 76,
														"src": "2792:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 180,
														"name": "_aaveLendingPoolAddressesProvider",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 143,
														"src": "2827:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2792:68:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "2792:68:0"
											},
											{
												"expression": {
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 183,
															"name": "dexRouters",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "2879:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
																"typeString": "mapping(string memory => address)"
															}
														},
														"id": 185,
														"indexExpression": {
															"hexValue": "517569636b53776170",
															"id": 184,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2890:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_594d562b07e5639baeda43f9427a7d73488025602cf4b19cc0e4cec02e1718f8",
																"typeString": "literal_string \"QuickSwap\""
															},
															"value": "QuickSwap"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2879:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 186,
														"name": "quickSwapRouter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 68,
														"src": "2905:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2879:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 188,
												"nodeType": "ExpressionStatement",
												"src": "2879:41:0"
											},
											{
												"expression": {
													"id": 191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 189,
														"name": "tradingEnabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 39,
														"src": "2930:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 190,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2947:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2930:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 192,
												"nodeType": "ExpressionStatement",
												"src": "2930:22:0"
											},
											{
												"expression": {
													"id": 195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 193,
														"name": "profitThreshold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 47,
														"src": "2962:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "313130",
														"id": 194,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2980:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_110_by_1",
															"typeString": "int_const 110"
														},
														"value": "110"
													},
													"src": "2962:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 196,
												"nodeType": "ExpressionStatement",
												"src": "2962:21:0"
											},
											{
												"expression": {
													"id": 199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 197,
														"name": "lossThreshold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 49,
														"src": "3007:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3835",
														"id": 198,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3023:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_85_by_1",
															"typeString": "int_const 85"
														},
														"value": "85"
													},
													"src": "3007:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 200,
												"nodeType": "ExpressionStatement",
												"src": "3007:18:0"
											},
											{
												"expression": {
													"id": 204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 201,
														"name": "nextLogTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 57,
														"src": "3061:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 202,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3075:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 203,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3081:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3075:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3061:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 205,
												"nodeType": "ExpressionStatement",
												"src": "3061:29:0"
											}
										]
									},
									"id": 207,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "_polToken",
												"nameLocation": "2207:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "2199:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2199:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "_usdtToken",
												"nameLocation": "2234:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "2226:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 130,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2226:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "_usdcToken",
												"nameLocation": "2262:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "2254:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2254:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "_quickSwapRouter",
												"nameLocation": "2290:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "2282:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2282:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "_priceFeedAddress",
												"nameLocation": "2324:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "2316:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2316:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "_uniswapRouter",
												"nameLocation": "2359:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "2351:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2351:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "_uniswapPositionManager",
												"nameLocation": "2391:23:0",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "2383:31:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2383:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "_aaveLendingPoolAddressesProvider",
												"nameLocation": "2432:33:0",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "2424:41:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2424:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2189:282:0"
									},
									"returnParameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2472:0:0"
									},
									"scope": 863,
									"src": "2178:919:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 218,
										"nodeType": "Block",
										"src": "3165:35:0",
										"statements": [
											{
												"expression": {
													"id": 216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 214,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 37,
														"src": "3175:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 215,
														"name": "controller",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 209,
														"src": "3183:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3175:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 217,
												"nodeType": "ExpressionStatement",
												"src": "3175:18:0"
											}
										]
									},
									"functionSelector": "92eefe9b",
									"id": 219,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 212,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 211,
												"name": "onlyOwner",
												"nameLocations": [
													"3155:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 118,
												"src": "3155:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3155:9:0"
										}
									],
									"name": "setController",
									"nameLocation": "3112:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "controller",
												"nameLocation": "3134:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3126:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3126:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3125:20:0"
									},
									"returnParameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3165:0:0"
									},
									"scope": 863,
									"src": "3103:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 247,
										"nodeType": "Block",
										"src": "3233:145:0",
										"statements": [
											{
												"expression": {
													"id": 225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 222,
														"name": "initialDeposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "3243:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"id": 223,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3261:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 224,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3265:5:0",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "3261:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3243:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 226,
												"nodeType": "ExpressionStatement",
												"src": "3243:27:0"
											},
											{
												"expression": {
													"id": 235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 227,
														"name": "maticBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 43,
														"src": "3280:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 234,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 231,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 228,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3297:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 229,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3301:5:0",
																		"memberName": "value",
																		"nodeType": "MemberAccess",
																		"src": "3297:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"hexValue": "3730",
																		"id": 230,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3309:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_70_by_1",
																			"typeString": "int_const 70"
																		},
																		"value": "70"
																	},
																	"src": "3297:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 232,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3296:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "313030",
															"id": 233,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3315:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														},
														"src": "3296:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3280:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 236,
												"nodeType": "ExpressionStatement",
												"src": "3280:38:0"
											},
											{
												"expression": {
													"id": 245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 237,
														"name": "stablecoinBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 45,
														"src": "3328:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 244,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 241,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 238,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3350:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 239,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3354:5:0",
																		"memberName": "value",
																		"nodeType": "MemberAccess",
																		"src": "3350:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"hexValue": "3330",
																		"id": 240,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3362:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_30_by_1",
																			"typeString": "int_const 30"
																		},
																		"value": "30"
																	},
																	"src": "3350:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 242,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3349:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "313030",
															"id": 243,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3368:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														},
														"src": "3349:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3328:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 246,
												"nodeType": "ExpressionStatement",
												"src": "3328:43:0"
											}
										]
									},
									"id": 248,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3213:2:0"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3233:0:0"
									},
									"scope": 863,
									"src": "3206:172:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 275,
										"nodeType": "Block",
										"src": "3455:294:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 255,
														"name": "selectedTimeframe",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 250,
														"src": "3469:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "393030",
														"id": 256,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3490:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_900_by_1",
															"typeString": "int_const 900"
														},
														"value": "900"
													},
													"src": "3469:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 261,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 259,
															"name": "selectedTimeframe",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 250,
															"src": "3566:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "3836343030",
															"id": 260,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3587:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_86400_by_1",
																"typeString": "int_const 86400"
															},
															"value": "86400"
														},
														"src": "3566:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 263,
													"nodeType": "IfStatement",
													"src": "3562:85:0",
													"trueBody": {
														"id": 262,
														"nodeType": "Block",
														"src": "3594:53:0",
														"statements": []
													}
												},
												"id": 264,
												"nodeType": "IfStatement",
												"src": "3465:182:0",
												"trueBody": {
													"id": 258,
													"nodeType": "Block",
													"src": "3495:61:0",
													"statements": []
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 266,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3675:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 267,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3679:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3675:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "54696d656672616d652061646a7573746564",
															"id": 268,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3687:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7638e8c8903c5fa61ebf97e2b2f70e2c3ee679b62e1042ef4e4240a60c0694d0",
																"typeString": "literal_string \"Timeframe adjusted\""
															},
															"value": "Timeframe adjusted"
														},
														{
															"id": 269,
															"name": "selectedTimeframe",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 250,
															"src": "3709:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 270,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3728:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 271,
																"name": "getPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 862,
																"src": "3731:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 272,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3731:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_stringliteral_7638e8c8903c5fa61ebf97e2b2f70e2c3ee679b62e1042ef4e4240a60c0694d0",
																"typeString": "literal_string \"Timeframe adjusted\""
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 265,
														"name": "TradeExecuted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 92,
														"src": "3661:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,string memory,uint256,uint256,uint256)"
														}
													},
													"id": 273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3661:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 274,
												"nodeType": "EmitStatement",
												"src": "3656:86:0"
											}
										]
									},
									"functionSelector": "869665e9",
									"id": 276,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 253,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 252,
												"name": "onlyOwner",
												"nameLocations": [
													"3445:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 118,
												"src": "3445:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3445:9:0"
										}
									],
									"name": "adjustTimeframe",
									"nameLocation": "3393:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "selectedTimeframe",
												"nameLocation": "3417:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "3409:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3409:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3408:27:0"
									},
									"returnParameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3455:0:0"
									},
									"scope": 863,
									"src": "3384:365:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 288,
										"nodeType": "Block",
										"src": "3809:65:0",
										"statements": [
											{
												"assignments": [
													282
												],
												"declarations": [
													{
														"constant": false,
														"id": 282,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "3827:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 288,
														"src": "3819:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 281,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3819:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 285,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 283,
														"name": "getPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 862,
														"src": "3835:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3835:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3819:26:0"
											},
											{
												"expression": {
													"id": 286,
													"name": "price",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 282,
													"src": "3862:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 280,
												"id": 287,
												"nodeType": "Return",
												"src": "3855:12:0"
											}
										]
									},
									"functionSelector": "8fc3047d",
									"id": 289,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkPrice",
									"nameLocation": "3764:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3774:2:0"
									},
									"returnParameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "3800:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3800:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3799:9:0"
									},
									"scope": 863,
									"src": "3755:119:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 308,
										"nodeType": "Block",
										"src": "3963:81:0",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 299,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3992:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 300,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3996:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3992:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 301,
															"name": "tradeType",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 291,
															"src": "4004:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 302,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 293,
															"src": "4015:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 303,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4023:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 304,
																"name": "getPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 862,
																"src": "4026:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 305,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4026:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 298,
														"name": "TradeExecuted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 92,
														"src": "3978:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,string memory,uint256,uint256,uint256)"
														}
													},
													"id": 306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3978:59:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 307,
												"nodeType": "EmitStatement",
												"src": "3973:64:0"
											}
										]
									},
									"functionSelector": "26c403ed",
									"id": 309,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 296,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 295,
												"name": "onlyOwner",
												"nameLocations": [
													"3953:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 118,
												"src": "3953:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3953:9:0"
										}
									],
									"name": "initiateTrade",
									"nameLocation": "3889:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "tradeType",
												"nameLocation": "3917:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "3903:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 290,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3903:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3936:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "3928:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 292,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3928:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3902:41:0"
									},
									"returnParameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3963:0:0"
									},
									"scope": 863,
									"src": "3880:164:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 324,
										"nodeType": "Block",
										"src": "4096:83:0",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 315,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4125:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 316,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4129:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4125:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "636f6e7665727420746f20504f4c",
															"id": 317,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4137:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f548031c271626835f64bb759a80cb1c7ee3cbb01af72f7702986b2084fa7f35",
																"typeString": "literal_string \"convert to POL\""
															},
															"value": "convert to POL"
														},
														{
															"hexValue": "30",
															"id": 318,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4155:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "30",
															"id": 319,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4158:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 320,
																"name": "getPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 862,
																"src": "4161:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 321,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4161:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_stringliteral_f548031c271626835f64bb759a80cb1c7ee3cbb01af72f7702986b2084fa7f35",
																"typeString": "literal_string \"convert to POL\""
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 314,
														"name": "TradeExecuted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 92,
														"src": "4111:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,string memory,uint256,uint256,uint256)"
														}
													},
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4111:61:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 323,
												"nodeType": "EmitStatement",
												"src": "4106:66:0"
											}
										]
									},
									"functionSelector": "9d8ef1e1",
									"id": 325,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 312,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 311,
												"name": "onlyOwner",
												"nameLocations": [
													"4086:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 118,
												"src": "4086:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4086:9:0"
										}
									],
									"name": "convertAllToPOL",
									"nameLocation": "4059:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4074:2:0"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4096:0:0"
									},
									"scope": 863,
									"src": "4050:129:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 379,
										"nodeType": "Block",
										"src": "4295:364:0",
										"statements": [
											{
												"assignments": [
													336
												],
												"declarations": [
													{
														"constant": false,
														"id": 336,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "4320:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 379,
														"src": "4305:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV3Pool_$2093",
															"typeString": "contract IUniswapV3Pool"
														},
														"typeName": {
															"id": 335,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 334,
																"name": "IUniswapV3Pool",
																"nameLocations": [
																	"4305:14:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2093,
																"src": "4305:14:0"
															},
															"referencedDeclaration": 2093,
															"src": "4305:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV3Pool_$2093",
																"typeString": "contract IUniswapV3Pool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 340,
												"initialValue": {
													"arguments": [
														{
															"id": 338,
															"name": "poolAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 329,
															"src": "4342:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 337,
														"name": "IUniswapV3Pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2093,
														"src": "4327:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IUniswapV3Pool_$2093_$",
															"typeString": "type(contract IUniswapV3Pool)"
														}
													},
													"id": 339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4327:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV3Pool_$2093",
														"typeString": "contract IUniswapV3Pool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4305:49:0"
											},
											{
												"assignments": [
													342,
													null,
													null,
													null,
													null,
													null,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 342,
														"mutability": "mutable",
														"name": "sqrtPriceX96",
														"nameLocation": "4373:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 379,
														"src": "4365:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														},
														"typeName": {
															"id": 341,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "4365:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"visibility": "internal"
													},
													null,
													null,
													null,
													null,
													null,
													null
												],
												"id": 346,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 343,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 336,
															"src": "4395:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV3Pool_$2093",
																"typeString": "contract IUniswapV3Pool"
															}
														},
														"id": 344,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4400:5:0",
														"memberName": "slot0",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2440,
														"src": "4395:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
															"typeString": "function () view external returns (uint160,int24,uint16,uint16,uint16,uint8,bool)"
														}
													},
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4395:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
														"typeString": "tuple(uint160,int24,uint16,uint16,uint16,uint8,bool)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4364:43:0"
											},
											{
												"assignments": [
													348
												],
												"declarations": [
													{
														"constant": false,
														"id": 348,
														"mutability": "mutable",
														"name": "liquidity",
														"nameLocation": "4425:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 379,
														"src": "4417:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 347,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4417:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 352,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 349,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 336,
															"src": "4437:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV3Pool_$2093",
																"typeString": "contract IUniswapV3Pool"
															}
														},
														"id": 350,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4442:9:0",
														"memberName": "liquidity",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2466,
														"src": "4437:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint128_$",
															"typeString": "function () view external returns (uint128)"
														}
													},
													"id": 351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4437:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4417:36:0"
											},
											{
												"assignments": [
													354
												],
												"declarations": [
													{
														"constant": false,
														"id": 354,
														"mutability": "mutable",
														"name": "amountOut",
														"nameLocation": "4471:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 379,
														"src": "4463:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 353,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4463:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 360,
												"initialValue": {
													"arguments": [
														{
															"id": 356,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 327,
															"src": "4502:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 357,
															"name": "sqrtPriceX96",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 342,
															"src": "4512:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														{
															"id": 358,
															"name": "liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 348,
															"src": "4526:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 355,
														"name": "calculateAmountOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 401,
														"src": "4483:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint160_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint160,uint256) pure returns (uint256)"
														}
													},
													"id": 359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4483:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4463:73:0"
											},
											{
												"assignments": [
													362
												],
												"declarations": [
													{
														"constant": false,
														"id": 362,
														"mutability": "mutable",
														"name": "slippage",
														"nameLocation": "4554:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 379,
														"src": "4546:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 361,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4546:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 369,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 365,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 363,
																	"name": "amountOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 354,
																	"src": "4566:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 364,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4578:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "4566:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 366,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4565:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 367,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4583:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "4565:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4546:40:0"
											},
											{
												"expression": {
													"id": 377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 370,
														"name": "sufficientLiquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 332,
														"src": "4596:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 375,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 371,
																	"name": "amountOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 354,
																	"src": "4619:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 374,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 372,
																		"name": "amountIn",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 327,
																		"src": "4632:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 373,
																		"name": "slippage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 362,
																		"src": "4643:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4632:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4619:32:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 376,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4618:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4596:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 378,
												"nodeType": "ExpressionStatement",
												"src": "4596:56:0"
											}
										]
									},
									"functionSelector": "3fb47a3b",
									"id": 380,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkLiquidity",
									"nameLocation": "4194:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "4217:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "4209:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4209:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "poolAddress",
												"nameLocation": "4235:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "4227:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 328,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4227:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4208:39:0"
									},
									"returnParameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "sufficientLiquidity",
												"nameLocation": "4274:19:0",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "4269:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 331,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4269:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4268:26:0"
									},
									"scope": 863,
									"src": "4185:474:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 400,
										"nodeType": "Block",
										"src": "4784:68:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 397,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 395,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 393,
																	"name": "amountIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 382,
																	"src": "4809:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 394,
																	"name": "sqrtPriceX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 384,
																	"src": "4820:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"src": "4809:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 396,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 386,
																"src": "4835:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4809:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 392,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4801:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 391,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4801:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4801:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 390,
												"id": 399,
												"nodeType": "Return",
												"src": "4794:51:0"
											}
										]
									},
									"id": 401,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateAmountOut",
									"nameLocation": "4674:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "4701:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "4693:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 381,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4693:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "4719:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "4711:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 383,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "4711:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "4741:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "4733:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 385,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4733:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4692:59:0"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "4775:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4775:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4774:9:0"
									},
									"scope": 863,
									"src": "4665:187:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 410,
										"nodeType": "Block",
										"src": "4903:39:0",
										"statements": [
											{
												"expression": {
													"id": 408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 406,
														"name": "tradingEnabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 39,
														"src": "4913:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 407,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4930:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "4913:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 409,
												"nodeType": "ExpressionStatement",
												"src": "4913:22:0"
											}
										]
									},
									"functionSelector": "17700f01",
									"id": 411,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 404,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 403,
												"name": "onlyOwner",
												"nameLocations": [
													"4893:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 118,
												"src": "4893:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4893:9:0"
										}
									],
									"name": "disableTrading",
									"nameLocation": "4867:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4881:2:0"
									},
									"returnParameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4903:0:0"
									},
									"scope": 863,
									"src": "4858:84:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 443,
										"nodeType": "Block",
										"src": "5013:185:0",
										"statements": [
											{
												"assignments": [
													419
												],
												"declarations": [
													{
														"constant": false,
														"id": 419,
														"mutability": "mutable",
														"name": "amountInWei",
														"nameLocation": "5031:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 443,
														"src": "5023:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 418,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5023:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 423,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 420,
														"name": "amountInGwei",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 413,
														"src": "5045:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"hexValue": "31",
														"id": 421,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5060:6:0",
														"subdenomination": "gwei",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000_by_1",
															"typeString": "int_const 1000000000"
														},
														"value": "1"
													},
													"src": "5045:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5023:43:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 431,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 427,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5092:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_MainBot_$863",
																				"typeString": "contract MainBot"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_MainBot_$863",
																				"typeString": "contract MainBot"
																			}
																		],
																		"id": 426,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5084:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 425,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5084:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 428,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5084:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 429,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5098:7:0",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5084:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 430,
																"name": "amountInWei",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 419,
																"src": "5109:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5084:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e6365",
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5122:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															},
															"value": "Insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															}
														],
														"id": 424,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5076:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5076:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 434,
												"nodeType": "ExpressionStatement",
												"src": "5076:69:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 440,
															"name": "amountInWei",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 419,
															"src": "5179:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 437,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 37,
																	"src": "5163:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 436,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5155:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 435,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5155:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5155:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 439,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5170:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "5155:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5155:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 442,
												"nodeType": "ExpressionStatement",
												"src": "5155:36:0"
											}
										]
									},
									"functionSelector": "457f3cb0",
									"id": 444,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 416,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 415,
												"name": "onlyOwner",
												"nameLocations": [
													"5003:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 118,
												"src": "5003:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5003:9:0"
										}
									],
									"name": "withdrawInGwei",
									"nameLocation": "4957:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "amountInGwei",
												"nameLocation": "4980:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "4972:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 412,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4972:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:22:0"
									},
									"returnParameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5013:0:0"
									},
									"scope": 863,
									"src": "4948:250:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 462,
										"nodeType": "Block",
										"src": "5239:68:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 457,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "5286:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_MainBot_$863",
																			"typeString": "contract MainBot"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_MainBot_$863",
																			"typeString": "contract MainBot"
																		}
																	],
																	"id": 456,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5278:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 455,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5278:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 458,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5278:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 459,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5292:7:0",
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "5278:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 451,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "5257:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 452,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5261:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "5257:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 450,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5249:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 449,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5249:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 453,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5249:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 454,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5269:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "5249:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5249:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 461,
												"nodeType": "ExpressionStatement",
												"src": "5249:51:0"
											}
										]
									},
									"functionSelector": "41c0e1b5",
									"id": 463,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 447,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 446,
												"name": "onlyOwner",
												"nameLocations": [
													"5229:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 118,
												"src": "5229:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5229:9:0"
										}
									],
									"name": "kill",
									"nameLocation": "5213:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 445,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5217:2:0"
									},
									"returnParameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5239:0:0"
									},
									"scope": 863,
									"src": "5204:103:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 485,
										"nodeType": "Block",
										"src": "5371:162:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 468,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "5385:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 469,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5391:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "5385:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 470,
														"name": "nextLogTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 57,
														"src": "5404:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5385:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 484,
												"nodeType": "IfStatement",
												"src": "5381:146:0",
												"trueBody": {
													"id": 483,
													"nodeType": "Block",
													"src": "5417:110:0",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 473,
																		"name": "currentActivity",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 60,
																		"src": "5452:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_storage",
																			"typeString": "string storage ref"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_storage",
																			"typeString": "string storage ref"
																		}
																	],
																	"id": 472,
																	"name": "CurrentActivity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 102,
																	"src": "5436:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory)"
																	}
																},
																"id": 474,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5436:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 475,
															"nodeType": "EmitStatement",
															"src": "5431:37:0"
														},
														{
															"expression": {
																"id": 481,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 476,
																	"name": "nextLogTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 57,
																	"src": "5482:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 480,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 477,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "5496:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 478,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5502:9:0",
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "5496:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "3630",
																		"id": 479,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5514:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_60_by_1",
																			"typeString": "int_const 60"
																		},
																		"value": "60"
																	},
																	"src": "5496:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5482:34:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 482,
															"nodeType": "ExpressionStatement",
															"src": "5482:34:0"
														}
													]
												}
											}
										]
									},
									"id": 486,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 466,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 465,
												"name": "whenTradingEnabled",
												"nameLocations": [
													"5352:18:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 127,
												"src": "5352:18:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5352:18:0"
										}
									],
									"name": "logCurrentActivity",
									"nameLocation": "5322:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5340:2:0"
									},
									"returnParameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5371:0:0"
									},
									"scope": 863,
									"src": "5313:220:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 573,
										"nodeType": "Block",
										"src": "5618:409:0",
										"statements": [
											{
												"assignments": [
													495
												],
												"declarations": [
													{
														"constant": false,
														"id": 495,
														"mutability": "mutable",
														"name": "gain",
														"nameLocation": "5636:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 573,
														"src": "5628:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 494,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5628:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 497,
												"initialValue": {
													"hexValue": "30",
													"id": 496,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5643:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5628:16:0"
											},
											{
												"assignments": [
													499
												],
												"declarations": [
													{
														"constant": false,
														"id": 499,
														"mutability": "mutable",
														"name": "loss",
														"nameLocation": "5662:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 573,
														"src": "5654:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 498,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5654:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 501,
												"initialValue": {
													"hexValue": "30",
													"id": 500,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5669:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5654:16:0"
											},
											{
												"body": {
													"id": 551,
													"nodeType": "Block",
													"src": "5724:197:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 521,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 513,
																		"name": "prices",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 489,
																		"src": "5742:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 515,
																	"indexExpression": {
																		"id": 514,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 503,
																		"src": "5749:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5742:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"baseExpression": {
																		"id": 516,
																		"name": "prices",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 489,
																		"src": "5754:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 520,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 519,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 517,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 503,
																			"src": "5761:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 518,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5765:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "5761:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5754:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5742:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 549,
																"nodeType": "Block",
																"src": "5843:68:0",
																"statements": [
																	{
																		"expression": {
																			"id": 547,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 536,
																				"name": "loss",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 499,
																				"src": "5861:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 545,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"baseExpression": {
																								"id": 537,
																								"name": "prices",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 489,
																								"src": "5870:6:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																									"typeString": "uint256[] memory"
																								}
																							},
																							"id": 541,
																							"indexExpression": {
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 540,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 538,
																									"name": "i",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 503,
																									"src": "5877:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "-",
																								"rightExpression": {
																									"hexValue": "31",
																									"id": 539,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "5881:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_1_by_1",
																										"typeString": "int_const 1"
																									},
																									"value": "1"
																								},
																								"src": "5877:5:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "5870:13:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"baseExpression": {
																								"id": 542,
																								"name": "prices",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 489,
																								"src": "5886:6:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																									"typeString": "uint256[] memory"
																								}
																							},
																							"id": 544,
																							"indexExpression": {
																								"id": 543,
																								"name": "i",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 503,
																								"src": "5893:1:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "5886:9:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "5870:25:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 546,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5869:27:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5861:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 548,
																		"nodeType": "ExpressionStatement",
																		"src": "5861:35:0"
																	}
																]
															},
															"id": 550,
															"nodeType": "IfStatement",
															"src": "5738:173:0",
															"trueBody": {
																"id": 535,
																"nodeType": "Block",
																"src": "5769:68:0",
																"statements": [
																	{
																		"expression": {
																			"id": 533,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 522,
																				"name": "gain",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 495,
																				"src": "5787:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 531,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"baseExpression": {
																								"id": 523,
																								"name": "prices",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 489,
																								"src": "5796:6:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																									"typeString": "uint256[] memory"
																								}
																							},
																							"id": 525,
																							"indexExpression": {
																								"id": 524,
																								"name": "i",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 503,
																								"src": "5803:1:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "5796:9:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"baseExpression": {
																								"id": 526,
																								"name": "prices",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 489,
																								"src": "5808:6:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																									"typeString": "uint256[] memory"
																								}
																							},
																							"id": 530,
																							"indexExpression": {
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 529,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 527,
																									"name": "i",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 503,
																									"src": "5815:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "-",
																								"rightExpression": {
																									"hexValue": "31",
																									"id": 528,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "5819:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_1_by_1",
																										"typeString": "int_const 1"
																									},
																									"value": "1"
																								},
																								"src": "5815:5:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "5808:13:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "5796:25:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 532,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5795:27:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5787:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 534,
																		"nodeType": "ExpressionStatement",
																		"src": "5787:35:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 506,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 503,
														"src": "5700:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 507,
															"name": "prices",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5704:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 508,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5711:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5704:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5700:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 552,
												"initializationExpression": {
													"assignments": [
														503
													],
													"declarations": [
														{
															"constant": false,
															"id": 503,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "5693:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 552,
															"src": "5685:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 502,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5685:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 505,
													"initialValue": {
														"hexValue": "31",
														"id": 504,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5697:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "5685:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "5719:3:0",
														"subExpression": {
															"id": 510,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 503,
															"src": "5719:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 512,
													"nodeType": "ExpressionStatement",
													"src": "5719:3:0"
												},
												"nodeType": "ForStatement",
												"src": "5680:241:0"
											},
											{
												"assignments": [
													554
												],
												"declarations": [
													{
														"constant": false,
														"id": 554,
														"mutability": "mutable",
														"name": "rs",
														"nameLocation": "5938:2:0",
														"nodeType": "VariableDeclaration",
														"scope": 573,
														"src": "5930:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 553,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5930:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 558,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 555,
														"name": "gain",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 495,
														"src": "5943:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 556,
														"name": "loss",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 499,
														"src": "5950:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5943:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5930:24:0"
											},
											{
												"assignments": [
													560
												],
												"declarations": [
													{
														"constant": false,
														"id": 560,
														"mutability": "mutable",
														"name": "rsi",
														"nameLocation": "5972:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 573,
														"src": "5964:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 559,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5964:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 570,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "313030",
														"id": 561,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5978:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 567,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "313030",
																	"id": 562,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5985:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 565,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "31",
																				"id": 563,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5992:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"id": 564,
																				"name": "rs",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 554,
																				"src": "5996:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5992:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 566,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "5991:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5985:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 568,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5984:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5978:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5964:36:0"
											},
											{
												"expression": {
													"id": 571,
													"name": "rsi",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 560,
													"src": "6017:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 493,
												"id": 572,
												"nodeType": "Return",
												"src": "6010:10:0"
											}
										]
									},
									"id": 574,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateRSI",
									"nameLocation": "5548:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "prices",
												"nameLocation": "5578:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "5561:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 487,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5561:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 488,
													"nodeType": "ArrayTypeName",
													"src": "5561:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5560:25:0"
									},
									"returnParameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "5609:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 491,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5609:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5608:9:0"
									},
									"scope": 863,
									"src": "5539:488:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 607,
										"nodeType": "Block",
										"src": "6112:183:0",
										"statements": [
											{
												"assignments": [
													583
												],
												"declarations": [
													{
														"constant": false,
														"id": 583,
														"mutability": "mutable",
														"name": "emaShort",
														"nameLocation": "6130:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 607,
														"src": "6122:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 582,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6122:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 588,
												"initialValue": {
													"arguments": [
														{
															"id": 585,
															"name": "prices",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 577,
															"src": "6154:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "3132",
															"id": 586,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6162:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_12_by_1",
																"typeString": "int_const 12"
															},
															"value": "12"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_rational_12_by_1",
																"typeString": "int_const 12"
															}
														],
														"id": 584,
														"name": "calculateEMA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "6141:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
														}
													},
													"id": 587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6141:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6122:43:0"
											},
											{
												"assignments": [
													590
												],
												"declarations": [
													{
														"constant": false,
														"id": 590,
														"mutability": "mutable",
														"name": "emaLong",
														"nameLocation": "6183:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 607,
														"src": "6175:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 589,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6175:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 595,
												"initialValue": {
													"arguments": [
														{
															"id": 592,
															"name": "prices",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 577,
															"src": "6206:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "3236",
															"id": 593,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6214:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_26_by_1",
																"typeString": "int_const 26"
															},
															"value": "26"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_rational_26_by_1",
																"typeString": "int_const 26"
															}
														],
														"id": 591,
														"name": "calculateEMA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "6193:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
														}
													},
													"id": 594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6193:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6175:42:0"
											},
											{
												"assignments": [
													597
												],
												"declarations": [
													{
														"constant": false,
														"id": 597,
														"mutability": "mutable",
														"name": "macd",
														"nameLocation": "6234:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 607,
														"src": "6227:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 596,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "6227:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 604,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 602,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 600,
																"name": "emaShort",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 583,
																"src": "6248:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 601,
																"name": "emaLong",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 590,
																"src": "6259:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6248:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "6241:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int256_$",
															"typeString": "type(int256)"
														},
														"typeName": {
															"id": 598,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "6241:6:0",
															"typeDescriptions": {}
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6241:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6227:40:0"
											},
											{
												"expression": {
													"id": 605,
													"name": "macd",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 597,
													"src": "6284:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 581,
												"id": 606,
												"nodeType": "Return",
												"src": "6277:11:0"
											}
										]
									},
									"id": 608,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateMACD",
									"nameLocation": "6042:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "prices",
												"nameLocation": "6073:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "6056:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 575,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6056:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 576,
													"nodeType": "ArrayTypeName",
													"src": "6056:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6055:25:0"
									},
									"returnParameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "6104:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 579,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "6104:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6103:8:0"
									},
									"scope": 863,
									"src": "6033:262:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 662,
										"nodeType": "Block",
										"src": "6396:229:0",
										"statements": [
											{
												"assignments": [
													619
												],
												"declarations": [
													{
														"constant": false,
														"id": 619,
														"mutability": "mutable",
														"name": "multiplier",
														"nameLocation": "6414:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 662,
														"src": "6406:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 618,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6406:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 626,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "32",
														"id": 620,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6427:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 623,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 621,
																	"name": "period",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "6432:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6441:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "6432:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 624,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6431:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6427:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6406:37:0"
											},
											{
												"assignments": [
													628
												],
												"declarations": [
													{
														"constant": false,
														"id": 628,
														"mutability": "mutable",
														"name": "ema",
														"nameLocation": "6461:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 662,
														"src": "6453:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 627,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6453:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 632,
												"initialValue": {
													"baseExpression": {
														"id": 629,
														"name": "prices",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 611,
														"src": "6467:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"id": 631,
													"indexExpression": {
														"hexValue": "30",
														"id": 630,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6474:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6467:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6453:23:0"
											},
											{
												"body": {
													"id": 658,
													"nodeType": "Block",
													"src": "6530:69:0",
													"statements": [
														{
															"expression": {
																"id": 656,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 644,
																	"name": "ema",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 628,
																	"src": "6544:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 655,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 652,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 649,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"baseExpression": {
																									"id": 645,
																									"name": "prices",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 611,
																									"src": "6552:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																										"typeString": "uint256[] memory"
																									}
																								},
																								"id": 647,
																								"indexExpression": {
																									"id": 646,
																									"name": "i",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 634,
																									"src": "6559:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "6552:9:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "-",
																							"rightExpression": {
																								"id": 648,
																								"name": "ema",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 628,
																								"src": "6564:3:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "6552:15:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 650,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "6551:17:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 651,
																					"name": "multiplier",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 619,
																					"src": "6571:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "6551:30:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 653,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "6550:32:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 654,
																		"name": "ema",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 628,
																		"src": "6585:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6550:38:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6544:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 657,
															"nodeType": "ExpressionStatement",
															"src": "6544:44:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 637,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 634,
														"src": "6506:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 638,
															"name": "prices",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "6510:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 639,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6517:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6510:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6506:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 659,
												"initializationExpression": {
													"assignments": [
														634
													],
													"declarations": [
														{
															"constant": false,
															"id": 634,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "6499:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 659,
															"src": "6491:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 633,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6491:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 636,
													"initialValue": {
														"hexValue": "31",
														"id": 635,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6503:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6491:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 642,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "6525:3:0",
														"subExpression": {
															"id": 641,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 634,
															"src": "6525:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 643,
													"nodeType": "ExpressionStatement",
													"src": "6525:3:0"
												},
												"nodeType": "ForStatement",
												"src": "6486:113:0"
											},
											{
												"expression": {
													"id": 660,
													"name": "ema",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 628,
													"src": "6615:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 617,
												"id": 661,
												"nodeType": "Return",
												"src": "6608:10:0"
											}
										]
									},
									"id": 663,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateEMA",
									"nameLocation": "6310:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "prices",
												"nameLocation": "6340:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "6323:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 609,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6323:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 610,
													"nodeType": "ArrayTypeName",
													"src": "6323:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "period",
												"nameLocation": "6356:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "6348:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 612,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6348:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6322:41:0"
									},
									"returnParameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "6387:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6387:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6386:9:0"
									},
									"scope": 863,
									"src": "6301:324:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 833,
										"nodeType": "Block",
										"src": "6727:653:0",
										"statements": [
											{
												"assignments": [
													677
												],
												"declarations": [
													{
														"constant": false,
														"id": 677,
														"mutability": "mutable",
														"name": "fibLevels",
														"nameLocation": "6754:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 833,
														"src": "6737:26:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 675,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6737:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 676,
															"nodeType": "ArrayTypeName",
															"src": "6737:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 683,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "3131",
															"id": 681,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6780:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_11_by_1",
																"typeString": "int_const 11"
															},
															"value": "11"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_11_by_1",
																"typeString": "int_const 11"
															}
														],
														"id": 680,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "6766:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 678,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6770:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 679,
															"nodeType": "ArrayTypeName",
															"src": "6770:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 682,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6766:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6737:46:0"
											},
											{
												"expression": {
													"id": 688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 684,
															"name": "fibLevels",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "6793:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 686,
														"indexExpression": {
															"hexValue": "30",
															"id": 685,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6803:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6793:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 687,
														"name": "low",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 667,
														"src": "6808:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6793:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 689,
												"nodeType": "ExpressionStatement",
												"src": "6793:18:0"
											},
											{
												"expression": {
													"id": 703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 690,
															"name": "fibLevels",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "6821:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 692,
														"indexExpression": {
															"hexValue": "31",
															"id": 691,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6831:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6821:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 702,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 693,
															"name": "low",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "6836:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 701,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 699,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 696,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 694,
																				"name": "high",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 665,
																				"src": "6843:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 695,
																				"name": "low",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 667,
																				"src": "6850:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6843:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 697,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "6842:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "323336",
																	"id": 698,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6857:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_236_by_1",
																		"typeString": "int_const 236"
																	},
																	"value": "236"
																},
																"src": "6842:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "31303030",
																"id": 700,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6863:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000_by_1",
																	"typeString": "int_const 1000"
																},
																"value": "1000"
															},
															"src": "6842:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6836:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6821:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 704,
												"nodeType": "ExpressionStatement",
												"src": "6821:46:0"
											},
											{
												"expression": {
													"id": 718,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 705,
															"name": "fibLevels",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "6877:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 707,
														"indexExpression": {
															"hexValue": "32",
															"id": 706,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6887:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6877:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 717,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 708,
															"name": "low",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "6892:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 716,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 714,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 711,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 709,
																				"name": "high",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 665,
																				"src": "6899:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 710,
																				"name": "low",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 667,
																				"src": "6906:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6899:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 712,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "6898:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "333832",
																	"id": 713,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6913:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_382_by_1",
																		"typeString": "int_const 382"
																	},
																	"value": "382"
																},
																"src": "6898:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "31303030",
																"id": 715,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6919:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000_by_1",
																	"typeString": "int_const 1000"
																},
																"value": "1000"
															},
															"src": "6898:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6892:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6877:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 719,
												"nodeType": "ExpressionStatement",
												"src": "6877:46:0"
											},
											{
												"expression": {
													"id": 733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 720,
															"name": "fibLevels",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "6933:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 722,
														"indexExpression": {
															"hexValue": "33",
															"id": 721,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6943:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															},
															"value": "3"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6933:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 732,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 723,
															"name": "low",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "6948:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 731,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 729,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 726,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 724,
																				"name": "high",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 665,
																				"src": "6955:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 725,
																				"name": "low",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 667,
																				"src": "6962:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6955:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 727,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "6954:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "353030",
																	"id": 728,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6969:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_500_by_1",
																		"typeString": "int_const 500"
																	},
																	"value": "500"
																},
																"src": "6954:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "31303030",
																"id": 730,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6975:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000_by_1",
																	"typeString": "int_const 1000"
																},
																"value": "1000"
															},
															"src": "6954:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6948:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6933:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 734,
												"nodeType": "ExpressionStatement",
												"src": "6933:46:0"
											},
											{
												"expression": {
													"id": 748,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 735,
															"name": "fibLevels",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "6989:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 737,
														"indexExpression": {
															"hexValue": "34",
															"id": 736,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6999:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4_by_1",
																"typeString": "int_const 4"
															},
															"value": "4"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6989:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 747,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 738,
															"name": "low",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "7004:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 746,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 744,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 741,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 739,
																				"name": "high",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 665,
																				"src": "7011:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 740,
																				"name": "low",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 667,
																				"src": "7018:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7011:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 742,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7010:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "363138",
																	"id": 743,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7025:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_618_by_1",
																		"typeString": "int_const 618"
																	},
																	"value": "618"
																},
																"src": "7010:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "31303030",
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7031:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000_by_1",
																	"typeString": "int_const 1000"
																},
																"value": "1000"
															},
															"src": "7010:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7004:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6989:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 749,
												"nodeType": "ExpressionStatement",
												"src": "6989:46:0"
											},
											{
												"expression": {
													"id": 763,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 750,
															"name": "fibLevels",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "7045:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 752,
														"indexExpression": {
															"hexValue": "35",
															"id": 751,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7055:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_5_by_1",
																"typeString": "int_const 5"
															},
															"value": "5"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7045:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 762,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 753,
															"name": "low",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "7060:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 761,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 759,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 756,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 754,
																				"name": "high",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 665,
																				"src": "7067:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 755,
																				"name": "low",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 667,
																				"src": "7074:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7067:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 757,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7066:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "373836",
																	"id": 758,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7081:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_786_by_1",
																		"typeString": "int_const 786"
																	},
																	"value": "786"
																},
																"src": "7066:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "31303030",
																"id": 760,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7087:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000_by_1",
																	"typeString": "int_const 1000"
																},
																"value": "1000"
															},
															"src": "7066:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7060:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7045:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 764,
												"nodeType": "ExpressionStatement",
												"src": "7045:46:0"
											},
											{
												"expression": {
													"id": 769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 765,
															"name": "fibLevels",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "7101:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 767,
														"indexExpression": {
															"hexValue": "36",
															"id": 766,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7111:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_6_by_1",
																"typeString": "int_const 6"
															},
															"value": "6"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7101:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 768,
														"name": "high",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 665,
														"src": "7116:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7101:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 770,
												"nodeType": "ExpressionStatement",
												"src": "7101:19:0"
											},
											{
												"expression": {
													"id": 784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 771,
															"name": "fibLevels",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "7130:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 773,
														"indexExpression": {
															"hexValue": "37",
															"id": 772,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7140:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_7_by_1",
																"typeString": "int_const 7"
															},
															"value": "7"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7130:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 783,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 774,
															"name": "high",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 665,
															"src": "7145:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 782,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 780,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 777,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 775,
																				"name": "high",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 665,
																				"src": "7153:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 776,
																				"name": "low",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 667,
																				"src": "7160:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7153:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 778,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7152:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "363138",
																	"id": 779,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7167:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_618_by_1",
																		"typeString": "int_const 618"
																	},
																	"value": "618"
																},
																"src": "7152:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "31303030",
																"id": 781,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7173:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000_by_1",
																	"typeString": "int_const 1000"
																},
																"value": "1000"
															},
															"src": "7152:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7145:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7130:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 785,
												"nodeType": "ExpressionStatement",
												"src": "7130:47:0"
											},
											{
												"expression": {
													"id": 799,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 786,
															"name": "fibLevels",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "7187:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 788,
														"indexExpression": {
															"hexValue": "38",
															"id": 787,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7197:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_8_by_1",
																"typeString": "int_const 8"
															},
															"value": "8"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7187:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 798,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 789,
															"name": "high",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 665,
															"src": "7202:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 797,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 795,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 792,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 790,
																				"name": "high",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 665,
																				"src": "7210:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 791,
																				"name": "low",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 667,
																				"src": "7217:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7210:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 793,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7209:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "313638",
																	"id": 794,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7224:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_168_by_1",
																		"typeString": "int_const 168"
																	},
																	"value": "168"
																},
																"src": "7209:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "313030",
																"id": 796,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7230:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															},
															"src": "7209:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7202:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7187:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 800,
												"nodeType": "ExpressionStatement",
												"src": "7187:46:0"
											},
											{
												"expression": {
													"id": 814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 801,
															"name": "fibLevels",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "7243:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 803,
														"indexExpression": {
															"hexValue": "39",
															"id": 802,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7253:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_9_by_1",
																"typeString": "int_const 9"
															},
															"value": "9"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7243:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 813,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 804,
															"name": "high",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 665,
															"src": "7258:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 812,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 810,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 807,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 805,
																				"name": "high",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 665,
																				"src": "7266:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 806,
																				"name": "low",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 667,
																				"src": "7273:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7266:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 808,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7265:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "363138",
																	"id": 809,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7280:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_618_by_1",
																		"typeString": "int_const 618"
																	},
																	"value": "618"
																},
																"src": "7265:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "31303030",
																"id": 811,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7286:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000_by_1",
																	"typeString": "int_const 1000"
																},
																"value": "1000"
															},
															"src": "7265:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7258:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7243:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 815,
												"nodeType": "ExpressionStatement",
												"src": "7243:47:0"
											},
											{
												"expression": {
													"id": 829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 816,
															"name": "fibLevels",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "7300:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 818,
														"indexExpression": {
															"hexValue": "3130",
															"id": 817,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7310:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7300:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 828,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 819,
															"name": "high",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 665,
															"src": "7316:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 827,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 825,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 822,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 820,
																				"name": "high",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 665,
																				"src": "7324:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 821,
																				"name": "low",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 667,
																				"src": "7331:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7324:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 823,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7323:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "323336",
																	"id": 824,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7338:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_236_by_1",
																		"typeString": "int_const 236"
																	},
																	"value": "236"
																},
																"src": "7323:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "313030",
																"id": 826,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7344:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															},
															"src": "7323:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7316:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7300:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 830,
												"nodeType": "ExpressionStatement",
												"src": "7300:47:0"
											},
											{
												"expression": {
													"id": 831,
													"name": "fibLevels",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 677,
													"src": "7364:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 672,
												"id": 832,
												"nodeType": "Return",
												"src": "7357:16:0"
											}
										]
									},
									"id": 834,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateFibonacci",
									"nameLocation": "6640:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "high",
												"nameLocation": "6667:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "6659:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 664,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6659:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "low",
												"nameLocation": "6681:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "6673:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 666,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6673:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6658:27:0"
									},
									"returnParameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "6709:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 669,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6709:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 670,
													"nodeType": "ArrayTypeName",
													"src": "6709:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6708:18:0"
									},
									"scope": 863,
									"src": "6631:749:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 861,
										"nodeType": "Block",
										"src": "7438:188:0",
										"statements": [
											{
												"assignments": [
													841
												],
												"declarations": [
													{
														"constant": false,
														"id": 841,
														"mutability": "mutable",
														"name": "priceFeed",
														"nameLocation": "7470:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 861,
														"src": "7448:31:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$1490",
															"typeString": "contract AggregatorV3Interface"
														},
														"typeName": {
															"id": 840,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 839,
																"name": "AggregatorV3Interface",
																"nameLocations": [
																	"7448:21:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1490,
																"src": "7448:21:0"
															},
															"referencedDeclaration": 1490,
															"src": "7448:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$1490",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 845,
												"initialValue": {
													"arguments": [
														{
															"id": 843,
															"name": "priceFeedAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 70,
															"src": "7504:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 842,
														"name": "AggregatorV3Interface",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1490,
														"src": "7482:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$1490_$",
															"typeString": "type(contract AggregatorV3Interface)"
														}
													},
													"id": 844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7482:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_AggregatorV3Interface_$1490",
														"typeString": "contract AggregatorV3Interface"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7448:73:0"
											},
											{
												"assignments": [
													null,
													847,
													null,
													null,
													null
												],
												"declarations": [
													null,
													{
														"constant": false,
														"id": 847,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "7538:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 861,
														"src": "7534:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 846,
															"name": "int",
															"nodeType": "ElementaryTypeName",
															"src": "7534:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													},
													null,
													null,
													null
												],
												"id": 851,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 848,
															"name": "priceFeed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 841,
															"src": "7550:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$1490",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"id": 849,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7560:15:0",
														"memberName": "latestRoundData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1489,
														"src": "7550:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
															"typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
														}
													},
													"id": 850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7550:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
														"typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7531:46:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 858,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 854,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 847,
																"src": "7602:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000_by_1",
																	"typeString": "int_const 10000000000"
																},
																"id": 857,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 855,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7610:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3130",
																	"id": 856,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7616:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "7610:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000_by_1",
																	"typeString": "int_const 10000000000"
																}
															},
															"src": "7602:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 853,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "7594:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 852,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7594:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 859,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7594:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 838,
												"id": 860,
												"nodeType": "Return",
												"src": "7587:32:0"
											}
										]
									},
									"id": 862,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPrice",
									"nameLocation": "7395:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7403:2:0"
									},
									"returnParameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "7429:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 836,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7429:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7428:9:0"
									},
									"scope": 863,
									"src": "7386:240:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 864,
							"src": "941:6687:0",
							"usedErrors": [],
							"usedEvents": [
								92,
								98,
								102,
								106
							]
						}
					],
					"src": "33:7596:0"
				},
				"id": 0
			},
			"contracts/aave/protocol-v2/contracts/interfaces/DataTypes.sol": {
				"ast": {
					"absolutePath": "contracts/aave/protocol-v2/contracts/interfaces/DataTypes.sol",
					"exportedSymbols": {
						"DataTypes": [
							914
						]
					},
					"id": 915,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 865,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "DataTypes",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 914,
							"linearizedBaseContracts": [
								914
							],
							"name": "DataTypes",
							"nameLocation": "66:9:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "DataTypes.ReserveConfigurationMap",
									"id": 868,
									"members": [
										{
											"constant": false,
											"id": 867,
											"mutability": "mutable",
											"name": "data",
											"nameLocation": "131:4:1",
											"nodeType": "VariableDeclaration",
											"scope": 868,
											"src": "123:12:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 866,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "123:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ReserveConfigurationMap",
									"nameLocation": "89:23:1",
									"nodeType": "StructDefinition",
									"scope": 914,
									"src": "82:60:1",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.UserConfigurationMap",
									"id": 871,
									"members": [
										{
											"constant": false,
											"id": 870,
											"mutability": "mutable",
											"name": "data",
											"nameLocation": "194:4:1",
											"nodeType": "VariableDeclaration",
											"scope": 871,
											"src": "186:12:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 869,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "186:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserConfigurationMap",
									"nameLocation": "155:20:1",
									"nodeType": "StructDefinition",
									"scope": 914,
									"src": "148:57:1",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.ReserveData",
									"id": 894,
									"members": [
										{
											"constant": false,
											"id": 873,
											"mutability": "mutable",
											"name": "totalLiquidity",
											"nameLocation": "248:14:1",
											"nodeType": "VariableDeclaration",
											"scope": 894,
											"src": "240:22:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 872,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "240:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 875,
											"mutability": "mutable",
											"name": "availableLiquidity",
											"nameLocation": "280:18:1",
											"nodeType": "VariableDeclaration",
											"scope": 894,
											"src": "272:26:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 874,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "272:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 877,
											"mutability": "mutable",
											"name": "totalStableDebt",
											"nameLocation": "316:15:1",
											"nodeType": "VariableDeclaration",
											"scope": 894,
											"src": "308:23:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 876,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "308:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 879,
											"mutability": "mutable",
											"name": "totalVariableDebt",
											"nameLocation": "349:17:1",
											"nodeType": "VariableDeclaration",
											"scope": 894,
											"src": "341:25:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 878,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "341:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 881,
											"mutability": "mutable",
											"name": "liquidityRate",
											"nameLocation": "384:13:1",
											"nodeType": "VariableDeclaration",
											"scope": 894,
											"src": "376:21:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 880,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "376:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 883,
											"mutability": "mutable",
											"name": "variableBorrowRate",
											"nameLocation": "415:18:1",
											"nodeType": "VariableDeclaration",
											"scope": 894,
											"src": "407:26:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 882,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "407:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 885,
											"mutability": "mutable",
											"name": "stableBorrowRate",
											"nameLocation": "451:16:1",
											"nodeType": "VariableDeclaration",
											"scope": 894,
											"src": "443:24:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 884,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "443:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 887,
											"mutability": "mutable",
											"name": "averageStableBorrowRate",
											"nameLocation": "485:23:1",
											"nodeType": "VariableDeclaration",
											"scope": 894,
											"src": "477:31:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 886,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "477:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 889,
											"mutability": "mutable",
											"name": "liquidityIndex",
											"nameLocation": "526:14:1",
											"nodeType": "VariableDeclaration",
											"scope": 894,
											"src": "518:22:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 888,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "518:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 891,
											"mutability": "mutable",
											"name": "variableBorrowIndex",
											"nameLocation": "558:19:1",
											"nodeType": "VariableDeclaration",
											"scope": 894,
											"src": "550:27:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 890,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "550:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 893,
											"mutability": "mutable",
											"name": "lastUpdateTimestamp",
											"nameLocation": "594:19:1",
											"nodeType": "VariableDeclaration",
											"scope": 894,
											"src": "587:26:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint40",
												"typeString": "uint40"
											},
											"typeName": {
												"id": 892,
												"name": "uint40",
												"nodeType": "ElementaryTypeName",
												"src": "587:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint40",
													"typeString": "uint40"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ReserveData",
									"nameLocation": "218:11:1",
									"nodeType": "StructDefinition",
									"scope": 914,
									"src": "211:409:1",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.UserReserveData",
									"id": 913,
									"members": [
										{
											"constant": false,
											"id": 896,
											"mutability": "mutable",
											"name": "currentATokenBalance",
											"nameLocation": "667:20:1",
											"nodeType": "VariableDeclaration",
											"scope": 913,
											"src": "659:28:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 895,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "659:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 898,
											"mutability": "mutable",
											"name": "currentStableDebt",
											"nameLocation": "705:17:1",
											"nodeType": "VariableDeclaration",
											"scope": 913,
											"src": "697:25:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 897,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "697:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 900,
											"mutability": "mutable",
											"name": "currentVariableDebt",
											"nameLocation": "740:19:1",
											"nodeType": "VariableDeclaration",
											"scope": 913,
											"src": "732:27:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 899,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "732:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 902,
											"mutability": "mutable",
											"name": "principalStableDebt",
											"nameLocation": "777:19:1",
											"nodeType": "VariableDeclaration",
											"scope": 913,
											"src": "769:27:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 901,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "769:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 904,
											"mutability": "mutable",
											"name": "scaledVariableDebt",
											"nameLocation": "814:18:1",
											"nodeType": "VariableDeclaration",
											"scope": 913,
											"src": "806:26:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 903,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "806:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 906,
											"mutability": "mutable",
											"name": "stableBorrowRate",
											"nameLocation": "850:16:1",
											"nodeType": "VariableDeclaration",
											"scope": 913,
											"src": "842:24:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 905,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "842:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 908,
											"mutability": "mutable",
											"name": "liquidityRate",
											"nameLocation": "884:13:1",
											"nodeType": "VariableDeclaration",
											"scope": 913,
											"src": "876:21:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 907,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "876:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 910,
											"mutability": "mutable",
											"name": "stableRateLastUpdated",
											"nameLocation": "914:21:1",
											"nodeType": "VariableDeclaration",
											"scope": 913,
											"src": "907:28:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint40",
												"typeString": "uint40"
											},
											"typeName": {
												"id": 909,
												"name": "uint40",
												"nodeType": "ElementaryTypeName",
												"src": "907:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint40",
													"typeString": "uint40"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 912,
											"mutability": "mutable",
											"name": "usageAsCollateralEnabled",
											"nameLocation": "950:24:1",
											"nodeType": "VariableDeclaration",
											"scope": 913,
											"src": "945:29:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 911,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "945:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserReserveData",
									"nameLocation": "633:15:1",
									"nodeType": "StructDefinition",
									"scope": 914,
									"src": "626:355:1",
									"visibility": "public"
								}
							],
							"scope": 915,
							"src": "58:925:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:952:1"
				},
				"id": 1
			},
			"contracts/aave/protocol-v2/contracts/interfaces/ILendingPool.sol": {
				"ast": {
					"absolutePath": "contracts/aave/protocol-v2/contracts/interfaces/ILendingPool.sol",
					"exportedSymbols": {
						"DataTypes": [
							914
						],
						"ILendingPool": [
							1293
						],
						"ILendingPoolAddressesProvider": [
							1444
						]
					},
					"id": 1294,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 916,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:2"
						},
						{
							"id": 917,
							"literals": [
								"experimental",
								"ABIEncoderV2"
							],
							"nodeType": "PragmaDirective",
							"src": "62:33:2"
						},
						{
							"absolutePath": "contracts/aave/protocol-v2/contracts/interfaces/ILendingPoolAddressesProvider.sol",
							"file": "./ILendingPoolAddressesProvider.sol",
							"id": 919,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1294,
							"sourceUnit": 1445,
							"src": "97:82:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 918,
										"name": "ILendingPoolAddressesProvider",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1444,
										"src": "105:29:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/aave/protocol-v2/contracts/interfaces/DataTypes.sol",
							"file": "./DataTypes.sol",
							"id": 921,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1294,
							"sourceUnit": 915,
							"src": "180:42:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 920,
										"name": "DataTypes",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 914,
										"src": "188:9:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ILendingPool",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1293,
							"linearizedBaseContracts": [
								1293
							],
							"name": "ILendingPool",
							"nameLocation": "234:12:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 922,
										"nodeType": "StructuredDocumentation",
										"src": "251:325:2",
										"text": " @dev Emitted on deposit()\n @param reserve The address of the underlying asset of the reserve\n @param user The address initiating the deposit\n @param onBehalfOf The beneficiary of the deposit, receiving the aTokens\n @param amount The amount deposited\n @param referral The referral code used*"
									},
									"eventSelector": "de6857219544bb5b7746f48ed30be6386fefc61b2f864cacf559893bf50fd951",
									"id": 934,
									"name": "Deposit",
									"nameLocation": "585:7:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 924,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "614:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 934,
												"src": "598:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 923,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "598:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 926,
												"indexed": false,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "635:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 934,
												"src": "627:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 925,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "627:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 928,
												"indexed": true,
												"mutability": "mutable",
												"name": "onBehalfOf",
												"nameLocation": "661:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 934,
												"src": "645:26:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 927,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 930,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "685:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 934,
												"src": "677:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 929,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "677:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 932,
												"indexed": true,
												"mutability": "mutable",
												"name": "referral",
												"nameLocation": "712:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 934,
												"src": "697:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 931,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "697:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "592:132:2"
									},
									"src": "579:146:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 935,
										"nodeType": "StructuredDocumentation",
										"src": "729:288:2",
										"text": " @dev Emitted on withdraw()\n @param reserve The address of the underlyng asset being withdrawn\n @param user The address initiating the withdrawal, owner of aTokens\n @param to Address that will receive the underlying\n @param amount The amount to be withdrawn*"
									},
									"eventSelector": "3115d1449a7b732c986cba18244e897a450f61e1bb8d589cd2e69e6c8924f9f7",
									"id": 945,
									"name": "Withdraw",
									"nameLocation": "1026:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 937,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "1051:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "1035:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 936,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1035:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 939,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1076:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "1060:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 938,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1060:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 941,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1098:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "1082:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 940,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 943,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1110:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "1102:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 942,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1034:83:2"
									},
									"src": "1020:98:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 946,
										"nodeType": "StructuredDocumentation",
										"src": "1122:605:2",
										"text": " @dev Emitted on borrow() and flashLoan() when debt needs to be opened\n @param reserve The address of the underlying asset being borrowed\n @param user The address of the user initiating the borrow(), receiving the funds on borrow() or just\n initiator of the transaction on flashLoan()\n @param onBehalfOf The address that will be getting the debt\n @param amount The amount borrowed out\n @param borrowRateMode The rate mode: 1 for Stable, 2 for Variable\n @param borrowRate The numeric rate at which the user has borrowed\n @param referral The referral code used*"
									},
									"eventSelector": "c6a898309e823ee50bac64e45ca8adba6690e99e7841c45d754e2a38e9019d9b",
									"id": 962,
									"name": "Borrow",
									"nameLocation": "1736:6:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 948,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "1764:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "1748:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 947,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1748:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 950,
												"indexed": false,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1785:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "1777:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 949,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1777:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 952,
												"indexed": true,
												"mutability": "mutable",
												"name": "onBehalfOf",
												"nameLocation": "1811:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "1795:26:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 951,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1795:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 954,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1835:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "1827:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 953,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 956,
												"indexed": false,
												"mutability": "mutable",
												"name": "borrowRateMode",
												"nameLocation": "1855:14:2",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "1847:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 955,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1847:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 958,
												"indexed": false,
												"mutability": "mutable",
												"name": "borrowRate",
												"nameLocation": "1883:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "1875:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 957,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1875:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 960,
												"indexed": true,
												"mutability": "mutable",
												"name": "referral",
												"nameLocation": "1914:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "1899:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 959,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1899:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1742:184:2"
									},
									"src": "1730:197:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 963,
										"nodeType": "StructuredDocumentation",
										"src": "1931:311:2",
										"text": " @dev Emitted on repay()\n @param reserve The address of the underlying asset of the reserve\n @param user The beneficiary of the repayment, getting his debt reduced\n @param repayer The address of the user initiating the repay(), providing the funds\n @param amount The amount repaid*"
									},
									"eventSelector": "4cdde6e09bb755c9a5589ebaec640bbfedff1362d4b255ebf8339782b9942faa",
									"id": 973,
									"name": "Repay",
									"nameLocation": "2251:5:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 972,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 965,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "2278:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "2262:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 964,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2262:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 967,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2307:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "2291:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 966,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 969,
												"indexed": true,
												"mutability": "mutable",
												"name": "repayer",
												"nameLocation": "2333:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "2317:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 968,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2317:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 971,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2354:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "2346:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 970,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2256:108:2"
									},
									"src": "2245:120:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 974,
										"nodeType": "StructuredDocumentation",
										"src": "2369:253:2",
										"text": " @dev Emitted on swapBorrowRateMode()\n @param reserve The address of the underlying asset of the reserve\n @param user The address of the user swapping his rate mode\n @param rateMode The rate mode that the user wants to swap to*"
									},
									"eventSelector": "ea368a40e9570069bb8e6511d668293ad2e1f03b0d982431fd223de9f3b70ca6",
									"id": 982,
									"name": "Swap",
									"nameLocation": "2631:4:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 976,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "2652:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "2636:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 975,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2636:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 978,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2677:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "2661:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 977,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2661:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 980,
												"indexed": false,
												"mutability": "mutable",
												"name": "rateMode",
												"nameLocation": "2691:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "2683:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 979,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2683:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2635:65:2"
									},
									"src": "2625:76:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 983,
										"nodeType": "StructuredDocumentation",
										"src": "2705:208:2",
										"text": " @dev Emitted on setUserUseReserveAsCollateral()\n @param reserve The address of the underlying asset of the reserve\n @param user The address of the user enabling the usage as collateral*"
									},
									"eventSelector": "00058a56ea94653cdf4f152d227ace22d4c00ad99e2a43f58cb7d9e3feb295f2",
									"id": 989,
									"name": "ReserveUsedAsCollateralEnabled",
									"nameLocation": "2922:30:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 985,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "2969:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 989,
												"src": "2953:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 984,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2953:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 987,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2994:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 989,
												"src": "2978:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 986,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2978:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2952:47:2"
									},
									"src": "2916:84:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 990,
										"nodeType": "StructuredDocumentation",
										"src": "3004:208:2",
										"text": " @dev Emitted on setUserUseReserveAsCollateral()\n @param reserve The address of the underlying asset of the reserve\n @param user The address of the user enabling the usage as collateral*"
									},
									"eventSelector": "44c58d81365b66dd4b1a7f36c25aa97b8c71c361ee4937adc1a00000227db5dd",
									"id": 996,
									"name": "ReserveUsedAsCollateralDisabled",
									"nameLocation": "3221:31:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 995,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 992,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "3269:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 996,
												"src": "3253:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 991,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3253:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 994,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "3294:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 996,
												"src": "3278:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 993,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3278:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3252:47:2"
									},
									"src": "3215:85:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 997,
										"nodeType": "StructuredDocumentation",
										"src": "3304:213:2",
										"text": " @dev Emitted on rebalanceStableBorrowRate()\n @param reserve The address of the underlying asset of the reserve\n @param user The address of the user for which the rebalance has been executed*"
									},
									"eventSelector": "9f439ae0c81e41a04d3fdfe07aed54e6a179fb0db15be7702eb66fa8ef6f5300",
									"id": 1003,
									"name": "RebalanceStableBorrowRate",
									"nameLocation": "3526:25:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1002,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 999,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "3568:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1003,
												"src": "3552:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 998,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3552:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1001,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "3593:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1003,
												"src": "3577:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1000,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3577:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3551:47:2"
									},
									"src": "3520:79:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1004,
										"nodeType": "StructuredDocumentation",
										"src": "3603:370:2",
										"text": " @dev Emitted on flashLoan()\n @param target The address of the flash loan receiver contract\n @param initiator The address initiating the flash loan\n @param asset The address of the asset being flash borrowed\n @param amount The amount flash borrowed\n @param premium The fee flash borrowed\n @param referralCode The referral code used*"
									},
									"eventSelector": "631042c832b07452973831137f2d73e395028b44b250dedc5abb0ee766e168ac",
									"id": 1018,
									"name": "FlashLoan",
									"nameLocation": "3982:9:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1017,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1006,
												"indexed": true,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4013:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "3997:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1005,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3997:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1008,
												"indexed": true,
												"mutability": "mutable",
												"name": "initiator",
												"nameLocation": "4041:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "4025:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1007,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4025:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1010,
												"indexed": true,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "4072:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "4056:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1009,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4056:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1012,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4091:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "4083:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1011,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4083:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1014,
												"indexed": false,
												"mutability": "mutable",
												"name": "premium",
												"nameLocation": "4111:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "4103:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1013,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4103:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1016,
												"indexed": false,
												"mutability": "mutable",
												"name": "referralCode",
												"nameLocation": "4131:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "4124:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1015,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4124:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3991:156:2"
									},
									"src": "3976:172:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1019,
										"nodeType": "StructuredDocumentation",
										"src": "4152:56:2",
										"text": " @dev Emitted when the pause is triggered."
									},
									"eventSelector": "9e87fac88ff661f02d44f95383c817fece4bce600a3dab7a54406878b965e752",
									"id": 1021,
									"name": "Paused",
									"nameLocation": "4217:6:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1020,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4223:2:2"
									},
									"src": "4211:15:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1022,
										"nodeType": "StructuredDocumentation",
										"src": "4230:53:2",
										"text": " @dev Emitted when the pause is lifted."
									},
									"eventSelector": "a45f47fdea8a1efdd9029a5691c7f759c32b7c698632b563573e155625d16933",
									"id": 1024,
									"name": "Unpaused",
									"nameLocation": "4292:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4300:2:2"
									},
									"src": "4286:17:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1025,
										"nodeType": "StructuredDocumentation",
										"src": "4307:928:2",
										"text": " @dev Emitted when a borrower is liquidated. This event is emitted by the LendingPool via\n LendingPoolCollateral manager using a DELEGATECALL\n This allows to have the events in the generated ABI for LendingPool.\n @param collateralAsset The address of the underlying asset used as collateral, to receive as result of the liquidation\n @param debtAsset The address of the underlying borrowed asset to be repaid with the liquidation\n @param user The address of the borrower getting liquidated\n @param debtToCover The debt amount of borrowed `asset` the liquidator wants to cover\n @param liquidatedCollateralAmount The amount of collateral received by the liiquidator\n @param liquidator The address of the liquidator\n @param receiveAToken `true` if the liquidators wants to receive the collateral aTokens, `false` if he wants\n to receive the underlying collateral asset directly*"
									},
									"eventSelector": "e413a321e8681d831f4dbccbca790d2952b56f977908e45be37335533e005286",
									"id": 1041,
									"name": "LiquidationCall",
									"nameLocation": "5244:15:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1040,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1027,
												"indexed": true,
												"mutability": "mutable",
												"name": "collateralAsset",
												"nameLocation": "5281:15:2",
												"nodeType": "VariableDeclaration",
												"scope": 1041,
												"src": "5265:31:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1026,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5265:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1029,
												"indexed": true,
												"mutability": "mutable",
												"name": "debtAsset",
												"nameLocation": "5318:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 1041,
												"src": "5302:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1028,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5302:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1031,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "5349:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1041,
												"src": "5333:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1030,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5333:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1033,
												"indexed": false,
												"mutability": "mutable",
												"name": "debtToCover",
												"nameLocation": "5367:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 1041,
												"src": "5359:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1032,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5359:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1035,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidatedCollateralAmount",
												"nameLocation": "5392:26:2",
												"nodeType": "VariableDeclaration",
												"scope": 1041,
												"src": "5384:34:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1034,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5384:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1037,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidator",
												"nameLocation": "5432:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 1041,
												"src": "5424:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1036,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5424:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1039,
												"indexed": false,
												"mutability": "mutable",
												"name": "receiveAToken",
												"nameLocation": "5453:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 1041,
												"src": "5448:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1038,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5448:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5259:211:2"
									},
									"src": "5238:233:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1042,
										"nodeType": "StructuredDocumentation",
										"src": "5475:722:2",
										"text": " @dev Emitted when the state of a reserve is updated. NOTE: This event is actually declared\n in the ReserveLogic library and emitted in the updateInterestRates() function. Since the function is internal,\n the event will actually be fired by the LendingPool contract. The event is therefore replicated here so it\n gets added to the LendingPool ABI\n @param reserve The address of the underlying asset of the reserve\n @param liquidityRate The new liquidity rate\n @param stableBorrowRate The new stable borrow rate\n @param variableBorrowRate The new variable borrow rate\n @param liquidityIndex The new liquidity index\n @param variableBorrowIndex The new variable borrow index*"
									},
									"eventSelector": "804c9b842b2748a22bb64b345453a3de7ca54a6ca45ce00d415894979e22897a",
									"id": 1056,
									"name": "ReserveDataUpdated",
									"nameLocation": "6206:18:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1044,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "6246:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1056,
												"src": "6230:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1043,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6230:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1046,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidityRate",
												"nameLocation": "6267:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 1056,
												"src": "6259:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1045,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6259:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1048,
												"indexed": false,
												"mutability": "mutable",
												"name": "stableBorrowRate",
												"nameLocation": "6294:16:2",
												"nodeType": "VariableDeclaration",
												"scope": 1056,
												"src": "6286:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1047,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6286:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1050,
												"indexed": false,
												"mutability": "mutable",
												"name": "variableBorrowRate",
												"nameLocation": "6324:18:2",
												"nodeType": "VariableDeclaration",
												"scope": 1056,
												"src": "6316:26:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1049,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6316:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1052,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidityIndex",
												"nameLocation": "6356:14:2",
												"nodeType": "VariableDeclaration",
												"scope": 1056,
												"src": "6348:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1051,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6348:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1054,
												"indexed": false,
												"mutability": "mutable",
												"name": "variableBorrowIndex",
												"nameLocation": "6384:19:2",
												"nodeType": "VariableDeclaration",
												"scope": 1056,
												"src": "6376:27:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1053,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6376:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6224:183:2"
									},
									"src": "6200:208:2"
								},
								{
									"documentation": {
										"id": 1057,
										"nodeType": "StructuredDocumentation",
										"src": "6412:712:2",
										"text": " @dev Deposits an `amount` of underlying asset into the reserve, receiving in return overlying aTokens.\n - E.g. User deposits 100 USDC and gets in return 100 aUSDC\n @param asset The address of the underlying asset to deposit\n @param amount The amount to be deposited\n @param onBehalfOf The address that will receive the aTokens, same as msg.sender if the user\n   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens\n   is a different wallet\n @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   0 if the action is executed directly by the user, without any middle-man*"
									},
									"functionSelector": "e8eda9df",
									"id": 1068,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "7136:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "7157:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "7149:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1058,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7149:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7176:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "7168:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1060,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7168:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1063,
												"mutability": "mutable",
												"name": "onBehalfOf",
												"nameLocation": "7196:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "7188:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1062,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7188:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1065,
												"mutability": "mutable",
												"name": "referralCode",
												"nameLocation": "7219:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "7212:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1064,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "7212:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7143:92:2"
									},
									"returnParameters": {
										"id": 1067,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7244:0:2"
									},
									"scope": 1293,
									"src": "7127:118:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1069,
										"nodeType": "StructuredDocumentation",
										"src": "7249:665:2",
										"text": " @dev Withdraws an `amount` of underlying asset from the reserve, burning the equivalent aTokens owned\n E.g. User has 100 aUSDC, calls withdraw() and receives 100 USDC, burning the 100 aUSDC\n @param asset The address of the underlying asset to withdraw\n @param amount The underlying amount to be withdrawn\n   - Send the value type(uint256).max in order to withdraw the whole aToken balance\n @param to Address that will receive the underlying, same as msg.sender if the user\n   wants to receive it on his own wallet, or a different address if the beneficiary is a\n   different wallet\n @return The final amount withdrawn*"
									},
									"functionSelector": "69328dec",
									"id": 1080,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "7926:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1076,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "7948:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "7940:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1070,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7940:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7967:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "7959:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1072,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7959:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1075,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7987:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "7979:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1074,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7979:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7934:59:2"
									},
									"returnParameters": {
										"id": 1079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1078,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "8012:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1077,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8012:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8011:9:2"
									},
									"scope": 1293,
									"src": "7917:104:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1081,
										"nodeType": "StructuredDocumentation",
										"src": "8025:1189:2",
										"text": " @dev Allows users to borrow a specific `amount` of the reserve underlying asset, provided that the borrower\n already deposited enough collateral, or he was given enough allowance by a credit delegator on the\n corresponding debt token (StableDebtToken or VariableDebtToken)\n - E.g. User borrows 100 USDC passing as `onBehalfOf` his own address, receiving the 100 USDC in his wallet\n   and 100 stable/variable debt tokens, depending on the `interestRateMode`\n @param asset The address of the underlying asset to borrow\n @param amount The amount to be borrowed\n @param interestRateMode The interest rate mode at which the user wants to borrow: 1 for Stable, 2 for Variable\n @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   0 if the action is executed directly by the user, without any middle-man\n @param onBehalfOf Address of the user who will receive the debt. Should be the address of the borrower itself\n calling the function if he wants to borrow against his own collateral, or the address of the credit delegator\n if he has been given credit delegation allowance*"
									},
									"functionSelector": "a415bcad",
									"id": 1094,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "borrow",
									"nameLocation": "9226:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "9246:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "9238:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1082,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9238:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9265:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "9257:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1084,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9257:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "interestRateMode",
												"nameLocation": "9285:16:2",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "9277:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1086,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9277:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "referralCode",
												"nameLocation": "9314:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "9307:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1088,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "9307:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "onBehalfOf",
												"nameLocation": "9340:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "9332:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1090,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9332:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9232:122:2"
									},
									"returnParameters": {
										"id": 1093,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9363:0:2"
									},
									"scope": 1293,
									"src": "9217:147:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1095,
										"nodeType": "StructuredDocumentation",
										"src": "9368:862:2",
										"text": " @notice Repays a borrowed `amount` on a specific reserve, burning the equivalent debt tokens owned\n - E.g. User repays 100 USDC, burning 100 variable/stable debt tokens of the `onBehalfOf` address\n @param asset The address of the borrowed underlying asset previously borrowed\n @param amount The amount to repay\n - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\n @param rateMode The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\n @param onBehalfOf Address of the user who will get his debt reduced/removed. Should be the address of the\n user calling the function if he wants to reduce/remove his own debt, or the address of any other\n other borrower whose debt should be removed\n @return The final amount repaid*"
									},
									"functionSelector": "573ade81",
									"id": 1108,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "repay",
									"nameLocation": "10242:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1097,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "10261:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1108,
												"src": "10253:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1096,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10253:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1099,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10280:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1108,
												"src": "10272:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1098,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10272:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1101,
												"mutability": "mutable",
												"name": "rateMode",
												"nameLocation": "10300:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1108,
												"src": "10292:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1100,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10292:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1103,
												"mutability": "mutable",
												"name": "onBehalfOf",
												"nameLocation": "10322:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 1108,
												"src": "10314:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10314:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10247:89:2"
									},
									"returnParameters": {
										"id": 1107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1106,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1108,
												"src": "10355:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1105,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10355:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10354:9:2"
									},
									"scope": 1293,
									"src": "10233:131:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1109,
										"nodeType": "StructuredDocumentation",
										"src": "10368:231:2",
										"text": " @dev Allows a borrower to swap his debt between stable and variable mode, or viceversa\n @param asset The address of the underlying asset borrowed\n @param rateMode The rate mode that the user wants to swap to*"
									},
									"functionSelector": "94ba89a2",
									"id": 1116,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapBorrowRateMode",
									"nameLocation": "10611:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "10638:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "10630:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10630:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "rateMode",
												"nameLocation": "10653:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "10645:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10645:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10629:33:2"
									},
									"returnParameters": {
										"id": 1115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10671:0:2"
									},
									"scope": 1293,
									"src": "10602:70:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1117,
										"nodeType": "StructuredDocumentation",
										"src": "10676:553:2",
										"text": " @dev Rebalances the stable interest rate of a user to the current stable rate defined on the reserve.\n - Users can be rebalanced if the following conditions are satisfied:\n     1. Usage ratio is above 95%\n     2. the current deposit APY is below REBALANCE_UP_THRESHOLD * maxVariableBorrowRate, which means that too much has been\n        borrowed at a stable rate and depositors are not earning enough\n @param asset The address of the underlying asset borrowed\n @param user The address of the user to be rebalanced*"
									},
									"functionSelector": "cd112382",
									"id": 1124,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "rebalanceStableBorrowRate",
									"nameLocation": "11241:25:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1119,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "11275:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1124,
												"src": "11267:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1118,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11267:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1121,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "11290:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1124,
												"src": "11282:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11282:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11266:29:2"
									},
									"returnParameters": {
										"id": 1123,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11304:0:2"
									},
									"scope": 1293,
									"src": "11232:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1125,
										"nodeType": "StructuredDocumentation",
										"src": "11309:266:2",
										"text": " @dev Allows depositors to enable/disable a specific deposited asset as collateral\n @param asset The address of the underlying asset deposited\n @param useAsCollateral `true` if the user wants to use the deposit as collateral, `false` otherwise*"
									},
									"functionSelector": "5a3b74b9",
									"id": 1132,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setUserUseReserveAsCollateral",
									"nameLocation": "11587:29:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1127,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "11625:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "11617:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11617:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1129,
												"mutability": "mutable",
												"name": "useAsCollateral",
												"nameLocation": "11637:15:2",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "11632:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1128,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11632:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11616:37:2"
									},
									"returnParameters": {
										"id": 1131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11662:0:2"
									},
									"scope": 1293,
									"src": "11578:85:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1133,
										"nodeType": "StructuredDocumentation",
										"src": "11667:860:2",
										"text": " @dev Function to liquidate a non-healthy position collateral-wise, with Health Factor below 1\n - The caller (liquidator) covers `debtToCover` amount of debt of the user getting liquidated, and receives\n   a proportionally amount of the `collateralAsset` plus a bonus to cover market risk\n @param collateralAsset The address of the underlying asset used as collateral, to receive as result of the liquidation\n @param debtAsset The address of the underlying borrowed asset to be repaid with the liquidation\n @param user The address of the borrower getting liquidated\n @param debtToCover The debt amount of borrowed `asset` the liquidator wants to cover\n @param receiveAToken `true` if the liquidators wants to receive the collateral aTokens, `false` if he wants\n to receive the underlying collateral asset directly*"
									},
									"functionSelector": "00a718a9",
									"id": 1146,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "liquidationCall",
									"nameLocation": "12539:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "collateralAsset",
												"nameLocation": "12568:15:2",
												"nodeType": "VariableDeclaration",
												"scope": 1146,
												"src": "12560:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12560:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "debtAsset",
												"nameLocation": "12597:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 1146,
												"src": "12589:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12589:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1139,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "12620:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1146,
												"src": "12612:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12612:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1141,
												"mutability": "mutable",
												"name": "debtToCover",
												"nameLocation": "12638:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 1146,
												"src": "12630:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1140,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12630:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "receiveAToken",
												"nameLocation": "12660:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 1146,
												"src": "12655:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1142,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12655:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12554:123:2"
									},
									"returnParameters": {
										"id": 1145,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12686:0:2"
									},
									"scope": 1293,
									"src": "12530:157:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1147,
										"nodeType": "StructuredDocumentation",
										"src": "12691:1376:2",
										"text": " @dev Allows smartcontracts to access the liquidity of the pool within one transaction,\n as long as the amount taken plus a fee is returned.\n IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept into consideration.\n For further details please visit https://developers.aave.com\n @param receiverAddress The address of the contract receiving the funds, implementing the IFlashLoanReceiver interface\n @param assets The addresses of the assets being flash-borrowed\n @param amounts The amounts amounts being flash-borrowed\n @param modes Types of the debt to open if the flash loan is not returned:\n   0 -> Don't open any debt, just revert if funds can't be transferred from the receiver\n   1 -> Open debt at stable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\n   2 -> Open debt at variable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\n @param onBehalfOf The address  that will receive the debt in the case of using on `modes` 1 or 2\n @param params Variadic packed params to pass to the receiver as extra information\n @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   0 if the action is executed directly by the user, without any middle-man*"
									},
									"functionSelector": "ab9c4b5d",
									"id": 1167,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "flashLoan",
									"nameLocation": "14079:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1149,
												"mutability": "mutable",
												"name": "receiverAddress",
												"nameLocation": "14102:15:2",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "14094:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1148,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14094:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1152,
												"mutability": "mutable",
												"name": "assets",
												"nameLocation": "14142:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "14123:25:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1150,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "14123:7:2",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1151,
													"nodeType": "ArrayTypeName",
													"src": "14123:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1155,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "14173:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "14154:26:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1153,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "14154:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1154,
													"nodeType": "ArrayTypeName",
													"src": "14154:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1158,
												"mutability": "mutable",
												"name": "modes",
												"nameLocation": "14205:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "14186:24:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1156,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "14186:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1157,
													"nodeType": "ArrayTypeName",
													"src": "14186:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1160,
												"mutability": "mutable",
												"name": "onBehalfOf",
												"nameLocation": "14224:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "14216:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14216:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1162,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "14255:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "14240:21:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1161,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14240:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1164,
												"mutability": "mutable",
												"name": "referralCode",
												"nameLocation": "14274:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "14267:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1163,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "14267:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14088:202:2"
									},
									"returnParameters": {
										"id": 1166,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14299:0:2"
									},
									"scope": 1293,
									"src": "14070:230:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1168,
										"nodeType": "StructuredDocumentation",
										"src": "14304:507:2",
										"text": " @dev Returns the user account data across all the reserves\n @param user The address of the user\n @return totalCollateralETH the total collateral in ETH of the user\n @return totalDebtETH the total debt in ETH of the user\n @return availableBorrowsETH the borrowing power left of the user\n @return currentLiquidationThreshold the liquidation threshold of the user\n @return ltv the loan to value of the user\n @return healthFactor the current health factor of the user*"
									},
									"functionSelector": "bf92857c",
									"id": 1185,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getUserAccountData",
									"nameLocation": "14823:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1170,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "14850:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1185,
												"src": "14842:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14842:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14841:14:2"
									},
									"returnParameters": {
										"id": 1184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1173,
												"mutability": "mutable",
												"name": "totalCollateralETH",
												"nameLocation": "14906:18:2",
												"nodeType": "VariableDeclaration",
												"scope": 1185,
												"src": "14898:26:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14898:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1175,
												"mutability": "mutable",
												"name": "totalDebtETH",
												"nameLocation": "14940:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 1185,
												"src": "14932:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14932:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "availableBorrowsETH",
												"nameLocation": "14968:19:2",
												"nodeType": "VariableDeclaration",
												"scope": 1185,
												"src": "14960:27:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14960:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "currentLiquidationThreshold",
												"nameLocation": "15003:27:2",
												"nodeType": "VariableDeclaration",
												"scope": 1185,
												"src": "14995:35:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14995:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1181,
												"mutability": "mutable",
												"name": "ltv",
												"nameLocation": "15046:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1185,
												"src": "15038:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1180,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15038:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1183,
												"mutability": "mutable",
												"name": "healthFactor",
												"nameLocation": "15065:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 1185,
												"src": "15057:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15057:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14890:193:2"
									},
									"scope": 1293,
									"src": "14814:270:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7a708e92",
									"id": 1198,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initReserve",
									"nameLocation": "15097:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1187,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "15122:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1198,
												"src": "15114:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1186,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15114:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1189,
												"mutability": "mutable",
												"name": "aTokenAddress",
												"nameLocation": "15143:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 1198,
												"src": "15135:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1188,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15135:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1191,
												"mutability": "mutable",
												"name": "stableDebtAddress",
												"nameLocation": "15170:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 1198,
												"src": "15162:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1190,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15162:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1193,
												"mutability": "mutable",
												"name": "variableDebtAddress",
												"nameLocation": "15201:19:2",
												"nodeType": "VariableDeclaration",
												"scope": 1198,
												"src": "15193:27:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15193:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1195,
												"mutability": "mutable",
												"name": "interestRateStrategyAddress",
												"nameLocation": "15234:27:2",
												"nodeType": "VariableDeclaration",
												"scope": 1198,
												"src": "15226:35:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15226:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15108:157:2"
									},
									"returnParameters": {
										"id": 1197,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15274:0:2"
									},
									"scope": 1293,
									"src": "15088:187:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1d2118f9",
									"id": 1205,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setReserveInterestRateStrategyAddress",
									"nameLocation": "15288:37:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1200,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "15334:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1205,
												"src": "15326:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15326:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1202,
												"mutability": "mutable",
												"name": "rateStrategyAddress",
												"nameLocation": "15351:19:2",
												"nodeType": "VariableDeclaration",
												"scope": 1205,
												"src": "15343:27:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15343:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15325:46:2"
									},
									"returnParameters": {
										"id": 1204,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15384:0:2"
									},
									"scope": 1293,
									"src": "15279:106:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b8d29276",
									"id": 1212,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setConfiguration",
									"nameLocation": "15398:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1207,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "15423:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1212,
												"src": "15415:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15415:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1209,
												"mutability": "mutable",
												"name": "configuration",
												"nameLocation": "15440:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 1212,
												"src": "15432:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15432:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15414:40:2"
									},
									"returnParameters": {
										"id": 1211,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15463:0:2"
									},
									"scope": 1293,
									"src": "15389:75:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1213,
										"nodeType": "StructuredDocumentation",
										"src": "15468:176:2",
										"text": " @dev Returns the configuration of the reserve\n @param asset The address of the underlying asset of the reserve\n @return The configuration of the reserve*"
									},
									"functionSelector": "c44b11f7",
									"id": 1221,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getConfiguration",
									"nameLocation": "15656:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1215,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "15681:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1221,
												"src": "15673:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15673:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15672:15:2"
									},
									"returnParameters": {
										"id": 1220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1221,
												"src": "15723:40:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReserveConfigurationMap_$868_memory_ptr",
													"typeString": "struct DataTypes.ReserveConfigurationMap"
												},
												"typeName": {
													"id": 1218,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1217,
														"name": "DataTypes.ReserveConfigurationMap",
														"nameLocations": [
															"15723:9:2",
															"15733:23:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 868,
														"src": "15723:33:2"
													},
													"referencedDeclaration": 868,
													"src": "15723:33:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReserveConfigurationMap_$868_storage_ptr",
														"typeString": "struct DataTypes.ReserveConfigurationMap"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15722:42:2"
									},
									"scope": 1293,
									"src": "15647:118:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1222,
										"nodeType": "StructuredDocumentation",
										"src": "15769:159:2",
										"text": " @dev Returns the configuration of the user across all the reserves\n @param user The user address\n @return The configuration of the user*"
									},
									"functionSelector": "4417a583",
									"id": 1230,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getUserConfiguration",
									"nameLocation": "15940:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1224,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "15969:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1230,
												"src": "15961:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15961:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15960:14:2"
									},
									"returnParameters": {
										"id": 1229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1228,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1230,
												"src": "16010:37:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserConfigurationMap_$871_memory_ptr",
													"typeString": "struct DataTypes.UserConfigurationMap"
												},
												"typeName": {
													"id": 1227,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1226,
														"name": "DataTypes.UserConfigurationMap",
														"nameLocations": [
															"16010:9:2",
															"16020:20:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 871,
														"src": "16010:30:2"
													},
													"referencedDeclaration": 871,
													"src": "16010:30:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserConfigurationMap_$871_storage_ptr",
														"typeString": "struct DataTypes.UserConfigurationMap"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16009:39:2"
									},
									"scope": 1293,
									"src": "15931:118:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1231,
										"nodeType": "StructuredDocumentation",
										"src": "16053:196:2",
										"text": " @dev Returns the normalized income normalized income of the reserve\n @param asset The address of the underlying asset of the reserve\n @return The reserve's normalized income"
									},
									"functionSelector": "d15e0053",
									"id": 1238,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReserveNormalizedIncome",
									"nameLocation": "16261:26:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "16296:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "16288:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16288:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16287:15:2"
									},
									"returnParameters": {
										"id": 1237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "16326:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16326:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16325:9:2"
									},
									"scope": 1293,
									"src": "16252:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1239,
										"nodeType": "StructuredDocumentation",
										"src": "16339:193:2",
										"text": " @dev Returns the normalized variable debt per unit of asset\n @param asset The address of the underlying asset of the reserve\n @return The reserve normalized variable debt"
									},
									"functionSelector": "386497fd",
									"id": 1246,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReserveNormalizedVariableDebt",
									"nameLocation": "16544:32:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1241,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "16585:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1246,
												"src": "16577:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16577:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16576:15:2"
									},
									"returnParameters": {
										"id": 1245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1244,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1246,
												"src": "16615:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16615:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16614:9:2"
									},
									"scope": 1293,
									"src": "16535:89:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1247,
										"nodeType": "StructuredDocumentation",
										"src": "16628:178:2",
										"text": " @dev Returns the state and configuration of the reserve\n @param asset The address of the underlying asset of the reserve\n @return The state of the reserve*"
									},
									"functionSelector": "35ea6a75",
									"id": 1255,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReserveData",
									"nameLocation": "16818:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1249,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "16841:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1255,
												"src": "16833:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16833:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16832:15:2"
									},
									"returnParameters": {
										"id": 1254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1253,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1255,
												"src": "16871:28:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReserveData_$894_memory_ptr",
													"typeString": "struct DataTypes.ReserveData"
												},
												"typeName": {
													"id": 1252,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1251,
														"name": "DataTypes.ReserveData",
														"nameLocations": [
															"16871:9:2",
															"16881:11:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 894,
														"src": "16871:21:2"
													},
													"referencedDeclaration": 894,
													"src": "16871:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReserveData_$894_storage_ptr",
														"typeString": "struct DataTypes.ReserveData"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16870:30:2"
									},
									"scope": 1293,
									"src": "16809:92:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d5ed3933",
									"id": 1270,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "finalizeTransfer",
									"nameLocation": "16914:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1257,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "16944:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1270,
												"src": "16936:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16936:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16963:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1270,
												"src": "16955:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16955:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1261,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16981:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1270,
												"src": "16973:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16973:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "16997:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1270,
												"src": "16989:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16989:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1265,
												"mutability": "mutable",
												"name": "balanceFromAfter",
												"nameLocation": "17017:16:2",
												"nodeType": "VariableDeclaration",
												"scope": 1270,
												"src": "17009:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17009:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1267,
												"mutability": "mutable",
												"name": "balanceToBefore",
												"nameLocation": "17047:15:2",
												"nodeType": "VariableDeclaration",
												"scope": 1270,
												"src": "17039:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17039:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16930:136:2"
									},
									"returnParameters": {
										"id": 1269,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17075:0:2"
									},
									"scope": 1293,
									"src": "16905:171:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d1946dbc",
									"id": 1276,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReservesList",
									"nameLocation": "17089:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1271,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17104:2:2"
									},
									"returnParameters": {
										"id": 1275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1274,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1276,
												"src": "17130:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1272,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "17130:7:2",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1273,
													"nodeType": "ArrayTypeName",
													"src": "17130:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17129:18:2"
									},
									"scope": 1293,
									"src": "17080:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fe65acfe",
									"id": 1282,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressesProvider",
									"nameLocation": "17161:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1277,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17181:2:2"
									},
									"returnParameters": {
										"id": 1281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1280,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1282,
												"src": "17207:29:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ILendingPoolAddressesProvider_$1444",
													"typeString": "contract ILendingPoolAddressesProvider"
												},
												"typeName": {
													"id": 1279,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1278,
														"name": "ILendingPoolAddressesProvider",
														"nameLocations": [
															"17207:29:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1444,
														"src": "17207:29:2"
													},
													"referencedDeclaration": 1444,
													"src": "17207:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ILendingPoolAddressesProvider_$1444",
														"typeString": "contract ILendingPoolAddressesProvider"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17206:31:2"
									},
									"scope": 1293,
									"src": "17152:86:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "bedb86fb",
									"id": 1287,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setPause",
									"nameLocation": "17251:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1284,
												"mutability": "mutable",
												"name": "val",
												"nameLocation": "17265:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1287,
												"src": "17260:8:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1283,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17260:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17259:10:2"
									},
									"returnParameters": {
										"id": 1286,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17278:0:2"
									},
									"scope": 1293,
									"src": "17242:37:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5c975abb",
									"id": 1292,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "17292:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1288,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17298:2:2"
									},
									"returnParameters": {
										"id": 1291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "17324:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1289,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17324:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17323:6:2"
									},
									"scope": 1293,
									"src": "17283:47:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1294,
							"src": "224:17108:2",
							"usedErrors": [],
							"usedEvents": [
								934,
								945,
								962,
								973,
								982,
								989,
								996,
								1003,
								1018,
								1021,
								1024,
								1041,
								1056
							]
						}
					],
					"src": "37:17296:2"
				},
				"id": 2
			},
			"contracts/aave/protocol-v2/contracts/interfaces/ILendingPoolAddressesProvider.sol": {
				"ast": {
					"absolutePath": "contracts/aave/protocol-v2/contracts/interfaces/ILendingPoolAddressesProvider.sol",
					"exportedSymbols": {
						"ILendingPoolAddressesProvider": [
							1444
						]
					},
					"id": 1445,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1295,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ILendingPoolAddressesProvider",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1296,
								"nodeType": "StructuredDocumentation",
								"src": "63:311:3",
								"text": " @title LendingPoolAddressesProvider contract\n @dev Main registry of addresses part of or connected to the protocol, including permissioned roles\n - Acting also as factory of proxies and admin of those, so with right to change its implementations\n - Owned by the Aave Governance\n @author Aave*"
							},
							"fullyImplemented": false,
							"id": 1444,
							"linearizedBaseContracts": [
								1444
							],
							"name": "ILendingPoolAddressesProvider",
							"nameLocation": "385:29:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "5e667c32fd847cf8bce48ab3400175cbf107bdc82b2dea62e3364909dfaee799",
									"id": 1300,
									"name": "MarketIdSet",
									"nameLocation": "425:11:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1298,
												"indexed": false,
												"mutability": "mutable",
												"name": "newMarketId",
												"nameLocation": "444:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 1300,
												"src": "437:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1297,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "437:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "436:20:3"
									},
									"src": "419:38:3"
								},
								{
									"anonymous": false,
									"eventSelector": "c4e6c6cdf28d0edbd8bcf071d724d33cc2e7a30be7d06443925656e9cb492aa4",
									"id": 1304,
									"name": "LendingPoolUpdated",
									"nameLocation": "466:18:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1302,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "501:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 1304,
												"src": "485:26:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "485:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "484:28:3"
									},
									"src": "460:53:3"
								},
								{
									"anonymous": false,
									"eventSelector": "c20a317155a9e7d84e06b716b4b355d47742ab9f8c5d630e7f556553f582430d",
									"id": 1308,
									"name": "ConfigurationAdminUpdated",
									"nameLocation": "522:25:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1306,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "564:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "548:26:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "548:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "547:28:3"
									},
									"src": "516:60:3"
								},
								{
									"anonymous": false,
									"eventSelector": "e19673fc861bfeb894cf2d6b7662505497ef31c0f489b742db24ee3310826916",
									"id": 1312,
									"name": "EmergencyAdminUpdated",
									"nameLocation": "585:21:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1310,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "623:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 1312,
												"src": "607:26:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "607:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "606:28:3"
									},
									"src": "579:56:3"
								},
								{
									"anonymous": false,
									"eventSelector": "dfabe479bad36782fb1e77fbfddd4e382671713527e4786cfc93a022ae763729",
									"id": 1316,
									"name": "LendingPoolConfiguratorUpdated",
									"nameLocation": "644:30:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1314,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "691:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 1316,
												"src": "675:26:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "675:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "674:28:3"
									},
									"src": "638:65:3"
								},
								{
									"anonymous": false,
									"eventSelector": "991888326f0eab3df6084aadb82bee6781b5c9aa75379e8bc50ae86934541638",
									"id": 1320,
									"name": "LendingPoolCollateralManagerUpdated",
									"nameLocation": "712:35:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1318,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "764:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 1320,
												"src": "748:26:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1317,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "748:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "747:28:3"
									},
									"src": "706:70:3"
								},
								{
									"anonymous": false,
									"eventSelector": "efe8ab924ca486283a79dc604baa67add51afb82af1db8ac386ebbba643cdffd",
									"id": 1324,
									"name": "PriceOracleUpdated",
									"nameLocation": "785:18:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1322,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "820:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 1324,
												"src": "804:26:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "804:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "803:28:3"
									},
									"src": "779:53:3"
								},
								{
									"anonymous": false,
									"eventSelector": "5c29179aba6942020a8a2d38f65de02fb6b7f784e7f049ed3a3cab97621859b5",
									"id": 1328,
									"name": "LendingRateOracleUpdated",
									"nameLocation": "841:24:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1326,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "882:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 1328,
												"src": "866:26:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1325,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "866:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "865:28:3"
									},
									"src": "835:59:3"
								},
								{
									"anonymous": false,
									"eventSelector": "1eb35cb4b5bbb23d152f3b4016a5a46c37a07ae930ed0956aba951e231142438",
									"id": 1334,
									"name": "ProxyCreated",
									"nameLocation": "903:12:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1330,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "924:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "916:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1329,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "916:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1332,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "944:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "928:26:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "928:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "915:40:3"
									},
									"src": "897:59:3"
								},
								{
									"anonymous": false,
									"eventSelector": "f2689d5d5cd0c639e137642cae5d40afced201a1a0327e7ac9358461dc9fff31",
									"id": 1342,
									"name": "AddressSet",
									"nameLocation": "965:10:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1336,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "984:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1342,
												"src": "976:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1335,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1338,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "1004:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 1342,
												"src": "988:26:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "988:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1340,
												"indexed": false,
												"mutability": "mutable",
												"name": "hasProxy",
												"nameLocation": "1021:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1342,
												"src": "1016:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1339,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1016:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "975:55:3"
									},
									"src": "959:72:3"
								},
								{
									"functionSelector": "568ef470",
									"id": 1347,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getMarketId",
									"nameLocation": "1044:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1055:2:3"
									},
									"returnParameters": {
										"id": 1346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1345,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "1081:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1344,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1081:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1080:15:3"
									},
									"scope": 1444,
									"src": "1035:61:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f67b1847",
									"id": 1352,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setMarketId",
									"nameLocation": "1109:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1349,
												"mutability": "mutable",
												"name": "marketId",
												"nameLocation": "1137:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1352,
												"src": "1121:24:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1121:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1120:26:3"
									},
									"returnParameters": {
										"id": 1351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1155:0:3"
									},
									"scope": 1444,
									"src": "1100:56:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ca446dd9",
									"id": 1359,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setAddress",
									"nameLocation": "1169:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1354,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1188:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1359,
												"src": "1180:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1353,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1180:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1356,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "1200:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 1359,
												"src": "1192:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1355,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1192:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1179:32:3"
									},
									"returnParameters": {
										"id": 1358,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1220:0:3"
									},
									"scope": 1444,
									"src": "1160:61:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5dcc528c",
									"id": 1366,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setAddressAsProxy",
									"nameLocation": "1234:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1361,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1260:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1366,
												"src": "1252:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1360,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1252:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1363,
												"mutability": "mutable",
												"name": "impl",
												"nameLocation": "1272:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1366,
												"src": "1264:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1362,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1264:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1251:26:3"
									},
									"returnParameters": {
										"id": 1365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1286:0:3"
									},
									"scope": 1444,
									"src": "1225:62:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "21f8a721",
									"id": 1373,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAddress",
									"nameLocation": "1300:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1368,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1319:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1373,
												"src": "1311:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1367,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1311:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1310:12:3"
									},
									"returnParameters": {
										"id": 1372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1371,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1373,
												"src": "1346:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1370,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1346:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1345:9:3"
									},
									"scope": 1444,
									"src": "1291:64:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0261bf8b",
									"id": 1378,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getLendingPool",
									"nameLocation": "1368:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1374,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1382:2:3"
									},
									"returnParameters": {
										"id": 1377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1376,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1378,
												"src": "1408:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1375,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1408:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1407:9:3"
									},
									"scope": 1444,
									"src": "1359:58:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5aef021f",
									"id": 1383,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setLendingPoolImpl",
									"nameLocation": "1430:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1380,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "1457:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1383,
												"src": "1449:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1449:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1448:14:3"
									},
									"returnParameters": {
										"id": 1382,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1471:0:3"
									},
									"scope": 1444,
									"src": "1421:51:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "85c858b1",
									"id": 1388,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getLendingPoolConfigurator",
									"nameLocation": "1485:26:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1384,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1511:2:3"
									},
									"returnParameters": {
										"id": 1387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1386,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1388,
												"src": "1537:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1537:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1536:9:3"
									},
									"scope": 1444,
									"src": "1476:70:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c12542df",
									"id": 1393,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setLendingPoolConfiguratorImpl",
									"nameLocation": "1559:30:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1390,
												"mutability": "mutable",
												"name": "configurator",
												"nameLocation": "1598:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 1393,
												"src": "1590:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1590:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1589:22:3"
									},
									"returnParameters": {
										"id": 1392,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1620:0:3"
									},
									"scope": 1444,
									"src": "1550:71:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "712d9171",
									"id": 1398,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getLendingPoolCollateralManager",
									"nameLocation": "1634:31:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1394,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1665:2:3"
									},
									"returnParameters": {
										"id": 1397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1396,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1398,
												"src": "1691:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1395,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1691:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1690:9:3"
									},
									"scope": 1444,
									"src": "1625:75:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "398e5553",
									"id": 1403,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setLendingPoolCollateralManager",
									"nameLocation": "1713:31:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1400,
												"mutability": "mutable",
												"name": "manager",
												"nameLocation": "1753:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1403,
												"src": "1745:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1399,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1745:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1744:17:3"
									},
									"returnParameters": {
										"id": 1402,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1770:0:3"
									},
									"scope": 1444,
									"src": "1704:67:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "aecda378",
									"id": 1408,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPoolAdmin",
									"nameLocation": "1784:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1404,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1796:2:3"
									},
									"returnParameters": {
										"id": 1407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1406,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1408,
												"src": "1822:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1405,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1822:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1821:9:3"
									},
									"scope": 1444,
									"src": "1775:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "283d62ad",
									"id": 1413,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setPoolAdmin",
									"nameLocation": "1844:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1410,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "1865:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "1857:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1409,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1857:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1856:15:3"
									},
									"returnParameters": {
										"id": 1412,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1880:0:3"
									},
									"scope": 1444,
									"src": "1835:46:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ddcaa9ea",
									"id": 1418,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getEmergencyAdmin",
									"nameLocation": "1894:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1414,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1911:2:3"
									},
									"returnParameters": {
										"id": 1417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1416,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1418,
												"src": "1937:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1937:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1936:9:3"
									},
									"scope": 1444,
									"src": "1885:61:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "35da3394",
									"id": 1423,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setEmergencyAdmin",
									"nameLocation": "1959:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1420,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "1985:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1423,
												"src": "1977:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1419,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1977:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1976:15:3"
									},
									"returnParameters": {
										"id": 1422,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2000:0:3"
									},
									"scope": 1444,
									"src": "1950:51:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fca513a8",
									"id": 1428,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPriceOracle",
									"nameLocation": "2014:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1424,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2028:2:3"
									},
									"returnParameters": {
										"id": 1427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1426,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1428,
												"src": "2054:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1425,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2054:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2053:9:3"
									},
									"scope": 1444,
									"src": "2005:58:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "530e784f",
									"id": 1433,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setPriceOracle",
									"nameLocation": "2076:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1430,
												"mutability": "mutable",
												"name": "priceOracle",
												"nameLocation": "2099:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 1433,
												"src": "2091:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1429,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2091:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2090:21:3"
									},
									"returnParameters": {
										"id": 1432,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2120:0:3"
									},
									"scope": 1444,
									"src": "2067:54:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "3618abba",
									"id": 1438,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getLendingRateOracle",
									"nameLocation": "2134:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1434,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2154:2:3"
									},
									"returnParameters": {
										"id": 1437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1436,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1438,
												"src": "2180:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2180:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2179:9:3"
									},
									"scope": 1444,
									"src": "2125:64:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "820d1274",
									"id": 1443,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setLendingRateOracle",
									"nameLocation": "2202:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1440,
												"mutability": "mutable",
												"name": "lendingRateOracle",
												"nameLocation": "2231:17:3",
												"nodeType": "VariableDeclaration",
												"scope": 1443,
												"src": "2223:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1439,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2223:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2222:27:3"
									},
									"returnParameters": {
										"id": 1442,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2258:0:3"
									},
									"scope": 1444,
									"src": "2193:66:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1445,
							"src": "375:1886:3",
							"usedErrors": [],
							"usedEvents": [
								1300,
								1304,
								1308,
								1312,
								1316,
								1320,
								1324,
								1328,
								1334,
								1342
							]
						}
					],
					"src": "37:2225:3"
				},
				"id": 3
			},
			"contracts/chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol": {
				"ast": {
					"absolutePath": "contracts/chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							1490
						]
					},
					"id": 1491,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1446,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AggregatorV3Interface",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1490,
							"linearizedBaseContracts": [
								1490
							],
							"name": "AggregatorV3Interface",
							"nameLocation": "121:21:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "313ce567",
									"id": 1451,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "156:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1447,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "164:2:4"
									},
									"returnParameters": {
										"id": 1450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1449,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1451,
												"src": "190:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1448,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "190:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "189:7:4"
									},
									"scope": 1490,
									"src": "147:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7284e416",
									"id": 1456,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "description",
									"nameLocation": "210:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1452,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "221:2:4"
									},
									"returnParameters": {
										"id": 1455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1454,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1456,
												"src": "247:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1453,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "247:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "246:15:4"
									},
									"scope": 1490,
									"src": "201:61:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "54fd4d50",
									"id": 1461,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "version",
									"nameLocation": "275:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1457,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "282:2:4"
									},
									"returnParameters": {
										"id": 1460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1459,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1461,
												"src": "308:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1458,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "308:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "307:9:4"
									},
									"scope": 1490,
									"src": "266:51:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9a6fc8f5",
									"id": 1476,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoundData",
									"nameLocation": "330:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1463,
												"mutability": "mutable",
												"name": "_roundId",
												"nameLocation": "355:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1476,
												"src": "348:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 1462,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "348:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "342:25:4"
									},
									"returnParameters": {
										"id": 1475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1466,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "398:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1476,
												"src": "391:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 1465,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "391:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1468,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "414:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1476,
												"src": "407:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1467,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "407:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1470,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "430:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1476,
												"src": "422:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1469,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "422:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1472,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "449:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1476,
												"src": "441:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "441:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1474,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "467:15:4",
												"nodeType": "VariableDeclaration",
												"scope": 1476,
												"src": "460:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 1473,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "460:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "390:93:4"
									},
									"scope": 1490,
									"src": "321:163:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "feaf968c",
									"id": 1489,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "latestRoundData",
									"nameLocation": "497:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1477,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "512:2:4"
									},
									"returnParameters": {
										"id": 1488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1479,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "557:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "550:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 1478,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "550:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1481,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "573:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "566:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1480,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "566:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1483,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "589:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "581:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1482,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "581:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1485,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "608:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "600:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1484,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "600:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1487,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "626:15:4",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "619:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 1486,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "619:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "549:93:4"
									},
									"scope": 1490,
									"src": "488:155:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1491,
							"src": "111:534:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:614:4"
				},
				"id": 4
			},
			"contracts/openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "contracts/openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							1677
						],
						"IERC721": [
							1607
						]
					},
					"id": 1608,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1492,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:5"
						},
						{
							"absolutePath": "contracts/openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1494,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1608,
							"sourceUnit": 1678,
							"src": "134:62:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1493,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1677,
										"src": "142:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1496,
										"name": "IERC165",
										"nameLocations": [
											"288:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1677,
										"src": "288:7:5"
									},
									"id": 1497,
									"nodeType": "InheritanceSpecifier",
									"src": "288:7:5"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1495,
								"nodeType": "StructuredDocumentation",
								"src": "198:68:5",
								"text": " @dev Required interface of an ERC-721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1607,
							"linearizedBaseContracts": [
								1607,
								1677
							],
							"name": "IERC721",
							"nameLocation": "277:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1498,
										"nodeType": "StructuredDocumentation",
										"src": "302:88:5",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1506,
									"name": "Transfer",
									"nameLocation": "401:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1500,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "426:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1506,
												"src": "410:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1499,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "410:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1502,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "448:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1506,
												"src": "432:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1501,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "432:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1504,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "468:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1506,
												"src": "452:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "452:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "409:67:5"
									},
									"src": "395:82:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1507,
										"nodeType": "StructuredDocumentation",
										"src": "483:94:5",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1515,
									"name": "Approval",
									"nameLocation": "588:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1509,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "613:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "597:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1508,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "597:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1511,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "636:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "620:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1510,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "620:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1513,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "662:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "646:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1512,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "596:74:5"
									},
									"src": "582:89:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1516,
										"nodeType": "StructuredDocumentation",
										"src": "677:117:5",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1524,
									"name": "ApprovalForAll",
									"nameLocation": "805:14:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1518,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "836:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1524,
												"src": "820:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1520,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "859:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1524,
												"src": "843:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "843:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1522,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "874:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1524,
												"src": "869:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1521,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "869:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:64:5"
									},
									"src": "799:85:5"
								},
								{
									"documentation": {
										"id": 1525,
										"nodeType": "StructuredDocumentation",
										"src": "890:76:5",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1532,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "980:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1527,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "998:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1532,
												"src": "990:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "990:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "989:15:5"
									},
									"returnParameters": {
										"id": 1531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1530,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1036:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1532,
												"src": "1028:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1529,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1028:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1027:17:5"
									},
									"scope": 1607,
									"src": "971:74:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1533,
										"nodeType": "StructuredDocumentation",
										"src": "1051:131:5",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1540,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1196:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1535,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1212:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1540,
												"src": "1204:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1534,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1204:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1203:17:5"
									},
									"returnParameters": {
										"id": 1539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1538,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1252:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1540,
												"src": "1244:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1537,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1244:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1243:15:5"
									},
									"scope": 1607,
									"src": "1187:72:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1541,
										"nodeType": "StructuredDocumentation",
										"src": "1265:565:5",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1552,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1844:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1543,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1869:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1552,
												"src": "1861:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1542,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1861:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1545,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1883:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1552,
												"src": "1875:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1875:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1547,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1895:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1552,
												"src": "1887:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1546,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1887:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1549,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1919:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1552,
												"src": "1904:19:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1548,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1904:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1860:64:5"
									},
									"returnParameters": {
										"id": 1551,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1933:0:5"
									},
									"scope": 1607,
									"src": "1835:99:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1553,
										"nodeType": "StructuredDocumentation",
										"src": "1940:706:5",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1562,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2660:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1555,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1562,
												"src": "2677:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1554,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1557,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2699:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1562,
												"src": "2691:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1556,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2691:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1559,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2711:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1562,
												"src": "2703:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1558,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2703:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2676:43:5"
									},
									"returnParameters": {
										"id": 1561,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2728:0:5"
									},
									"scope": 1607,
									"src": "2651:78:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1563,
										"nodeType": "StructuredDocumentation",
										"src": "2735:733:5",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1572,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3482:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1565,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3503:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1572,
												"src": "3495:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1564,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3495:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1567,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3517:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1572,
												"src": "3509:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1566,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3509:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1569,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3529:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1572,
												"src": "3521:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1568,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3521:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3494:43:5"
									},
									"returnParameters": {
										"id": 1571,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3546:0:5"
									},
									"scope": 1607,
									"src": "3473:74:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1573,
										"nodeType": "StructuredDocumentation",
										"src": "3553:452:5",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1580,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4019:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1575,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4035:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1580,
												"src": "4027:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1574,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4027:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1577,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4047:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1580,
												"src": "4039:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1576,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4039:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4026:29:5"
									},
									"returnParameters": {
										"id": 1579,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4064:0:5"
									},
									"scope": 1607,
									"src": "4010:55:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1581,
										"nodeType": "StructuredDocumentation",
										"src": "4071:315:5",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1588,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4400:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1583,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4426:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1588,
												"src": "4418:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1582,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4418:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1585,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4441:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1588,
												"src": "4436:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1584,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4436:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4417:33:5"
									},
									"returnParameters": {
										"id": 1587,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4459:0:5"
									},
									"scope": 1607,
									"src": "4391:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1589,
										"nodeType": "StructuredDocumentation",
										"src": "4466:139:5",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1596,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4619:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1591,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4639:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1596,
												"src": "4631:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1590,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4631:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4630:17:5"
									},
									"returnParameters": {
										"id": 1595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1594,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4679:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1596,
												"src": "4671:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1593,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4671:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4670:18:5"
									},
									"scope": 1607,
									"src": "4610:79:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1597,
										"nodeType": "StructuredDocumentation",
										"src": "4695:138:5",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1606,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4847:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1599,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4872:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1606,
												"src": "4864:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1598,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4864:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1601,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4887:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1606,
												"src": "4879:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1600,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4879:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4863:33:5"
									},
									"returnParameters": {
										"id": 1605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1604,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1606,
												"src": "4920:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1603,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4920:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4919:6:5"
									},
									"scope": 1607,
									"src": "4838:88:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1608,
							"src": "267:4661:5",
							"usedErrors": [],
							"usedEvents": [
								1506,
								1515,
								1524
							]
						}
					],
					"src": "108:4821:5"
				},
				"id": 5
			},
			"contracts/openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol": {
				"ast": {
					"absolutePath": "contracts/openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol",
					"exportedSymbols": {
						"IERC165": [
							1677
						],
						"IERC721": [
							1607
						],
						"IERC721Enumerable": [
							1638
						]
					},
					"id": 1639,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1609,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:6"
						},
						{
							"absolutePath": "contracts/openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 1610,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1639,
							"sourceUnit": 1608,
							"src": "59:23:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1612,
										"name": "IERC721",
										"nameLocations": [
											"251:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1607,
										"src": "251:7:6"
									},
									"id": 1613,
									"nodeType": "InheritanceSpecifier",
									"src": "251:7:6"
								}
							],
							"canonicalName": "IERC721Enumerable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1611,
								"nodeType": "StructuredDocumentation",
								"src": "83:136:6",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1638,
							"linearizedBaseContracts": [
								1638,
								1607,
								1677
							],
							"name": "IERC721Enumerable",
							"nameLocation": "230:17:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1614,
										"nodeType": "StructuredDocumentation",
										"src": "266:82:6",
										"text": " @dev Returns the total amount of tokens stored by the contract."
									},
									"functionSelector": "18160ddd",
									"id": 1619,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "362:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1615,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "373:2:6"
									},
									"returnParameters": {
										"id": 1618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1617,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1619,
												"src": "399:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1616,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "399:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "398:9:6"
									},
									"scope": 1638,
									"src": "353:55:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1620,
										"nodeType": "StructuredDocumentation",
										"src": "414:171:6",
										"text": " @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
									},
									"functionSelector": "2f745c59",
									"id": 1629,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenOfOwnerByIndex",
									"nameLocation": "599:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1622,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "627:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1629,
												"src": "619:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1621,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "619:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1624,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "642:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1629,
												"src": "634:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1623,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "618:30:6"
									},
									"returnParameters": {
										"id": 1628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1627,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "680:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1629,
												"src": "672:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1626,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "672:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "671:17:6"
									},
									"scope": 1638,
									"src": "590:99:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1630,
										"nodeType": "StructuredDocumentation",
										"src": "695:164:6",
										"text": " @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n Use along with {totalSupply} to enumerate all tokens."
									},
									"functionSelector": "4f6ccce7",
									"id": 1637,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenByIndex",
									"nameLocation": "873:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1632,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "894:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1637,
												"src": "886:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1631,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "886:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "885:15:6"
									},
									"returnParameters": {
										"id": 1636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1635,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1637,
												"src": "924:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1634,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:9:6"
									},
									"scope": 1638,
									"src": "864:69:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1639,
							"src": "220:715:6",
							"usedErrors": [],
							"usedEvents": [
								1506,
								1515,
								1524
							]
						}
					],
					"src": "33:903:6"
				},
				"id": 6
			},
			"contracts/openzeppelin/contracts/token/ERC721/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "contracts/openzeppelin/contracts/token/ERC721/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC165": [
							1677
						],
						"IERC721": [
							1607
						],
						"IERC721Metadata": [
							1665
						]
					},
					"id": 1666,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1640,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:7"
						},
						{
							"absolutePath": "contracts/openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../../../../../contracts/openzeppelin/contracts/token/ERC721/IERC721.sol",
							"id": 1641,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1666,
							"sourceUnit": 1608,
							"src": "59:82:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1643,
										"name": "IERC721",
										"nameLocations": [
											"306:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1607,
										"src": "306:7:7"
									},
									"id": 1644,
									"nodeType": "InheritanceSpecifier",
									"src": "306:7:7"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1642,
								"nodeType": "StructuredDocumentation",
								"src": "143:133:7",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1665,
							"linearizedBaseContracts": [
								1665,
								1607,
								1677
							],
							"name": "IERC721Metadata",
							"nameLocation": "287:15:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1645,
										"nodeType": "StructuredDocumentation",
										"src": "321:58:7",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1650,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "393:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "397:2:7"
									},
									"returnParameters": {
										"id": 1649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1648,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1650,
												"src": "423:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1647,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "423:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "422:15:7"
									},
									"scope": 1665,
									"src": "384:54:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1651,
										"nodeType": "StructuredDocumentation",
										"src": "444:60:7",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1656,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "518:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1652,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "524:2:7"
									},
									"returnParameters": {
										"id": 1655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1654,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1656,
												"src": "550:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1653,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "550:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "549:15:7"
									},
									"scope": 1665,
									"src": "509:56:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1657,
										"nodeType": "StructuredDocumentation",
										"src": "571:90:7",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1664,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "675:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1659,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "692:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1664,
												"src": "684:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1658,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "683:17:7"
									},
									"returnParameters": {
										"id": 1663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1662,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1664,
												"src": "724:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1661,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "724:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "723:15:7"
									},
									"scope": 1665,
									"src": "666:73:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1666,
							"src": "277:464:7",
							"usedErrors": [],
							"usedEvents": [
								1506,
								1515,
								1524
							]
						}
					],
					"src": "33:709:7"
				},
				"id": 7
			},
			"contracts/openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "contracts/openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1677
						]
					},
					"id": 1678,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1667,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1668,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:8",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1677,
							"linearizedBaseContracts": [
								1677
							],
							"name": "IERC165",
							"nameLocation": "432:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1669,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:8",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1676,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1671,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1676,
												"src": "818:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1670,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:8"
									},
									"returnParameters": {
										"id": 1675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1674,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1676,
												"src": "861:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1673,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:8"
									},
									"scope": 1677,
									"src": "791:76:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1678,
							"src": "422:447:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:8"
				},
				"id": 8
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/IERC721Permit.sol": {
				"ast": {
					"absolutePath": "contracts/uniswap/v3-periphery/contracts/interfaces/IERC721Permit.sol",
					"exportedSymbols": {
						"IERC165": [
							1677
						],
						"IERC721": [
							1607
						],
						"IERC721Permit": [
							1712
						]
					},
					"id": 1713,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1679,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:9"
						},
						{
							"absolutePath": "contracts/openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../../../../openzeppelin/contracts/token/ERC721/IERC721.sol",
							"id": 1680,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1713,
							"sourceUnit": 1608,
							"src": "71:69:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1682,
										"name": "IERC721",
										"nameLocations": [
											"293:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1607,
										"src": "293:7:9"
									},
									"id": 1683,
									"nodeType": "InheritanceSpecifier",
									"src": "293:7:9"
								}
							],
							"canonicalName": "IERC721Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1681,
								"nodeType": "StructuredDocumentation",
								"src": "142:124:9",
								"text": "@title ERC721 with permit\n @notice Extension to ERC721 that includes a permit function for signature based approvals"
							},
							"fullyImplemented": false,
							"id": 1712,
							"linearizedBaseContracts": [
								1712,
								1607,
								1677
							],
							"name": "IERC721Permit",
							"nameLocation": "276:13:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1684,
										"nodeType": "StructuredDocumentation",
										"src": "307:104:9",
										"text": "@notice The permit typehash used in the permit signature\n @return The typehash for the permit"
									},
									"functionSelector": "30adf81f",
									"id": 1689,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "PERMIT_TYPEHASH",
									"nameLocation": "425:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1685,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "440:2:9"
									},
									"returnParameters": {
										"id": 1688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1687,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1689,
												"src": "466:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1686,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "466:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "465:9:9"
									},
									"scope": 1712,
									"src": "416:59:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1690,
										"nodeType": "StructuredDocumentation",
										"src": "481:135:9",
										"text": "@notice The domain separator used in the permit signature\n @return The domain seperator used in encoding of permit signature"
									},
									"functionSelector": "3644e515",
									"id": 1695,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "630:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1691,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "646:2:9"
									},
									"returnParameters": {
										"id": 1694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1693,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1695,
												"src": "672:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1692,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "672:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "671:9:9"
									},
									"scope": 1712,
									"src": "621:60:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1696,
										"nodeType": "StructuredDocumentation",
										"src": "687:605:9",
										"text": "@notice Approve of a specific token ID for spending by spender via signature\n @param spender The account that is being approved\n @param tokenId The ID of the token that is being approved for spending\n @param deadline The deadline timestamp by which the call must be mined for the approve to work\n @param v Must produce valid secp256k1 signature from the holder along with `r` and `s`\n @param r Must produce valid secp256k1 signature from the holder along with `v` and `s`\n @param s Must produce valid secp256k1 signature from the holder along with `r` and `v`"
									},
									"functionSelector": "7ac2ff7b",
									"id": 1711,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "1306:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1698,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1330:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1711,
												"src": "1322:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1697,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1322:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1700,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1355:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1711,
												"src": "1347:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1699,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1347:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1702,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1380:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1711,
												"src": "1372:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1701,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1372:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1704,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1404:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1711,
												"src": "1398:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1703,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1398:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1706,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1423:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1711,
												"src": "1415:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1705,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1415:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1708,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1442:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1711,
												"src": "1434:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1707,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1434:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1312:137:9"
									},
									"returnParameters": {
										"id": 1710,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1466:0:9"
									},
									"scope": 1712,
									"src": "1297:170:9",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1713,
							"src": "266:1203:9",
							"usedErrors": [],
							"usedEvents": [
								1506,
								1515,
								1524
							]
						}
					],
					"src": "45:1425:9"
				},
				"id": 9
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol": {
				"ast": {
					"absolutePath": "contracts/uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol",
					"exportedSymbols": {
						"IERC165": [
							1677
						],
						"IERC721": [
							1607
						],
						"IERC721Enumerable": [
							1638
						],
						"IERC721Metadata": [
							1665
						],
						"IERC721Permit": [
							1712
						],
						"INonfungiblePositionManager": [
							1910
						],
						"IPeripheryImmutableState": [
							1926
						],
						"IPeripheryPayments": [
							1952
						],
						"IPoolInitializer": [
							1971
						]
					},
					"id": 1911,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1714,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:10"
						},
						{
							"id": 1715,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "70:19:10"
						},
						{
							"absolutePath": "contracts/openzeppelin/contracts/token/ERC721/IERC721Metadata.sol",
							"file": "../../../../openzeppelin/contracts/token/ERC721/IERC721Metadata.sol",
							"id": 1716,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1911,
							"sourceUnit": 1666,
							"src": "91:77:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol",
							"file": "../../../../openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol",
							"id": 1717,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1911,
							"sourceUnit": 1639,
							"src": "169:79:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/uniswap/v3-periphery/contracts/interfaces/IPoolInitializer.sol",
							"file": "./IPoolInitializer.sol",
							"id": 1718,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1911,
							"sourceUnit": 1972,
							"src": "250:32:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/uniswap/v3-periphery/contracts/interfaces/IERC721Permit.sol",
							"file": "./IERC721Permit.sol",
							"id": 1719,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1911,
							"sourceUnit": 1713,
							"src": "283:29:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol",
							"file": "./IPeripheryPayments.sol",
							"id": 1720,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1911,
							"sourceUnit": 1953,
							"src": "313:34:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol",
							"file": "./IPeripheryImmutableState.sol",
							"id": 1721,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1911,
							"sourceUnit": 1927,
							"src": "348:40:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1723,
										"name": "IPoolInitializer",
										"nameLocations": [
											"612:16:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1971,
										"src": "612:16:10"
									},
									"id": 1724,
									"nodeType": "InheritanceSpecifier",
									"src": "612:16:10"
								},
								{
									"baseName": {
										"id": 1725,
										"name": "IPeripheryPayments",
										"nameLocations": [
											"634:18:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1952,
										"src": "634:18:10"
									},
									"id": 1726,
									"nodeType": "InheritanceSpecifier",
									"src": "634:18:10"
								},
								{
									"baseName": {
										"id": 1727,
										"name": "IPeripheryImmutableState",
										"nameLocations": [
											"658:24:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1926,
										"src": "658:24:10"
									},
									"id": 1728,
									"nodeType": "InheritanceSpecifier",
									"src": "658:24:10"
								},
								{
									"baseName": {
										"id": 1729,
										"name": "IERC721Metadata",
										"nameLocations": [
											"688:15:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1665,
										"src": "688:15:10"
									},
									"id": 1730,
									"nodeType": "InheritanceSpecifier",
									"src": "688:15:10"
								},
								{
									"baseName": {
										"id": 1731,
										"name": "IERC721Enumerable",
										"nameLocations": [
											"709:17:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1638,
										"src": "709:17:10"
									},
									"id": 1732,
									"nodeType": "InheritanceSpecifier",
									"src": "709:17:10"
								},
								{
									"baseName": {
										"id": 1733,
										"name": "IERC721Permit",
										"nameLocations": [
											"732:13:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1712,
										"src": "732:13:10"
									},
									"id": 1734,
									"nodeType": "InheritanceSpecifier",
									"src": "732:13:10"
								}
							],
							"canonicalName": "INonfungiblePositionManager",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1722,
								"nodeType": "StructuredDocumentation",
								"src": "390:177:10",
								"text": "@title Non-fungible token for positions\n @notice Wraps Uniswap V3 positions in a non-fungible token interface which allows for them to be transferred\n and authorized."
							},
							"fullyImplemented": false,
							"id": 1910,
							"linearizedBaseContracts": [
								1910,
								1712,
								1638,
								1665,
								1607,
								1677,
								1926,
								1952,
								1971
							],
							"name": "INonfungiblePositionManager",
							"nameLocation": "577:27:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1735,
										"nodeType": "StructuredDocumentation",
										"src": "752:458:10",
										"text": "@notice Emitted when liquidity is increased for a position NFT\n @dev Also emitted when a token is minted\n @param tokenId The ID of the token for which liquidity was increased\n @param liquidity The amount by which liquidity for the NFT position was increased\n @param amount0 The amount of token0 that was paid for the increase in liquidity\n @param amount1 The amount of token1 that was paid for the increase in liquidity"
									},
									"eventSelector": "3067048beee31b25b2f1681f88dac838c8bba36af25bfb2b7cf7473a5847e35f",
									"id": 1745,
									"name": "IncreaseLiquidity",
									"nameLocation": "1221:17:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1737,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1255:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1745,
												"src": "1239:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1736,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1239:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1739,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1272:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1745,
												"src": "1264:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1738,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1264:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1741,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1291:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1745,
												"src": "1283:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1740,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1283:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1743,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1308:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1745,
												"src": "1300:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1742,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1300:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1238:78:10"
									},
									"src": "1215:102:10"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1746,
										"nodeType": "StructuredDocumentation",
										"src": "1322:419:10",
										"text": "@notice Emitted when liquidity is decreased for a position NFT\n @param tokenId The ID of the token for which liquidity was decreased\n @param liquidity The amount by which liquidity for the NFT position was decreased\n @param amount0 The amount of token0 that was accounted for the decrease in liquidity\n @param amount1 The amount of token1 that was accounted for the decrease in liquidity"
									},
									"eventSelector": "26f6a048ee9138f2c0ce266f322cb99228e8d619ae2bff30c67f8dcf9d2377b4",
									"id": 1756,
									"name": "DecreaseLiquidity",
									"nameLocation": "1752:17:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1748,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1786:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1756,
												"src": "1770:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1747,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1770:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1750,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1803:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1756,
												"src": "1795:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1749,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1795:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1752,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1822:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1756,
												"src": "1814:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1751,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1814:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1754,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1839:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1756,
												"src": "1831:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1753,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1831:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1769:78:10"
									},
									"src": "1746:102:10"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1757,
										"nodeType": "StructuredDocumentation",
										"src": "1853:522:10",
										"text": "@notice Emitted when tokens are collected for a position NFT\n @dev The amounts reported may not be exactly equivalent to the amounts transferred, due to rounding behavior\n @param tokenId The ID of the token for which underlying tokens were collected\n @param recipient The address of the account that received the collected tokens\n @param amount0 The amount of token0 owed to the position that was collected\n @param amount1 The amount of token1 owed to the position that was collected"
									},
									"eventSelector": "40d0efd1a53d60ecbf40971b9daf7dc90178c3aadc7aab1765632738fa8b8f01",
									"id": 1767,
									"name": "Collect",
									"nameLocation": "2386:7:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1759,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2410:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1767,
												"src": "2394:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1758,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2394:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1761,
												"indexed": false,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2427:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1767,
												"src": "2419:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2419:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1763,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "2446:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1767,
												"src": "2438:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1762,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2438:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1765,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "2463:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1767,
												"src": "2455:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1764,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2455:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2393:78:10"
									},
									"src": "2380:92:10"
								},
								{
									"documentation": {
										"id": 1768,
										"nodeType": "StructuredDocumentation",
										"src": "2478:1157:10",
										"text": "@notice Returns the position information associated with a given token ID.\n @dev Throws if the token ID is not valid.\n @param tokenId The ID of the token that represents the position\n @return nonce The nonce for permits\n @return operator The address that is approved for spending\n @return token0 The address of the token0 for a specific pool\n @return token1 The address of the token1 for a specific pool\n @return fee The fee associated with the pool\n @return tickLower The lower end of the tick range for the position\n @return tickUpper The higher end of the tick range for the position\n @return liquidity The liquidity of the position\n @return feeGrowthInside0LastX128 The fee growth of token0 as of the last action on the individual position\n @return feeGrowthInside1LastX128 The fee growth of token1 as of the last action on the individual position\n @return tokensOwed0 The uncollected amount of token0 owed to the position as of the last computation\n @return tokensOwed1 The uncollected amount of token1 owed to the position as of the last computation"
									},
									"functionSelector": "99fbab88",
									"id": 1797,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "positions",
									"nameLocation": "3649:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1770,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3667:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1797,
												"src": "3659:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1769,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3659:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3658:17:10"
									},
									"returnParameters": {
										"id": 1796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1773,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "3743:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1797,
												"src": "3736:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1772,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "3736:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1775,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3770:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1797,
												"src": "3762:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1774,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3762:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1777,
												"mutability": "mutable",
												"name": "token0",
												"nameLocation": "3800:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1797,
												"src": "3792:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1776,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3792:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1779,
												"mutability": "mutable",
												"name": "token1",
												"nameLocation": "3828:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1797,
												"src": "3820:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1778,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3820:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1781,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "3855:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1797,
												"src": "3848:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1780,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "3848:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1783,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "3878:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1797,
												"src": "3872:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1782,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3872:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1785,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "3907:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1797,
												"src": "3901:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1784,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3901:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1787,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "3938:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1797,
												"src": "3930:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1786,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3930:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1789,
												"mutability": "mutable",
												"name": "feeGrowthInside0LastX128",
												"nameLocation": "3969:24:10",
												"nodeType": "VariableDeclaration",
												"scope": 1797,
												"src": "3961:32:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1788,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3961:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1791,
												"mutability": "mutable",
												"name": "feeGrowthInside1LastX128",
												"nameLocation": "4015:24:10",
												"nodeType": "VariableDeclaration",
												"scope": 1797,
												"src": "4007:32:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1790,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4007:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1793,
												"mutability": "mutable",
												"name": "tokensOwed0",
												"nameLocation": "4061:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1797,
												"src": "4053:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1792,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "4053:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1795,
												"mutability": "mutable",
												"name": "tokensOwed1",
												"nameLocation": "4094:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1797,
												"src": "4086:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1794,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "4086:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3722:393:10"
									},
									"scope": 1910,
									"src": "3640:476:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "INonfungiblePositionManager.MintParams",
									"id": 1820,
									"members": [
										{
											"constant": false,
											"id": 1799,
											"mutability": "mutable",
											"name": "token0",
											"nameLocation": "4158:6:10",
											"nodeType": "VariableDeclaration",
											"scope": 1820,
											"src": "4150:14:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1798,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4150:7:10",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1801,
											"mutability": "mutable",
											"name": "token1",
											"nameLocation": "4182:6:10",
											"nodeType": "VariableDeclaration",
											"scope": 1820,
											"src": "4174:14:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1800,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4174:7:10",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1803,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "4205:3:10",
											"nodeType": "VariableDeclaration",
											"scope": 1820,
											"src": "4198:10:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 1802,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "4198:6:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1805,
											"mutability": "mutable",
											"name": "tickLower",
											"nameLocation": "4224:9:10",
											"nodeType": "VariableDeclaration",
											"scope": 1820,
											"src": "4218:15:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int24",
												"typeString": "int24"
											},
											"typeName": {
												"id": 1804,
												"name": "int24",
												"nodeType": "ElementaryTypeName",
												"src": "4218:5:10",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1807,
											"mutability": "mutable",
											"name": "tickUpper",
											"nameLocation": "4249:9:10",
											"nodeType": "VariableDeclaration",
											"scope": 1820,
											"src": "4243:15:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int24",
												"typeString": "int24"
											},
											"typeName": {
												"id": 1806,
												"name": "int24",
												"nodeType": "ElementaryTypeName",
												"src": "4243:5:10",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1809,
											"mutability": "mutable",
											"name": "amount0Desired",
											"nameLocation": "4276:14:10",
											"nodeType": "VariableDeclaration",
											"scope": 1820,
											"src": "4268:22:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1808,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4268:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1811,
											"mutability": "mutable",
											"name": "amount1Desired",
											"nameLocation": "4308:14:10",
											"nodeType": "VariableDeclaration",
											"scope": 1820,
											"src": "4300:22:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1810,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4300:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1813,
											"mutability": "mutable",
											"name": "amount0Min",
											"nameLocation": "4340:10:10",
											"nodeType": "VariableDeclaration",
											"scope": 1820,
											"src": "4332:18:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1812,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4332:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1815,
											"mutability": "mutable",
											"name": "amount1Min",
											"nameLocation": "4368:10:10",
											"nodeType": "VariableDeclaration",
											"scope": 1820,
											"src": "4360:18:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1814,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4360:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1817,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "4396:9:10",
											"nodeType": "VariableDeclaration",
											"scope": 1820,
											"src": "4388:17:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1816,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4388:7:10",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1819,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "4423:8:10",
											"nodeType": "VariableDeclaration",
											"scope": 1820,
											"src": "4415:16:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1818,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4415:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "MintParams",
									"nameLocation": "4129:10:10",
									"nodeType": "StructDefinition",
									"scope": 1910,
									"src": "4122:316:10",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 1821,
										"nodeType": "StructuredDocumentation",
										"src": "4444:586:10",
										"text": "@notice Creates a new position wrapped in a NFT\n @dev Call this when the pool does exist and is initialized. Note that if the pool is created but not initialized\n a method does not exist, i.e. the pool is assumed to be initialized.\n @param params The params necessary to mint a position, encoded as `MintParams` in calldata\n @return tokenId The ID of the token that represents the minted position\n @return liquidity The amount of liquidity for this position\n @return amount0 The amount of token0\n @return amount1 The amount of token1"
									},
									"functionSelector": "88316456",
									"id": 1835,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "5044:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1824,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "5069:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1835,
												"src": "5049:26:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_MintParams_$1820_calldata_ptr",
													"typeString": "struct INonfungiblePositionManager.MintParams"
												},
												"typeName": {
													"id": 1823,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1822,
														"name": "MintParams",
														"nameLocations": [
															"5049:10:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1820,
														"src": "5049:10:10"
													},
													"referencedDeclaration": 1820,
													"src": "5049:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MintParams_$1820_storage_ptr",
														"typeString": "struct INonfungiblePositionManager.MintParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5048:28:10"
									},
									"returnParameters": {
										"id": 1834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1827,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5148:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1835,
												"src": "5140:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1826,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5140:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1829,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "5177:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1835,
												"src": "5169:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1828,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5169:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1831,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "5208:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1835,
												"src": "5200:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1830,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5200:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1833,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "5237:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1835,
												"src": "5229:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1832,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5229:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5126:128:10"
									},
									"scope": 1910,
									"src": "5035:220:10",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "INonfungiblePositionManager.IncreaseLiquidityParams",
									"id": 1848,
									"members": [
										{
											"constant": false,
											"id": 1837,
											"mutability": "mutable",
											"name": "tokenId",
											"nameLocation": "5310:7:10",
											"nodeType": "VariableDeclaration",
											"scope": 1848,
											"src": "5302:15:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1836,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5302:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1839,
											"mutability": "mutable",
											"name": "amount0Desired",
											"nameLocation": "5335:14:10",
											"nodeType": "VariableDeclaration",
											"scope": 1848,
											"src": "5327:22:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1838,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5327:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1841,
											"mutability": "mutable",
											"name": "amount1Desired",
											"nameLocation": "5367:14:10",
											"nodeType": "VariableDeclaration",
											"scope": 1848,
											"src": "5359:22:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1840,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5359:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1843,
											"mutability": "mutable",
											"name": "amount0Min",
											"nameLocation": "5399:10:10",
											"nodeType": "VariableDeclaration",
											"scope": 1848,
											"src": "5391:18:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1842,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5391:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1845,
											"mutability": "mutable",
											"name": "amount1Min",
											"nameLocation": "5427:10:10",
											"nodeType": "VariableDeclaration",
											"scope": 1848,
											"src": "5419:18:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1844,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5419:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1847,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "5455:8:10",
											"nodeType": "VariableDeclaration",
											"scope": 1848,
											"src": "5447:16:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1846,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5447:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "IncreaseLiquidityParams",
									"nameLocation": "5268:23:10",
									"nodeType": "StructDefinition",
									"scope": 1910,
									"src": "5261:209:10",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 1849,
										"nodeType": "StructuredDocumentation",
										"src": "5476:821:10",
										"text": "@notice Increases the amount of liquidity in a position, with tokens paid by the `msg.sender`\n @param params tokenId The ID of the token for which liquidity is being increased,\n amount0Desired The desired amount of token0 to be spent,\n amount1Desired The desired amount of token1 to be spent,\n amount0Min The minimum amount of token0 to spend, which serves as a slippage check,\n amount1Min The minimum amount of token1 to spend, which serves as a slippage check,\n deadline The time by which the transaction must be included to effect the change\n @return liquidity The new liquidity amount as a result of the increase\n @return amount0 The amount of token0 to acheive resulting liquidity\n @return amount1 The amount of token1 to acheive resulting liquidity"
									},
									"functionSelector": "219f5d17",
									"id": 1861,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "increaseLiquidity",
									"nameLocation": "6311:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1852,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "6362:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1861,
												"src": "6329:39:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_IncreaseLiquidityParams_$1848_calldata_ptr",
													"typeString": "struct INonfungiblePositionManager.IncreaseLiquidityParams"
												},
												"typeName": {
													"id": 1851,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1850,
														"name": "IncreaseLiquidityParams",
														"nameLocations": [
															"6329:23:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1848,
														"src": "6329:23:10"
													},
													"referencedDeclaration": 1848,
													"src": "6329:23:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_IncreaseLiquidityParams_$1848_storage_ptr",
														"typeString": "struct INonfungiblePositionManager.IncreaseLiquidityParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6328:41:10"
									},
									"returnParameters": {
										"id": 1860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1855,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "6441:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1861,
												"src": "6433:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1854,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "6433:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1857,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "6472:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1861,
												"src": "6464:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1856,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6464:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1859,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "6501:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1861,
												"src": "6493:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6493:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6419:99:10"
									},
									"scope": 1910,
									"src": "6302:217:10",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "INonfungiblePositionManager.DecreaseLiquidityParams",
									"id": 1872,
									"members": [
										{
											"constant": false,
											"id": 1863,
											"mutability": "mutable",
											"name": "tokenId",
											"nameLocation": "6574:7:10",
											"nodeType": "VariableDeclaration",
											"scope": 1872,
											"src": "6566:15:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1862,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6566:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1865,
											"mutability": "mutable",
											"name": "liquidity",
											"nameLocation": "6599:9:10",
											"nodeType": "VariableDeclaration",
											"scope": 1872,
											"src": "6591:17:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 1864,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "6591:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1867,
											"mutability": "mutable",
											"name": "amount0Min",
											"nameLocation": "6626:10:10",
											"nodeType": "VariableDeclaration",
											"scope": 1872,
											"src": "6618:18:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1866,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6618:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1869,
											"mutability": "mutable",
											"name": "amount1Min",
											"nameLocation": "6654:10:10",
											"nodeType": "VariableDeclaration",
											"scope": 1872,
											"src": "6646:18:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1868,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6646:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1871,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "6682:8:10",
											"nodeType": "VariableDeclaration",
											"scope": 1872,
											"src": "6674:16:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1870,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6674:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "DecreaseLiquidityParams",
									"nameLocation": "6532:23:10",
									"nodeType": "StructDefinition",
									"scope": 1910,
									"src": "6525:172:10",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 1873,
										"nodeType": "StructuredDocumentation",
										"src": "6703:702:10",
										"text": "@notice Decreases the amount of liquidity in a position and accounts it to the position\n @param params tokenId The ID of the token for which liquidity is being decreased,\n amount The amount by which liquidity will be decreased,\n amount0Min The minimum amount of token0 that should be accounted for the burned liquidity,\n amount1Min The minimum amount of token1 that should be accounted for the burned liquidity,\n deadline The time by which the transaction must be included to effect the change\n @return amount0 The amount of token0 accounted to the position's tokens owed\n @return amount1 The amount of token1 accounted to the position's tokens owed"
									},
									"functionSelector": "0c49ccbe",
									"id": 1883,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseLiquidity",
									"nameLocation": "7419:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1876,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "7470:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1883,
												"src": "7437:39:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_DecreaseLiquidityParams_$1872_calldata_ptr",
													"typeString": "struct INonfungiblePositionManager.DecreaseLiquidityParams"
												},
												"typeName": {
													"id": 1875,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1874,
														"name": "DecreaseLiquidityParams",
														"nameLocations": [
															"7437:23:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1872,
														"src": "7437:23:10"
													},
													"referencedDeclaration": 1872,
													"src": "7437:23:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_DecreaseLiquidityParams_$1872_storage_ptr",
														"typeString": "struct INonfungiblePositionManager.DecreaseLiquidityParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7436:41:10"
									},
									"returnParameters": {
										"id": 1882,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1879,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "7536:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1883,
												"src": "7528:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1878,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7528:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1881,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "7553:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1883,
												"src": "7545:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1880,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7545:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7527:34:10"
									},
									"scope": 1910,
									"src": "7410:152:10",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "INonfungiblePositionManager.CollectParams",
									"id": 1892,
									"members": [
										{
											"constant": false,
											"id": 1885,
											"mutability": "mutable",
											"name": "tokenId",
											"nameLocation": "7607:7:10",
											"nodeType": "VariableDeclaration",
											"scope": 1892,
											"src": "7599:15:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1884,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "7599:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1887,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "7632:9:10",
											"nodeType": "VariableDeclaration",
											"scope": 1892,
											"src": "7624:17:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1886,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "7624:7:10",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1889,
											"mutability": "mutable",
											"name": "amount0Max",
											"nameLocation": "7659:10:10",
											"nodeType": "VariableDeclaration",
											"scope": 1892,
											"src": "7651:18:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 1888,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "7651:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1891,
											"mutability": "mutable",
											"name": "amount1Max",
											"nameLocation": "7687:10:10",
											"nodeType": "VariableDeclaration",
											"scope": 1892,
											"src": "7679:18:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 1890,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "7679:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "CollectParams",
									"nameLocation": "7575:13:10",
									"nodeType": "StructDefinition",
									"scope": 1910,
									"src": "7568:136:10",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 1893,
										"nodeType": "StructuredDocumentation",
										"src": "7710:489:10",
										"text": "@notice Collects up to a maximum amount of fees owed to a specific position to the recipient\n @param params tokenId The ID of the NFT for which tokens are being collected,\n recipient The account that should receive the tokens,\n amount0Max The maximum amount of token0 to collect,\n amount1Max The maximum amount of token1 to collect\n @return amount0 The amount of fees collected in token0\n @return amount1 The amount of fees collected in token1"
									},
									"functionSelector": "fc6f7865",
									"id": 1903,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "collect",
									"nameLocation": "8213:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1896,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "8244:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1903,
												"src": "8221:29:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_CollectParams_$1892_calldata_ptr",
													"typeString": "struct INonfungiblePositionManager.CollectParams"
												},
												"typeName": {
													"id": 1895,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1894,
														"name": "CollectParams",
														"nameLocations": [
															"8221:13:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1892,
														"src": "8221:13:10"
													},
													"referencedDeclaration": 1892,
													"src": "8221:13:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_CollectParams_$1892_storage_ptr",
														"typeString": "struct INonfungiblePositionManager.CollectParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8220:31:10"
									},
									"returnParameters": {
										"id": 1902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1899,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "8286:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1903,
												"src": "8278:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1898,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8278:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1901,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "8303:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1903,
												"src": "8295:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1900,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8295:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8277:34:10"
									},
									"scope": 1910,
									"src": "8204:108:10",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1904,
										"nodeType": "StructuredDocumentation",
										"src": "8318:213:10",
										"text": "@notice Burns a token ID, which deletes it from the NFT contract. The token must have 0 liquidity and all tokens\n must be collected first.\n @param tokenId The ID of the token that is being burned"
									},
									"functionSelector": "42966c68",
									"id": 1909,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "8545:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1906,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8558:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1909,
												"src": "8550:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1905,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8550:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8549:17:10"
									},
									"returnParameters": {
										"id": 1908,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8583:0:10"
									},
									"scope": 1910,
									"src": "8536:48:10",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1911,
							"src": "567:8019:10",
							"usedErrors": [],
							"usedEvents": [
								1506,
								1515,
								1524,
								1745,
								1756,
								1767
							]
						}
					],
					"src": "45:8542:10"
				},
				"id": 10
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol": {
				"ast": {
					"absolutePath": "contracts/uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol",
					"exportedSymbols": {
						"IPeripheryImmutableState": [
							1926
						]
					},
					"id": 1927,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1912,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IPeripheryImmutableState",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1913,
								"nodeType": "StructuredDocumentation",
								"src": "71:91:11",
								"text": "@title Immutable state\n @notice Functions that return immutable state of the router"
							},
							"fullyImplemented": false,
							"id": 1926,
							"linearizedBaseContracts": [
								1926
							],
							"name": "IPeripheryImmutableState",
							"nameLocation": "172:24:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1914,
										"nodeType": "StructuredDocumentation",
										"src": "203:57:11",
										"text": "@return Returns the address of the Uniswap V3 factory"
									},
									"functionSelector": "c45a0155",
									"id": 1919,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nameLocation": "274:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1915,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "281:2:11"
									},
									"returnParameters": {
										"id": 1918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1917,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1919,
												"src": "307:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1916,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "307:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "306:9:11"
									},
									"scope": 1926,
									"src": "265:51:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1920,
										"nodeType": "StructuredDocumentation",
										"src": "322:40:11",
										"text": "@return Returns the address of WETH9"
									},
									"functionSelector": "4aa4a4fc",
									"id": 1925,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "WETH9",
									"nameLocation": "376:5:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1921,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "381:2:11"
									},
									"returnParameters": {
										"id": 1924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1923,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1925,
												"src": "407:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1922,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "407:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "406:9:11"
									},
									"scope": 1926,
									"src": "367:49:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1927,
							"src": "162:256:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:374:11"
				},
				"id": 11
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol": {
				"ast": {
					"absolutePath": "contracts/uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol",
					"exportedSymbols": {
						"IPeripheryPayments": [
							1952
						]
					},
					"id": 1953,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1928,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IPeripheryPayments",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1929,
								"nodeType": "StructuredDocumentation",
								"src": "71:92:12",
								"text": "@title Periphery Payments\n @notice Functions to ease deposits and withdrawals of ETH"
							},
							"fullyImplemented": false,
							"id": 1952,
							"linearizedBaseContracts": [
								1952
							],
							"name": "IPeripheryPayments",
							"nameLocation": "173:18:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1930,
										"nodeType": "StructuredDocumentation",
										"src": "198:302:12",
										"text": "@notice Unwraps the contract's WETH9 balance and sends it to recipient as ETH.\n @dev The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.\n @param amountMinimum The minimum amount of WETH9 to unwrap\n @param recipient The address receiving ETH"
									},
									"functionSelector": "49404b7c",
									"id": 1937,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "unwrapWETH9",
									"nameLocation": "514:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1932,
												"mutability": "mutable",
												"name": "amountMinimum",
												"nameLocation": "534:13:12",
												"nodeType": "VariableDeclaration",
												"scope": 1937,
												"src": "526:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1931,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "526:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1934,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "557:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1937,
												"src": "549:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1933,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "549:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "525:42:12"
									},
									"returnParameters": {
										"id": 1936,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "584:0:12"
									},
									"scope": 1952,
									"src": "505:80:12",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1938,
										"nodeType": "StructuredDocumentation",
										"src": "591:225:12",
										"text": "@notice Refunds any ETH balance held by this contract to the `msg.sender`\n @dev Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps\n that use ether for the input amount"
									},
									"functionSelector": "12210e8a",
									"id": 1941,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "refundETH",
									"nameLocation": "830:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1939,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "839:2:12"
									},
									"returnParameters": {
										"id": 1940,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "858:0:12"
									},
									"scope": 1952,
									"src": "821:38:12",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1942,
										"nodeType": "StructuredDocumentation",
										"src": "865:427:12",
										"text": "@notice Transfers the full amount of a token held by this contract to recipient\n @dev The amountMinimum parameter prevents malicious contracts from stealing the token from users\n @param token The contract address of the token which will be transferred to `recipient`\n @param amountMinimum The minimum amount of token required for a transfer\n @param recipient The destination address of the token"
									},
									"functionSelector": "df2ab5bb",
									"id": 1951,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sweepToken",
									"nameLocation": "1306:10:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1944,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1334:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1951,
												"src": "1326:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1943,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1326:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1946,
												"mutability": "mutable",
												"name": "amountMinimum",
												"nameLocation": "1357:13:12",
												"nodeType": "VariableDeclaration",
												"scope": 1951,
												"src": "1349:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1945,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1349:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1948,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1388:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1951,
												"src": "1380:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1947,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1380:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1316:87:12"
									},
									"returnParameters": {
										"id": 1950,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1420:0:12"
									},
									"scope": 1952,
									"src": "1297:124:12",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1953,
							"src": "163:1260:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:1379:12"
				},
				"id": 12
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/IPoolInitializer.sol": {
				"ast": {
					"absolutePath": "contracts/uniswap/v3-periphery/contracts/interfaces/IPoolInitializer.sol",
					"exportedSymbols": {
						"IPoolInitializer": [
							1971
						]
					},
					"id": 1972,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1954,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:13"
						},
						{
							"id": 1955,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "70:19:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IPoolInitializer",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1956,
								"nodeType": "StructuredDocumentation",
								"src": "91:194:13",
								"text": "@title Creates and initializes V3 Pools\n @notice Provides a method for creating and initializing a pool, if necessary, for bundling with other methods that\n require the pool to exist."
							},
							"fullyImplemented": false,
							"id": 1971,
							"linearizedBaseContracts": [
								1971
							],
							"name": "IPoolInitializer",
							"nameLocation": "295:16:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1957,
										"nodeType": "StructuredDocumentation",
										"src": "318:648:13",
										"text": "@notice Creates a new pool if it does not exist, then initializes if not initialized\n @dev This method can be bundled with others via IMulticall for the first action (e.g. mint) performed against a pool\n @param token0 The contract address of token0 of the pool\n @param token1 The contract address of token1 of the pool\n @param fee The fee amount of the v3 pool for the specified token pair\n @param sqrtPriceX96 The initial square root price of the pool as a Q64.96 value\n @return pool Returns the pool address based on the pair of tokens and fee, will return the newly created pool address if necessary"
									},
									"functionSelector": "13ead562",
									"id": 1970,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createAndInitializePoolIfNecessary",
									"nameLocation": "980:34:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1959,
												"mutability": "mutable",
												"name": "token0",
												"nameLocation": "1032:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1970,
												"src": "1024:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1958,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1024:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1961,
												"mutability": "mutable",
												"name": "token1",
												"nameLocation": "1056:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1970,
												"src": "1048:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1960,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1048:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1963,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "1079:3:13",
												"nodeType": "VariableDeclaration",
												"scope": 1970,
												"src": "1072:10:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1962,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "1072:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1965,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "1100:12:13",
												"nodeType": "VariableDeclaration",
												"scope": 1970,
												"src": "1092:20:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1964,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1092:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1014:104:13"
									},
									"returnParameters": {
										"id": 1969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1968,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "1153:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1970,
												"src": "1145:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1967,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1145:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1144:14:13"
									},
									"scope": 1971,
									"src": "971:188:13",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1972,
							"src": "285:876:13",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:1117:13"
				},
				"id": 13
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
				"ast": {
					"absolutePath": "contracts/uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
					"exportedSymbols": {
						"ISwapRouter": [
							2071
						],
						"IUniswapV3SwapCallback": [
							2107
						]
					},
					"id": 2072,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1973,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:14"
						},
						{
							"id": 1974,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "70:19:14"
						},
						{
							"absolutePath": "contracts/uniswap/v3-periphery/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
							"file": "./callback/IUniswapV3SwapCallback.sol",
							"id": 1975,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2072,
							"sourceUnit": 2108,
							"src": "91:47:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1977,
										"name": "IUniswapV3SwapCallback",
										"nameLocations": [
											"269:22:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2107,
										"src": "269:22:14"
									},
									"id": 1978,
									"nodeType": "InheritanceSpecifier",
									"src": "269:22:14"
								}
							],
							"canonicalName": "ISwapRouter",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1976,
								"nodeType": "StructuredDocumentation",
								"src": "140:104:14",
								"text": "@title Router token swapping functionality\n @notice Functions for swapping tokens via Uniswap V3"
							},
							"fullyImplemented": false,
							"id": 2071,
							"linearizedBaseContracts": [
								2071,
								2107
							],
							"name": "ISwapRouter",
							"nameLocation": "254:11:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ISwapRouter.ExactInputSingleParams",
									"id": 1995,
									"members": [
										{
											"constant": false,
											"id": 1980,
											"mutability": "mutable",
											"name": "tokenIn",
											"nameLocation": "346:7:14",
											"nodeType": "VariableDeclaration",
											"scope": 1995,
											"src": "338:15:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1979,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "338:7:14",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1982,
											"mutability": "mutable",
											"name": "tokenOut",
											"nameLocation": "371:8:14",
											"nodeType": "VariableDeclaration",
											"scope": 1995,
											"src": "363:16:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1981,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "363:7:14",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1984,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "396:3:14",
											"nodeType": "VariableDeclaration",
											"scope": 1995,
											"src": "389:10:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 1983,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "389:6:14",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1986,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "417:9:14",
											"nodeType": "VariableDeclaration",
											"scope": 1995,
											"src": "409:17:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1985,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "409:7:14",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1988,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "444:8:14",
											"nodeType": "VariableDeclaration",
											"scope": 1995,
											"src": "436:16:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1987,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "436:7:14",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1990,
											"mutability": "mutable",
											"name": "amountIn",
											"nameLocation": "470:8:14",
											"nodeType": "VariableDeclaration",
											"scope": 1995,
											"src": "462:16:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1989,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "462:7:14",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1992,
											"mutability": "mutable",
											"name": "amountOutMinimum",
											"nameLocation": "496:16:14",
											"nodeType": "VariableDeclaration",
											"scope": 1995,
											"src": "488:24:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1991,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "488:7:14",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1994,
											"mutability": "mutable",
											"name": "sqrtPriceLimitX96",
											"nameLocation": "530:17:14",
											"nodeType": "VariableDeclaration",
											"scope": 1995,
											"src": "522:25:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 1993,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "522:7:14",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactInputSingleParams",
									"nameLocation": "305:22:14",
									"nodeType": "StructDefinition",
									"scope": 2071,
									"src": "298:256:14",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 1996,
										"nodeType": "StructuredDocumentation",
										"src": "560:250:14",
										"text": "@notice Swaps `amountIn` of one token for as much as possible of another token\n @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n @return amountOut The amount of the received token"
									},
									"functionSelector": "414bf389",
									"id": 2004,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactInputSingle",
									"nameLocation": "824:16:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1999,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "873:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2004,
												"src": "841:38:14",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactInputSingleParams_$1995_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactInputSingleParams"
												},
												"typeName": {
													"id": 1998,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1997,
														"name": "ExactInputSingleParams",
														"nameLocations": [
															"841:22:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1995,
														"src": "841:22:14"
													},
													"referencedDeclaration": 1995,
													"src": "841:22:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputSingleParams_$1995_storage_ptr",
														"typeString": "struct ISwapRouter.ExactInputSingleParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "840:40:14"
									},
									"returnParameters": {
										"id": 2003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2002,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "915:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 2004,
												"src": "907:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2001,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "906:19:14"
									},
									"scope": 2071,
									"src": "815:111:14",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactInputParams",
									"id": 2015,
									"members": [
										{
											"constant": false,
											"id": 2006,
											"mutability": "mutable",
											"name": "path",
											"nameLocation": "972:4:14",
											"nodeType": "VariableDeclaration",
											"scope": 2015,
											"src": "966:10:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 2005,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "966:5:14",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2008,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "994:9:14",
											"nodeType": "VariableDeclaration",
											"scope": 2015,
											"src": "986:17:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2007,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "986:7:14",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2010,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "1021:8:14",
											"nodeType": "VariableDeclaration",
											"scope": 2015,
											"src": "1013:16:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2009,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1013:7:14",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2012,
											"mutability": "mutable",
											"name": "amountIn",
											"nameLocation": "1047:8:14",
											"nodeType": "VariableDeclaration",
											"scope": 2015,
											"src": "1039:16:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2011,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1039:7:14",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2014,
											"mutability": "mutable",
											"name": "amountOutMinimum",
											"nameLocation": "1073:16:14",
											"nodeType": "VariableDeclaration",
											"scope": 2015,
											"src": "1065:24:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2013,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1065:7:14",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactInputParams",
									"nameLocation": "939:16:14",
									"nodeType": "StructDefinition",
									"scope": 2071,
									"src": "932:164:14",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 2016,
										"nodeType": "StructuredDocumentation",
										"src": "1102:273:14",
										"text": "@notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n @return amountOut The amount of the received token"
									},
									"functionSelector": "c04b8d59",
									"id": 2024,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactInput",
									"nameLocation": "1389:10:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2020,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2019,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "1426:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2024,
												"src": "1400:32:14",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactInputParams_$2015_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactInputParams"
												},
												"typeName": {
													"id": 2018,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2017,
														"name": "ExactInputParams",
														"nameLocations": [
															"1400:16:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2015,
														"src": "1400:16:14"
													},
													"referencedDeclaration": 2015,
													"src": "1400:16:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputParams_$2015_storage_ptr",
														"typeString": "struct ISwapRouter.ExactInputParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:34:14"
									},
									"returnParameters": {
										"id": 2023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2022,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "1468:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 2024,
												"src": "1460:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2021,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1460:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1459:19:14"
									},
									"scope": 2071,
									"src": "1380:99:14",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactOutputSingleParams",
									"id": 2041,
									"members": [
										{
											"constant": false,
											"id": 2026,
											"mutability": "mutable",
											"name": "tokenIn",
											"nameLocation": "1534:7:14",
											"nodeType": "VariableDeclaration",
											"scope": 2041,
											"src": "1526:15:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2025,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1526:7:14",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2028,
											"mutability": "mutable",
											"name": "tokenOut",
											"nameLocation": "1559:8:14",
											"nodeType": "VariableDeclaration",
											"scope": 2041,
											"src": "1551:16:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2027,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1551:7:14",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2030,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "1584:3:14",
											"nodeType": "VariableDeclaration",
											"scope": 2041,
											"src": "1577:10:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 2029,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "1577:6:14",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2032,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "1605:9:14",
											"nodeType": "VariableDeclaration",
											"scope": 2041,
											"src": "1597:17:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2031,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1597:7:14",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2034,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "1632:8:14",
											"nodeType": "VariableDeclaration",
											"scope": 2041,
											"src": "1624:16:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2033,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1624:7:14",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2036,
											"mutability": "mutable",
											"name": "amountOut",
											"nameLocation": "1658:9:14",
											"nodeType": "VariableDeclaration",
											"scope": 2041,
											"src": "1650:17:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2035,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1650:7:14",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2038,
											"mutability": "mutable",
											"name": "amountInMaximum",
											"nameLocation": "1685:15:14",
											"nodeType": "VariableDeclaration",
											"scope": 2041,
											"src": "1677:23:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2037,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1677:7:14",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2040,
											"mutability": "mutable",
											"name": "sqrtPriceLimitX96",
											"nameLocation": "1718:17:14",
											"nodeType": "VariableDeclaration",
											"scope": 2041,
											"src": "1710:25:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 2039,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "1710:7:14",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactOutputSingleParams",
									"nameLocation": "1492:23:14",
									"nodeType": "StructDefinition",
									"scope": 2071,
									"src": "1485:257:14",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 2042,
										"nodeType": "StructuredDocumentation",
										"src": "1748:250:14",
										"text": "@notice Swaps as little as possible of one token for `amountOut` of another token\n @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n @return amountIn The amount of the input token"
									},
									"functionSelector": "db3e2198",
									"id": 2050,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactOutputSingle",
									"nameLocation": "2012:17:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2045,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "2063:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2050,
												"src": "2030:39:14",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactOutputSingleParams_$2041_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactOutputSingleParams"
												},
												"typeName": {
													"id": 2044,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2043,
														"name": "ExactOutputSingleParams",
														"nameLocations": [
															"2030:23:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2041,
														"src": "2030:23:14"
													},
													"referencedDeclaration": 2041,
													"src": "2030:23:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactOutputSingleParams_$2041_storage_ptr",
														"typeString": "struct ISwapRouter.ExactOutputSingleParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2029:41:14"
									},
									"returnParameters": {
										"id": 2049,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2048,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2105:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 2050,
												"src": "2097:16:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2047,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2097:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2096:18:14"
									},
									"scope": 2071,
									"src": "2003:112:14",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactOutputParams",
									"id": 2061,
									"members": [
										{
											"constant": false,
											"id": 2052,
											"mutability": "mutable",
											"name": "path",
											"nameLocation": "2162:4:14",
											"nodeType": "VariableDeclaration",
											"scope": 2061,
											"src": "2156:10:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 2051,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "2156:5:14",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2054,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "2184:9:14",
											"nodeType": "VariableDeclaration",
											"scope": 2061,
											"src": "2176:17:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2053,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2176:7:14",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2056,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "2211:8:14",
											"nodeType": "VariableDeclaration",
											"scope": 2061,
											"src": "2203:16:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2055,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2203:7:14",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2058,
											"mutability": "mutable",
											"name": "amountOut",
											"nameLocation": "2237:9:14",
											"nodeType": "VariableDeclaration",
											"scope": 2061,
											"src": "2229:17:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2057,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2229:7:14",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2060,
											"mutability": "mutable",
											"name": "amountInMaximum",
											"nameLocation": "2264:15:14",
											"nodeType": "VariableDeclaration",
											"scope": 2061,
											"src": "2256:23:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2059,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2256:7:14",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactOutputParams",
									"nameLocation": "2128:17:14",
									"nodeType": "StructDefinition",
									"scope": 2071,
									"src": "2121:165:14",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 2062,
										"nodeType": "StructuredDocumentation",
										"src": "2292:284:14",
										"text": "@notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n @return amountIn The amount of the input token"
									},
									"functionSelector": "f28c0498",
									"id": 2070,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactOutput",
									"nameLocation": "2590:11:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2065,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "2629:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2070,
												"src": "2602:33:14",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactOutputParams_$2061_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactOutputParams"
												},
												"typeName": {
													"id": 2064,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2063,
														"name": "ExactOutputParams",
														"nameLocations": [
															"2602:17:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2061,
														"src": "2602:17:14"
													},
													"referencedDeclaration": 2061,
													"src": "2602:17:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactOutputParams_$2061_storage_ptr",
														"typeString": "struct ISwapRouter.ExactOutputParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2601:35:14"
									},
									"returnParameters": {
										"id": 2069,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2068,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2671:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 2070,
												"src": "2663:16:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2067,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2663:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2662:18:14"
									},
									"scope": 2071,
									"src": "2581:100:14",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2072,
							"src": "244:2439:14",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:2639:14"
				},
				"id": 14
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/IUniswapV3Pool.sol": {
				"ast": {
					"absolutePath": "contracts/uniswap/v3-periphery/contracts/interfaces/IUniswapV3Pool.sol",
					"exportedSymbols": {
						"IUniswapV3Pool": [
							2093
						],
						"IUniswapV3PoolActions": [
							2203
						],
						"IUniswapV3PoolDerivedState": [
							2234
						],
						"IUniswapV3PoolEvents": [
							2353
						],
						"IUniswapV3PoolImmutables": [
							2393
						],
						"IUniswapV3PoolOwnerActions": [
							2419
						],
						"IUniswapV3PoolState": [
							2527
						]
					},
					"id": 2094,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2073,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:15"
						},
						{
							"absolutePath": "contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
							"file": "./pool/IUniswapV3PoolImmutables.sol",
							"id": 2074,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2094,
							"sourceUnit": 2394,
							"src": "71:45:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolState.sol",
							"file": "./pool/IUniswapV3PoolState.sol",
							"id": 2075,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2094,
							"sourceUnit": 2528,
							"src": "117:40:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
							"file": "./pool/IUniswapV3PoolDerivedState.sol",
							"id": 2076,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2094,
							"sourceUnit": 2235,
							"src": "158:47:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
							"file": "./pool/IUniswapV3PoolActions.sol",
							"id": 2077,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2094,
							"sourceUnit": 2204,
							"src": "206:42:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
							"file": "./pool/IUniswapV3PoolOwnerActions.sol",
							"id": 2078,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2094,
							"sourceUnit": 2420,
							"src": "249:47:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
							"file": "./pool/IUniswapV3PoolEvents.sol",
							"id": 2079,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2094,
							"sourceUnit": 2354,
							"src": "297:41:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2081,
										"name": "IUniswapV3PoolImmutables",
										"nameLocations": [
											"637:24:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2393,
										"src": "637:24:15"
									},
									"id": 2082,
									"nodeType": "InheritanceSpecifier",
									"src": "637:24:15"
								},
								{
									"baseName": {
										"id": 2083,
										"name": "IUniswapV3PoolState",
										"nameLocations": [
											"667:19:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2527,
										"src": "667:19:15"
									},
									"id": 2084,
									"nodeType": "InheritanceSpecifier",
									"src": "667:19:15"
								},
								{
									"baseName": {
										"id": 2085,
										"name": "IUniswapV3PoolDerivedState",
										"nameLocations": [
											"692:26:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2234,
										"src": "692:26:15"
									},
									"id": 2086,
									"nodeType": "InheritanceSpecifier",
									"src": "692:26:15"
								},
								{
									"baseName": {
										"id": 2087,
										"name": "IUniswapV3PoolActions",
										"nameLocations": [
											"724:21:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2203,
										"src": "724:21:15"
									},
									"id": 2088,
									"nodeType": "InheritanceSpecifier",
									"src": "724:21:15"
								},
								{
									"baseName": {
										"id": 2089,
										"name": "IUniswapV3PoolOwnerActions",
										"nameLocations": [
											"751:26:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2419,
										"src": "751:26:15"
									},
									"id": 2090,
									"nodeType": "InheritanceSpecifier",
									"src": "751:26:15"
								},
								{
									"baseName": {
										"id": 2091,
										"name": "IUniswapV3PoolEvents",
										"nameLocations": [
											"783:20:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2353,
										"src": "783:20:15"
									},
									"id": 2092,
									"nodeType": "InheritanceSpecifier",
									"src": "783:20:15"
								}
							],
							"canonicalName": "IUniswapV3Pool",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2080,
								"nodeType": "StructuredDocumentation",
								"src": "340:265:15",
								"text": "@title The interface for a Uniswap V3 Pool\n @notice A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform\n to the ERC20 specification\n @dev The pool interface is broken up into many smaller pieces"
							},
							"fullyImplemented": false,
							"id": 2093,
							"linearizedBaseContracts": [
								2093,
								2353,
								2419,
								2203,
								2234,
								2527,
								2393
							],
							"name": "IUniswapV3Pool",
							"nameLocation": "615:14:15",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 2094,
							"src": "605:203:15",
							"usedErrors": [],
							"usedEvents": [
								2244,
								2261,
								2276,
								2291,
								2308,
								2323,
								2330,
								2341,
								2352
							]
						}
					],
					"src": "45:764:15"
				},
				"id": 15
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"ast": {
					"absolutePath": "contracts/uniswap/v3-periphery/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
					"exportedSymbols": {
						"IUniswapV3SwapCallback": [
							2107
						]
					},
					"id": 2108,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2095,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:16"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3SwapCallback",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2096,
								"nodeType": "StructuredDocumentation",
								"src": "71:144:16",
								"text": "@title Callback for IUniswapV3PoolActions#swap\n @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface"
							},
							"fullyImplemented": false,
							"id": 2107,
							"linearizedBaseContracts": [
								2107
							],
							"name": "IUniswapV3SwapCallback",
							"nameLocation": "225:22:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2097,
										"nodeType": "StructuredDocumentation",
										"src": "254:898:16",
										"text": "@notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n @dev In the implementation you must pay the pool tokens owed for the swap.\n The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
									},
									"functionSelector": "fa461e33",
									"id": 2106,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uniswapV3SwapCallback",
									"nameLocation": "1166:21:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2099,
												"mutability": "mutable",
												"name": "amount0Delta",
												"nameLocation": "1204:12:16",
												"nodeType": "VariableDeclaration",
												"scope": 2106,
												"src": "1197:19:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2098,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1197:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2101,
												"mutability": "mutable",
												"name": "amount1Delta",
												"nameLocation": "1233:12:16",
												"nodeType": "VariableDeclaration",
												"scope": 2106,
												"src": "1226:19:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2100,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1226:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2103,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1270:4:16",
												"nodeType": "VariableDeclaration",
												"scope": 2106,
												"src": "1255:19:16",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2102,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1255:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1187:93:16"
									},
									"returnParameters": {
										"id": 2105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1289:0:16"
									},
									"scope": 2107,
									"src": "1157:133:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2108,
							"src": "215:1077:16",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:1248:16"
				},
				"id": 16
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
				"ast": {
					"absolutePath": "contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
					"exportedSymbols": {
						"IUniswapV3PoolActions": [
							2203
						]
					},
					"id": 2204,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2109,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:17"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolActions",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2110,
								"nodeType": "StructuredDocumentation",
								"src": "71:102:17",
								"text": "@title Permissionless pool actions\n @notice Contains pool methods that can be called by anyone"
							},
							"fullyImplemented": false,
							"id": 2203,
							"linearizedBaseContracts": [
								2203
							],
							"name": "IUniswapV3PoolActions",
							"nameLocation": "183:21:17",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2111,
										"nodeType": "StructuredDocumentation",
										"src": "211:206:17",
										"text": "@notice Sets the initial price for the pool\n @dev Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\n @param sqrtPriceX96 the initial sqrt price of the pool as a Q64.96"
									},
									"functionSelector": "f637731d",
									"id": 2116,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "431:10:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2113,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "450:12:17",
												"nodeType": "VariableDeclaration",
												"scope": 2116,
												"src": "442:20:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2112,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "442:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "441:22:17"
									},
									"returnParameters": {
										"id": 2115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "472:0:17"
									},
									"scope": 2203,
									"src": "422:51:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2117,
										"nodeType": "StructuredDocumentation",
										"src": "479:1029:17",
										"text": "@notice Adds liquidity for the given recipient/tickLower/tickUpper position\n @dev The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback\n in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends\n on tickLower, tickUpper, the amount of liquidity, and the current price.\n @param recipient The address for which the liquidity will be created\n @param tickLower The lower tick of the position in which to add liquidity\n @param tickUpper The upper tick of the position in which to add liquidity\n @param amount The amount of liquidity to mint\n @param data Any data that should be passed through to the callback\n @return amount0 The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\n @return amount1 The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"
									},
									"functionSelector": "3c8a7d8d",
									"id": 2134,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "1522:4:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2119,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1544:9:17",
												"nodeType": "VariableDeclaration",
												"scope": 2134,
												"src": "1536:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2118,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1536:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2121,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "1569:9:17",
												"nodeType": "VariableDeclaration",
												"scope": 2134,
												"src": "1563:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2120,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1563:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2123,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "1594:9:17",
												"nodeType": "VariableDeclaration",
												"scope": 2134,
												"src": "1588:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2122,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1588:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2125,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1621:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 2134,
												"src": "1613:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2124,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1613:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2127,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1652:4:17",
												"nodeType": "VariableDeclaration",
												"scope": 2134,
												"src": "1637:19:17",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2126,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1637:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1526:136:17"
									},
									"returnParameters": {
										"id": 2133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2130,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1689:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 2134,
												"src": "1681:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2129,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1681:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2132,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1706:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 2134,
												"src": "1698:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1698:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1680:34:17"
									},
									"scope": 2203,
									"src": "1513:202:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2135,
										"nodeType": "StructuredDocumentation",
										"src": "1721:1053:17",
										"text": "@notice Collects tokens owed to a position\n @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\n Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\n amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\n actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\n @param recipient The address which should receive the fees collected\n @param tickLower The lower tick of the position for which to collect fees\n @param tickUpper The upper tick of the position for which to collect fees\n @param amount0Requested How much token0 should be withdrawn from the fees owed\n @param amount1Requested How much token1 should be withdrawn from the fees owed\n @return amount0 The amount of fees collected in token0\n @return amount1 The amount of fees collected in token1"
									},
									"functionSelector": "4f1eb3d8",
									"id": 2152,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "collect",
									"nameLocation": "2788:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2137,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2813:9:17",
												"nodeType": "VariableDeclaration",
												"scope": 2152,
												"src": "2805:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2805:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2139,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "2838:9:17",
												"nodeType": "VariableDeclaration",
												"scope": 2152,
												"src": "2832:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2138,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2832:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2141,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "2863:9:17",
												"nodeType": "VariableDeclaration",
												"scope": 2152,
												"src": "2857:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2140,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2857:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2143,
												"mutability": "mutable",
												"name": "amount0Requested",
												"nameLocation": "2890:16:17",
												"nodeType": "VariableDeclaration",
												"scope": 2152,
												"src": "2882:24:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2142,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2882:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2145,
												"mutability": "mutable",
												"name": "amount1Requested",
												"nameLocation": "2924:16:17",
												"nodeType": "VariableDeclaration",
												"scope": 2152,
												"src": "2916:24:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2144,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2916:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2795:151:17"
									},
									"returnParameters": {
										"id": 2151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2148,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "2973:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 2152,
												"src": "2965:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2147,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2965:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2150,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "2990:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 2152,
												"src": "2982:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2149,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2982:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2964:34:17"
									},
									"scope": 2203,
									"src": "2779:220:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2153,
										"nodeType": "StructuredDocumentation",
										"src": "3005:631:17",
										"text": "@notice Burn liquidity from the sender and account tokens owed for the liquidity to the position\n @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\n @dev Fees must be collected separately via a call to #collect\n @param tickLower The lower tick of the position for which to burn liquidity\n @param tickUpper The upper tick of the position for which to burn liquidity\n @param amount How much liquidity to burn\n @return amount0 The amount of token0 sent to the recipient\n @return amount1 The amount of token1 sent to the recipient"
									},
									"functionSelector": "a34123a7",
									"id": 2166,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "3650:4:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2155,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "3670:9:17",
												"nodeType": "VariableDeclaration",
												"scope": 2166,
												"src": "3664:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2154,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3664:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2157,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "3695:9:17",
												"nodeType": "VariableDeclaration",
												"scope": 2166,
												"src": "3689:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2156,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3689:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2159,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3722:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 2166,
												"src": "3714:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2158,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3714:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3654:80:17"
									},
									"returnParameters": {
										"id": 2165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2162,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "3761:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 2166,
												"src": "3753:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2161,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3753:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2164,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "3778:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 2166,
												"src": "3770:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3770:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3752:34:17"
									},
									"scope": 2203,
									"src": "3641:146:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2167,
										"nodeType": "StructuredDocumentation",
										"src": "3793:1015:17",
										"text": "@notice Swap token0 for token1, or token1 for token0\n @dev The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\n @param recipient The address to receive the output of the swap\n @param zeroForOne The direction of the swap, true for token0 to token1, false for token1 to token0\n @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\n @param sqrtPriceLimitX96 The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\n value after the swap. If one for zero, the price cannot be greater than this value after the swap\n @param data Any data to be passed through to the callback\n @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\n @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive"
									},
									"functionSelector": "128acb08",
									"id": 2184,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nameLocation": "4822:4:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2169,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "4844:9:17",
												"nodeType": "VariableDeclaration",
												"scope": 2184,
												"src": "4836:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4836:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2171,
												"mutability": "mutable",
												"name": "zeroForOne",
												"nameLocation": "4868:10:17",
												"nodeType": "VariableDeclaration",
												"scope": 2184,
												"src": "4863:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2170,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2173,
												"mutability": "mutable",
												"name": "amountSpecified",
												"nameLocation": "4895:15:17",
												"nodeType": "VariableDeclaration",
												"scope": 2184,
												"src": "4888:22:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2172,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "4888:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2175,
												"mutability": "mutable",
												"name": "sqrtPriceLimitX96",
												"nameLocation": "4928:17:17",
												"nodeType": "VariableDeclaration",
												"scope": 2184,
												"src": "4920:25:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2174,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "4920:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2177,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4970:4:17",
												"nodeType": "VariableDeclaration",
												"scope": 2184,
												"src": "4955:19:17",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2176,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4955:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4826:154:17"
									},
									"returnParameters": {
										"id": 2183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2180,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "5006:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 2184,
												"src": "4999:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2179,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "4999:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2182,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "5022:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 2184,
												"src": "5015:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2181,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "5015:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4998:32:17"
									},
									"scope": 2203,
									"src": "4813:218:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2185,
										"nodeType": "StructuredDocumentation",
										"src": "5037:657:17",
										"text": "@notice Receive token0 and/or token1 and pay it back, plus a fee, in the callback\n @dev The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallback\n @dev Can be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling\n with 0 amount{0,1} and sending the donation amount(s) from the callback\n @param recipient The address which will receive the token0 and token1 amounts\n @param amount0 The amount of token0 to send\n @param amount1 The amount of token1 to send\n @param data Any data to be passed through to the callback"
									},
									"functionSelector": "490e6cbc",
									"id": 2196,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "flash",
									"nameLocation": "5708:5:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2187,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "5731:9:17",
												"nodeType": "VariableDeclaration",
												"scope": 2196,
												"src": "5723:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2186,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5723:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2189,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "5758:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 2196,
												"src": "5750:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5750:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2191,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "5783:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 2196,
												"src": "5775:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5775:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2193,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5815:4:17",
												"nodeType": "VariableDeclaration",
												"scope": 2196,
												"src": "5800:19:17",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2192,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5800:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5713:112:17"
									},
									"returnParameters": {
										"id": 2195,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5834:0:17"
									},
									"scope": 2203,
									"src": "5699:136:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2197,
										"nodeType": "StructuredDocumentation",
										"src": "5841:367:17",
										"text": "@notice Increase the maximum number of price and liquidity observations that this pool will store\n @dev This method is no-op if the pool already has an observationCardinalityNext greater than or equal to\n the input observationCardinalityNext.\n @param observationCardinalityNext The desired minimum number of observations for the pool to store"
									},
									"functionSelector": "32148f67",
									"id": 2202,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "increaseObservationCardinalityNext",
									"nameLocation": "6222:34:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2199,
												"mutability": "mutable",
												"name": "observationCardinalityNext",
												"nameLocation": "6264:26:17",
												"nodeType": "VariableDeclaration",
												"scope": 2202,
												"src": "6257:33:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2198,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "6257:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6256:35:17"
									},
									"returnParameters": {
										"id": 2201,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6300:0:17"
									},
									"scope": 2203,
									"src": "6213:88:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2204,
							"src": "173:6130:17",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:6259:17"
				},
				"id": 17
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
				"ast": {
					"absolutePath": "contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
					"exportedSymbols": {
						"IUniswapV3PoolDerivedState": [
							2234
						]
					},
					"id": 2235,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2205,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:18"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolDerivedState",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2206,
								"nodeType": "StructuredDocumentation",
								"src": "71:222:18",
								"text": "@title Pool state that is not stored\n @notice Contains view functions to provide information about the pool that is computed rather than stored on the\n blockchain. The functions here may have variable gas costs."
							},
							"fullyImplemented": false,
							"id": 2234,
							"linearizedBaseContracts": [
								2234
							],
							"name": "IUniswapV3PoolDerivedState",
							"nameLocation": "303:26:18",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2207,
										"nodeType": "StructuredDocumentation",
										"src": "336:1045:18",
										"text": "@notice Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\n @dev To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing\n the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,\n you must call it with secondsAgos = [3600, 0].\n @dev The time weighted average tick represents the geometric time weighted average price of the pool, in\n log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\n @param secondsAgos From how long ago each cumulative tick and liquidity value should be returned\n @return tickCumulatives Cumulative tick values as of each `secondsAgos` from the current block timestamp\n @return secondsPerLiquidityCumulativeX128s Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block\n timestamp"
									},
									"functionSelector": "883bdbfd",
									"id": 2219,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "observe",
									"nameLocation": "1395:7:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2210,
												"mutability": "mutable",
												"name": "secondsAgos",
												"nameLocation": "1421:11:18",
												"nodeType": "VariableDeclaration",
												"scope": 2219,
												"src": "1403:29:18",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
													"typeString": "uint32[]"
												},
												"typeName": {
													"baseType": {
														"id": 2208,
														"name": "uint32",
														"nodeType": "ElementaryTypeName",
														"src": "1403:6:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"id": 2209,
													"nodeType": "ArrayTypeName",
													"src": "1403:8:18",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
														"typeString": "uint32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1402:31:18"
									},
									"returnParameters": {
										"id": 2218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2214,
												"mutability": "mutable",
												"name": "tickCumulatives",
												"nameLocation": "1496:15:18",
												"nodeType": "VariableDeclaration",
												"scope": 2219,
												"src": "1481:30:18",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_int56_$dyn_memory_ptr",
													"typeString": "int56[]"
												},
												"typeName": {
													"baseType": {
														"id": 2212,
														"name": "int56",
														"nodeType": "ElementaryTypeName",
														"src": "1481:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"id": 2213,
													"nodeType": "ArrayTypeName",
													"src": "1481:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_int56_$dyn_storage_ptr",
														"typeString": "int56[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2217,
												"mutability": "mutable",
												"name": "secondsPerLiquidityCumulativeX128s",
												"nameLocation": "1530:34:18",
												"nodeType": "VariableDeclaration",
												"scope": 2219,
												"src": "1513:51:18",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint160_$dyn_memory_ptr",
													"typeString": "uint160[]"
												},
												"typeName": {
													"baseType": {
														"id": 2215,
														"name": "uint160",
														"nodeType": "ElementaryTypeName",
														"src": "1513:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"id": 2216,
													"nodeType": "ArrayTypeName",
													"src": "1513:9:18",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint160_$dyn_storage_ptr",
														"typeString": "uint160[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1480:85:18"
									},
									"scope": 2234,
									"src": "1386:180:18",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2220,
										"nodeType": "StructuredDocumentation",
										"src": "1572:771:18",
										"text": "@notice Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\n @dev Snapshots must only be compared to other snapshots, taken over a period for which a position existed.\n I.e., snapshots cannot be compared if a position is not held for the entire period between when the first\n snapshot is taken and the second snapshot is taken.\n @param tickLower The lower tick of the range\n @param tickUpper The upper tick of the range\n @return tickCumulativeInside The snapshot of the tick accumulator for the range\n @return secondsPerLiquidityInsideX128 The snapshot of seconds per liquidity for the range\n @return secondsInside The snapshot of seconds per liquidity for the range"
									},
									"functionSelector": "a38807f2",
									"id": 2233,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "snapshotCumulativesInside",
									"nameLocation": "2357:25:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2222,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "2389:9:18",
												"nodeType": "VariableDeclaration",
												"scope": 2233,
												"src": "2383:15:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2221,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2383:5:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2224,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "2406:9:18",
												"nodeType": "VariableDeclaration",
												"scope": 2233,
												"src": "2400:15:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2223,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2400:5:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2382:34:18"
									},
									"returnParameters": {
										"id": 2232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2227,
												"mutability": "mutable",
												"name": "tickCumulativeInside",
												"nameLocation": "2483:20:18",
												"nodeType": "VariableDeclaration",
												"scope": 2233,
												"src": "2477:26:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 2226,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "2477:5:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2229,
												"mutability": "mutable",
												"name": "secondsPerLiquidityInsideX128",
												"nameLocation": "2525:29:18",
												"nodeType": "VariableDeclaration",
												"scope": 2233,
												"src": "2517:37:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2228,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "2517:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2231,
												"mutability": "mutable",
												"name": "secondsInside",
												"nameLocation": "2575:13:18",
												"nodeType": "VariableDeclaration",
												"scope": 2233,
												"src": "2568:20:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2230,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2568:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2463:135:18"
									},
									"scope": 2234,
									"src": "2348:251:18",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2235,
							"src": "293:2308:18",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:2557:18"
				},
				"id": 18
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
				"ast": {
					"absolutePath": "contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
					"exportedSymbols": {
						"IUniswapV3PoolEvents": [
							2353
						]
					},
					"id": 2354,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2236,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:19"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolEvents",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2237,
								"nodeType": "StructuredDocumentation",
								"src": "71:88:19",
								"text": "@title Events emitted by a pool\n @notice Contains all events emitted by the pool"
							},
							"fullyImplemented": true,
							"id": 2353,
							"linearizedBaseContracts": [
								2353
							],
							"name": "IUniswapV3PoolEvents",
							"nameLocation": "169:20:19",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 2238,
										"nodeType": "StructuredDocumentation",
										"src": "196:344:19",
										"text": "@notice Emitted exactly once by a pool when #initialize is first called on the pool\n @dev Mint/Burn/Swap cannot be emitted by the pool before Initialize\n @param sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96\n @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool"
									},
									"eventSelector": "98636036cb66a9c19a37435efc1e90142190214e8abeb821bdba3f2990dd4c95",
									"id": 2244,
									"name": "Initialize",
									"nameLocation": "551:10:19",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2240,
												"indexed": false,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "570:12:19",
												"nodeType": "VariableDeclaration",
												"scope": 2244,
												"src": "562:20:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2239,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "562:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2242,
												"indexed": false,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "590:4:19",
												"nodeType": "VariableDeclaration",
												"scope": 2244,
												"src": "584:10:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2241,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "584:5:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "561:34:19"
									},
									"src": "545:51:19"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2245,
										"nodeType": "StructuredDocumentation",
										"src": "602:551:19",
										"text": "@notice Emitted when liquidity is minted for a given position\n @param sender The address that minted the liquidity\n @param owner The owner of the position and recipient of any minted liquidity\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount The amount of liquidity minted to the position range\n @param amount0 How much token0 was required for the minted liquidity\n @param amount1 How much token1 was required for the minted liquidity"
									},
									"eventSelector": "7a53080ba414158be7ec69b987b5fb7d07dee101fe85488f0853ae16239d0bde",
									"id": 2261,
									"name": "Mint",
									"nameLocation": "1164:4:19",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2247,
												"indexed": false,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1186:6:19",
												"nodeType": "VariableDeclaration",
												"scope": 2261,
												"src": "1178:14:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2246,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1178:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2249,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1218:5:19",
												"nodeType": "VariableDeclaration",
												"scope": 2261,
												"src": "1202:21:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1202:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2251,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "1247:9:19",
												"nodeType": "VariableDeclaration",
												"scope": 2261,
												"src": "1233:23:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2250,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1233:5:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2253,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "1280:9:19",
												"nodeType": "VariableDeclaration",
												"scope": 2261,
												"src": "1266:23:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2252,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1266:5:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2255,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1307:6:19",
												"nodeType": "VariableDeclaration",
												"scope": 2261,
												"src": "1299:14:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2254,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1299:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2257,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1331:7:19",
												"nodeType": "VariableDeclaration",
												"scope": 2261,
												"src": "1323:15:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2256,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1323:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2259,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1356:7:19",
												"nodeType": "VariableDeclaration",
												"scope": 2261,
												"src": "1348:15:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1348:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1168:201:19"
									},
									"src": "1158:212:19"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2262,
										"nodeType": "StructuredDocumentation",
										"src": "1376:493:19",
										"text": "@notice Emitted when fees are collected by the owner of a position\n @dev Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\n @param owner The owner of the position for which fees are collected\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount0 The amount of token0 fees collected\n @param amount1 The amount of token1 fees collected"
									},
									"eventSelector": "70935338e69775456a85ddef226c395fb668b63fa0115f5f20610b388e6ca9c0",
									"id": 2276,
									"name": "Collect",
									"nameLocation": "1880:7:19",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2264,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1913:5:19",
												"nodeType": "VariableDeclaration",
												"scope": 2276,
												"src": "1897:21:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1897:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2266,
												"indexed": false,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1936:9:19",
												"nodeType": "VariableDeclaration",
												"scope": 2276,
												"src": "1928:17:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1928:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2268,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "1969:9:19",
												"nodeType": "VariableDeclaration",
												"scope": 2276,
												"src": "1955:23:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2267,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1955:5:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2270,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "2002:9:19",
												"nodeType": "VariableDeclaration",
												"scope": 2276,
												"src": "1988:23:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2269,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1988:5:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2272,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "2029:7:19",
												"nodeType": "VariableDeclaration",
												"scope": 2276,
												"src": "2021:15:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2271,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2021:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2274,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "2054:7:19",
												"nodeType": "VariableDeclaration",
												"scope": 2276,
												"src": "2046:15:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2273,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2046:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1887:180:19"
									},
									"src": "1874:194:19"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2277,
										"nodeType": "StructuredDocumentation",
										"src": "2074:523:19",
										"text": "@notice Emitted when a position's liquidity is removed\n @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\n @param owner The owner of the position for which liquidity is removed\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount The amount of liquidity to remove\n @param amount0 The amount of token0 withdrawn\n @param amount1 The amount of token1 withdrawn"
									},
									"eventSelector": "0c396cd989a39f4459b5fa1aed6a9a8dcdbc45908acfd67e028cd568da98982c",
									"id": 2291,
									"name": "Burn",
									"nameLocation": "2608:4:19",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2279,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2638:5:19",
												"nodeType": "VariableDeclaration",
												"scope": 2291,
												"src": "2622:21:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2278,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2622:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2281,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "2667:9:19",
												"nodeType": "VariableDeclaration",
												"scope": 2291,
												"src": "2653:23:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2280,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2653:5:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2283,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "2700:9:19",
												"nodeType": "VariableDeclaration",
												"scope": 2291,
												"src": "2686:23:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2282,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2686:5:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2285,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:19",
												"nodeType": "VariableDeclaration",
												"scope": 2291,
												"src": "2719:14:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2284,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2287,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "2751:7:19",
												"nodeType": "VariableDeclaration",
												"scope": 2291,
												"src": "2743:15:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2743:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2289,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "2776:7:19",
												"nodeType": "VariableDeclaration",
												"scope": 2291,
												"src": "2768:15:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2288,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2612:177:19"
									},
									"src": "2602:188:19"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2292,
										"nodeType": "StructuredDocumentation",
										"src": "2796:600:19",
										"text": "@notice Emitted by the pool for any swaps between token0 and token1\n @param sender The address that initiated the swap call, and that received the callback\n @param recipient The address that received the output of the swap\n @param amount0 The delta of the token0 balance of the pool\n @param amount1 The delta of the token1 balance of the pool\n @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\n @param liquidity The liquidity of the pool after the swap\n @param tick The log base 1.0001 of price of the pool after the swap"
									},
									"eventSelector": "c42079f94a6350d7e6235f29174924f928cc2ac818eb64fed8004e115fbcca67",
									"id": 2308,
									"name": "Swap",
									"nameLocation": "3407:4:19",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2294,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3437:6:19",
												"nodeType": "VariableDeclaration",
												"scope": 2308,
												"src": "3421:22:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3421:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2296,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3469:9:19",
												"nodeType": "VariableDeclaration",
												"scope": 2308,
												"src": "3453:25:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2295,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3453:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2298,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "3495:7:19",
												"nodeType": "VariableDeclaration",
												"scope": 2308,
												"src": "3488:14:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2297,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3488:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2300,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "3519:7:19",
												"nodeType": "VariableDeclaration",
												"scope": 2308,
												"src": "3512:14:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2299,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3512:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2302,
												"indexed": false,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "3544:12:19",
												"nodeType": "VariableDeclaration",
												"scope": 2308,
												"src": "3536:20:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2301,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "3536:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2304,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "3574:9:19",
												"nodeType": "VariableDeclaration",
												"scope": 2308,
												"src": "3566:17:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2303,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3566:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2306,
												"indexed": false,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "3599:4:19",
												"nodeType": "VariableDeclaration",
												"scope": 2308,
												"src": "3593:10:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2305,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3593:5:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3411:198:19"
									},
									"src": "3401:209:19"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2309,
										"nodeType": "StructuredDocumentation",
										"src": "3616:562:19",
										"text": "@notice Emitted by the pool for any flashes of token0/token1\n @param sender The address that initiated the swap call, and that received the callback\n @param recipient The address that received the tokens from flash\n @param amount0 The amount of token0 that was flashed\n @param amount1 The amount of token1 that was flashed\n @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\n @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee"
									},
									"eventSelector": "bdbdb71d7860376ba52b25a5028beea23581364a40522f6bcfb86bb1f2dca633",
									"id": 2323,
									"name": "Flash",
									"nameLocation": "4189:5:19",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2311,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4220:6:19",
												"nodeType": "VariableDeclaration",
												"scope": 2323,
												"src": "4204:22:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4204:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2313,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "4252:9:19",
												"nodeType": "VariableDeclaration",
												"scope": 2323,
												"src": "4236:25:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2312,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4236:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2315,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "4279:7:19",
												"nodeType": "VariableDeclaration",
												"scope": 2323,
												"src": "4271:15:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4271:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2317,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "4304:7:19",
												"nodeType": "VariableDeclaration",
												"scope": 2323,
												"src": "4296:15:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2316,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4296:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2319,
												"indexed": false,
												"mutability": "mutable",
												"name": "paid0",
												"nameLocation": "4329:5:19",
												"nodeType": "VariableDeclaration",
												"scope": 2323,
												"src": "4321:13:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2318,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4321:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2321,
												"indexed": false,
												"mutability": "mutable",
												"name": "paid1",
												"nameLocation": "4352:5:19",
												"nodeType": "VariableDeclaration",
												"scope": 2323,
												"src": "4344:13:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4344:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4194:169:19"
									},
									"src": "4183:181:19"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2324,
										"nodeType": "StructuredDocumentation",
										"src": "4370:451:19",
										"text": "@notice Emitted by the pool for increases to the number of observations that can be stored\n @dev observationCardinalityNext is not the observation cardinality until an observation is written at the index\n just before a mint/swap/burn.\n @param observationCardinalityNextOld The previous value of the next observation cardinality\n @param observationCardinalityNextNew The updated value of the next observation cardinality"
									},
									"eventSelector": "ac49e518f90a358f652e4400164f05a5d8f7e35e7747279bc3a93dbf584e125a",
									"id": 2330,
									"name": "IncreaseObservationCardinalityNext",
									"nameLocation": "4832:34:19",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2326,
												"indexed": false,
												"mutability": "mutable",
												"name": "observationCardinalityNextOld",
												"nameLocation": "4883:29:19",
												"nodeType": "VariableDeclaration",
												"scope": 2330,
												"src": "4876:36:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2325,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4876:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2328,
												"indexed": false,
												"mutability": "mutable",
												"name": "observationCardinalityNextNew",
												"nameLocation": "4929:29:19",
												"nodeType": "VariableDeclaration",
												"scope": 2330,
												"src": "4922:36:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2327,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4922:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4866:98:19"
									},
									"src": "4826:139:19"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2331,
										"nodeType": "StructuredDocumentation",
										"src": "4971:370:19",
										"text": "@notice Emitted when the protocol fee is changed by the pool\n @param feeProtocol0Old The previous value of the token0 protocol fee\n @param feeProtocol1Old The previous value of the token1 protocol fee\n @param feeProtocol0New The updated value of the token0 protocol fee\n @param feeProtocol1New The updated value of the token1 protocol fee"
									},
									"eventSelector": "973d8d92bb299f4af6ce49b52a8adb85ae46b9f214c4c4fc06ac77401237b133",
									"id": 2341,
									"name": "SetFeeProtocol",
									"nameLocation": "5352:14:19",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2333,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol0Old",
												"nameLocation": "5373:15:19",
												"nodeType": "VariableDeclaration",
												"scope": 2341,
												"src": "5367:21:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2332,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5367:5:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2335,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol1Old",
												"nameLocation": "5396:15:19",
												"nodeType": "VariableDeclaration",
												"scope": 2341,
												"src": "5390:21:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2334,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5390:5:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2337,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol0New",
												"nameLocation": "5419:15:19",
												"nodeType": "VariableDeclaration",
												"scope": 2341,
												"src": "5413:21:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2336,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5413:5:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2339,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol1New",
												"nameLocation": "5442:15:19",
												"nodeType": "VariableDeclaration",
												"scope": 2341,
												"src": "5436:21:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2338,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5436:5:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5366:92:19"
									},
									"src": "5346:113:19"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2342,
										"nodeType": "StructuredDocumentation",
										"src": "5465:384:19",
										"text": "@notice Emitted when the collected protocol fees are withdrawn by the factory owner\n @param sender The address that collects the protocol fees\n @param recipient The address that receives the collected protocol fees\n @param amount0 The amount of token0 protocol fees that is withdrawn\n @param amount0 The amount of token1 protocol fees that is withdrawn"
									},
									"eventSelector": "596b573906218d3411850b26a6b437d6c4522fdb43d2d2386263f86d50b8b151",
									"id": 2352,
									"name": "CollectProtocol",
									"nameLocation": "5860:15:19",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2344,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5892:6:19",
												"nodeType": "VariableDeclaration",
												"scope": 2352,
												"src": "5876:22:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5876:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2346,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "5916:9:19",
												"nodeType": "VariableDeclaration",
												"scope": 2352,
												"src": "5900:25:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2345,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5900:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2348,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "5935:7:19",
												"nodeType": "VariableDeclaration",
												"scope": 2352,
												"src": "5927:15:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2347,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5927:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2350,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "5952:7:19",
												"nodeType": "VariableDeclaration",
												"scope": 2352,
												"src": "5944:15:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2349,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5944:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5875:85:19"
									},
									"src": "5854:107:19"
								}
							],
							"scope": 2354,
							"src": "159:5804:19",
							"usedErrors": [],
							"usedEvents": [
								2244,
								2261,
								2276,
								2291,
								2308,
								2323,
								2330,
								2341,
								2352
							]
						}
					],
					"src": "45:5919:19"
				},
				"id": 19
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
				"ast": {
					"absolutePath": "contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
					"exportedSymbols": {
						"IUniswapV3PoolImmutables": [
							2393
						]
					},
					"id": 2394,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2355,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:20"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolImmutables",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2356,
								"nodeType": "StructuredDocumentation",
								"src": "71:153:20",
								"text": "@title Pool state that never changes\n @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values"
							},
							"fullyImplemented": false,
							"id": 2393,
							"linearizedBaseContracts": [
								2393
							],
							"name": "IUniswapV3PoolImmutables",
							"nameLocation": "234:24:20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2357,
										"nodeType": "StructuredDocumentation",
										"src": "265:138:20",
										"text": "@notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\n @return The contract address"
									},
									"functionSelector": "c45a0155",
									"id": 2362,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nameLocation": "417:7:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2358,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "424:2:20"
									},
									"returnParameters": {
										"id": 2361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2360,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2362,
												"src": "450:7:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "450:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "449:9:20"
									},
									"scope": 2393,
									"src": "408:51:20",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2363,
										"nodeType": "StructuredDocumentation",
										"src": "465:113:20",
										"text": "@notice The first of the two tokens of the pool, sorted by address\n @return The token contract address"
									},
									"functionSelector": "0dfe1681",
									"id": 2368,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token0",
									"nameLocation": "592:6:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2364,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "598:2:20"
									},
									"returnParameters": {
										"id": 2367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2366,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2368,
												"src": "624:7:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "624:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "623:9:20"
									},
									"scope": 2393,
									"src": "583:50:20",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2369,
										"nodeType": "StructuredDocumentation",
										"src": "639:114:20",
										"text": "@notice The second of the two tokens of the pool, sorted by address\n @return The token contract address"
									},
									"functionSelector": "d21220a7",
									"id": 2374,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token1",
									"nameLocation": "767:6:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2370,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "773:2:20"
									},
									"returnParameters": {
										"id": 2373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2372,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2374,
												"src": "799:7:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2371,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "799:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "798:9:20"
									},
									"scope": 2393,
									"src": "758:50:20",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2375,
										"nodeType": "StructuredDocumentation",
										"src": "814:84:20",
										"text": "@notice The pool's fee in hundredths of a bip, i.e. 1e-6\n @return The fee"
									},
									"functionSelector": "ddca3f43",
									"id": 2380,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "fee",
									"nameLocation": "912:3:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "915:2:20"
									},
									"returnParameters": {
										"id": 2379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2380,
												"src": "941:6:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 2377,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "941:6:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "940:8:20"
									},
									"scope": 2393,
									"src": "903:46:20",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2381,
										"nodeType": "StructuredDocumentation",
										"src": "955:358:20",
										"text": "@notice The pool tick spacing\n @dev Ticks can only be used at multiples of this value, minimum of 1 and always positive\n e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ...\n This value is an int24 to avoid casting even though it is always positive.\n @return The tick spacing"
									},
									"functionSelector": "d0c93a7c",
									"id": 2386,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tickSpacing",
									"nameLocation": "1327:11:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2382,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1338:2:20"
									},
									"returnParameters": {
										"id": 2385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2384,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2386,
												"src": "1364:5:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2383,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1364:5:20",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1363:7:20"
									},
									"scope": 2393,
									"src": "1318:53:20",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2387,
										"nodeType": "StructuredDocumentation",
										"src": "1377:363:20",
										"text": "@notice The maximum amount of position liquidity that can use any tick in the range\n @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\n also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\n @return The max amount of liquidity per tick"
									},
									"functionSelector": "70cf754a",
									"id": 2392,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "maxLiquidityPerTick",
									"nameLocation": "1754:19:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2388,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:2:20"
									},
									"returnParameters": {
										"id": 2391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2390,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2392,
												"src": "1799:7:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2389,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1799:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1798:9:20"
									},
									"scope": 2393,
									"src": "1745:63:20",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2394,
							"src": "224:1586:20",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:1766:20"
				},
				"id": 20
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
				"ast": {
					"absolutePath": "contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
					"exportedSymbols": {
						"IUniswapV3PoolOwnerActions": [
							2419
						]
					},
					"id": 2420,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2395,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "45:25:21"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolOwnerActions",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2396,
								"nodeType": "StructuredDocumentation",
								"src": "72:116:21",
								"text": "@title Permissioned pool actions\n @notice Contains pool methods that may only be called by the factory owner"
							},
							"fullyImplemented": false,
							"id": 2419,
							"linearizedBaseContracts": [
								2419
							],
							"name": "IUniswapV3PoolOwnerActions",
							"nameLocation": "198:26:21",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2397,
										"nodeType": "StructuredDocumentation",
										"src": "231:205:21",
										"text": "@notice Set the denominator of the protocol's % share of the fees\n @param feeProtocol0 new protocol fee for token0 of the pool\n @param feeProtocol1 new protocol fee for token1 of the pool"
									},
									"functionSelector": "8206a4d1",
									"id": 2404,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeProtocol",
									"nameLocation": "450:14:21",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2399,
												"mutability": "mutable",
												"name": "feeProtocol0",
												"nameLocation": "471:12:21",
												"nodeType": "VariableDeclaration",
												"scope": 2404,
												"src": "465:18:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2398,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "465:5:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2401,
												"mutability": "mutable",
												"name": "feeProtocol1",
												"nameLocation": "491:12:21",
												"nodeType": "VariableDeclaration",
												"scope": 2404,
												"src": "485:18:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2400,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "485:5:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "464:40:21"
									},
									"returnParameters": {
										"id": 2403,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:0:21"
									},
									"scope": 2419,
									"src": "441:73:21",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2405,
										"nodeType": "StructuredDocumentation",
										"src": "520:483:21",
										"text": "@notice Collect the protocol fee accrued to the pool\n @param recipient The address to which collected protocol fees should be sent\n @param amount0Requested The maximum amount of token0 to send, can be 0 to collect fees in only token1\n @param amount1Requested The maximum amount of token1 to send, can be 0 to collect fees in only token0\n @return amount0 The protocol fee collected in token0\n @return amount1 The protocol fee collected in token1"
									},
									"functionSelector": "85b66729",
									"id": 2418,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "collectProtocol",
									"nameLocation": "1017:15:21",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2407,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1050:9:21",
												"nodeType": "VariableDeclaration",
												"scope": 2418,
												"src": "1042:17:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2406,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:21",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2409,
												"mutability": "mutable",
												"name": "amount0Requested",
												"nameLocation": "1077:16:21",
												"nodeType": "VariableDeclaration",
												"scope": 2418,
												"src": "1069:24:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2408,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2411,
												"mutability": "mutable",
												"name": "amount1Requested",
												"nameLocation": "1111:16:21",
												"nodeType": "VariableDeclaration",
												"scope": 2418,
												"src": "1103:24:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2410,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1103:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1032:101:21"
									},
									"returnParameters": {
										"id": 2417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2414,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1160:7:21",
												"nodeType": "VariableDeclaration",
												"scope": 2418,
												"src": "1152:15:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2413,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1152:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2416,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1177:7:21",
												"nodeType": "VariableDeclaration",
												"scope": 2418,
												"src": "1169:15:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2415,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1169:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1151:34:21"
									},
									"scope": 2419,
									"src": "1008:178:21",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2420,
							"src": "188:1000:21",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:1144:21"
				},
				"id": 21
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
				"ast": {
					"absolutePath": "contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolState.sol",
					"exportedSymbols": {
						"IUniswapV3PoolState": [
							2527
						]
					},
					"id": 2528,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2421,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "45:25:22"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolState",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2422,
								"nodeType": "StructuredDocumentation",
								"src": "72:169:22",
								"text": "@title Pool state that can change\n @notice These methods compose the pool's state, and can change with any frequency including multiple times\n per transaction"
							},
							"fullyImplemented": false,
							"id": 2527,
							"linearizedBaseContracts": [
								2527
							],
							"name": "IUniswapV3PoolState",
							"nameLocation": "251:19:22",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2423,
										"nodeType": "StructuredDocumentation",
										"src": "277:1140:22",
										"text": "@notice The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas\n when accessed externally.\n @return sqrtPriceX96 The current price of the pool as a sqrt(token1/token0) Q64.96 value\n tick The current tick of the pool, i.e. according to the last tick transition that was run.\n This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick\n boundary.\n observationIndex The index of the last oracle observation that was written,\n observationCardinality The current maximum number of observations stored in the pool,\n observationCardinalityNext The next maximum number of observations, to be updated when the observation.\n feeProtocol The protocol fee for both tokens of the pool.\n Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0\n is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee.\n unlocked Whether the pool is currently locked to reentrancy"
									},
									"functionSelector": "3850c7bd",
									"id": 2440,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "slot0",
									"nameLocation": "1431:5:22",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2424,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1436:2:22"
									},
									"returnParameters": {
										"id": 2439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2426,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "1507:12:22",
												"nodeType": "VariableDeclaration",
												"scope": 2440,
												"src": "1499:20:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2425,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1499:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2428,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "1539:4:22",
												"nodeType": "VariableDeclaration",
												"scope": 2440,
												"src": "1533:10:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2427,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1533:5:22",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2430,
												"mutability": "mutable",
												"name": "observationIndex",
												"nameLocation": "1564:16:22",
												"nodeType": "VariableDeclaration",
												"scope": 2440,
												"src": "1557:23:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2429,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1557:6:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2432,
												"mutability": "mutable",
												"name": "observationCardinality",
												"nameLocation": "1601:22:22",
												"nodeType": "VariableDeclaration",
												"scope": 2440,
												"src": "1594:29:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2431,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1594:6:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2434,
												"mutability": "mutable",
												"name": "observationCardinalityNext",
												"nameLocation": "1644:26:22",
												"nodeType": "VariableDeclaration",
												"scope": 2440,
												"src": "1637:33:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2433,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1637:6:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2436,
												"mutability": "mutable",
												"name": "feeProtocol",
												"nameLocation": "1690:11:22",
												"nodeType": "VariableDeclaration",
												"scope": 2440,
												"src": "1684:17:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2435,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1684:5:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2438,
												"mutability": "mutable",
												"name": "unlocked",
												"nameLocation": "1720:8:22",
												"nodeType": "VariableDeclaration",
												"scope": 2440,
												"src": "1715:13:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2437,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1715:4:22",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1485:253:22"
									},
									"scope": 2527,
									"src": "1422:317:22",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2441,
										"nodeType": "StructuredDocumentation",
										"src": "1745:168:22",
										"text": "@notice The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\n @dev This value can overflow the uint256"
									},
									"functionSelector": "f3058399",
									"id": 2446,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeGrowthGlobal0X128",
									"nameLocation": "1927:20:22",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2442,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1947:2:22"
									},
									"returnParameters": {
										"id": 2445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2444,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2446,
												"src": "1973:7:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2443,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1973:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1972:9:22"
									},
									"scope": 2527,
									"src": "1918:64:22",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2447,
										"nodeType": "StructuredDocumentation",
										"src": "1988:168:22",
										"text": "@notice The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\n @dev This value can overflow the uint256"
									},
									"functionSelector": "46141319",
									"id": 2452,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeGrowthGlobal1X128",
									"nameLocation": "2170:20:22",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2448,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2190:2:22"
									},
									"returnParameters": {
										"id": 2451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2450,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2452,
												"src": "2216:7:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2216:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2215:9:22"
									},
									"scope": 2527,
									"src": "2161:64:22",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2453,
										"nodeType": "StructuredDocumentation",
										"src": "2231:147:22",
										"text": "@notice The amounts of token0 and token1 that are owed to the protocol\n @dev Protocol fees will never exceed uint128 max in either token"
									},
									"functionSelector": "1ad8b03b",
									"id": 2460,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "protocolFees",
									"nameLocation": "2392:12:22",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2454,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2404:2:22"
									},
									"returnParameters": {
										"id": 2459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2456,
												"mutability": "mutable",
												"name": "token0",
												"nameLocation": "2438:6:22",
												"nodeType": "VariableDeclaration",
												"scope": 2460,
												"src": "2430:14:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2455,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2430:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2458,
												"mutability": "mutable",
												"name": "token1",
												"nameLocation": "2454:6:22",
												"nodeType": "VariableDeclaration",
												"scope": 2460,
												"src": "2446:14:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2457,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2446:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2429:32:22"
									},
									"scope": 2527,
									"src": "2383:79:22",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2461,
										"nodeType": "StructuredDocumentation",
										"src": "2468:150:22",
										"text": "@notice The currently in range liquidity available to the pool\n @dev This value has no relationship to the total liquidity across all ticks"
									},
									"functionSelector": "1a686502",
									"id": 2466,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "liquidity",
									"nameLocation": "2632:9:22",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2462,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2641:2:22"
									},
									"returnParameters": {
										"id": 2465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2464,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2466,
												"src": "2667:7:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2463,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2666:9:22"
									},
									"scope": 2527,
									"src": "2623:53:22",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2467,
										"nodeType": "StructuredDocumentation",
										"src": "2682:1244:22",
										"text": "@notice Look up information about a specific tick in the pool\n @param tick The tick to look up\n @return liquidityGross the total amount of position liquidity that uses the pool either as tick lower or\n tick upper,\n liquidityNet how much liquidity changes when the pool price crosses the tick,\n feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0,\n feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1,\n tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick\n secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick,\n secondsOutside the seconds spent on the other side of the tick from the current tick,\n initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false.\n Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0.\n In addition, these values are only relative and must be used only in comparison to previous snapshots for\n a specific position."
									},
									"functionSelector": "f30dba93",
									"id": 2488,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ticks",
									"nameLocation": "3940:5:22",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2469,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "3952:4:22",
												"nodeType": "VariableDeclaration",
												"scope": 2488,
												"src": "3946:10:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2468,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3946:5:22",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3945:12:22"
									},
									"returnParameters": {
										"id": 2487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2472,
												"mutability": "mutable",
												"name": "liquidityGross",
												"nameLocation": "4026:14:22",
												"nodeType": "VariableDeclaration",
												"scope": 2488,
												"src": "4018:22:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2471,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "4018:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2474,
												"mutability": "mutable",
												"name": "liquidityNet",
												"nameLocation": "4061:12:22",
												"nodeType": "VariableDeclaration",
												"scope": 2488,
												"src": "4054:19:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 2473,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "4054:6:22",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2476,
												"mutability": "mutable",
												"name": "feeGrowthOutside0X128",
												"nameLocation": "4095:21:22",
												"nodeType": "VariableDeclaration",
												"scope": 2488,
												"src": "4087:29:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4087:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2478,
												"mutability": "mutable",
												"name": "feeGrowthOutside1X128",
												"nameLocation": "4138:21:22",
												"nodeType": "VariableDeclaration",
												"scope": 2488,
												"src": "4130:29:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4130:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2480,
												"mutability": "mutable",
												"name": "tickCumulativeOutside",
												"nameLocation": "4179:21:22",
												"nodeType": "VariableDeclaration",
												"scope": 2488,
												"src": "4173:27:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 2479,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "4173:5:22",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2482,
												"mutability": "mutable",
												"name": "secondsPerLiquidityOutsideX128",
												"nameLocation": "4222:30:22",
												"nodeType": "VariableDeclaration",
												"scope": 2488,
												"src": "4214:38:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2481,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "4214:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2484,
												"mutability": "mutable",
												"name": "secondsOutside",
												"nameLocation": "4273:14:22",
												"nodeType": "VariableDeclaration",
												"scope": 2488,
												"src": "4266:21:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2483,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "4266:6:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2486,
												"mutability": "mutable",
												"name": "initialized",
												"nameLocation": "4306:11:22",
												"nodeType": "VariableDeclaration",
												"scope": 2488,
												"src": "4301:16:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2485,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4301:4:22",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4004:323:22"
									},
									"scope": 2527,
									"src": "3931:397:22",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2489,
										"nodeType": "StructuredDocumentation",
										"src": "4334:99:22",
										"text": "@notice Returns 256 packed tick initialized boolean values. See TickBitmap for more information"
									},
									"functionSelector": "5339c296",
									"id": 2496,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tickBitmap",
									"nameLocation": "4447:10:22",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2491,
												"mutability": "mutable",
												"name": "wordPosition",
												"nameLocation": "4464:12:22",
												"nodeType": "VariableDeclaration",
												"scope": 2496,
												"src": "4458:18:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int16",
													"typeString": "int16"
												},
												"typeName": {
													"id": 2490,
													"name": "int16",
													"nodeType": "ElementaryTypeName",
													"src": "4458:5:22",
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4457:20:22"
									},
									"returnParameters": {
										"id": 2495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2494,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2496,
												"src": "4501:7:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2493,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4501:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4500:9:22"
									},
									"scope": 2527,
									"src": "4438:72:22",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2497,
										"nodeType": "StructuredDocumentation",
										"src": "4516:700:22",
										"text": "@notice Returns the information about a position by the position's key\n @param key The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\n @return _liquidity The amount of liquidity in the position,\n Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke,\n Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke,\n Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke,\n Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"
									},
									"functionSelector": "514ea4bf",
									"id": 2512,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "positions",
									"nameLocation": "5230:9:22",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2499,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "5248:3:22",
												"nodeType": "VariableDeclaration",
												"scope": 2512,
												"src": "5240:11:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2498,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5240:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5239:13:22"
									},
									"returnParameters": {
										"id": 2511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2502,
												"mutability": "mutable",
												"name": "_liquidity",
												"nameLocation": "5321:10:22",
												"nodeType": "VariableDeclaration",
												"scope": 2512,
												"src": "5313:18:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2501,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5313:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2504,
												"mutability": "mutable",
												"name": "feeGrowthInside0LastX128",
												"nameLocation": "5353:24:22",
												"nodeType": "VariableDeclaration",
												"scope": 2512,
												"src": "5345:32:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5345:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2506,
												"mutability": "mutable",
												"name": "feeGrowthInside1LastX128",
												"nameLocation": "5399:24:22",
												"nodeType": "VariableDeclaration",
												"scope": 2512,
												"src": "5391:32:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2505,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5391:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2508,
												"mutability": "mutable",
												"name": "tokensOwed0",
												"nameLocation": "5445:11:22",
												"nodeType": "VariableDeclaration",
												"scope": 2512,
												"src": "5437:19:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2507,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5437:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2510,
												"mutability": "mutable",
												"name": "tokensOwed1",
												"nameLocation": "5478:11:22",
												"nodeType": "VariableDeclaration",
												"scope": 2512,
												"src": "5470:19:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2509,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5470:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5299:200:22"
									},
									"scope": 2527,
									"src": "5221:279:22",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2513,
										"nodeType": "StructuredDocumentation",
										"src": "5506:749:22",
										"text": "@notice Returns data about a specific observation index\n @param index The element of the observations array to fetch\n @dev You most likely want to use #observe() instead of this method to get an observation as of some amount of time\n ago, rather than at a specific index in the array.\n @return blockTimestamp The timestamp of the observation,\n Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp,\n Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp,\n Returns initialized whether the observation has been initialized and the values are safe to use"
									},
									"functionSelector": "252c09d7",
									"id": 2526,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "observations",
									"nameLocation": "6269:12:22",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2515,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "6290:5:22",
												"nodeType": "VariableDeclaration",
												"scope": 2526,
												"src": "6282:13:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2514,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6282:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6281:15:22"
									},
									"returnParameters": {
										"id": 2525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2518,
												"mutability": "mutable",
												"name": "blockTimestamp",
												"nameLocation": "6364:14:22",
												"nodeType": "VariableDeclaration",
												"scope": 2526,
												"src": "6357:21:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2517,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "6357:6:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2520,
												"mutability": "mutable",
												"name": "tickCumulative",
												"nameLocation": "6398:14:22",
												"nodeType": "VariableDeclaration",
												"scope": 2526,
												"src": "6392:20:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 2519,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "6392:5:22",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2522,
												"mutability": "mutable",
												"name": "secondsPerLiquidityCumulativeX128",
												"nameLocation": "6434:33:22",
												"nodeType": "VariableDeclaration",
												"scope": 2526,
												"src": "6426:41:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2521,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "6426:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2524,
												"mutability": "mutable",
												"name": "initialized",
												"nameLocation": "6486:11:22",
												"nodeType": "VariableDeclaration",
												"scope": 2526,
												"src": "6481:16:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2523,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6481:4:22",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6343:164:22"
									},
									"scope": 2527,
									"src": "6260:248:22",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2528,
							"src": "241:6269:22",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:6466:22"
				},
				"id": 22
			}
		}
	}
}