{
	"id": "6775d562bb7957c04df3b5b279b9bf1c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Controller.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"./MainBot.sol\";\n\ncontract Controller {\n    MainBot public mainBot;\n    address public owner;\n    uint256 public checkInterval;\n    uint256 public nextCheckTime;\n\n    event LogControllerCheck(uint256 time);\n    event LogControllerTrade(string tradeType, uint256 amount);\n    event ConsolidationStarted();\n    event ConsolidationCompleted();\n    event CurrentActivity(string activity);\n\n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Not the owner\");\n        _;\n    }\n\n    constructor(address payable mainBotAddress, uint256 _checkInterval) {\n        mainBot = MainBot(mainBotAddress);\n        owner = msg.sender;\n        checkInterval = _checkInterval; // Set the check interval\n        nextCheckTime = block.timestamp + checkInterval;\n    }\n\n    function periodicCheck() external onlyOwner {\n        require(block.timestamp >= nextCheckTime, \"It's not time for the next check yet\");\n        \n        uint256 price = mainBot.checkPrice();\n        emit LogControllerCheck(block.timestamp);\n        \n        // Decide whether to initiate a trade based on the price\n        if (price > 1050) { // Example condition\n            mainBot.initiateTrade(\"sell\", 100);\n            emit LogControllerTrade(\"sell\", 100);\n        } else if (price < 950) { // Example condition\n            mainBot.initiateTrade(\"buy\", 100);\n            emit LogControllerTrade(\"buy\", 100);\n        }\n\n        nextCheckTime = block.timestamp + checkInterval;\n    }\n\n    function Consolidate() external onlyOwner {\n        emit ConsolidationStarted();\n        mainBot.convertAllToPOL();\n        emit ConsolidationCompleted();\n    }\n\n    function handleTradeError(uint256 retryCount) internal {\n        if (retryCount >= 3) {\n            mainBot.disableTrading();\n            emit LogControllerTrade(\"Stop due to persistent error\", 0);\n        } else {\n            retryCount++;\n        }\n    }\n\n    function initiateTradeWithHandling(string memory tradeType, uint256 amount) external onlyOwner {\n        uint256 retryCount = 0;\n        bool success = false;\n        while (retryCount < 3 && !success) {\n            try mainBot.initiateTrade(tradeType, amount) {\n                success = true;\n                emit LogControllerTrade(tradeType, amount);\n            } catch {\n                handleTradeError(retryCount);\n            }\n        }\n    }\n\n    function setTradingTimeframe(uint256 timeframeIndex) external onlyOwner {\n        uint256[] memory timeframes = new uint256[](8);\n        timeframes[0] = 900;     // 15 minutes\n        timeframes[1] = 1800;    // 30 minutes\n        timeframes[2] = 3600;    // 1 hour\n        timeframes[3] = 7200;    // 2 hours\n        timeframes[4] = 14400;   // 4 hours\n        timeframes[5] = 28800;   // 8 hours\n        timeframes[6] = 86400;   // 24 hours\n        timeframes[7] = 604800;  // 1 week\n\n        uint256 selectedTimeframe = timeframes[timeframeIndex];\n        mainBot.adjustTimeframe(selectedTimeframe);\n        emit LogControllerTrade(\"Adjusting timeframe\", selectedTimeframe);\n    }\n\nfunction kill() external onlyOwner {\n    payable(msg.sender).transfer(address(this).balance);\n}\n\n    function withdrawInGwei(uint256 amountInGwei) external onlyOwner {\n        uint256 amountInWei = amountInGwei * 1 gwei;\n        require(address(this).balance >= amountInWei, \"Insufficient balance\");\n        payable(owner).transfer(amountInWei);\n    }\n\n    function logEvent(uint256 timestamp, string memory activity) public onlyOwner {\n        emit LogControllerCheck(timestamp);\n        emit CurrentActivity(activity);\n    }\n}\n"
			},
			"contracts/MainBot.sol": {
				"content": "// SPDX-License-Identifier: MITs\npragma solidity ^0.8.20;\n\nimport './chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol';\nimport './uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol';\nimport './uniswap/v3-periphery/contracts/interfaces/IUniswapV3Pool.sol';\nimport './uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol';\nimport './uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol';\nimport './uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol';\nimport './aave/protocol-v2/contracts/interfaces/ILendingPool.sol';\nimport './aave/protocol-v2/contracts/interfaces/ILendingPoolAddressesProvider.sol';\n\ninterface IERC20 {\n    function transfer(address recipient, uint256 amount) external returns (bool);\n    function balanceOf(address account) external view returns (uint256);\n    function approve(address spender, uint256 amount) external returns (bool);\n}\n\ncontract MainBot {\n    address public owner; \n    bool public tradingEnabled;\n    uint256 public initialDeposit;\n    uint256 public maticBalance;\n    uint256 public stablecoinBalance;\n    uint256 public profitThreshold;\n    uint256 public lossThreshold;\n    uint256 public gasCostMultiplier = 3;\n    uint256 public trailingStopLoss = 10;\n    uint256 public nextLogTime;\n    string public currentActivity = \"Initializing\";\n\n    address public polToken;\n    address public usdtToken;\n    address public usdcToken;\n    address public quickSwapRouter;\n    address public priceFeedAddress;\n    address public uniswapRouter;\n    address public uniswapPositionManager;\n    address public aaveLendingPoolAddressesProvider;\n\n    mapping(string => address) public dexRouters;\n\n    event TradeExecuted(address indexed user, string tradeType, uint amountIn, uint amountOut, uint price);\n    event StopLossTriggered(uint currentBalance, uint threshold);\n    event CurrentActivity(string activity);\n    event TestEvent(string message);\n\n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Not the owner\");\n        _;\n    }\n\n    modifier whenTradingEnabled() {\n        require(tradingEnabled, \"Trading is disabled\");\n        _;\n    }\n\n    constructor(\n        address _polToken,\n        address _usdtToken,\n        address _usdcToken,\n        address _quickSwapRouter,\n        address _priceFeedAddress,\n        address _uniswapRouter,\n        address _uniswapPositionManager,\n        address _aaveLendingPoolAddressesProvider\n    ) {\n        owner = msg.sender;\n        polToken = _polToken;\n        usdtToken = _usdtToken;\n        usdcToken = _usdcToken;\n        quickSwapRouter = _quickSwapRouter;\n        priceFeedAddress = _priceFeedAddress;\n        uniswapRouter = _uniswapRouter;\n        uniswapPositionManager = _uniswapPositionManager;\n        aaveLendingPoolAddressesProvider = _aaveLendingPoolAddressesProvider;\n        \n        dexRouters[\"QuickSwap\"] = quickSwapRouter;\n        tradingEnabled = false;\n        profitThreshold = 110; // 10% profit\n        lossThreshold = 85; // 85% of initial deposit\n        nextLogTime = block.timestamp;\n    }\n\n    function setController(address controller) external onlyOwner {\n        owner = controller;\n    }\n\n    receive() external payable {\n        initialDeposit += msg.value;\n        maticBalance += (msg.value * 70) / 100;\n        stablecoinBalance += (msg.value * 30) / 100;\n    }\n\n    function adjustTimeframe(uint256 selectedTimeframe) external onlyOwner {\n        if (selectedTimeframe == 900) {\n            // Logic for fast and frequent trades\n        } else if (selectedTimeframe == 86400) {\n            // Logic for long-term trades\n        }\n        emit TradeExecuted(msg.sender, \"Timeframe adjusted\", selectedTimeframe, 0, getPrice());\n    }\n\n    function checkPrice() external view returns (uint256) {\n        uint256 price = getPrice();\n        return price;\n    }\n\n    function initiateTrade(string memory tradeType, uint256 amount) external onlyOwner {\n        emit TradeExecuted(msg.sender, tradeType, amount, 0, getPrice());\n    }\n\n    function convertAllToPOL() external onlyOwner {\n        emit TradeExecuted(msg.sender, \"convert to POL\", 0, 0, getPrice());\n    }\n\n    function checkLiquidity(uint256 amountIn, address poolAddress) public view returns (bool sufficientLiquidity) {\n        IUniswapV3Pool pool = IUniswapV3Pool(poolAddress);\n        (uint160 sqrtPriceX96,,,,,,) = pool.slot0();\n        uint256 liquidity = pool.liquidity();\n        uint256 amountOut = calculateAmountOut(amountIn, sqrtPriceX96, liquidity);\n        uint256 slippage = (amountOut * 1) / 100;\n        sufficientLiquidity = (amountOut >= amountIn - slippage);\n    }\n\n    function calculateAmountOut(uint256 amountIn, uint160 sqrtPriceX96, uint256 liquidity) internal pure returns (uint256) {\n        return uint256(amountIn * sqrtPriceX96 / liquidity);\n    }\n\n    function disableTrading() external onlyOwner {\n        tradingEnabled = false;\n    }\n\n    function withdrawInGwei(uint256 amountInGwei) external onlyOwner {\n        uint256 amountInWei = amountInGwei * 1 gwei;\n        require(address(this).balance >= amountInWei, \"Insufficient balance\");\n        payable(owner).transfer(amountInWei);\n    }\n\n    function kill() external onlyOwner {\n        payable(msg.sender).transfer(address(this).balance);\n    }\n\n    function logCurrentActivity() internal whenTradingEnabled {\n        if (block.timestamp >= nextLogTime) {\n            emit CurrentActivity(currentActivity);\n            nextLogTime = block.timestamp + 60;\n        }\n    }\n\n    function calculateRSI(uint256[] memory prices) internal pure returns (uint256) {\n        uint256 gain = 0;\n        uint256 loss = 0;\n        for (uint256 i = 1; i < prices.length; i++) {\n            if (prices[i] > prices[i - 1]) {\n                gain += (prices[i] - prices[i - 1]);\n            } else {\n                loss += (prices[i - 1] - prices[i]);\n            }\n        }\n        uint256 rs = gain / loss;\n        uint256 rsi = 100 - (100 / (1 + rs));\n        return rsi;\n    }\n\n    function calculateMACD(uint256[] memory prices) internal pure returns (int256) {\n        uint256 emaShort = calculateEMA(prices, 12);\n        uint256 emaLong = calculateEMA(prices, 26);\n        int256 macd = int256(emaShort - emaLong);\n        return macd;\n    }\n\n    function calculateEMA(uint256[] memory prices, uint256 period) internal pure returns (uint256) {\n        uint256 multiplier = 2 / (period + 1);\n        uint256 ema = prices[0];\n        for (uint256 i = 1; i < prices.length; i++) {\n            ema = ((prices[i] - ema) * multiplier) + ema;\n        }\n        return ema;\n    }\n\n    function calculateFibonacci(uint256 high, uint256 low) internal pure returns (uint256[] memory) {\n        uint256[] memory fibLevels = new uint256[](11);\n        fibLevels[0] = low;\n        fibLevels[1] = low + (high - low) * 236 / 1000;\n        fibLevels[2] = low + (high - low) * 382 / 1000;\n        fibLevels[3] = low + (high - low) * 500 / 1000;\n        fibLevels[4] = low + (high - low) * 618 / 1000;\n        fibLevels[5] = low + (high - low) * 786 / 1000;\n        fibLevels[6] = high;\n        fibLevels[7] = high + (high - low) * 618 / 1000;\n        fibLevels[8] = high + (high - low) * 168 / 100;\n        fibLevels[9] = high + (high - low) * 618 / 1000;\n        fibLevels[10] = high + (high - low) * 236 / 100;\n        return fibLevels;\n    }\n\n    function getPrice() internal view returns (uint256) {\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(priceFeedAddress);\n        (, int price,,,) = priceFeed.latestRoundData();\n        return uint256(price * 10 ** 10);\n    }\n}\n"
			},
			"contracts/aave/protocol-v2/contracts/interfaces/ILendingPoolAddressesProvider.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\npragma solidity ^0.8.0;\n\n/**\n * @title LendingPoolAddressesProvider contract\n * @dev Main registry of addresses part of or connected to the protocol, including permissioned roles\n * - Acting also as factory of proxies and admin of those, so with right to change its implementations\n * - Owned by the Aave Governance\n * @author Aave\n **/\ninterface ILendingPoolAddressesProvider {\n  event MarketIdSet(string newMarketId);\n  event LendingPoolUpdated(address indexed newAddress);\n  event ConfigurationAdminUpdated(address indexed newAddress);\n  event EmergencyAdminUpdated(address indexed newAddress);\n  event LendingPoolConfiguratorUpdated(address indexed newAddress);\n  event LendingPoolCollateralManagerUpdated(address indexed newAddress);\n  event PriceOracleUpdated(address indexed newAddress);\n  event LendingRateOracleUpdated(address indexed newAddress);\n  event ProxyCreated(bytes32 id, address indexed newAddress);\n  event AddressSet(bytes32 id, address indexed newAddress, bool hasProxy);\n\n  function getMarketId() external view returns (string memory);\n\n  function setMarketId(string calldata marketId) external;\n\n  function setAddress(bytes32 id, address newAddress) external;\n\n  function setAddressAsProxy(bytes32 id, address impl) external;\n\n  function getAddress(bytes32 id) external view returns (address);\n\n  function getLendingPool() external view returns (address);\n\n  function setLendingPoolImpl(address pool) external;\n\n  function getLendingPoolConfigurator() external view returns (address);\n\n  function setLendingPoolConfiguratorImpl(address configurator) external;\n\n  function getLendingPoolCollateralManager() external view returns (address);\n\n  function setLendingPoolCollateralManager(address manager) external;\n\n  function getPoolAdmin() external view returns (address);\n\n  function setPoolAdmin(address admin) external;\n\n  function getEmergencyAdmin() external view returns (address);\n\n  function setEmergencyAdmin(address admin) external;\n\n  function getPriceOracle() external view returns (address);\n\n  function setPriceOracle(address priceOracle) external;\n\n  function getLendingRateOracle() external view returns (address);\n\n  function setLendingRateOracle(address lendingRateOracle) external;\n}\n"
			},
			"contracts/aave/protocol-v2/contracts/interfaces/ILendingPool.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\npragma solidity ^0.8.0;\npragma experimental ABIEncoderV2;\n\nimport {ILendingPoolAddressesProvider} from './ILendingPoolAddressesProvider.sol';\nimport {DataTypes} from './DataTypes.sol';\n\ninterface ILendingPool {\n  /**\n   * @dev Emitted on deposit()\n   * @param reserve The address of the underlying asset of the reserve\n   * @param user The address initiating the deposit\n   * @param onBehalfOf The beneficiary of the deposit, receiving the aTokens\n   * @param amount The amount deposited\n   * @param referral The referral code used\n   **/\n  event Deposit(\n    address indexed reserve,\n    address user,\n    address indexed onBehalfOf,\n    uint256 amount,\n    uint16 indexed referral\n  );\n\n  /**\n   * @dev Emitted on withdraw()\n   * @param reserve The address of the underlyng asset being withdrawn\n   * @param user The address initiating the withdrawal, owner of aTokens\n   * @param to Address that will receive the underlying\n   * @param amount The amount to be withdrawn\n   **/\n  event Withdraw(address indexed reserve, address indexed user, address indexed to, uint256 amount);\n\n  /**\n   * @dev Emitted on borrow() and flashLoan() when debt needs to be opened\n   * @param reserve The address of the underlying asset being borrowed\n   * @param user The address of the user initiating the borrow(), receiving the funds on borrow() or just\n   * initiator of the transaction on flashLoan()\n   * @param onBehalfOf The address that will be getting the debt\n   * @param amount The amount borrowed out\n   * @param borrowRateMode The rate mode: 1 for Stable, 2 for Variable\n   * @param borrowRate The numeric rate at which the user has borrowed\n   * @param referral The referral code used\n   **/\n  event Borrow(\n    address indexed reserve,\n    address user,\n    address indexed onBehalfOf,\n    uint256 amount,\n    uint256 borrowRateMode,\n    uint256 borrowRate,\n    uint16 indexed referral\n  );\n\n  /**\n   * @dev Emitted on repay()\n   * @param reserve The address of the underlying asset of the reserve\n   * @param user The beneficiary of the repayment, getting his debt reduced\n   * @param repayer The address of the user initiating the repay(), providing the funds\n   * @param amount The amount repaid\n   **/\n  event Repay(\n    address indexed reserve,\n    address indexed user,\n    address indexed repayer,\n    uint256 amount\n  );\n\n  /**\n   * @dev Emitted on swapBorrowRateMode()\n   * @param reserve The address of the underlying asset of the reserve\n   * @param user The address of the user swapping his rate mode\n   * @param rateMode The rate mode that the user wants to swap to\n   **/\n  event Swap(address indexed reserve, address indexed user, uint256 rateMode);\n\n  /**\n   * @dev Emitted on setUserUseReserveAsCollateral()\n   * @param reserve The address of the underlying asset of the reserve\n   * @param user The address of the user enabling the usage as collateral\n   **/\n  event ReserveUsedAsCollateralEnabled(address indexed reserve, address indexed user);\n\n  /**\n   * @dev Emitted on setUserUseReserveAsCollateral()\n   * @param reserve The address of the underlying asset of the reserve\n   * @param user The address of the user enabling the usage as collateral\n   **/\n  event ReserveUsedAsCollateralDisabled(address indexed reserve, address indexed user);\n\n  /**\n   * @dev Emitted on rebalanceStableBorrowRate()\n   * @param reserve The address of the underlying asset of the reserve\n   * @param user The address of the user for which the rebalance has been executed\n   **/\n  event RebalanceStableBorrowRate(address indexed reserve, address indexed user);\n\n  /**\n   * @dev Emitted on flashLoan()\n   * @param target The address of the flash loan receiver contract\n   * @param initiator The address initiating the flash loan\n   * @param asset The address of the asset being flash borrowed\n   * @param amount The amount flash borrowed\n   * @param premium The fee flash borrowed\n   * @param referralCode The referral code used\n   **/\n  event FlashLoan(\n    address indexed target,\n    address indexed initiator,\n    address indexed asset,\n    uint256 amount,\n    uint256 premium,\n    uint16 referralCode\n  );\n\n  /**\n   * @dev Emitted when the pause is triggered.\n   */\n  event Paused();\n\n  /**\n   * @dev Emitted when the pause is lifted.\n   */\n  event Unpaused();\n\n  /**\n   * @dev Emitted when a borrower is liquidated. This event is emitted by the LendingPool via\n   * LendingPoolCollateral manager using a DELEGATECALL\n   * This allows to have the events in the generated ABI for LendingPool.\n   * @param collateralAsset The address of the underlying asset used as collateral, to receive as result of the liquidation\n   * @param debtAsset The address of the underlying borrowed asset to be repaid with the liquidation\n   * @param user The address of the borrower getting liquidated\n   * @param debtToCover The debt amount of borrowed `asset` the liquidator wants to cover\n   * @param liquidatedCollateralAmount The amount of collateral received by the liiquidator\n   * @param liquidator The address of the liquidator\n   * @param receiveAToken `true` if the liquidators wants to receive the collateral aTokens, `false` if he wants\n   * to receive the underlying collateral asset directly\n   **/\n  event LiquidationCall(\n    address indexed collateralAsset,\n    address indexed debtAsset,\n    address indexed user,\n    uint256 debtToCover,\n    uint256 liquidatedCollateralAmount,\n    address liquidator,\n    bool receiveAToken\n  );\n\n  /**\n   * @dev Emitted when the state of a reserve is updated. NOTE: This event is actually declared\n   * in the ReserveLogic library and emitted in the updateInterestRates() function. Since the function is internal,\n   * the event will actually be fired by the LendingPool contract. The event is therefore replicated here so it\n   * gets added to the LendingPool ABI\n   * @param reserve The address of the underlying asset of the reserve\n   * @param liquidityRate The new liquidity rate\n   * @param stableBorrowRate The new stable borrow rate\n   * @param variableBorrowRate The new variable borrow rate\n   * @param liquidityIndex The new liquidity index\n   * @param variableBorrowIndex The new variable borrow index\n   **/\n  event ReserveDataUpdated(\n    address indexed reserve,\n    uint256 liquidityRate,\n    uint256 stableBorrowRate,\n    uint256 variableBorrowRate,\n    uint256 liquidityIndex,\n    uint256 variableBorrowIndex\n  );\n\n  /**\n   * @dev Deposits an `amount` of underlying asset into the reserve, receiving in return overlying aTokens.\n   * - E.g. User deposits 100 USDC and gets in return 100 aUSDC\n   * @param asset The address of the underlying asset to deposit\n   * @param amount The amount to be deposited\n   * @param onBehalfOf The address that will receive the aTokens, same as msg.sender if the user\n   *   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens\n   *   is a different wallet\n   * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   *   0 if the action is executed directly by the user, without any middle-man\n   **/\n  function deposit(\n    address asset,\n    uint256 amount,\n    address onBehalfOf,\n    uint16 referralCode\n  ) external;\n\n  /**\n   * @dev Withdraws an `amount` of underlying asset from the reserve, burning the equivalent aTokens owned\n   * E.g. User has 100 aUSDC, calls withdraw() and receives 100 USDC, burning the 100 aUSDC\n   * @param asset The address of the underlying asset to withdraw\n   * @param amount The underlying amount to be withdrawn\n   *   - Send the value type(uint256).max in order to withdraw the whole aToken balance\n   * @param to Address that will receive the underlying, same as msg.sender if the user\n   *   wants to receive it on his own wallet, or a different address if the beneficiary is a\n   *   different wallet\n   * @return The final amount withdrawn\n   **/\n  function withdraw(\n    address asset,\n    uint256 amount,\n    address to\n  ) external returns (uint256);\n\n  /**\n   * @dev Allows users to borrow a specific `amount` of the reserve underlying asset, provided that the borrower\n   * already deposited enough collateral, or he was given enough allowance by a credit delegator on the\n   * corresponding debt token (StableDebtToken or VariableDebtToken)\n   * - E.g. User borrows 100 USDC passing as `onBehalfOf` his own address, receiving the 100 USDC in his wallet\n   *   and 100 stable/variable debt tokens, depending on the `interestRateMode`\n   * @param asset The address of the underlying asset to borrow\n   * @param amount The amount to be borrowed\n   * @param interestRateMode The interest rate mode at which the user wants to borrow: 1 for Stable, 2 for Variable\n   * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   *   0 if the action is executed directly by the user, without any middle-man\n   * @param onBehalfOf Address of the user who will receive the debt. Should be the address of the borrower itself\n   * calling the function if he wants to borrow against his own collateral, or the address of the credit delegator\n   * if he has been given credit delegation allowance\n   **/\n  function borrow(\n    address asset,\n    uint256 amount,\n    uint256 interestRateMode,\n    uint16 referralCode,\n    address onBehalfOf\n  ) external;\n\n  /**\n   * @notice Repays a borrowed `amount` on a specific reserve, burning the equivalent debt tokens owned\n   * - E.g. User repays 100 USDC, burning 100 variable/stable debt tokens of the `onBehalfOf` address\n   * @param asset The address of the borrowed underlying asset previously borrowed\n   * @param amount The amount to repay\n   * - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\n   * @param rateMode The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\n   * @param onBehalfOf Address of the user who will get his debt reduced/removed. Should be the address of the\n   * user calling the function if he wants to reduce/remove his own debt, or the address of any other\n   * other borrower whose debt should be removed\n   * @return The final amount repaid\n   **/\n  function repay(\n    address asset,\n    uint256 amount,\n    uint256 rateMode,\n    address onBehalfOf\n  ) external returns (uint256);\n\n  /**\n   * @dev Allows a borrower to swap his debt between stable and variable mode, or viceversa\n   * @param asset The address of the underlying asset borrowed\n   * @param rateMode The rate mode that the user wants to swap to\n   **/\n  function swapBorrowRateMode(address asset, uint256 rateMode) external;\n\n  /**\n   * @dev Rebalances the stable interest rate of a user to the current stable rate defined on the reserve.\n   * - Users can be rebalanced if the following conditions are satisfied:\n   *     1. Usage ratio is above 95%\n   *     2. the current deposit APY is below REBALANCE_UP_THRESHOLD * maxVariableBorrowRate, which means that too much has been\n   *        borrowed at a stable rate and depositors are not earning enough\n   * @param asset The address of the underlying asset borrowed\n   * @param user The address of the user to be rebalanced\n   **/\n  function rebalanceStableBorrowRate(address asset, address user) external;\n\n  /**\n   * @dev Allows depositors to enable/disable a specific deposited asset as collateral\n   * @param asset The address of the underlying asset deposited\n   * @param useAsCollateral `true` if the user wants to use the deposit as collateral, `false` otherwise\n   **/\n  function setUserUseReserveAsCollateral(address asset, bool useAsCollateral) external;\n\n  /**\n   * @dev Function to liquidate a non-healthy position collateral-wise, with Health Factor below 1\n   * - The caller (liquidator) covers `debtToCover` amount of debt of the user getting liquidated, and receives\n   *   a proportionally amount of the `collateralAsset` plus a bonus to cover market risk\n   * @param collateralAsset The address of the underlying asset used as collateral, to receive as result of the liquidation\n   * @param debtAsset The address of the underlying borrowed asset to be repaid with the liquidation\n   * @param user The address of the borrower getting liquidated\n   * @param debtToCover The debt amount of borrowed `asset` the liquidator wants to cover\n   * @param receiveAToken `true` if the liquidators wants to receive the collateral aTokens, `false` if he wants\n   * to receive the underlying collateral asset directly\n   **/\n  function liquidationCall(\n    address collateralAsset,\n    address debtAsset,\n    address user,\n    uint256 debtToCover,\n    bool receiveAToken\n  ) external;\n\n  /**\n   * @dev Allows smartcontracts to access the liquidity of the pool within one transaction,\n   * as long as the amount taken plus a fee is returned.\n   * IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept into consideration.\n   * For further details please visit https://developers.aave.com\n   * @param receiverAddress The address of the contract receiving the funds, implementing the IFlashLoanReceiver interface\n   * @param assets The addresses of the assets being flash-borrowed\n   * @param amounts The amounts amounts being flash-borrowed\n   * @param modes Types of the debt to open if the flash loan is not returned:\n   *   0 -> Don't open any debt, just revert if funds can't be transferred from the receiver\n   *   1 -> Open debt at stable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\n   *   2 -> Open debt at variable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\n   * @param onBehalfOf The address  that will receive the debt in the case of using on `modes` 1 or 2\n   * @param params Variadic packed params to pass to the receiver as extra information\n   * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   *   0 if the action is executed directly by the user, without any middle-man\n   **/\n  function flashLoan(\n    address receiverAddress,\n    address[] calldata assets,\n    uint256[] calldata amounts,\n    uint256[] calldata modes,\n    address onBehalfOf,\n    bytes calldata params,\n    uint16 referralCode\n  ) external;\n\n  /**\n   * @dev Returns the user account data across all the reserves\n   * @param user The address of the user\n   * @return totalCollateralETH the total collateral in ETH of the user\n   * @return totalDebtETH the total debt in ETH of the user\n   * @return availableBorrowsETH the borrowing power left of the user\n   * @return currentLiquidationThreshold the liquidation threshold of the user\n   * @return ltv the loan to value of the user\n   * @return healthFactor the current health factor of the user\n   **/\n  function getUserAccountData(address user)\n    external\n    view\n    returns (\n      uint256 totalCollateralETH,\n      uint256 totalDebtETH,\n      uint256 availableBorrowsETH,\n      uint256 currentLiquidationThreshold,\n      uint256 ltv,\n      uint256 healthFactor\n    );\n\n  function initReserve(\n    address reserve,\n    address aTokenAddress,\n    address stableDebtAddress,\n    address variableDebtAddress,\n    address interestRateStrategyAddress\n  ) external;\n\n  function setReserveInterestRateStrategyAddress(address reserve, address rateStrategyAddress)\n    external;\n\n  function setConfiguration(address reserve, uint256 configuration) external;\n\n  /**\n   * @dev Returns the configuration of the reserve\n   * @param asset The address of the underlying asset of the reserve\n   * @return The configuration of the reserve\n   **/\n  function getConfiguration(address asset)\n    external\n    view\n    returns (DataTypes.ReserveConfigurationMap memory);\n\n  /**\n   * @dev Returns the configuration of the user across all the reserves\n   * @param user The user address\n   * @return The configuration of the user\n   **/\n  function getUserConfiguration(address user)\n    external\n    view\n    returns (DataTypes.UserConfigurationMap memory);\n\n  /**\n   * @dev Returns the normalized income normalized income of the reserve\n   * @param asset The address of the underlying asset of the reserve\n   * @return The reserve's normalized income\n   */\n  function getReserveNormalizedIncome(address asset) external view returns (uint256);\n\n  /**\n   * @dev Returns the normalized variable debt per unit of asset\n   * @param asset The address of the underlying asset of the reserve\n   * @return The reserve normalized variable debt\n   */\n  function getReserveNormalizedVariableDebt(address asset) external view returns (uint256);\n\n  /**\n   * @dev Returns the state and configuration of the reserve\n   * @param asset The address of the underlying asset of the reserve\n   * @return The state of the reserve\n   **/\n  function getReserveData(address asset) external view returns (DataTypes.ReserveData memory);\n\n  function finalizeTransfer(\n    address asset,\n    address from,\n    address to,\n    uint256 amount,\n    uint256 balanceFromAfter,\n    uint256 balanceToBefore\n  ) external;\n\n  function getReservesList() external view returns (address[] memory);\n\n  function getAddressesProvider() external view returns (ILendingPoolAddressesProvider);\n\n  function setPause(bool val) external;\n\n  function paused() external view returns (bool);\n}\n"
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity ^0.8.0;\npragma abicoder v2;\n\nimport '../../../../openzeppelin/contracts/token/ERC721/IERC721Metadata.sol';\nimport '../../../../openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol';\n\nimport './IPoolInitializer.sol';\nimport './IERC721Permit.sol';\nimport './IPeripheryPayments.sol';\nimport './IPeripheryImmutableState.sol';\n\n/// @title Non-fungible token for positions\n/// @notice Wraps Uniswap V3 positions in a non-fungible token interface which allows for them to be transferred\n/// and authorized.\ninterface INonfungiblePositionManager is\n    IPoolInitializer,\n    IPeripheryPayments,\n    IPeripheryImmutableState,\n    IERC721Metadata,\n    IERC721Enumerable,\n    IERC721Permit\n{\n    /// @notice Emitted when liquidity is increased for a position NFT\n    /// @dev Also emitted when a token is minted\n    /// @param tokenId The ID of the token for which liquidity was increased\n    /// @param liquidity The amount by which liquidity for the NFT position was increased\n    /// @param amount0 The amount of token0 that was paid for the increase in liquidity\n    /// @param amount1 The amount of token1 that was paid for the increase in liquidity\n    event IncreaseLiquidity(uint256 indexed tokenId, uint128 liquidity, uint256 amount0, uint256 amount1);\n    /// @notice Emitted when liquidity is decreased for a position NFT\n    /// @param tokenId The ID of the token for which liquidity was decreased\n    /// @param liquidity The amount by which liquidity for the NFT position was decreased\n    /// @param amount0 The amount of token0 that was accounted for the decrease in liquidity\n    /// @param amount1 The amount of token1 that was accounted for the decrease in liquidity\n    event DecreaseLiquidity(uint256 indexed tokenId, uint128 liquidity, uint256 amount0, uint256 amount1);\n    /// @notice Emitted when tokens are collected for a position NFT\n    /// @dev The amounts reported may not be exactly equivalent to the amounts transferred, due to rounding behavior\n    /// @param tokenId The ID of the token for which underlying tokens were collected\n    /// @param recipient The address of the account that received the collected tokens\n    /// @param amount0 The amount of token0 owed to the position that was collected\n    /// @param amount1 The amount of token1 owed to the position that was collected\n    event Collect(uint256 indexed tokenId, address recipient, uint256 amount0, uint256 amount1);\n\n    /// @notice Returns the position information associated with a given token ID.\n    /// @dev Throws if the token ID is not valid.\n    /// @param tokenId The ID of the token that represents the position\n    /// @return nonce The nonce for permits\n    /// @return operator The address that is approved for spending\n    /// @return token0 The address of the token0 for a specific pool\n    /// @return token1 The address of the token1 for a specific pool\n    /// @return fee The fee associated with the pool\n    /// @return tickLower The lower end of the tick range for the position\n    /// @return tickUpper The higher end of the tick range for the position\n    /// @return liquidity The liquidity of the position\n    /// @return feeGrowthInside0LastX128 The fee growth of token0 as of the last action on the individual position\n    /// @return feeGrowthInside1LastX128 The fee growth of token1 as of the last action on the individual position\n    /// @return tokensOwed0 The uncollected amount of token0 owed to the position as of the last computation\n    /// @return tokensOwed1 The uncollected amount of token1 owed to the position as of the last computation\n    function positions(uint256 tokenId)\n        external\n        view\n        returns (\n            uint96 nonce,\n            address operator,\n            address token0,\n            address token1,\n            uint24 fee,\n            int24 tickLower,\n            int24 tickUpper,\n            uint128 liquidity,\n            uint256 feeGrowthInside0LastX128,\n            uint256 feeGrowthInside1LastX128,\n            uint128 tokensOwed0,\n            uint128 tokensOwed1\n        );\n\n    struct MintParams {\n        address token0;\n        address token1;\n        uint24 fee;\n        int24 tickLower;\n        int24 tickUpper;\n        uint256 amount0Desired;\n        uint256 amount1Desired;\n        uint256 amount0Min;\n        uint256 amount1Min;\n        address recipient;\n        uint256 deadline;\n    }\n\n    /// @notice Creates a new position wrapped in a NFT\n    /// @dev Call this when the pool does exist and is initialized. Note that if the pool is created but not initialized\n    /// a method does not exist, i.e. the pool is assumed to be initialized.\n    /// @param params The params necessary to mint a position, encoded as `MintParams` in calldata\n    /// @return tokenId The ID of the token that represents the minted position\n    /// @return liquidity The amount of liquidity for this position\n    /// @return amount0 The amount of token0\n    /// @return amount1 The amount of token1\n    function mint(MintParams calldata params)\n        external\n        payable\n        returns (\n            uint256 tokenId,\n            uint128 liquidity,\n            uint256 amount0,\n            uint256 amount1\n        );\n\n    struct IncreaseLiquidityParams {\n        uint256 tokenId;\n        uint256 amount0Desired;\n        uint256 amount1Desired;\n        uint256 amount0Min;\n        uint256 amount1Min;\n        uint256 deadline;\n    }\n\n    /// @notice Increases the amount of liquidity in a position, with tokens paid by the `msg.sender`\n    /// @param params tokenId The ID of the token for which liquidity is being increased,\n    /// amount0Desired The desired amount of token0 to be spent,\n    /// amount1Desired The desired amount of token1 to be spent,\n    /// amount0Min The minimum amount of token0 to spend, which serves as a slippage check,\n    /// amount1Min The minimum amount of token1 to spend, which serves as a slippage check,\n    /// deadline The time by which the transaction must be included to effect the change\n    /// @return liquidity The new liquidity amount as a result of the increase\n    /// @return amount0 The amount of token0 to acheive resulting liquidity\n    /// @return amount1 The amount of token1 to acheive resulting liquidity\n    function increaseLiquidity(IncreaseLiquidityParams calldata params)\n        external\n        payable\n        returns (\n            uint128 liquidity,\n            uint256 amount0,\n            uint256 amount1\n        );\n\n    struct DecreaseLiquidityParams {\n        uint256 tokenId;\n        uint128 liquidity;\n        uint256 amount0Min;\n        uint256 amount1Min;\n        uint256 deadline;\n    }\n\n    /// @notice Decreases the amount of liquidity in a position and accounts it to the position\n    /// @param params tokenId The ID of the token for which liquidity is being decreased,\n    /// amount The amount by which liquidity will be decreased,\n    /// amount0Min The minimum amount of token0 that should be accounted for the burned liquidity,\n    /// amount1Min The minimum amount of token1 that should be accounted for the burned liquidity,\n    /// deadline The time by which the transaction must be included to effect the change\n    /// @return amount0 The amount of token0 accounted to the position's tokens owed\n    /// @return amount1 The amount of token1 accounted to the position's tokens owed\n    function decreaseLiquidity(DecreaseLiquidityParams calldata params)\n        external\n        payable\n        returns (uint256 amount0, uint256 amount1);\n\n    struct CollectParams {\n        uint256 tokenId;\n        address recipient;\n        uint128 amount0Max;\n        uint128 amount1Max;\n    }\n\n    /// @notice Collects up to a maximum amount of fees owed to a specific position to the recipient\n    /// @param params tokenId The ID of the NFT for which tokens are being collected,\n    /// recipient The account that should receive the tokens,\n    /// amount0Max The maximum amount of token0 to collect,\n    /// amount1Max The maximum amount of token1 to collect\n    /// @return amount0 The amount of fees collected in token0\n    /// @return amount1 The amount of fees collected in token1\n    function collect(CollectParams calldata params) external payable returns (uint256 amount0, uint256 amount1);\n\n    /// @notice Burns a token ID, which deletes it from the NFT contract. The token must have 0 liquidity and all tokens\n    /// must be collected first.\n    /// @param tokenId The ID of the token that is being burned\n    function burn(uint256 tokenId) external payable;\n}\n"
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.7.5;\n\n/// @title Periphery Payments\n/// @notice Functions to ease deposits and withdrawals of ETH\ninterface IPeripheryPayments {\n    /// @notice Unwraps the contract's WETH9 balance and sends it to recipient as ETH.\n    /// @dev The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.\n    /// @param amountMinimum The minimum amount of WETH9 to unwrap\n    /// @param recipient The address receiving ETH\n    function unwrapWETH9(uint256 amountMinimum, address recipient) external payable;\n\n    /// @notice Refunds any ETH balance held by this contract to the `msg.sender`\n    /// @dev Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps\n    /// that use ether for the input amount\n    function refundETH() external payable;\n\n    /// @notice Transfers the full amount of a token held by this contract to recipient\n    /// @dev The amountMinimum parameter prevents malicious contracts from stealing the token from users\n    /// @param token The contract address of the token which will be transferred to `recipient`\n    /// @param amountMinimum The minimum amount of token required for a transfer\n    /// @param recipient The destination address of the token\n    function sweepToken(\n        address token,\n        uint256 amountMinimum,\n        address recipient\n    ) external payable;\n}\n"
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Immutable state\n/// @notice Functions that return immutable state of the router\ninterface IPeripheryImmutableState {\n    /// @return Returns the address of the Uniswap V3 factory\n    function factory() external view returns (address);\n\n    /// @return Returns the address of WETH9\n    function WETH9() external view returns (address);\n}\n"
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/IUniswapV3Pool.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\nimport './pool/IUniswapV3PoolImmutables.sol';\nimport './pool/IUniswapV3PoolState.sol';\nimport './pool/IUniswapV3PoolDerivedState.sol';\nimport './pool/IUniswapV3PoolActions.sol';\nimport './pool/IUniswapV3PoolOwnerActions.sol';\nimport './pool/IUniswapV3PoolEvents.sol';\n\n/// @title The interface for a Uniswap V3 Pool\n/// @notice A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform\n/// to the ERC20 specification\n/// @dev The pool interface is broken up into many smaller pieces\ninterface IUniswapV3Pool is\n    IUniswapV3PoolImmutables,\n    IUniswapV3PoolState,\n    IUniswapV3PoolDerivedState,\n    IUniswapV3PoolActions,\n    IUniswapV3PoolOwnerActions,\n    IUniswapV3PoolEvents\n{\n\n}\n"
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity ^0.8.0;\npragma abicoder v2;\n\nimport './callback/IUniswapV3SwapCallback.sol';\n\n/// @title Router token swapping functionality\n/// @notice Functions for swapping tokens via Uniswap V3\ninterface ISwapRouter is IUniswapV3SwapCallback {\n    struct ExactInputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 deadline;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another token\n    /// @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInputSingle(ExactInputSingleParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactInputParams {\n        bytes path;\n        address recipient;\n        uint256 deadline;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInput(ExactInputParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactOutputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 deadline;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another token\n    /// @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutputSingle(ExactOutputSingleParams calldata params) external payable returns (uint256 amountIn);\n\n    struct ExactOutputParams {\n        bytes path;\n        address recipient;\n        uint256 deadline;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutput(ExactOutputParams calldata params) external payable returns (uint256 amountIn);\n}\n"
			},
			"contracts/chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n// solhint-disable-next-line interface-starts-with-i\ninterface AggregatorV3Interface {\n  function decimals() external view returns (uint8);\n\n  function description() external view returns (string memory);\n\n  function version() external view returns (uint256);\n\n  function getRoundData(\n    uint80 _roundId\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n\n  function latestRoundData()\n    external\n    view\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n}\n"
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Events emitted by a pool\n/// @notice Contains all events emitted by the pool\ninterface IUniswapV3PoolEvents {\n    /// @notice Emitted exactly once by a pool when #initialize is first called on the pool\n    /// @dev Mint/Burn/Swap cannot be emitted by the pool before Initialize\n    /// @param sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96\n    /// @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\n    event Initialize(uint160 sqrtPriceX96, int24 tick);\n\n    /// @notice Emitted when liquidity is minted for a given position\n    /// @param sender The address that minted the liquidity\n    /// @param owner The owner of the position and recipient of any minted liquidity\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount The amount of liquidity minted to the position range\n    /// @param amount0 How much token0 was required for the minted liquidity\n    /// @param amount1 How much token1 was required for the minted liquidity\n    event Mint(\n        address sender,\n        address indexed owner,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount,\n        uint256 amount0,\n        uint256 amount1\n    );\n\n    /// @notice Emitted when fees are collected by the owner of a position\n    /// @dev Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\n    /// @param owner The owner of the position for which fees are collected\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount0 The amount of token0 fees collected\n    /// @param amount1 The amount of token1 fees collected\n    event Collect(\n        address indexed owner,\n        address recipient,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount0,\n        uint128 amount1\n    );\n\n    /// @notice Emitted when a position's liquidity is removed\n    /// @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\n    /// @param owner The owner of the position for which liquidity is removed\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount The amount of liquidity to remove\n    /// @param amount0 The amount of token0 withdrawn\n    /// @param amount1 The amount of token1 withdrawn\n    event Burn(\n        address indexed owner,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount,\n        uint256 amount0,\n        uint256 amount1\n    );\n\n    /// @notice Emitted by the pool for any swaps between token0 and token1\n    /// @param sender The address that initiated the swap call, and that received the callback\n    /// @param recipient The address that received the output of the swap\n    /// @param amount0 The delta of the token0 balance of the pool\n    /// @param amount1 The delta of the token1 balance of the pool\n    /// @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\n    /// @param liquidity The liquidity of the pool after the swap\n    /// @param tick The log base 1.0001 of price of the pool after the swap\n    event Swap(\n        address indexed sender,\n        address indexed recipient,\n        int256 amount0,\n        int256 amount1,\n        uint160 sqrtPriceX96,\n        uint128 liquidity,\n        int24 tick\n    );\n\n    /// @notice Emitted by the pool for any flashes of token0/token1\n    /// @param sender The address that initiated the swap call, and that received the callback\n    /// @param recipient The address that received the tokens from flash\n    /// @param amount0 The amount of token0 that was flashed\n    /// @param amount1 The amount of token1 that was flashed\n    /// @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\n    /// @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\n    event Flash(\n        address indexed sender,\n        address indexed recipient,\n        uint256 amount0,\n        uint256 amount1,\n        uint256 paid0,\n        uint256 paid1\n    );\n\n    /// @notice Emitted by the pool for increases to the number of observations that can be stored\n    /// @dev observationCardinalityNext is not the observation cardinality until an observation is written at the index\n    /// just before a mint/swap/burn.\n    /// @param observationCardinalityNextOld The previous value of the next observation cardinality\n    /// @param observationCardinalityNextNew The updated value of the next observation cardinality\n    event IncreaseObservationCardinalityNext(\n        uint16 observationCardinalityNextOld,\n        uint16 observationCardinalityNextNew\n    );\n\n    /// @notice Emitted when the protocol fee is changed by the pool\n    /// @param feeProtocol0Old The previous value of the token0 protocol fee\n    /// @param feeProtocol1Old The previous value of the token1 protocol fee\n    /// @param feeProtocol0New The updated value of the token0 protocol fee\n    /// @param feeProtocol1New The updated value of the token1 protocol fee\n    event SetFeeProtocol(uint8 feeProtocol0Old, uint8 feeProtocol1Old, uint8 feeProtocol0New, uint8 feeProtocol1New);\n\n    /// @notice Emitted when the collected protocol fees are withdrawn by the factory owner\n    /// @param sender The address that collects the protocol fees\n    /// @param recipient The address that receives the collected protocol fees\n    /// @param amount0 The amount of token0 protocol fees that is withdrawn\n    /// @param amount0 The amount of token1 protocol fees that is withdrawn\n    event CollectProtocol(address indexed sender, address indexed recipient, uint128 amount0, uint128 amount1);\n}\n"
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Permissioned pool actions\n/// @notice Contains pool methods that may only be called by the factory owner\ninterface IUniswapV3PoolOwnerActions {\n    /// @notice Set the denominator of the protocol's % share of the fees\n    /// @param feeProtocol0 new protocol fee for token0 of the pool\n    /// @param feeProtocol1 new protocol fee for token1 of the pool\n    function setFeeProtocol(uint8 feeProtocol0, uint8 feeProtocol1) external;\n\n    /// @notice Collect the protocol fee accrued to the pool\n    /// @param recipient The address to which collected protocol fees should be sent\n    /// @param amount0Requested The maximum amount of token0 to send, can be 0 to collect fees in only token1\n    /// @param amount1Requested The maximum amount of token1 to send, can be 0 to collect fees in only token0\n    /// @return amount0 The protocol fee collected in token0\n    /// @return amount1 The protocol fee collected in token1\n    function collectProtocol(\n        address recipient,\n        uint128 amount0Requested,\n        uint128 amount1Requested\n    ) external returns (uint128 amount0, uint128 amount1);\n}\n"
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Permissionless pool actions\n/// @notice Contains pool methods that can be called by anyone\ninterface IUniswapV3PoolActions {\n    /// @notice Sets the initial price for the pool\n    /// @dev Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\n    /// @param sqrtPriceX96 the initial sqrt price of the pool as a Q64.96\n    function initialize(uint160 sqrtPriceX96) external;\n\n    /// @notice Adds liquidity for the given recipient/tickLower/tickUpper position\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback\n    /// in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends\n    /// on tickLower, tickUpper, the amount of liquidity, and the current price.\n    /// @param recipient The address for which the liquidity will be created\n    /// @param tickLower The lower tick of the position in which to add liquidity\n    /// @param tickUpper The upper tick of the position in which to add liquidity\n    /// @param amount The amount of liquidity to mint\n    /// @param data Any data that should be passed through to the callback\n    /// @return amount0 The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\n    /// @return amount1 The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\n    function mint(\n        address recipient,\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount,\n        bytes calldata data\n    ) external returns (uint256 amount0, uint256 amount1);\n\n    /// @notice Collects tokens owed to a position\n    /// @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\n    /// Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\n    /// amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\n    /// actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\n    /// @param recipient The address which should receive the fees collected\n    /// @param tickLower The lower tick of the position for which to collect fees\n    /// @param tickUpper The upper tick of the position for which to collect fees\n    /// @param amount0Requested How much token0 should be withdrawn from the fees owed\n    /// @param amount1Requested How much token1 should be withdrawn from the fees owed\n    /// @return amount0 The amount of fees collected in token0\n    /// @return amount1 The amount of fees collected in token1\n    function collect(\n        address recipient,\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount0Requested,\n        uint128 amount1Requested\n    ) external returns (uint128 amount0, uint128 amount1);\n\n    /// @notice Burn liquidity from the sender and account tokens owed for the liquidity to the position\n    /// @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\n    /// @dev Fees must be collected separately via a call to #collect\n    /// @param tickLower The lower tick of the position for which to burn liquidity\n    /// @param tickUpper The upper tick of the position for which to burn liquidity\n    /// @param amount How much liquidity to burn\n    /// @return amount0 The amount of token0 sent to the recipient\n    /// @return amount1 The amount of token1 sent to the recipient\n    function burn(\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount\n    ) external returns (uint256 amount0, uint256 amount1);\n\n    /// @notice Swap token0 for token1, or token1 for token0\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\n    /// @param recipient The address to receive the output of the swap\n    /// @param zeroForOne The direction of the swap, true for token0 to token1, false for token1 to token0\n    /// @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\n    /// @param sqrtPriceLimitX96 The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\n    /// value after the swap. If one for zero, the price cannot be greater than this value after the swap\n    /// @param data Any data to be passed through to the callback\n    /// @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\n    /// @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive\n    function swap(\n        address recipient,\n        bool zeroForOne,\n        int256 amountSpecified,\n        uint160 sqrtPriceLimitX96,\n        bytes calldata data\n    ) external returns (int256 amount0, int256 amount1);\n\n    /// @notice Receive token0 and/or token1 and pay it back, plus a fee, in the callback\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallback\n    /// @dev Can be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling\n    /// with 0 amount{0,1} and sending the donation amount(s) from the callback\n    /// @param recipient The address which will receive the token0 and token1 amounts\n    /// @param amount0 The amount of token0 to send\n    /// @param amount1 The amount of token1 to send\n    /// @param data Any data to be passed through to the callback\n    function flash(\n        address recipient,\n        uint256 amount0,\n        uint256 amount1,\n        bytes calldata data\n    ) external;\n\n    /// @notice Increase the maximum number of price and liquidity observations that this pool will store\n    /// @dev This method is no-op if the pool already has an observationCardinalityNext greater than or equal to\n    /// the input observationCardinalityNext.\n    /// @param observationCardinalityNext The desired minimum number of observations for the pool to store\n    function increaseObservationCardinalityNext(uint16 observationCardinalityNext) external;\n}\n"
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Pool state that is not stored\n/// @notice Contains view functions to provide information about the pool that is computed rather than stored on the\n/// blockchain. The functions here may have variable gas costs.\ninterface IUniswapV3PoolDerivedState {\n    /// @notice Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\n    /// @dev To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing\n    /// the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,\n    /// you must call it with secondsAgos = [3600, 0].\n    /// @dev The time weighted average tick represents the geometric time weighted average price of the pool, in\n    /// log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\n    /// @param secondsAgos From how long ago each cumulative tick and liquidity value should be returned\n    /// @return tickCumulatives Cumulative tick values as of each `secondsAgos` from the current block timestamp\n    /// @return secondsPerLiquidityCumulativeX128s Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block\n    /// timestamp\n    function observe(uint32[] calldata secondsAgos)\n        external\n        view\n        returns (int56[] memory tickCumulatives, uint160[] memory secondsPerLiquidityCumulativeX128s);\n\n    /// @notice Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\n    /// @dev Snapshots must only be compared to other snapshots, taken over a period for which a position existed.\n    /// I.e., snapshots cannot be compared if a position is not held for the entire period between when the first\n    /// snapshot is taken and the second snapshot is taken.\n    /// @param tickLower The lower tick of the range\n    /// @param tickUpper The upper tick of the range\n    /// @return tickCumulativeInside The snapshot of the tick accumulator for the range\n    /// @return secondsPerLiquidityInsideX128 The snapshot of seconds per liquidity for the range\n    /// @return secondsInside The snapshot of seconds per liquidity for the range\n    function snapshotCumulativesInside(int24 tickLower, int24 tickUpper)\n        external\n        view\n        returns (\n            int56 tickCumulativeInside,\n            uint160 secondsPerLiquidityInsideX128,\n            uint32 secondsInside\n        );\n}\n"
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Pool state that can change\n/// @notice These methods compose the pool's state, and can change with any frequency including multiple times\n/// per transaction\ninterface IUniswapV3PoolState {\n    /// @notice The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas\n    /// when accessed externally.\n    /// @return sqrtPriceX96 The current price of the pool as a sqrt(token1/token0) Q64.96 value\n    /// tick The current tick of the pool, i.e. according to the last tick transition that was run.\n    /// This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick\n    /// boundary.\n    /// observationIndex The index of the last oracle observation that was written,\n    /// observationCardinality The current maximum number of observations stored in the pool,\n    /// observationCardinalityNext The next maximum number of observations, to be updated when the observation.\n    /// feeProtocol The protocol fee for both tokens of the pool.\n    /// Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0\n    /// is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee.\n    /// unlocked Whether the pool is currently locked to reentrancy\n    function slot0()\n        external\n        view\n        returns (\n            uint160 sqrtPriceX96,\n            int24 tick,\n            uint16 observationIndex,\n            uint16 observationCardinality,\n            uint16 observationCardinalityNext,\n            uint8 feeProtocol,\n            bool unlocked\n        );\n\n    /// @notice The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\n    /// @dev This value can overflow the uint256\n    function feeGrowthGlobal0X128() external view returns (uint256);\n\n    /// @notice The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\n    /// @dev This value can overflow the uint256\n    function feeGrowthGlobal1X128() external view returns (uint256);\n\n    /// @notice The amounts of token0 and token1 that are owed to the protocol\n    /// @dev Protocol fees will never exceed uint128 max in either token\n    function protocolFees() external view returns (uint128 token0, uint128 token1);\n\n    /// @notice The currently in range liquidity available to the pool\n    /// @dev This value has no relationship to the total liquidity across all ticks\n    function liquidity() external view returns (uint128);\n\n    /// @notice Look up information about a specific tick in the pool\n    /// @param tick The tick to look up\n    /// @return liquidityGross the total amount of position liquidity that uses the pool either as tick lower or\n    /// tick upper,\n    /// liquidityNet how much liquidity changes when the pool price crosses the tick,\n    /// feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0,\n    /// feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1,\n    /// tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick\n    /// secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick,\n    /// secondsOutside the seconds spent on the other side of the tick from the current tick,\n    /// initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false.\n    /// Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0.\n    /// In addition, these values are only relative and must be used only in comparison to previous snapshots for\n    /// a specific position.\n    function ticks(int24 tick)\n        external\n        view\n        returns (\n            uint128 liquidityGross,\n            int128 liquidityNet,\n            uint256 feeGrowthOutside0X128,\n            uint256 feeGrowthOutside1X128,\n            int56 tickCumulativeOutside,\n            uint160 secondsPerLiquidityOutsideX128,\n            uint32 secondsOutside,\n            bool initialized\n        );\n\n    /// @notice Returns 256 packed tick initialized boolean values. See TickBitmap for more information\n    function tickBitmap(int16 wordPosition) external view returns (uint256);\n\n    /// @notice Returns the information about a position by the position's key\n    /// @param key The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\n    /// @return _liquidity The amount of liquidity in the position,\n    /// Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke,\n    /// Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke,\n    /// Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke,\n    /// Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\n    function positions(bytes32 key)\n        external\n        view\n        returns (\n            uint128 _liquidity,\n            uint256 feeGrowthInside0LastX128,\n            uint256 feeGrowthInside1LastX128,\n            uint128 tokensOwed0,\n            uint128 tokensOwed1\n        );\n\n    /// @notice Returns data about a specific observation index\n    /// @param index The element of the observations array to fetch\n    /// @dev You most likely want to use #observe() instead of this method to get an observation as of some amount of time\n    /// ago, rather than at a specific index in the array.\n    /// @return blockTimestamp The timestamp of the observation,\n    /// Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp,\n    /// Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp,\n    /// Returns initialized whether the observation has been initialized and the values are safe to use\n    function observations(uint256 index)\n        external\n        view\n        returns (\n            uint32 blockTimestamp,\n            int56 tickCumulative,\n            uint160 secondsPerLiquidityCumulativeX128,\n            bool initialized\n        );\n}\n"
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Pool state that never changes\n/// @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values\ninterface IUniswapV3PoolImmutables {\n    /// @notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\n    /// @return The contract address\n    function factory() external view returns (address);\n\n    /// @notice The first of the two tokens of the pool, sorted by address\n    /// @return The token contract address\n    function token0() external view returns (address);\n\n    /// @notice The second of the two tokens of the pool, sorted by address\n    /// @return The token contract address\n    function token1() external view returns (address);\n\n    /// @notice The pool's fee in hundredths of a bip, i.e. 1e-6\n    /// @return The fee\n    function fee() external view returns (uint24);\n\n    /// @notice The pool tick spacing\n    /// @dev Ticks can only be used at multiples of this value, minimum of 1 and always positive\n    /// e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ...\n    /// This value is an int24 to avoid casting even though it is always positive.\n    /// @return The tick spacing\n    function tickSpacing() external view returns (int24);\n\n    /// @notice The maximum amount of position liquidity that can use any tick in the range\n    /// @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\n    /// also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\n    /// @return The max amount of liquidity per tick\n    function maxLiquidityPerTick() external view returns (uint128);\n}\n"
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity ^0.8.0;\n\n/// @title Callback for IUniswapV3PoolActions#swap\n/// @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface\ninterface IUniswapV3SwapCallback {\n    /// @notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n    /// @dev In the implementation you must pay the pool tokens owed for the swap.\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n    /// amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n    /// @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n    /// @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n    /// @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call\n    function uniswapV3SwapCallback(\n        int256 amount0Delta,\n        int256 amount1Delta,\n        bytes calldata data\n    ) external;\n}\n"
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/IERC721Permit.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity ^0.8.0;\n\nimport '../../../../openzeppelin/contracts/token/ERC721/IERC721.sol';\n\n/// @title ERC721 with permit\n/// @notice Extension to ERC721 that includes a permit function for signature based approvals\ninterface IERC721Permit is IERC721 {\n    /// @notice The permit typehash used in the permit signature\n    /// @return The typehash for the permit\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\n\n    /// @notice The domain separator used in the permit signature\n    /// @return The domain seperator used in encoding of permit signature\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n\n    /// @notice Approve of a specific token ID for spending by spender via signature\n    /// @param spender The account that is being approved\n    /// @param tokenId The ID of the token that is being approved for spending\n    /// @param deadline The deadline timestamp by which the call must be mined for the approve to work\n    /// @param v Must produce valid secp256k1 signature from the holder along with `r` and `s`\n    /// @param r Must produce valid secp256k1 signature from the holder along with `v` and `s`\n    /// @param s Must produce valid secp256k1 signature from the holder along with `r` and `v`\n    function permit(\n        address spender,\n        uint256 tokenId,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external payable;\n}\n"
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/IPoolInitializer.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.7.5;\npragma abicoder v2;\n\n/// @title Creates and initializes V3 Pools\n/// @notice Provides a method for creating and initializing a pool, if necessary, for bundling with other methods that\n/// require the pool to exist.\ninterface IPoolInitializer {\n    /// @notice Creates a new pool if it does not exist, then initializes if not initialized\n    /// @dev This method can be bundled with others via IMulticall for the first action (e.g. mint) performed against a pool\n    /// @param token0 The contract address of token0 of the pool\n    /// @param token1 The contract address of token1 of the pool\n    /// @param fee The fee amount of the v3 pool for the specified token pair\n    /// @param sqrtPriceX96 The initial square root price of the pool as a Q64.96 value\n    /// @return pool Returns the pool address based on the pair of tokens and fee, will return the newly created pool address if necessary\n    function createAndInitializePoolIfNecessary(\n        address token0,\n        address token1,\n        uint24 fee,\n        uint160 sqrtPriceX96\n    ) external payable returns (address pool);\n}\n"
			},
			"contracts/openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport './IERC721.sol';\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Enumerable is IERC721 {\n\n    /**\n     * @dev Returns the total amount of tokens stored by the contract.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\n     */\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256 tokenId);\n\n    /**\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n     * Use along with {totalSupply} to enumerate all tokens.\n     */\n    function tokenByIndex(uint256 index) external view returns (uint256);\n}\n"
			},
			"contracts/openzeppelin/contracts/token/ERC721/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../../../../../contracts/openzeppelin/contracts/token/ERC721/IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
			},
			"contracts/aave/protocol-v2/contracts/interfaces/DataTypes.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nlibrary DataTypes {\n    struct ReserveConfigurationMap {\n        uint256 data;\n    }\n\n    struct UserConfigurationMap {\n        uint256 data;\n    }\n\n    struct ReserveData {\n        uint256 totalLiquidity;\n        uint256 availableLiquidity;\n        uint256 totalStableDebt;\n        uint256 totalVariableDebt;\n        uint256 liquidityRate;\n        uint256 variableBorrowRate;\n        uint256 stableBorrowRate;\n        uint256 averageStableBorrowRate;\n        uint256 liquidityIndex;\n        uint256 variableBorrowIndex;\n        uint40 lastUpdateTimestamp;\n    }\n\n    struct UserReserveData {\n        uint256 currentATokenBalance;\n        uint256 currentStableDebt;\n        uint256 currentVariableDebt;\n        uint256 principalStableDebt;\n        uint256 scaledVariableDebt;\n        uint256 stableBorrowRate;\n        uint256 liquidityRate;\n        uint40 stableRateLastUpdated;\n        bool usageAsCollateralEnabled;\n    }\n}\n"
			},
			"contracts/openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"contracts/openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "shanghai"
		}
	},
	"output": {
		"contracts": {
			"contracts/Controller.sol": {
				"Controller": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "mainBotAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_checkInterval",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "ConsolidationCompleted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "ConsolidationStarted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "activity",
									"type": "string"
								}
							],
							"name": "CurrentActivity",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "time",
									"type": "uint256"
								}
							],
							"name": "LogControllerCheck",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "tradeType",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "LogControllerTrade",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "Consolidate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "checkInterval",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "tradeType",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "initiateTradeWithHandling",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "kill",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "activity",
									"type": "string"
								}
							],
							"name": "logEvent",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "mainBot",
							"outputs": [
								{
									"internalType": "contract MainBot",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nextCheckTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "periodicCheck",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "timeframeIndex",
									"type": "uint256"
								}
							],
							"name": "setTradingTimeframe",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountInGwei",
									"type": "uint256"
								}
							],
							"name": "withdrawInGwei",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Controller.sol\":83:3623  contract Controller {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Controller.sol\":555:824  constructor(address payable mainBotAddress, uint256 _checkInterval) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/Controller.sol\":633:640  mainBot */\n  0x00\n    /* \"contracts/Controller.sol\":633:666  mainBot = MainBot(mainBotAddress) */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  dup5\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap2\n  dup3\n  and\n  or\n  swap1\n  swap2\n  sstore\n  0x01\n    /* \"contracts/Controller.sol\":676:694  owner = msg.sender */\n  dup1\n  sload\n  swap1\n  swap2\n  and\n    /* \"contracts/Controller.sol\":684:694  msg.sender */\n  caller\n    /* \"contracts/Controller.sol\":676:694  owner = msg.sender */\n  or\n  swap1\n  sstore\n    /* \"contracts/Controller.sol\":704:717  checkInterval */\n  0x02\n    /* \"contracts/Controller.sol\":704:734  checkInterval = _checkInterval */\n  dup2\n  swap1\n  sstore\n    /* \"contracts/Controller.sol\":786:817  block.timestamp + checkInterval */\n  tag_6\n    /* \"contracts/Controller.sol\":720:734  _checkInterval */\n  dup2\n    /* \"contracts/Controller.sol\":786:801  block.timestamp */\n  timestamp\n    /* \"contracts/Controller.sol\":786:817  block.timestamp + checkInterval */\n  tag_7\n  jump\t// in\ntag_6:\n    /* \"contracts/Controller.sol\":770:783  nextCheckTime */\n  0x03\n    /* \"contracts/Controller.sol\":770:817  nextCheckTime = block.timestamp + checkInterval */\n  sstore\n  pop\n    /* \"contracts/Controller.sol\":83:3623  contract Controller {... */\n  tag_9\n  swap1\n  pop\n  jump\n    /* \"#utility.yul\":14:373   */\ntag_3:\n    /* \"#utility.yul\":101:107   */\n  0x00\n    /* \"#utility.yul\":109:115   */\n  dup1\n    /* \"#utility.yul\":162:164   */\n  0x40\n    /* \"#utility.yul\":150:159   */\n  dup4\n    /* \"#utility.yul\":141:148   */\n  dup6\n    /* \"#utility.yul\":137:160   */\n  sub\n    /* \"#utility.yul\":133:165   */\n  slt\n    /* \"#utility.yul\":130:182   */\n  iszero\n  tag_11\n  jumpi\n    /* \"#utility.yul\":178:179   */\n  0x00\n    /* \"#utility.yul\":175:176   */\n  dup1\n    /* \"#utility.yul\":168:180   */\n  revert\n    /* \"#utility.yul\":130:182   */\ntag_11:\n    /* \"#utility.yul\":204:220   */\n  dup3\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":249:280   */\n  dup2\n  and\n    /* \"#utility.yul\":239:281   */\n  dup2\n  eq\n    /* \"#utility.yul\":229:299   */\n  tag_12\n  jumpi\n    /* \"#utility.yul\":295:296   */\n  0x00\n    /* \"#utility.yul\":292:293   */\n  dup1\n    /* \"#utility.yul\":285:297   */\n  revert\n    /* \"#utility.yul\":229:299   */\ntag_12:\n    /* \"#utility.yul\":363:365   */\n  0x20\n    /* \"#utility.yul\":348:366   */\n  swap4\n  swap1\n  swap4\n  add\n    /* \"#utility.yul\":342:367   */\n  mload\n    /* \"#utility.yul\":318:323   */\n  swap3\n  swap5\n    /* \"#utility.yul\":342:367   */\n  swap3\n  swap4\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":14:373   */\n  jump\t// out\n    /* \"#utility.yul\":378:600   */\ntag_7:\n    /* \"#utility.yul\":443:452   */\n  dup1\n  dup3\n  add\n    /* \"#utility.yul\":464:474   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":461:594   */\n  iszero\n  tag_14\n  jumpi\n    /* \"#utility.yul\":516:526   */\n  0x4e487b71\n    /* \"#utility.yul\":511:514   */\n  0xe0\n    /* \"#utility.yul\":507:527   */\n  shl\n    /* \"#utility.yul\":504:505   */\n  0x00\n    /* \"#utility.yul\":497:528   */\n  mstore\n    /* \"#utility.yul\":551:555   */\n  0x11\n    /* \"#utility.yul\":548:549   */\n  0x04\n    /* \"#utility.yul\":541:556   */\n  mstore\n    /* \"#utility.yul\":579:583   */\n  0x24\n    /* \"#utility.yul\":576:577   */\n  0x00\n    /* \"#utility.yul\":569:584   */\n  revert\n    /* \"#utility.yul\":461:594   */\ntag_14:\n    /* \"#utility.yul\":378:600   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\ntag_9:\n    /* \"contracts/Controller.sol\":83:3623  contract Controller {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Controller.sol\":83:3623  contract Controller {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x88ac3ea1\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x88ac3ea1\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x8c44c530\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xc98706c3\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xe529930a\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xefa274ef\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup1\n      0x36dff6b6\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x41c0e1b5\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x4359b7ef\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x457f3cb0\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x838c29b6\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Controller.sol\":197:225  uint256 public nextCheckTime */\n    tag_3:\n      tag_15\n      sload(0x03)\n      dup2\n      jump\n    tag_15:\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"contracts/Controller.sol\":197:225  uint256 public nextCheckTime */\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Controller.sol\":3095:3190  function kill() external onlyOwner {... */\n    tag_4:\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n      stop\n        /* \"contracts/Controller.sol\":3452:3621  function logEvent(uint256 timestamp, string memory activity) public onlyOwner {... */\n    tag_5:\n      tag_19\n      tag_22\n      calldatasize\n      0x04\n      tag_23\n      jump\t// in\n    tag_22:\n      tag_24\n      jump\t// in\n        /* \"contracts/Controller.sol\":3196:3446  function withdrawInGwei(uint256 amountInGwei) external onlyOwner {... */\n    tag_6:\n      tag_19\n      tag_26\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_26:\n      tag_28\n      jump\t// in\n        /* \"contracts/Controller.sol\":163:191  uint256 public checkInterval */\n    tag_7:\n      tag_15\n      sload(0x02)\n      dup2\n      jump\n        /* \"contracts/Controller.sol\":2409:3093  function setTradingTimeframe(uint256 timeframeIndex) external onlyOwner {... */\n    tag_8:\n      tag_19\n      tag_33\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_33:\n      tag_34\n      jump\t// in\n        /* \"contracts/Controller.sol\":1523:1683  function Consolidate() external onlyOwner {... */\n    tag_9:\n      tag_19\n      tag_36\n      jump\t// in\n        /* \"contracts/Controller.sol\":137:157  address public owner */\n    tag_10:\n      sload(0x01)\n      tag_37\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_37:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1796:1828   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1778:1829   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1766:1768   */\n      0x20\n        /* \"#utility.yul\":1751:1769   */\n      add\n        /* \"contracts/Controller.sol\":137:157  address public owner */\n      tag_17\n        /* \"#utility.yul\":1632:1835   */\n      jump\n        /* \"contracts/Controller.sol\":830:1517  function periodicCheck() external onlyOwner {... */\n    tag_11:\n      tag_19\n      tag_42\n      jump\t// in\n        /* \"contracts/Controller.sol\":109:131  MainBot public mainBot */\n    tag_12:\n      sload(0x00)\n      tag_37\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/Controller.sol\":1951:2403  function initiateTradeWithHandling(string memory tradeType, uint256 amount) external onlyOwner {... */\n    tag_13:\n      tag_19\n      tag_48\n      calldatasize\n      0x04\n      tag_49\n      jump\t// in\n    tag_48:\n      tag_50\n      jump\t// in\n        /* \"contracts/Controller.sol\":3095:3190  function kill() external onlyOwner {... */\n    tag_20:\n        /* \"contracts/Controller.sol\":508:513  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"contracts/Controller.sol\":494:504  msg.sender */\n      caller\n        /* \"contracts/Controller.sol\":494:513  msg.sender == owner */\n      eq\n        /* \"contracts/Controller.sol\":486:531  require(msg.sender == owner, \"Not the owner\") */\n      tag_52\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_53\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_52:\n        /* \"contracts/Controller.sol\":3136:3187  payable(msg.sender).transfer(address(this).balance) */\n      mload(0x40)\n        /* \"contracts/Controller.sol\":3144:3154  msg.sender */\n      caller\n      swap1\n        /* \"contracts/Controller.sol\":3165:3186  address(this).balance */\n      selfbalance\n        /* \"contracts/Controller.sol\":3136:3187  payable(msg.sender).transfer(address(this).balance) */\n      dup1\n      iszero\n      0x08fc\n      mul\n      swap2\n      0x00\n      dup2\n      dup2\n      dup2\n        /* \"contracts/Controller.sol\":3165:3186  address(this).balance */\n      dup6\n        /* \"contracts/Controller.sol\":3144:3154  msg.sender */\n      dup9\n        /* \"contracts/Controller.sol\":3136:3187  payable(msg.sender).transfer(address(this).balance) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_57\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_57:\n      pop\n        /* \"contracts/Controller.sol\":3095:3190  function kill() external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Controller.sol\":3452:3621  function logEvent(uint256 timestamp, string memory activity) public onlyOwner {... */\n    tag_24:\n        /* \"contracts/Controller.sol\":508:513  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"contracts/Controller.sol\":494:504  msg.sender */\n      caller\n        /* \"contracts/Controller.sol\":494:513  msg.sender == owner */\n      eq\n        /* \"contracts/Controller.sol\":486:531  require(msg.sender == owner, \"Not the owner\") */\n      tag_59\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_53\n      swap1\n      tag_54\n      jump\t// in\n    tag_59:\n        /* \"contracts/Controller.sol\":3545:3574  LogControllerCheck(timestamp) */\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      dup3\n      dup2\n      mstore\n        /* \"contracts/Controller.sol\":3545:3574  LogControllerCheck(timestamp) */\n      0x4896f6f06b46d0ebc6bd420e59b05a5e5486f3a5a2e306e20def08c8f284f374\n      swap1\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"contracts/Controller.sol\":3545:3574  LogControllerCheck(timestamp) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Controller.sol\":3589:3614  CurrentActivity(activity) */\n      0x6e001753e59c246317b708b3090a58d44776f3b9e74dcd996149a49758f4d487\n        /* \"contracts/Controller.sol\":3605:3613  activity */\n      dup2\n        /* \"contracts/Controller.sol\":3589:3614  CurrentActivity(activity) */\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Controller.sol\":3452:3621  function logEvent(uint256 timestamp, string memory activity) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Controller.sol\":3196:3446  function withdrawInGwei(uint256 amountInGwei) external onlyOwner {... */\n    tag_28:\n        /* \"contracts/Controller.sol\":508:513  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"contracts/Controller.sol\":494:504  msg.sender */\n      caller\n        /* \"contracts/Controller.sol\":494:513  msg.sender == owner */\n      eq\n        /* \"contracts/Controller.sol\":486:531  require(msg.sender == owner, \"Not the owner\") */\n      tag_66\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_53\n      swap1\n      tag_54\n      jump\t// in\n    tag_66:\n        /* \"contracts/Controller.sol\":3271:3290  uint256 amountInWei */\n      0x00\n        /* \"contracts/Controller.sol\":3293:3314  amountInGwei * 1 gwei */\n      tag_69\n        /* \"contracts/Controller.sol\":3293:3305  amountInGwei */\n      dup3\n        /* \"contracts/Controller.sol\":3308:3314  1 gwei */\n      0x3b9aca00\n        /* \"contracts/Controller.sol\":3293:3314  amountInGwei * 1 gwei */\n      tag_70\n      jump\t// in\n    tag_69:\n        /* \"contracts/Controller.sol\":3271:3314  uint256 amountInWei = amountInGwei * 1 gwei */\n      swap1\n      pop\n        /* \"contracts/Controller.sol\":3357:3368  amountInWei */\n      dup1\n        /* \"contracts/Controller.sol\":3332:3353  address(this).balance */\n      selfbalance\n        /* \"contracts/Controller.sol\":3332:3368  address(this).balance >= amountInWei */\n      lt\n      iszero\n        /* \"contracts/Controller.sol\":3324:3393  require(address(this).balance >= amountInWei, \"Insufficient balance\") */\n      tag_71\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3969:3971   */\n      0x20\n        /* \"contracts/Controller.sol\":3324:3393  require(address(this).balance >= amountInWei, \"Insufficient balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3951:3972   */\n      mstore\n        /* \"#utility.yul\":4008:4010   */\n      0x14\n        /* \"#utility.yul\":3988:4006   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3981:4011   */\n      mstore\n      shl(0x60, 0x496e73756666696369656e742062616c616e6365)\n        /* \"#utility.yul\":4027:4045   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4020:4070   */\n      mstore\n        /* \"#utility.yul\":4087:4105   */\n      0x64\n      add\n        /* \"contracts/Controller.sol\":3324:3393  require(address(this).balance >= amountInWei, \"Insufficient balance\") */\n      tag_53\n        /* \"#utility.yul\":3767:4111   */\n      jump\n        /* \"contracts/Controller.sol\":3324:3393  require(address(this).balance >= amountInWei, \"Insufficient balance\") */\n    tag_71:\n        /* \"contracts/Controller.sol\":3411:3416  owner */\n      sload(0x01)\n        /* \"contracts/Controller.sol\":3403:3439  payable(owner).transfer(amountInWei) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Controller.sol\":3411:3416  owner */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/Controller.sol\":3403:3439  payable(owner).transfer(amountInWei) */\n      dup3\n      iszero\n      0x08fc\n      mul\n      swap1\n        /* \"contracts/Controller.sol\":3427:3438  amountInWei */\n      dup4\n      swap1\n        /* \"contracts/Controller.sol\":3411:3416  owner */\n      0x00\n        /* \"contracts/Controller.sol\":3403:3439  payable(owner).transfer(amountInWei) */\n      dup2\n        /* \"contracts/Controller.sol\":3411:3416  owner */\n      dup2\n        /* \"contracts/Controller.sol\":3403:3439  payable(owner).transfer(amountInWei) */\n      dup2\n        /* \"contracts/Controller.sol\":3427:3438  amountInWei */\n      dup6\n        /* \"contracts/Controller.sol\":3411:3416  owner */\n      dup9\n        /* \"contracts/Controller.sol\":3403:3439  payable(owner).transfer(amountInWei) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_75\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_75:\n      pop\n        /* \"contracts/Controller.sol\":3261:3446  {... */\n      pop\n        /* \"contracts/Controller.sol\":3196:3446  function withdrawInGwei(uint256 amountInGwei) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Controller.sol\":2409:3093  function setTradingTimeframe(uint256 timeframeIndex) external onlyOwner {... */\n    tag_34:\n        /* \"contracts/Controller.sol\":508:513  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"contracts/Controller.sol\":494:504  msg.sender */\n      caller\n        /* \"contracts/Controller.sol\":494:513  msg.sender == owner */\n      eq\n        /* \"contracts/Controller.sol\":486:531  require(msg.sender == owner, \"Not the owner\") */\n      tag_77\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_53\n      swap1\n      tag_54\n      jump\t// in\n    tag_77:\n        /* \"contracts/Controller.sol\":2521:2537  new uint256[](8) */\n      0x40\n      dup1\n      mload\n        /* \"contracts/Controller.sol\":2535:2536  8 */\n      0x08\n        /* \"contracts/Controller.sol\":2521:2537  new uint256[](8) */\n      dup1\n      dup3\n      mstore\n      0x0120\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n        /* \"contracts/Controller.sol\":2491:2518  uint256[] memory timeframes */\n      0x00\n      swap2\n        /* \"contracts/Controller.sol\":2521:2537  new uint256[](8) */\n      0x20\n      dup3\n      add\n      0x0100\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n      pop\n        /* \"contracts/Controller.sol\":2491:2537  uint256[] memory timeframes = new uint256[](8) */\n      swap1\n      pop\n        /* \"contracts/Controller.sol\":2563:2566  900 */\n      0x0384\n        /* \"contracts/Controller.sol\":2547:2557  timeframes */\n      dup2\n        /* \"contracts/Controller.sol\":2558:2559  0 */\n      0x00\n        /* \"contracts/Controller.sol\":2547:2560  timeframes[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_85\n      jumpi\n      tag_85\n      tag_86\n      jump\t// in\n    tag_85:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/Controller.sol\":2547:2566  timeframes[0] = 900 */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/Controller.sol\":2610:2614  1800 */\n      0x0708\n        /* \"contracts/Controller.sol\":2594:2604  timeframes */\n      dup2\n        /* \"contracts/Controller.sol\":2605:2606  1 */\n      0x01\n        /* \"contracts/Controller.sol\":2594:2607  timeframes[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_88\n      jumpi\n      tag_88\n      tag_86\n      jump\t// in\n    tag_88:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/Controller.sol\":2594:2614  timeframes[1] = 1800 */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/Controller.sol\":2657:2661  3600 */\n      0x0e10\n        /* \"contracts/Controller.sol\":2641:2651  timeframes */\n      dup2\n        /* \"contracts/Controller.sol\":2652:2653  2 */\n      0x02\n        /* \"contracts/Controller.sol\":2641:2654  timeframes[2] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_90\n      jumpi\n      tag_90\n      tag_86\n      jump\t// in\n    tag_90:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/Controller.sol\":2641:2661  timeframes[2] = 3600 */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/Controller.sol\":2700:2704  7200 */\n      0x1c20\n        /* \"contracts/Controller.sol\":2684:2694  timeframes */\n      dup2\n        /* \"contracts/Controller.sol\":2695:2696  3 */\n      0x03\n        /* \"contracts/Controller.sol\":2684:2697  timeframes[3] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_92\n      jumpi\n      tag_92\n      tag_86\n      jump\t// in\n    tag_92:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/Controller.sol\":2684:2704  timeframes[3] = 7200 */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/Controller.sol\":2744:2749  14400 */\n      0x3840\n        /* \"contracts/Controller.sol\":2728:2738  timeframes */\n      dup2\n        /* \"contracts/Controller.sol\":2739:2740  4 */\n      0x04\n        /* \"contracts/Controller.sol\":2728:2741  timeframes[4] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_94\n      jumpi\n      tag_94\n      tag_86\n      jump\t// in\n    tag_94:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/Controller.sol\":2728:2749  timeframes[4] = 14400 */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/Controller.sol\":2788:2793  28800 */\n      0x7080\n        /* \"contracts/Controller.sol\":2772:2782  timeframes */\n      dup2\n        /* \"contracts/Controller.sol\":2783:2784  5 */\n      0x05\n        /* \"contracts/Controller.sol\":2772:2785  timeframes[5] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_96\n      jumpi\n      tag_96\n      tag_86\n      jump\t// in\n    tag_96:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/Controller.sol\":2772:2793  timeframes[5] = 28800 */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/Controller.sol\":2832:2837  86400 */\n      0x015180\n        /* \"contracts/Controller.sol\":2816:2826  timeframes */\n      dup2\n        /* \"contracts/Controller.sol\":2827:2828  6 */\n      0x06\n        /* \"contracts/Controller.sol\":2816:2829  timeframes[6] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_98\n      jumpi\n      tag_98\n      tag_86\n      jump\t// in\n    tag_98:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/Controller.sol\":2816:2837  timeframes[6] = 86400 */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/Controller.sol\":2877:2883  604800 */\n      0x093a80\n        /* \"contracts/Controller.sol\":2861:2871  timeframes */\n      dup2\n        /* \"contracts/Controller.sol\":2872:2873  7 */\n      0x07\n        /* \"contracts/Controller.sol\":2861:2874  timeframes[7] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_100\n      jumpi\n      tag_100\n      tag_86\n      jump\t// in\n    tag_100:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/Controller.sol\":2861:2883  timeframes[7] = 604800 */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/Controller.sol\":2905:2930  uint256 selectedTimeframe */\n      0x00\n        /* \"contracts/Controller.sol\":2933:2943  timeframes */\n      dup2\n        /* \"contracts/Controller.sol\":2944:2958  timeframeIndex */\n      dup4\n        /* \"contracts/Controller.sol\":2933:2959  timeframes[timeframeIndex] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_102\n      jumpi\n      tag_102\n      tag_86\n      jump\t// in\n    tag_102:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n      mload\n        /* \"contracts/Controller.sol\":2969:2976  mainBot */\n      sload(0x00)\n        /* \"contracts/Controller.sol\":2969:3011  mainBot.adjustTimeframe(selectedTimeframe) */\n      mload(0x40)\n      shl(0xe0, 0x869665e9)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":160:185   */\n      dup4\n      swap1\n      mstore\n        /* \"contracts/Controller.sol\":2933:2959  timeframes[timeframeIndex] */\n      swap2\n      swap3\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Controller.sol\":2969:2976  mainBot */\n      and\n      swap1\n        /* \"contracts/Controller.sol\":2969:2992  mainBot.adjustTimeframe */\n      0x869665e9\n      swap1\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"contracts/Controller.sol\":2969:3011  mainBot.adjustTimeframe(selectedTimeframe) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_104\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_104:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_106\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_106:\n      pop\n      pop\n      pop\n      pop\n      0x00\n      dup1\n      mload\n      0x20\n      data_ceeea03d3bc4262e4464e93b48823b6306bbbb1661739b8798146c0bd453cfa4\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/Controller.sol\":3068:3085  selectedTimeframe */\n      dup2\n        /* \"contracts/Controller.sol\":3026:3086  LogControllerTrade(\"Adjusting timeframe\", selectedTimeframe) */\n      mload(0x40)\n      tag_107\n      swap2\n      swap1\n        /* \"#utility.yul\":4478:4480   */\n      0x40\n        /* \"#utility.yul\":4460:4481   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":4517:4519   */\n      0x13\n        /* \"#utility.yul\":4497:4515   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":4490:4520   */\n      mstore\n      shl(0x68, 0x41646a757374696e672074696d656672616d65)\n        /* \"#utility.yul\":4551:4553   */\n      0x60\n        /* \"#utility.yul\":4536:4554   */\n      dup3\n      add\n        /* \"#utility.yul\":4529:4578   */\n      mstore\n        /* \"#utility.yul\":4645:4649   */\n      0x20\n        /* \"#utility.yul\":4630:4650   */\n      dup2\n      add\n        /* \"#utility.yul\":4623:4659   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":4610:4613   */\n      0x80\n        /* \"#utility.yul\":4595:4614   */\n      add\n      swap1\n        /* \"#utility.yul\":4248:4665   */\n      jump\n        /* \"contracts/Controller.sol\":3026:3086  LogControllerTrade(\"Adjusting timeframe\", selectedTimeframe) */\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Controller.sol\":2481:3093  {... */\n      pop\n      pop\n        /* \"contracts/Controller.sol\":2409:3093  function setTradingTimeframe(uint256 timeframeIndex) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Controller.sol\":1523:1683  function Consolidate() external onlyOwner {... */\n    tag_36:\n        /* \"contracts/Controller.sol\":508:513  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"contracts/Controller.sol\":494:504  msg.sender */\n      caller\n        /* \"contracts/Controller.sol\":494:513  msg.sender == owner */\n      eq\n        /* \"contracts/Controller.sol\":486:531  require(msg.sender == owner, \"Not the owner\") */\n      tag_110\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_53\n      swap1\n      tag_54\n      jump\t// in\n    tag_110:\n        /* \"contracts/Controller.sol\":1580:1602  ConsolidationStarted() */\n      mload(0x40)\n      0x7541b06c3dec9fdc83c6c723dc48e42d9b1632a4ab380f150eb91c2e6fc310b9\n      swap1\n      0x00\n      swap1\n      log1\n        /* \"contracts/Controller.sol\":1612:1619  mainBot */\n      0x00\n      dup1\n      sload\n        /* \"contracts/Controller.sol\":1612:1637  mainBot.convertAllToPOL() */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x9d8ef1e1)\n      dup2\n      mstore\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Controller.sol\":1612:1619  mainBot */\n      swap1\n      swap3\n      and\n      swap3\n        /* \"contracts/Controller.sol\":1612:1635  mainBot.convertAllToPOL */\n      0x9d8ef1e1\n      swap3\n        /* \"contracts/Controller.sol\":1612:1637  mainBot.convertAllToPOL() */\n      0x04\n      dup1\n      dup5\n      add\n      swap4\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"contracts/Controller.sol\":1612:1619  mainBot */\n      dup4\n      dup8\n        /* \"contracts/Controller.sol\":1612:1637  mainBot.convertAllToPOL() */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_113\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_113:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_115\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_115:\n      pop\n      pop\n        /* \"contracts/Controller.sol\":1652:1676  ConsolidationCompleted() */\n      mload(0x40)\n      0x9dc90ce348fed0b93ddbc45640ba9e0ab32f42e205a3c0b452fb17474b96e1c0\n      swap3\n      pop\n      0x00\n      swap2\n      pop\n      log1\n        /* \"contracts/Controller.sol\":1523:1683  function Consolidate() external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Controller.sol\":830:1517  function periodicCheck() external onlyOwner {... */\n    tag_42:\n        /* \"contracts/Controller.sol\":508:513  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"contracts/Controller.sol\":494:504  msg.sender */\n      caller\n        /* \"contracts/Controller.sol\":494:513  msg.sender == owner */\n      eq\n        /* \"contracts/Controller.sol\":486:531  require(msg.sender == owner, \"Not the owner\") */\n      tag_117\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_53\n      swap1\n      tag_54\n      jump\t// in\n    tag_117:\n        /* \"contracts/Controller.sol\":911:924  nextCheckTime */\n      sload(0x03)\n        /* \"contracts/Controller.sol\":892:907  block.timestamp */\n      timestamp\n        /* \"contracts/Controller.sol\":892:924  block.timestamp >= nextCheckTime */\n      lt\n      iszero\n        /* \"contracts/Controller.sol\":884:965  require(block.timestamp >= nextCheckTime, \"It's not time for the next check yet\") */\n      tag_120\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4872:4874   */\n      0x20\n        /* \"contracts/Controller.sol\":884:965  require(block.timestamp >= nextCheckTime, \"It's not time for the next check yet\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4854:4875   */\n      mstore\n        /* \"#utility.yul\":4911:4913   */\n      0x24\n        /* \"#utility.yul\":4891:4909   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":4884:4914   */\n      mstore\n        /* \"#utility.yul\":4950:4984   */\n      0x49742773206e6f742074696d6520666f7220746865206e65787420636865636b\n        /* \"#utility.yul\":4930:4948   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4923:4985   */\n      mstore\n      shl(0xe2, 0x081e595d)\n        /* \"#utility.yul\":5001:5019   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4994:5028   */\n      mstore\n        /* \"#utility.yul\":5045:5064   */\n      0x84\n      add\n        /* \"contracts/Controller.sol\":884:965  require(block.timestamp >= nextCheckTime, \"It's not time for the next check yet\") */\n      tag_53\n        /* \"#utility.yul\":4670:5070   */\n      jump\n        /* \"contracts/Controller.sol\":884:965  require(block.timestamp >= nextCheckTime, \"It's not time for the next check yet\") */\n    tag_120:\n        /* \"contracts/Controller.sol\":984:997  uint256 price */\n      0x00\n        /* \"contracts/Controller.sol\":1000:1007  mainBot */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Controller.sol\":1000:1018  mainBot.checkPrice */\n      and\n      0x8fc3047d\n        /* \"contracts/Controller.sol\":1000:1020  mainBot.checkPrice() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_124\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_124:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_125\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_125:\n        /* \"contracts/Controller.sol\":984:1020  uint256 price = mainBot.checkPrice() */\n      swap1\n      pop\n        /* \"contracts/Controller.sol\":1035:1070  LogControllerCheck(block.timestamp) */\n      0x4896f6f06b46d0ebc6bd420e59b05a5e5486f3a5a2e306e20def08c8f284f374\n        /* \"contracts/Controller.sol\":1054:1069  block.timestamp */\n      timestamp\n        /* \"contracts/Controller.sol\":1035:1070  LogControllerCheck(block.timestamp) */\n      mload(0x40)\n      tag_127\n      swap2\n        /* \"#utility.yul\":160:185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n      swap1\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"contracts/Controller.sol\":1035:1070  LogControllerCheck(block.timestamp) */\n    tag_127:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Controller.sol\":1166:1170  1050 */\n      0x041a\n        /* \"contracts/Controller.sol\":1158:1163  price */\n      dup2\n        /* \"contracts/Controller.sol\":1158:1170  price > 1050 */\n      gt\n        /* \"contracts/Controller.sol\":1154:1453  if (price > 1050) { // Example condition... */\n      iszero\n      tag_128\n      jumpi\n        /* \"contracts/Controller.sol\":1207:1214  mainBot */\n      sload(0x00)\n        /* \"contracts/Controller.sol\":1207:1241  mainBot.initiateTrade(\"sell\", 100) */\n      mload(0x40)\n      shl(0xe0, 0x26c403ed)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Controller.sol\":1207:1214  mainBot */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/Controller.sol\":1207:1228  mainBot.initiateTrade */\n      0x26c403ed\n      swap1\n        /* \"contracts/Controller.sol\":1207:1241  mainBot.initiateTrade(\"sell\", 100) */\n      tag_129\n      swap1\n        /* \"contracts/Controller.sol\":1237:1240  100 */\n      0x64\n      swap1\n        /* \"contracts/Controller.sol\":1207:1241  mainBot.initiateTrade(\"sell\", 100) */\n      0x04\n      add\n        /* \"#utility.yul\":5504:5506   */\n      0x40\n        /* \"#utility.yul\":5486:5507   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":5543:5544   */\n      0x04\n        /* \"#utility.yul\":5523:5541   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":5516:5545   */\n      mstore\n      shl(0xe2, 0x1cd95b1b)\n        /* \"#utility.yul\":5576:5578   */\n      0x60\n        /* \"#utility.yul\":5561:5579   */\n      dup3\n      add\n        /* \"#utility.yul\":5554:5588   */\n      mstore\n        /* \"#utility.yul\":5655:5659   */\n      0x20\n        /* \"#utility.yul\":5640:5660   */\n      dup2\n      add\n        /* \"#utility.yul\":5633:5669   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":5620:5623   */\n      0x80\n        /* \"#utility.yul\":5605:5624   */\n      add\n      swap1\n        /* \"#utility.yul\":5264:5675   */\n      jump\n        /* \"contracts/Controller.sol\":1207:1241  mainBot.initiateTrade(\"sell\", 100) */\n    tag_129:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_131\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_131:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_133\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_133:\n      pop\n      pop\n        /* \"contracts/Controller.sol\":1260:1291  LogControllerTrade(\"sell\", 100) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":5486:5507   */\n      dup2\n      dup2\n      mstore\n        /* \"#utility.yul\":5543:5544   */\n      0x04\n        /* \"#utility.yul\":5523:5541   */\n      dup2\n      dup4\n      add\n        /* \"#utility.yul\":5516:5545   */\n      mstore\n      shl(0xe2, 0x1cd95b1b)\n        /* \"#utility.yul\":5576:5578   */\n      0x60\n        /* \"#utility.yul\":5561:5579   */\n      dup3\n      add\n        /* \"#utility.yul\":5554:5588   */\n      mstore\n        /* \"contracts/Controller.sol\":1287:1290  100 */\n      0x64\n        /* \"#utility.yul\":5655:5659   */\n      0x20\n        /* \"#utility.yul\":5640:5660   */\n      dup3\n      add\n        /* \"#utility.yul\":5633:5669   */\n      mstore\n        /* \"contracts/Controller.sol\":1260:1291  LogControllerTrade(\"sell\", 100) */\n      swap1\n      mload\n      0x00\n      dup1\n      mload\n      0x20\n      data_ceeea03d3bc4262e4464e93b48823b6306bbbb1661739b8798146c0bd453cfa4\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      swap4\n      pop\n      swap1\n      dup2\n      swap1\n      sub\n        /* \"#utility.yul\":5620:5623   */\n      0x80\n        /* \"contracts/Controller.sol\":1260:1291  LogControllerTrade(\"sell\", 100) */\n      add\n      swap2\n      pop\n      log1\n        /* \"contracts/Controller.sol\":1154:1453  if (price > 1050) { // Example condition... */\n      jump(tag_136)\n    tag_128:\n        /* \"contracts/Controller.sol\":1320:1323  950 */\n      0x03b6\n        /* \"contracts/Controller.sol\":1312:1317  price */\n      dup2\n        /* \"contracts/Controller.sol\":1312:1323  price < 950 */\n      lt\n        /* \"contracts/Controller.sol\":1308:1453  if (price < 950) { // Example condition... */\n      iszero\n      tag_136\n      jumpi\n        /* \"contracts/Controller.sol\":1360:1367  mainBot */\n      sload(0x00)\n        /* \"contracts/Controller.sol\":1360:1393  mainBot.initiateTrade(\"buy\", 100) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x26c403ed)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":5902:5923   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":5959:5960   */\n      0x03\n        /* \"#utility.yul\":5939:5957   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5932:5961   */\n      mstore\n      shl(0xe8, 0x627579)\n        /* \"contracts/Controller.sol\":1389:1392  100 */\n      0x64\n        /* \"#utility.yul\":5977:5995   */\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":5970:6003   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":6055:6075   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6048:6084   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Controller.sol\":1360:1367  mainBot */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/Controller.sol\":1360:1381  mainBot.initiateTrade */\n      0x26c403ed\n      swap1\n        /* \"#utility.yul\":6020:6039   */\n      0x84\n      add\n        /* \"contracts/Controller.sol\":1360:1393  mainBot.initiateTrade(\"buy\", 100) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_139\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_139:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_141\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_141:\n      pop\n      pop\n        /* \"contracts/Controller.sol\":1412:1442  LogControllerTrade(\"buy\", 100) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":5902:5923   */\n      dup2\n      dup2\n      mstore\n        /* \"#utility.yul\":5959:5960   */\n      0x03\n        /* \"#utility.yul\":5939:5957   */\n      dup2\n      dup4\n      add\n        /* \"#utility.yul\":5932:5961   */\n      mstore\n      shl(0xe8, 0x627579)\n        /* \"#utility.yul\":5992:5994   */\n      0x60\n        /* \"#utility.yul\":5977:5995   */\n      dup3\n      add\n        /* \"#utility.yul\":5970:6003   */\n      mstore\n        /* \"contracts/Controller.sol\":1438:1441  100 */\n      0x64\n        /* \"#utility.yul\":6070:6074   */\n      0x20\n        /* \"#utility.yul\":6055:6075   */\n      dup3\n      add\n        /* \"#utility.yul\":6048:6084   */\n      mstore\n        /* \"contracts/Controller.sol\":1412:1442  LogControllerTrade(\"buy\", 100) */\n      swap1\n      mload\n      0x00\n      dup1\n      mload\n      0x20\n      data_ceeea03d3bc4262e4464e93b48823b6306bbbb1661739b8798146c0bd453cfa4\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      swap4\n      pop\n      swap1\n      dup2\n      swap1\n      sub\n        /* \"#utility.yul\":6035:6038   */\n      0x80\n        /* \"contracts/Controller.sol\":1412:1442  LogControllerTrade(\"buy\", 100) */\n      add\n      swap2\n      pop\n      log1\n        /* \"contracts/Controller.sol\":1308:1453  if (price < 950) { // Example condition... */\n    tag_136:\n        /* \"contracts/Controller.sol\":1497:1510  checkInterval */\n      sload(0x02)\n        /* \"contracts/Controller.sol\":1479:1510  block.timestamp + checkInterval */\n      tag_143\n      swap1\n        /* \"contracts/Controller.sol\":1479:1494  block.timestamp */\n      timestamp\n        /* \"contracts/Controller.sol\":1479:1510  block.timestamp + checkInterval */\n      tag_144\n      jump\t// in\n    tag_143:\n        /* \"contracts/Controller.sol\":1463:1476  nextCheckTime */\n      0x03\n        /* \"contracts/Controller.sol\":1463:1510  nextCheckTime = block.timestamp + checkInterval */\n      sstore\n      pop\n        /* \"contracts/Controller.sol\":830:1517  function periodicCheck() external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Controller.sol\":1951:2403  function initiateTradeWithHandling(string memory tradeType, uint256 amount) external onlyOwner {... */\n    tag_50:\n        /* \"contracts/Controller.sol\":508:513  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"contracts/Controller.sol\":494:504  msg.sender */\n      caller\n        /* \"contracts/Controller.sol\":494:513  msg.sender == owner */\n      eq\n        /* \"contracts/Controller.sol\":486:531  require(msg.sender == owner, \"Not the owner\") */\n      tag_146\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_53\n      swap1\n      tag_54\n      jump\t// in\n    tag_146:\n        /* \"contracts/Controller.sol\":2056:2074  uint256 retryCount */\n      0x00\n        /* \"contracts/Controller.sol\":2088:2100  bool success */\n      dup1\n        /* \"contracts/Controller.sol\":2118:2397  while (retryCount < 3 && !success) {... */\n    tag_149:\n        /* \"contracts/Controller.sol\":2138:2139  3 */\n      0x03\n        /* \"contracts/Controller.sol\":2125:2135  retryCount */\n      dup3\n        /* \"contracts/Controller.sol\":2125:2139  retryCount < 3 */\n      lt\n        /* \"contracts/Controller.sol\":2125:2151  retryCount < 3 && !success */\n      dup1\n      iszero\n      tag_151\n      jumpi\n      pop\n        /* \"contracts/Controller.sol\":2144:2151  success */\n      dup1\n        /* \"contracts/Controller.sol\":2143:2151  !success */\n      iszero\n        /* \"contracts/Controller.sol\":2125:2151  retryCount < 3 && !success */\n    tag_151:\n        /* \"contracts/Controller.sol\":2118:2397  while (retryCount < 3 && !success) {... */\n      iszero\n      tag_150\n      jumpi\n        /* \"contracts/Controller.sol\":2171:2178  mainBot */\n      sload(0x00)\n        /* \"contracts/Controller.sol\":2171:2211  mainBot.initiateTrade(tradeType, amount) */\n      mload(0x40)\n      shl(0xe0, 0x26c403ed)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Controller.sol\":2171:2178  mainBot */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/Controller.sol\":2171:2192  mainBot.initiateTrade */\n      0x26c403ed\n      swap1\n        /* \"contracts/Controller.sol\":2171:2211  mainBot.initiateTrade(tradeType, amount) */\n      tag_152\n      swap1\n        /* \"contracts/Controller.sol\":2193:2202  tradeType */\n      dup8\n      swap1\n        /* \"contracts/Controller.sol\":2204:2210  amount */\n      dup8\n      swap1\n        /* \"contracts/Controller.sol\":2171:2211  mainBot.initiateTrade(tradeType, amount) */\n      0x04\n      add\n      tag_153\n      jump\t// in\n    tag_152:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_154\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_154:\n      pop\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_155\n      jumpi\n      pop\n      0x01\n    tag_155:\n        /* \"contracts/Controller.sol\":2167:2387  try mainBot.initiateTrade(tradeType, amount) {... */\n      tag_156\n      jumpi\n        /* \"contracts/Controller.sol\":2344:2372  handleTradeError(retryCount) */\n      tag_160\n        /* \"contracts/Controller.sol\":2361:2371  retryCount */\n      dup3\n        /* \"contracts/Controller.sol\":2344:2360  handleTradeError */\n      tag_161\n        /* \"contracts/Controller.sol\":2344:2372  handleTradeError(retryCount) */\n      jump\t// in\n    tag_160:\n        /* \"contracts/Controller.sol\":2118:2397  while (retryCount < 3 && !success) {... */\n      jump(tag_149)\n        /* \"contracts/Controller.sol\":2167:2387  try mainBot.initiateTrade(tradeType, amount) {... */\n    tag_156:\n        /* \"contracts/Controller.sol\":2240:2244  true */\n      0x01\n        /* \"contracts/Controller.sol\":2230:2244  success = true */\n      swap1\n      pop\n      0x00\n      dup1\n      mload\n      0x20\n      data_ceeea03d3bc4262e4464e93b48823b6306bbbb1661739b8798146c0bd453cfa4\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/Controller.sol\":2286:2295  tradeType */\n      dup5\n        /* \"contracts/Controller.sol\":2297:2303  amount */\n      dup5\n        /* \"contracts/Controller.sol\":2267:2304  LogControllerTrade(tradeType, amount) */\n      mload(0x40)\n      tag_163\n      swap3\n      swap2\n      swap1\n      tag_153\n      jump\t// in\n    tag_163:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Controller.sol\":2118:2397  while (retryCount < 3 && !success) {... */\n      jump(tag_149)\n    tag_150:\n        /* \"contracts/Controller.sol\":2046:2403  {... */\n      pop\n      pop\n        /* \"contracts/Controller.sol\":1951:2403  function initiateTradeWithHandling(string memory tradeType, uint256 amount) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Controller.sol\":1689:1945  function handleTradeError(uint256 retryCount) internal {... */\n    tag_161:\n        /* \"contracts/Controller.sol\":1772:1773  3 */\n      0x03\n        /* \"contracts/Controller.sol\":1758:1768  retryCount */\n      dup2\n        /* \"contracts/Controller.sol\":1758:1773  retryCount >= 3 */\n      lt\n        /* \"contracts/Controller.sol\":1754:1939  if (retryCount >= 3) {... */\n      tag_165\n      jumpi\n        /* \"contracts/Controller.sol\":1789:1796  mainBot */\n      0x00\n      dup1\n      sload\n        /* \"contracts/Controller.sol\":1789:1813  mainBot.disableTrading() */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x17700f01)\n      dup2\n      mstore\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Controller.sol\":1789:1796  mainBot */\n      swap1\n      swap3\n      and\n      swap3\n        /* \"contracts/Controller.sol\":1789:1811  mainBot.disableTrading */\n      0x17700f01\n      swap3\n        /* \"contracts/Controller.sol\":1789:1813  mainBot.disableTrading() */\n      0x04\n      dup1\n      dup5\n      add\n      swap4\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"contracts/Controller.sol\":1789:1796  mainBot */\n      dup4\n      dup8\n        /* \"contracts/Controller.sol\":1789:1813  mainBot.disableTrading() */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_166\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_166:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_168\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_168:\n      pop\n      pop\n        /* \"contracts/Controller.sol\":1832:1885  LogControllerTrade(\"Stop due to persistent error\", 0) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":6741:6762   */\n      dup2\n      dup2\n      mstore\n        /* \"#utility.yul\":6798:6800   */\n      0x1c\n        /* \"#utility.yul\":6778:6796   */\n      dup2\n      dup4\n      add\n        /* \"#utility.yul\":6771:6801   */\n      mstore\n        /* \"#utility.yul\":6837:6867   */\n      0x53746f702064756520746f2070657273697374656e74206572726f7200000000\n        /* \"#utility.yul\":6832:6834   */\n      0x60\n        /* \"#utility.yul\":6817:6835   */\n      dup3\n      add\n        /* \"#utility.yul\":6810:6868   */\n      mstore\n      0x00\n        /* \"#utility.yul\":6935:6939   */\n      0x20\n        /* \"#utility.yul\":6920:6940   */\n      dup3\n      add\n        /* \"#utility.yul\":6913:6949   */\n      mstore\n        /* \"contracts/Controller.sol\":1832:1885  LogControllerTrade(\"Stop due to persistent error\", 0) */\n      swap1\n      mload\n      0x00\n      dup1\n      mload\n      0x20\n      data_ceeea03d3bc4262e4464e93b48823b6306bbbb1661739b8798146c0bd453cfa4\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      swap4\n      pop\n      swap1\n      dup2\n      swap1\n      sub\n        /* \"#utility.yul\":6900:6903   */\n      0x80\n        /* \"contracts/Controller.sol\":1832:1885  LogControllerTrade(\"Stop due to persistent error\", 0) */\n      add\n      swap2\n      pop\n      log1\n        /* \"contracts/Controller.sol\":3136:3187  payable(msg.sender).transfer(address(this).balance) */\n      pop\n        /* \"contracts/Controller.sol\":3095:3190  function kill() external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Controller.sol\":1754:1939  if (retryCount >= 3) {... */\n    tag_165:\n        /* \"contracts/Controller.sol\":1916:1928  retryCount++ */\n      dup1\n      tag_75\n      dup2\n      tag_173\n      jump\t// in\n        /* \"#utility.yul\":196:323   */\n    tag_82:\n        /* \"#utility.yul\":257:267   */\n      0x4e487b71\n        /* \"#utility.yul\":252:255   */\n      0xe0\n        /* \"#utility.yul\":248:268   */\n      shl\n        /* \"#utility.yul\":245:246   */\n      0x00\n        /* \"#utility.yul\":238:269   */\n      mstore\n        /* \"#utility.yul\":288:292   */\n      0x41\n        /* \"#utility.yul\":285:286   */\n      0x04\n        /* \"#utility.yul\":278:293   */\n      mstore\n        /* \"#utility.yul\":312:316   */\n      0x24\n        /* \"#utility.yul\":309:310   */\n      0x00\n        /* \"#utility.yul\":302:317   */\n      revert\n        /* \"#utility.yul\":328:1047   */\n    tag_174:\n        /* \"#utility.yul\":371:376   */\n      0x00\n        /* \"#utility.yul\":424:427   */\n      dup3\n        /* \"#utility.yul\":417:421   */\n      0x1f\n        /* \"#utility.yul\":409:415   */\n      dup4\n        /* \"#utility.yul\":405:422   */\n      add\n        /* \"#utility.yul\":401:428   */\n      slt\n        /* \"#utility.yul\":391:446   */\n      tag_181\n      jumpi\n        /* \"#utility.yul\":442:443   */\n      0x00\n        /* \"#utility.yul\":439:440   */\n      dup1\n        /* \"#utility.yul\":432:444   */\n      revert\n        /* \"#utility.yul\":391:446   */\n    tag_181:\n        /* \"#utility.yul\":478:484   */\n      dup2\n        /* \"#utility.yul\":465:485   */\n      calldataload\n        /* \"#utility.yul\":504:522   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":541:543   */\n      dup1\n        /* \"#utility.yul\":537:539   */\n      dup3\n        /* \"#utility.yul\":534:544   */\n      gt\n        /* \"#utility.yul\":531:567   */\n      iszero\n      tag_183\n      jumpi\n        /* \"#utility.yul\":547:565   */\n      tag_183\n      tag_82\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":622:624   */\n      0x40\n        /* \"#utility.yul\":616:625   */\n      mload\n        /* \"#utility.yul\":590:592   */\n      0x1f\n        /* \"#utility.yul\":676:689   */\n      dup4\n      add\n      not(0x1f)\n        /* \"#utility.yul\":672:694   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":696:698   */\n      0x3f\n        /* \"#utility.yul\":668:699   */\n      add\n        /* \"#utility.yul\":664:704   */\n      and\n        /* \"#utility.yul\":652:705   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":720:738   */\n      dup3\n      dup3\n      gt\n        /* \"#utility.yul\":740:762   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":717:763   */\n      or\n        /* \"#utility.yul\":714:786   */\n      iszero\n      tag_185\n      jumpi\n        /* \"#utility.yul\":766:784   */\n      tag_185\n      tag_82\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":806:816   */\n      dup2\n        /* \"#utility.yul\":802:804   */\n      0x40\n        /* \"#utility.yul\":795:817   */\n      mstore\n        /* \"#utility.yul\":841:843   */\n      dup4\n        /* \"#utility.yul\":833:839   */\n      dup2\n        /* \"#utility.yul\":826:844   */\n      mstore\n        /* \"#utility.yul\":887:890   */\n      dup7\n        /* \"#utility.yul\":880:884   */\n      0x20\n        /* \"#utility.yul\":875:877   */\n      dup6\n        /* \"#utility.yul\":867:873   */\n      dup9\n        /* \"#utility.yul\":863:878   */\n      add\n        /* \"#utility.yul\":859:885   */\n      add\n        /* \"#utility.yul\":856:891   */\n      gt\n        /* \"#utility.yul\":853:908   */\n      iszero\n      tag_186\n      jumpi\n        /* \"#utility.yul\":904:905   */\n      0x00\n        /* \"#utility.yul\":901:902   */\n      dup1\n        /* \"#utility.yul\":894:906   */\n      revert\n        /* \"#utility.yul\":853:908   */\n    tag_186:\n        /* \"#utility.yul\":968:970   */\n      dup4\n        /* \"#utility.yul\":961:965   */\n      0x20\n        /* \"#utility.yul\":953:959   */\n      dup8\n        /* \"#utility.yul\":949:966   */\n      add\n        /* \"#utility.yul\":942:946   */\n      0x20\n        /* \"#utility.yul\":934:940   */\n      dup4\n        /* \"#utility.yul\":930:947   */\n      add\n        /* \"#utility.yul\":917:971   */\n      calldatacopy\n        /* \"#utility.yul\":1015:1016   */\n      0x00\n        /* \"#utility.yul\":1008:1012   */\n      0x20\n        /* \"#utility.yul\":1003:1005   */\n      dup6\n        /* \"#utility.yul\":995:1001   */\n      dup4\n        /* \"#utility.yul\":991:1006   */\n      add\n        /* \"#utility.yul\":987:1013   */\n      add\n        /* \"#utility.yul\":980:1017   */\n      mstore\n        /* \"#utility.yul\":1035:1041   */\n      dup1\n        /* \"#utility.yul\":1026:1041   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":328:1047   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1442   */\n    tag_23:\n        /* \"#utility.yul\":1130:1136   */\n      0x00\n        /* \"#utility.yul\":1138:1144   */\n      dup1\n        /* \"#utility.yul\":1191:1193   */\n      0x40\n        /* \"#utility.yul\":1179:1188   */\n      dup4\n        /* \"#utility.yul\":1170:1177   */\n      dup6\n        /* \"#utility.yul\":1166:1189   */\n      sub\n        /* \"#utility.yul\":1162:1194   */\n      slt\n        /* \"#utility.yul\":1159:1211   */\n      iszero\n      tag_188\n      jumpi\n        /* \"#utility.yul\":1207:1208   */\n      0x00\n        /* \"#utility.yul\":1204:1205   */\n      dup1\n        /* \"#utility.yul\":1197:1209   */\n      revert\n        /* \"#utility.yul\":1159:1211   */\n    tag_188:\n        /* \"#utility.yul\":1243:1252   */\n      dup3\n        /* \"#utility.yul\":1230:1253   */\n      calldataload\n        /* \"#utility.yul\":1220:1253   */\n      swap2\n      pop\n        /* \"#utility.yul\":1304:1306   */\n      0x20\n        /* \"#utility.yul\":1293:1302   */\n      dup4\n        /* \"#utility.yul\":1289:1307   */\n      add\n        /* \"#utility.yul\":1276:1308   */\n      calldataload\n        /* \"#utility.yul\":1331:1349   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1323:1329   */\n      dup2\n        /* \"#utility.yul\":1320:1350   */\n      gt\n        /* \"#utility.yul\":1317:1367   */\n      iszero\n      tag_189\n      jumpi\n        /* \"#utility.yul\":1363:1364   */\n      0x00\n        /* \"#utility.yul\":1360:1361   */\n      dup1\n        /* \"#utility.yul\":1353:1365   */\n      revert\n        /* \"#utility.yul\":1317:1367   */\n    tag_189:\n        /* \"#utility.yul\":1386:1436   */\n      tag_190\n        /* \"#utility.yul\":1428:1435   */\n      dup6\n        /* \"#utility.yul\":1419:1425   */\n      dup3\n        /* \"#utility.yul\":1408:1417   */\n      dup7\n        /* \"#utility.yul\":1404:1426   */\n      add\n        /* \"#utility.yul\":1386:1436   */\n      tag_174\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":1376:1436   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":1052:1442   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1447:1627   */\n    tag_27:\n        /* \"#utility.yul\":1506:1512   */\n      0x00\n        /* \"#utility.yul\":1559:1561   */\n      0x20\n        /* \"#utility.yul\":1547:1556   */\n      dup3\n        /* \"#utility.yul\":1538:1545   */\n      dup5\n        /* \"#utility.yul\":1534:1557   */\n      sub\n        /* \"#utility.yul\":1530:1562   */\n      slt\n        /* \"#utility.yul\":1527:1579   */\n      iszero\n      tag_192\n      jumpi\n        /* \"#utility.yul\":1575:1576   */\n      0x00\n        /* \"#utility.yul\":1572:1573   */\n      dup1\n        /* \"#utility.yul\":1565:1577   */\n      revert\n        /* \"#utility.yul\":1527:1579   */\n    tag_192:\n      pop\n        /* \"#utility.yul\":1598:1621   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1447:1627   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2072:2462   */\n    tag_49:\n        /* \"#utility.yul\":2150:2156   */\n      0x00\n        /* \"#utility.yul\":2158:2164   */\n      dup1\n        /* \"#utility.yul\":2211:2213   */\n      0x40\n        /* \"#utility.yul\":2199:2208   */\n      dup4\n        /* \"#utility.yul\":2190:2197   */\n      dup6\n        /* \"#utility.yul\":2186:2209   */\n      sub\n        /* \"#utility.yul\":2182:2214   */\n      slt\n        /* \"#utility.yul\":2179:2231   */\n      iszero\n      tag_196\n      jumpi\n        /* \"#utility.yul\":2227:2228   */\n      0x00\n        /* \"#utility.yul\":2224:2225   */\n      dup1\n        /* \"#utility.yul\":2217:2229   */\n      revert\n        /* \"#utility.yul\":2179:2231   */\n    tag_196:\n        /* \"#utility.yul\":2267:2276   */\n      dup3\n        /* \"#utility.yul\":2254:2277   */\n      calldataload\n        /* \"#utility.yul\":2300:2318   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2292:2298   */\n      dup2\n        /* \"#utility.yul\":2289:2319   */\n      gt\n        /* \"#utility.yul\":2286:2336   */\n      iszero\n      tag_197\n      jumpi\n        /* \"#utility.yul\":2332:2333   */\n      0x00\n        /* \"#utility.yul\":2329:2330   */\n      dup1\n        /* \"#utility.yul\":2322:2334   */\n      revert\n        /* \"#utility.yul\":2286:2336   */\n    tag_197:\n        /* \"#utility.yul\":2355:2405   */\n      tag_198\n        /* \"#utility.yul\":2397:2404   */\n      dup6\n        /* \"#utility.yul\":2388:2394   */\n      dup3\n        /* \"#utility.yul\":2377:2386   */\n      dup7\n        /* \"#utility.yul\":2373:2395   */\n      add\n        /* \"#utility.yul\":2355:2405   */\n      tag_174\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":2345:2405   */\n      swap6\n        /* \"#utility.yul\":2452:2454   */\n      0x20\n        /* \"#utility.yul\":2437:2455   */\n      swap5\n      swap1\n      swap5\n      add\n        /* \"#utility.yul\":2424:2456   */\n      calldataload\n      swap5\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2072:2462   */\n      jump\t// out\n        /* \"#utility.yul\":2467:2804   */\n    tag_54:\n        /* \"#utility.yul\":2669:2671   */\n      0x20\n        /* \"#utility.yul\":2651:2672   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":2708:2710   */\n      0x0d\n        /* \"#utility.yul\":2688:2706   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":2681:2711   */\n      mstore\n      shl(0x99, 0x2737ba103a34329037bbb732b9)\n        /* \"#utility.yul\":2742:2744   */\n      0x40\n        /* \"#utility.yul\":2727:2745   */\n      dup3\n      add\n        /* \"#utility.yul\":2720:2763   */\n      mstore\n        /* \"#utility.yul\":2795:2797   */\n      0x60\n        /* \"#utility.yul\":2780:2798   */\n      add\n      swap1\n        /* \"#utility.yul\":2467:2804   */\n      jump\t// out\n        /* \"#utility.yul\":2809:3232   */\n    tag_175:\n        /* \"#utility.yul\":2851:2854   */\n      0x00\n        /* \"#utility.yul\":2889:2894   */\n      dup2\n        /* \"#utility.yul\":2883:2895   */\n      mload\n        /* \"#utility.yul\":2916:2922   */\n      dup1\n        /* \"#utility.yul\":2911:2914   */\n      dup5\n        /* \"#utility.yul\":2904:2923   */\n      mstore\n        /* \"#utility.yul\":2941:2942   */\n      0x00\n        /* \"#utility.yul\":2951:3113   */\n    tag_201:\n        /* \"#utility.yul\":2965:2971   */\n      dup2\n        /* \"#utility.yul\":2962:2963   */\n      dup2\n        /* \"#utility.yul\":2959:2972   */\n      lt\n        /* \"#utility.yul\":2951:3113   */\n      iszero\n      tag_203\n      jumpi\n        /* \"#utility.yul\":3027:3031   */\n      0x20\n        /* \"#utility.yul\":3083:3096   */\n      dup2\n      dup6\n      add\n        /* \"#utility.yul\":3079:3101   */\n      dup2\n      add\n        /* \"#utility.yul\":3073:3102   */\n      mload\n        /* \"#utility.yul\":3055:3066   */\n      dup7\n      dup4\n      add\n        /* \"#utility.yul\":3051:3071   */\n      dup3\n      add\n        /* \"#utility.yul\":3044:3103   */\n      mstore\n        /* \"#utility.yul\":2980:2992   */\n      add\n        /* \"#utility.yul\":2951:3113   */\n      jump(tag_201)\n    tag_203:\n        /* \"#utility.yul\":2955:2958   */\n      pop\n        /* \"#utility.yul\":3158:3159   */\n      0x00\n        /* \"#utility.yul\":3151:3155   */\n      0x20\n        /* \"#utility.yul\":3142:3148   */\n      dup3\n        /* \"#utility.yul\":3137:3140   */\n      dup7\n        /* \"#utility.yul\":3133:3149   */\n      add\n        /* \"#utility.yul\":3129:3156   */\n      add\n        /* \"#utility.yul\":3122:3160   */\n      mstore\n        /* \"#utility.yul\":3221:3225   */\n      0x20\n        /* \"#utility.yul\":3214:3216   */\n      0x1f\n        /* \"#utility.yul\":3210:3217   */\n      not\n        /* \"#utility.yul\":3205:3207   */\n      0x1f\n        /* \"#utility.yul\":3197:3203   */\n      dup4\n        /* \"#utility.yul\":3193:3208   */\n      add\n        /* \"#utility.yul\":3189:3218   */\n      and\n        /* \"#utility.yul\":3184:3187   */\n      dup6\n        /* \"#utility.yul\":3180:3219   */\n      add\n        /* \"#utility.yul\":3176:3226   */\n      add\n        /* \"#utility.yul\":3169:3226   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2809:3232   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3237:3457   */\n    tag_64:\n        /* \"#utility.yul\":3386:3388   */\n      0x20\n        /* \"#utility.yul\":3375:3384   */\n      dup2\n        /* \"#utility.yul\":3368:3389   */\n      mstore\n        /* \"#utility.yul\":3349:3353   */\n      0x00\n        /* \"#utility.yul\":3406:3451   */\n      tag_205\n        /* \"#utility.yul\":3447:3449   */\n      0x20\n        /* \"#utility.yul\":3436:3445   */\n      dup4\n        /* \"#utility.yul\":3432:3450   */\n      add\n        /* \"#utility.yul\":3424:3430   */\n      dup5\n        /* \"#utility.yul\":3406:3451   */\n      tag_175\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":3398:3451   */\n      swap4\n        /* \"#utility.yul\":3237:3457   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3462:3589   */\n    tag_176:\n        /* \"#utility.yul\":3523:3533   */\n      0x4e487b71\n        /* \"#utility.yul\":3518:3521   */\n      0xe0\n        /* \"#utility.yul\":3514:3534   */\n      shl\n        /* \"#utility.yul\":3511:3512   */\n      0x00\n        /* \"#utility.yul\":3504:3535   */\n      mstore\n        /* \"#utility.yul\":3554:3558   */\n      0x11\n        /* \"#utility.yul\":3551:3552   */\n      0x04\n        /* \"#utility.yul\":3544:3559   */\n      mstore\n        /* \"#utility.yul\":3578:3582   */\n      0x24\n        /* \"#utility.yul\":3575:3576   */\n      0x00\n        /* \"#utility.yul\":3568:3583   */\n      revert\n        /* \"#utility.yul\":3594:3762   */\n    tag_70:\n        /* \"#utility.yul\":3667:3676   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":3698:3707   */\n      dup2\n      iszero\n        /* \"#utility.yul\":3715:3730   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":3709:3731   */\n      dup5\n      eq\n        /* \"#utility.yul\":3695:3732   */\n      or\n        /* \"#utility.yul\":3685:3756   */\n      tag_209\n      jumpi\n        /* \"#utility.yul\":3736:3754   */\n      tag_209\n      tag_176\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":3594:3762   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4116:4243   */\n    tag_86:\n        /* \"#utility.yul\":4177:4187   */\n      0x4e487b71\n        /* \"#utility.yul\":4172:4175   */\n      0xe0\n        /* \"#utility.yul\":4168:4188   */\n      shl\n        /* \"#utility.yul\":4165:4166   */\n      0x00\n        /* \"#utility.yul\":4158:4189   */\n      mstore\n        /* \"#utility.yul\":4208:4212   */\n      0x32\n        /* \"#utility.yul\":4205:4206   */\n      0x04\n        /* \"#utility.yul\":4198:4213   */\n      mstore\n        /* \"#utility.yul\":4232:4236   */\n      0x24\n        /* \"#utility.yul\":4229:4230   */\n      0x00\n        /* \"#utility.yul\":4222:4237   */\n      revert\n        /* \"#utility.yul\":5075:5259   */\n    tag_126:\n        /* \"#utility.yul\":5145:5151   */\n      0x00\n        /* \"#utility.yul\":5198:5200   */\n      0x20\n        /* \"#utility.yul\":5186:5195   */\n      dup3\n        /* \"#utility.yul\":5177:5184   */\n      dup5\n        /* \"#utility.yul\":5173:5196   */\n      sub\n        /* \"#utility.yul\":5169:5201   */\n      slt\n        /* \"#utility.yul\":5166:5218   */\n      iszero\n      tag_215\n      jumpi\n        /* \"#utility.yul\":5214:5215   */\n      0x00\n        /* \"#utility.yul\":5211:5212   */\n      dup1\n        /* \"#utility.yul\":5204:5216   */\n      revert\n        /* \"#utility.yul\":5166:5218   */\n    tag_215:\n      pop\n        /* \"#utility.yul\":5237:5253   */\n      mload\n      swap2\n        /* \"#utility.yul\":5075:5259   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6095:6220   */\n    tag_144:\n        /* \"#utility.yul\":6160:6169   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":6181:6191   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":6178:6214   */\n      iszero\n      tag_209\n      jumpi\n        /* \"#utility.yul\":6194:6212   */\n      tag_209\n      tag_176\n      jump\t// in\n        /* \"#utility.yul\":6225:6516   */\n    tag_153:\n        /* \"#utility.yul\":6402:6404   */\n      0x40\n        /* \"#utility.yul\":6391:6400   */\n      dup2\n        /* \"#utility.yul\":6384:6405   */\n      mstore\n        /* \"#utility.yul\":6365:6369   */\n      0x00\n        /* \"#utility.yul\":6422:6467   */\n      tag_222\n        /* \"#utility.yul\":6463:6465   */\n      0x40\n        /* \"#utility.yul\":6452:6461   */\n      dup4\n        /* \"#utility.yul\":6448:6466   */\n      add\n        /* \"#utility.yul\":6440:6446   */\n      dup6\n        /* \"#utility.yul\":6422:6467   */\n      tag_175\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":6414:6467   */\n      swap1\n      pop\n        /* \"#utility.yul\":6503:6509   */\n      dup3\n        /* \"#utility.yul\":6498:6500   */\n      0x20\n        /* \"#utility.yul\":6487:6496   */\n      dup4\n        /* \"#utility.yul\":6483:6501   */\n      add\n        /* \"#utility.yul\":6476:6510   */\n      mstore\n        /* \"#utility.yul\":6225:6516   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6960:7095   */\n    tag_173:\n        /* \"#utility.yul\":6999:7002   */\n      0x00\n        /* \"#utility.yul\":7020:7037   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":7017:7060   */\n      tag_226\n      jumpi\n        /* \"#utility.yul\":7040:7058   */\n      tag_226\n      tag_176\n      jump\t// in\n    tag_226:\n      pop\n        /* \"#utility.yul\":7087:7088   */\n      0x01\n        /* \"#utility.yul\":7076:7089   */\n      add\n      swap1\n        /* \"#utility.yul\":6960:7095   */\n      jump\t// out\n    stop\n    data_ceeea03d3bc4262e4464e93b48823b6306bbbb1661739b8798146c0bd453cfa4 573f22c312382d046159d834aa0e9f7c23b7ba1ba8c9ff20b839b47844686e88\n\n    auxdata: 0xa264697066735822122060e631a870370823e7287b2615831e7aa9884c024dc9d44288a0bc42ad6e0f4864736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_71": {
									"entryPoint": null,
									"id": 71,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address_payablet_uint256_fromMemory": {
									"entryPoint": 112,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"checked_add_t_uint256": {
									"entryPoint": 167,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:602:24",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:24",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "120:253:24",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "166:16:24",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "175:1:24",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "178:1:24",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "168:6:24"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "168:12:24"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "168:12:24"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "141:7:24"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "150:9:24"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "137:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "137:23:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "162:2:24",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "133:32:24"
															},
															"nodeType": "YulIf",
															"src": "130:52:24"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "191:29:24",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "210:9:24"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "204:5:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "204:16:24"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "195:5:24",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "283:16:24",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "292:1:24",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "295:1:24",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "285:6:24"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "285:12:24"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "285:12:24"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "242:5:24"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "253:5:24"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "268:3:24",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "273:1:24",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "264:3:24"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "264:11:24"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "277:1:24",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "260:3:24"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "260:19:24"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "249:3:24"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "249:31:24"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "239:2:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "239:42:24"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "232:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:50:24"
															},
															"nodeType": "YulIf",
															"src": "229:70:24"
														},
														{
															"nodeType": "YulAssignment",
															"src": "308:15:24",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "318:5:24"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "308:6:24"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "332:35:24",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "352:9:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "363:2:24",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "348:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "348:18:24"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "342:5:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "342:25:24"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "332:6:24"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_payablet_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "78:9:24",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "89:7:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "101:6:24",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "109:6:24",
														"type": ""
													}
												],
												"src": "14:359:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "426:174:24",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "436:16:24",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "447:1:24"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "450:1:24"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "443:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "443:9:24"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "436:3:24"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "483:111:24",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "504:1:24",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "511:3:24",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "516:10:24",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "507:3:24"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "507:20:24"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "497:6:24"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "497:31:24"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "497:31:24"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "548:1:24",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "551:4:24",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "541:6:24"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "541:15:24"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "541:15:24"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "576:1:24",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "579:4:24",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "569:6:24"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "569:15:24"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "569:15:24"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "467:1:24"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "470:3:24"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "464:2:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "464:10:24"
															},
															"nodeType": "YulIf",
															"src": "461:133:24"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "409:1:24",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "412:1:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "418:3:24",
														"type": ""
													}
												],
												"src": "378:222:24"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address_payablet_uint256_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n        value1 := mload(add(headStart, 32))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 24,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50604051610e25380380610e2583398101604081905261002e91610070565b5f80546001600160a01b0384166001600160a01b0319918216179091556001805490911633179055600281905561006581426100a7565b600355506100cc9050565b5f8060408385031215610081575f80fd5b82516001600160a01b0381168114610097575f80fd5b6020939093015192949293505050565b808201808211156100c657634e487b7160e01b5f52601160045260245ffd5b92915050565b610d4c806100d95f395ff3fe608060405234801561000f575f80fd5b50600436106100a6575f3560e01c806388ac3ea11161006e57806388ac3ea1146100ff5780638c44c530146101125780638da5cb5b1461011a578063c98706c314610145578063e529930a1461014d578063efa274ef1461015f575f80fd5b806336dff6b6146100aa57806341c0e1b5146100c65780634359b7ef146100d0578063457f3cb0146100e3578063838c29b6146100f6575b5f80fd5b6100b360035481565b6040519081526020015b60405180910390f35b6100ce610172565b005b6100ce6100de366004610b2e565b6101d1565b6100ce6100f1366004610b72565b610269565b6100b360025481565b6100ce61010d366004610b72565b610327565b6100ce610556565b60015461012d906001600160a01b031681565b6040516001600160a01b0390911681526020016100bd565b6100ce610627565b5f5461012d906001600160a01b031681565b6100ce61016d366004610b89565b6108f4565b6001546001600160a01b031633146101a55760405162461bcd60e51b815260040161019c90610bcb565b60405180910390fd5b60405133904780156108fc02915f818181858888f193505050501580156101ce573d5f803e3d5ffd5b50565b6001546001600160a01b031633146101fb5760405162461bcd60e51b815260040161019c90610bcb565b6040518281527f4896f6f06b46d0ebc6bd420e59b05a5e5486f3a5a2e306e20def08c8f284f3749060200160405180910390a17f6e001753e59c246317b708b3090a58d44776f3b9e74dcd996149a49758f4d4878160405161025d9190610c35565b60405180910390a15050565b6001546001600160a01b031633146102935760405162461bcd60e51b815260040161019c90610bcb565b5f6102a282633b9aca00610c62565b9050804710156102eb5760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b604482015260640161019c565b6001546040516001600160a01b039091169082156108fc029083905f818181858888f19350505050158015610322573d5f803e3d5ffd5b505050565b6001546001600160a01b031633146103515760405162461bcd60e51b815260040161019c90610bcb565b60408051600880825261012082019092525f916020820161010080368337019050509050610384815f8151811061038a5761038a610c7f565b602002602001018181525050610708816001815181106103ac576103ac610c7f565b602002602001018181525050610e10816002815181106103ce576103ce610c7f565b602002602001018181525050611c20816003815181106103f0576103f0610c7f565b6020026020010181815250506138408160048151811061041257610412610c7f565b6020026020010181815250506170808160058151811061043457610434610c7f565b602002602001018181525050620151808160068151811061045757610457610c7f565b60200260200101818152505062093a808160078151811061047a5761047a610c7f565b6020026020010181815250505f81838151811061049957610499610c7f565b60209081029190910101515f5460405163869665e960e01b8152600481018390529192506001600160a01b03169063869665e9906024015f604051808303815f87803b1580156104e7575f80fd5b505af11580156104f9573d5f803e3d5ffd5b505050505f80516020610cf783398151915281604051610549919060408082526013908201527241646a757374696e672074696d656672616d6560681b6060820152602081019190915260800190565b60405180910390a1505050565b6001546001600160a01b031633146105805760405162461bcd60e51b815260040161019c90610bcb565b6040517f7541b06c3dec9fdc83c6c723dc48e42d9b1632a4ab380f150eb91c2e6fc310b9905f90a15f805460408051639d8ef1e160e01b815290516001600160a01b0390921692639d8ef1e19260048084019382900301818387803b1580156105e7575f80fd5b505af11580156105f9573d5f803e3d5ffd5b50506040517f9dc90ce348fed0b93ddbc45640ba9e0ab32f42e205a3c0b452fb17474b96e1c092505f9150a1565b6001546001600160a01b031633146106515760405162461bcd60e51b815260040161019c90610bcb565b6003544210156106af5760405162461bcd60e51b8152602060048201526024808201527f49742773206e6f742074696d6520666f7220746865206e65787420636865636b604482015263081e595d60e21b606482015260840161019c565b5f805f9054906101000a90046001600160a01b03166001600160a01b0316638fc3047d6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106ff573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107239190610c93565b90507f4896f6f06b46d0ebc6bd420e59b05a5e5486f3a5a2e306e20def08c8f284f3744260405161075691815260200190565b60405180910390a161041a811115610826575f546040516326c403ed60e01b81526001600160a01b03909116906326c403ed906107b9906064906004016040808252600490820152631cd95b1b60e21b6060820152602081019190915260800190565b5f604051808303815f87803b1580156107d0575f80fd5b505af11580156107e2573d5f803e3d5ffd5b505060408051818152600481830152631cd95b1b60e21b60608201526064602082015290515f80516020610cf78339815191529350908190036080019150a16108e1565b6103b68110156108e1575f54604080516326c403ed60e01b81526004810191909152600360448201526262757960e81b60648083019190915260248201526001600160a01b03909116906326c403ed906084015f604051808303815f87803b158015610890575f80fd5b505af11580156108a2573d5f803e3d5ffd5b5050604080518181526003818301526262757960e81b60608201526064602082015290515f80516020610cf78339815191529350908190036080019150a15b6002546108ee9042610caa565b60035550565b6001546001600160a01b0316331461091e5760405162461bcd60e51b815260040161019c90610bcb565b5f805b60038210801561092f575080155b156109ce575f546040516326c403ed60e01b81526001600160a01b03909116906326c403ed906109659087908790600401610cbd565b5f604051808303815f87803b15801561097c575f80fd5b505af192505050801561098d575060015b61099f5761099a826109d4565b610921565b600190505f80516020610cf783398151915284846040516109c1929190610cbd565b60405180910390a1610921565b50505050565b60038110610a87575f8054604080516317700f0160e01b815290516001600160a01b03909216926317700f019260048084019382900301818387803b158015610a1b575f80fd5b505af1158015610a2d573d5f803e3d5ffd5b505060408051818152601c818301527f53746f702064756520746f2070657273697374656e74206572726f720000000060608201525f602082015290515f80516020610cf78339815191529350908190036080019150a150565b8061032281610cde565b634e487b7160e01b5f52604160045260245ffd5b5f82601f830112610ab4575f80fd5b813567ffffffffffffffff80821115610acf57610acf610a91565b604051601f8301601f19908116603f01168101908282118183101715610af757610af7610a91565b81604052838152866020858801011115610b0f575f80fd5b836020870160208301375f602085830101528094505050505092915050565b5f8060408385031215610b3f575f80fd5b82359150602083013567ffffffffffffffff811115610b5c575f80fd5b610b6885828601610aa5565b9150509250929050565b5f60208284031215610b82575f80fd5b5035919050565b5f8060408385031215610b9a575f80fd5b823567ffffffffffffffff811115610bb0575f80fd5b610bbc85828601610aa5565b95602094909401359450505050565b6020808252600d908201526c2737ba103a34329037bbb732b960991b604082015260600190565b5f81518084525f5b81811015610c1657602081850181015186830182015201610bfa565b505f602082860101526020601f19601f83011685010191505092915050565b602081525f610c476020830184610bf2565b9392505050565b634e487b7160e01b5f52601160045260245ffd5b8082028115828204841417610c7957610c79610c4e565b92915050565b634e487b7160e01b5f52603260045260245ffd5b5f60208284031215610ca3575f80fd5b5051919050565b80820180821115610c7957610c79610c4e565b604081525f610ccf6040830185610bf2565b90508260208301529392505050565b5f60018201610cef57610cef610c4e565b506001019056fe573f22c312382d046159d834aa0e9f7c23b7ba1ba8c9ff20b839b47844686e88a264697066735822122060e631a870370823e7287b2615831e7aa9884c024dc9d44288a0bc42ad6e0f4864736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xE25 CODESIZE SUB DUP1 PUSH2 0xE25 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2E SWAP2 PUSH2 0x70 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP1 SWAP2 AND CALLER OR SWAP1 SSTORE PUSH1 0x2 DUP2 SWAP1 SSTORE PUSH2 0x65 DUP2 TIMESTAMP PUSH2 0xA7 JUMP JUMPDEST PUSH1 0x3 SSTORE POP PUSH2 0xCC SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x81 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x97 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD MLOAD SWAP3 SWAP5 SWAP3 SWAP4 POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xC6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD4C DUP1 PUSH2 0xD9 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA6 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x88AC3EA1 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0x88AC3EA1 EQ PUSH2 0xFF JUMPI DUP1 PUSH4 0x8C44C530 EQ PUSH2 0x112 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0xC98706C3 EQ PUSH2 0x145 JUMPI DUP1 PUSH4 0xE529930A EQ PUSH2 0x14D JUMPI DUP1 PUSH4 0xEFA274EF EQ PUSH2 0x15F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x36DFF6B6 EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x41C0E1B5 EQ PUSH2 0xC6 JUMPI DUP1 PUSH4 0x4359B7EF EQ PUSH2 0xD0 JUMPI DUP1 PUSH4 0x457F3CB0 EQ PUSH2 0xE3 JUMPI DUP1 PUSH4 0x838C29B6 EQ PUSH2 0xF6 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB3 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCE PUSH2 0x172 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xCE PUSH2 0xDE CALLDATASIZE PUSH1 0x4 PUSH2 0xB2E JUMP JUMPDEST PUSH2 0x1D1 JUMP JUMPDEST PUSH2 0xCE PUSH2 0xF1 CALLDATASIZE PUSH1 0x4 PUSH2 0xB72 JUMP JUMPDEST PUSH2 0x269 JUMP JUMPDEST PUSH2 0xB3 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xCE PUSH2 0x10D CALLDATASIZE PUSH1 0x4 PUSH2 0xB72 JUMP JUMPDEST PUSH2 0x327 JUMP JUMPDEST PUSH2 0xCE PUSH2 0x556 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x12D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBD JUMP JUMPDEST PUSH2 0xCE PUSH2 0x627 JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x12D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xCE PUSH2 0x16D CALLDATASIZE PUSH1 0x4 PUSH2 0xB89 JUMP JUMPDEST PUSH2 0x8F4 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1A5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19C SWAP1 PUSH2 0xBCB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 SELFBALANCE DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1CE JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19C SWAP1 PUSH2 0xBCB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH32 0x4896F6F06B46D0EBC6BD420E59B05A5E5486F3A5A2E306E20DEF08C8F284F374 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH32 0x6E001753E59C246317B708B3090A58D44776F3B9E74DCD996149A49758F4D487 DUP2 PUSH1 0x40 MLOAD PUSH2 0x25D SWAP2 SWAP1 PUSH2 0xC35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x293 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19C SWAP1 PUSH2 0xBCB JUMP JUMPDEST PUSH0 PUSH2 0x2A2 DUP3 PUSH4 0x3B9ACA00 PUSH2 0xC62 JUMP JUMPDEST SWAP1 POP DUP1 SELFBALANCE LT ISZERO PUSH2 0x2EB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742062616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x19C JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x322 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x351 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19C SWAP1 PUSH2 0xBCB JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x8 DUP1 DUP3 MSTORE PUSH2 0x120 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH0 SWAP2 PUSH1 0x20 DUP3 ADD PUSH2 0x100 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP PUSH2 0x384 DUP2 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0x38A JUMPI PUSH2 0x38A PUSH2 0xC7F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x708 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x3AC JUMPI PUSH2 0x3AC PUSH2 0xC7F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0xE10 DUP2 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x3CE JUMPI PUSH2 0x3CE PUSH2 0xC7F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x1C20 DUP2 PUSH1 0x3 DUP2 MLOAD DUP2 LT PUSH2 0x3F0 JUMPI PUSH2 0x3F0 PUSH2 0xC7F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x3840 DUP2 PUSH1 0x4 DUP2 MLOAD DUP2 LT PUSH2 0x412 JUMPI PUSH2 0x412 PUSH2 0xC7F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x7080 DUP2 PUSH1 0x5 DUP2 MLOAD DUP2 LT PUSH2 0x434 JUMPI PUSH2 0x434 PUSH2 0xC7F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH3 0x15180 DUP2 PUSH1 0x6 DUP2 MLOAD DUP2 LT PUSH2 0x457 JUMPI PUSH2 0x457 PUSH2 0xC7F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH3 0x93A80 DUP2 PUSH1 0x7 DUP2 MLOAD DUP2 LT PUSH2 0x47A JUMPI PUSH2 0x47A PUSH2 0xC7F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH0 DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x499 JUMPI PUSH2 0x499 PUSH2 0xC7F JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x869665E9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x869665E9 SWAP1 PUSH1 0x24 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4E7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4F9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xCF7 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 PUSH1 0x40 MLOAD PUSH2 0x549 SWAP2 SWAP1 PUSH1 0x40 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH19 0x41646A757374696E672074696D656672616D65 PUSH1 0x68 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x580 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19C SWAP1 PUSH2 0xBCB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x7541B06C3DEC9FDC83C6C723DC48E42D9B1632A4AB380F150EB91C2E6FC310B9 SWAP1 PUSH0 SWAP1 LOG1 PUSH0 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x9D8EF1E1 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 PUSH4 0x9D8EF1E1 SWAP3 PUSH1 0x4 DUP1 DUP5 ADD SWAP4 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5E7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5F9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH32 0x9DC90CE348FED0B93DDBC45640BA9E0AB32F42E205A3C0B452FB17474B96E1C0 SWAP3 POP PUSH0 SWAP2 POP LOG1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x651 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19C SWAP1 PUSH2 0xBCB JUMP JUMPDEST PUSH1 0x3 SLOAD TIMESTAMP LT ISZERO PUSH2 0x6AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x49742773206E6F742074696D6520666F7220746865206E65787420636865636B PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x81E595D PUSH1 0xE2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x19C JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x8FC3047D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6FF JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x723 SWAP2 SWAP1 PUSH2 0xC93 JUMP JUMPDEST SWAP1 POP PUSH32 0x4896F6F06B46D0EBC6BD420E59B05A5E5486F3A5A2E306E20DEF08C8F284F374 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x756 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x41A DUP2 GT ISZERO PUSH2 0x826 JUMPI PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x26C403ED PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x26C403ED SWAP1 PUSH2 0x7B9 SWAP1 PUSH1 0x64 SWAP1 PUSH1 0x4 ADD PUSH1 0x40 DUP1 DUP3 MSTORE PUSH1 0x4 SWAP1 DUP3 ADD MSTORE PUSH4 0x1CD95B1B PUSH1 0xE2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7D0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7E2 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP2 DUP2 MSTORE PUSH1 0x4 DUP2 DUP4 ADD MSTORE PUSH4 0x1CD95B1B PUSH1 0xE2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x64 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 MLOAD PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xCF7 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP4 POP SWAP1 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP2 POP LOG1 PUSH2 0x8E1 JUMP JUMPDEST PUSH2 0x3B6 DUP2 LT ISZERO PUSH2 0x8E1 JUMPI PUSH0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x26C403ED PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x627579 PUSH1 0xE8 SHL PUSH1 0x64 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x26C403ED SWAP1 PUSH1 0x84 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x890 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8A2 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP2 DUP2 MSTORE PUSH1 0x3 DUP2 DUP4 ADD MSTORE PUSH3 0x627579 PUSH1 0xE8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x64 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 MLOAD PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xCF7 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP4 POP SWAP1 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP2 POP LOG1 JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x8EE SWAP1 TIMESTAMP PUSH2 0xCAA JUMP JUMPDEST PUSH1 0x3 SSTORE POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x91E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19C SWAP1 PUSH2 0xBCB JUMP JUMPDEST PUSH0 DUP1 JUMPDEST PUSH1 0x3 DUP3 LT DUP1 ISZERO PUSH2 0x92F JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x9CE JUMPI PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x26C403ED PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x26C403ED SWAP1 PUSH2 0x965 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0xCBD JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x97C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x98D JUMPI POP PUSH1 0x1 JUMPDEST PUSH2 0x99F JUMPI PUSH2 0x99A DUP3 PUSH2 0x9D4 JUMP JUMPDEST PUSH2 0x921 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xCF7 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x9C1 SWAP3 SWAP2 SWAP1 PUSH2 0xCBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x921 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0xA87 JUMPI PUSH0 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x17700F01 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 PUSH4 0x17700F01 SWAP3 PUSH1 0x4 DUP1 DUP5 ADD SWAP4 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA1B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA2D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1C DUP2 DUP4 ADD MSTORE PUSH32 0x53746F702064756520746F2070657273697374656E74206572726F7200000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH0 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 MLOAD PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xCF7 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP4 POP SWAP1 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP2 POP LOG1 POP JUMP JUMPDEST DUP1 PUSH2 0x322 DUP2 PUSH2 0xCDE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xAB4 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xACF JUMPI PUSH2 0xACF PUSH2 0xA91 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xAF7 JUMPI PUSH2 0xAF7 PUSH2 0xA91 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0xB0F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB3F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB5C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB68 DUP6 DUP3 DUP7 ADD PUSH2 0xAA5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB82 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB9A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xBB0 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xBBC DUP6 DUP3 DUP7 ADD PUSH2 0xAA5 JUMP JUMPDEST SWAP6 PUSH1 0x20 SWAP5 SWAP1 SWAP5 ADD CALLDATALOAD SWAP5 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xD SWAP1 DUP3 ADD MSTORE PUSH13 0x2737BA103A34329037BBB732B9 PUSH1 0x99 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC16 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xBFA JUMP JUMPDEST POP PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0xC47 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xBF2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0xC79 JUMPI PUSH2 0xC79 PUSH2 0xC4E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCA3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xC79 JUMPI PUSH2 0xC79 PUSH2 0xC4E JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH0 PUSH2 0xCCF PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xBF2 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0xCEF JUMPI PUSH2 0xCEF PUSH2 0xC4E JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID JUMPI EXTCODEHASH 0x22 0xC3 SLT CODESIZE 0x2D DIV PUSH2 0x59D8 CALLVALUE 0xAA 0xE SWAP16 PUSH29 0x23B7BA1BA8C9FF20B839B47844686E88A264697066735822122060E631 0xA8 PUSH17 0x370823E7287B2615831E7AA9884C024DC9 0xD4 TIMESTAMP DUP9 LOG0 0xBC TIMESTAMP 0xAD PUSH15 0xF4864736F6C634300081400330000 ",
							"sourceMap": "83:3540:0:-:0;;;555:269;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;633:7;:33;;-1:-1:-1;;;;;633:33:0;;-1:-1:-1;;;;;;633:33:0;;;;;;;;676:18;;;;;684:10;676:18;;;704:13;:30;;;786:31;720:14;786:15;:31;:::i;:::-;770:13;:47;-1:-1:-1;83:3540:0;;-1:-1:-1;83:3540:0;14:359:24;101:6;109;162:2;150:9;141:7;137:23;133:32;130:52;;;178:1;175;168:12;130:52;204:16;;-1:-1:-1;;;;;249:31:24;;239:42;;229:70;;295:1;292;285:12;229:70;363:2;348:18;;;;342:25;318:5;;342:25;;-1:-1:-1;;;14:359:24:o;378:222::-;443:9;;;464:10;;;461:133;;;516:10;511:3;507:20;504:1;497:31;551:4;548:1;541:15;579:4;576:1;569:15;461:133;378:222;;;;:::o;:::-;83:3540:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@Consolidate_154": {
									"entryPoint": 1366,
									"id": 154,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@checkInterval_9": {
									"entryPoint": null,
									"id": 9,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@handleTradeError_179": {
									"entryPoint": 2516,
									"id": 179,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@initiateTradeWithHandling_228": {
									"entryPoint": 2292,
									"id": 228,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@kill_331": {
									"entryPoint": 370,
									"id": 331,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@logEvent_382": {
									"entryPoint": 465,
									"id": 382,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@mainBot_5": {
									"entryPoint": null,
									"id": 5,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@nextCheckTime_11": {
									"entryPoint": null,
									"id": 11,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_7": {
									"entryPoint": null,
									"id": 7,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@periodicCheck_137": {
									"entryPoint": 1575,
									"id": 137,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setTradingTimeframe_312": {
									"entryPoint": 807,
									"id": 312,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdrawInGwei_364": {
									"entryPoint": 617,
									"id": 364,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_string": {
									"entryPoint": 2725,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_uint256": {
									"entryPoint": 2953,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2930,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 3219,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_string_memory_ptr": {
									"entryPoint": 2862,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_string": {
									"entryPoint": 3058,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_MainBot_$1247__to_t_address_payable__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3125,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr_t_uint256__to_t_string_memory_ptr_t_uint256__fromStack_reversed": {
									"entryPoint": 3261,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6ed88e868af0a1983e3886d5f3e95a2fafbd6c3450bc229e27342283dc429ccc_t_rational_100_by_1__to_t_string_memory_ptr_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3019,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d83fc4bcc48d9861126a9a171854eb7f3b6e2fea418e78b773624359d1d0810b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ec981ea7387b20aa445aafc51c47f81796098078ae4bfcdd78149f5876d236f8_t_rational_0_by_1__to_t_string_memory_ptr_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f3b277728b3fee749481eb3e0b3b48980dbbab78658fc419025cb16eee346775_t_rational_100_by_1__to_t_string_memory_ptr_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fc162d2f035f316232d784025f19583e5a4b535fde2dcb64fff53e8425e24ae3_t_uint256__to_t_string_memory_ptr_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3242,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3170,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 3294,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3150,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 3199,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 2705,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:7097:24",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:24",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "115:76:24",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "125:26:24",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "148:2:24",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "133:18:24"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:24"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:24"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "178:6:24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:25:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "160:25:24"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "84:9:24",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "95:6:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "106:4:24",
														"type": ""
													}
												],
												"src": "14:177:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "228:95:24",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "245:1:24",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "252:3:24",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "257:10:24",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "248:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "248:20:24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "238:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "238:31:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "238:31:24"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "285:1:24",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "288:4:24",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "278:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "278:15:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "278:15:24"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "309:1:24",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "312:4:24",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "302:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "302:15:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "302:15:24"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "196:127:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "381:666:24",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "430:16:24",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "439:1:24",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "442:1:24",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "432:6:24"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "432:12:24"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "432:12:24"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "409:6:24"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "417:4:24",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "405:3:24"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "405:17:24"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "424:3:24"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "401:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "401:27:24"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "394:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "394:35:24"
															},
															"nodeType": "YulIf",
															"src": "391:55:24"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "455:30:24",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "478:6:24"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "465:12:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "465:20:24"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "459:2:24",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "494:28:24",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "504:18:24",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "498:2:24",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "545:22:24",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "547:16:24"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "547:18:24"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "547:18:24"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "537:2:24"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "541:2:24"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "534:2:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "534:10:24"
															},
															"nodeType": "YulIf",
															"src": "531:36:24"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "576:17:24",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "590:2:24",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "586:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "586:7:24"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "580:2:24",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "602:23:24",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "622:2:24",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "616:5:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "616:9:24"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "606:6:24",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "634:71:24",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "656:6:24"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "680:2:24"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "684:4:24",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "676:3:24"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "676:13:24"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "691:2:24"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "672:3:24"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "672:22:24"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "696:2:24",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "668:3:24"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "668:31:24"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "701:2:24"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "664:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "664:40:24"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "652:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "652:53:24"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "638:10:24",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "764:22:24",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "766:16:24"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "766:18:24"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "766:18:24"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "723:10:24"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "735:2:24"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "720:2:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "720:18:24"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "743:10:24"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "755:6:24"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "740:22:24"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "717:46:24"
															},
															"nodeType": "YulIf",
															"src": "714:72:24"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "802:2:24",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "806:10:24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "795:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "795:22:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "795:22:24"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "833:6:24"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "841:2:24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "826:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "826:18:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "826:18:24"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "892:16:24",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "901:1:24",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "904:1:24",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "894:6:24"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "894:12:24"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "894:12:24"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "867:6:24"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "875:2:24"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "863:3:24"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "863:15:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "880:4:24",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "859:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "859:26:24"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "887:3:24"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "856:2:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "856:35:24"
															},
															"nodeType": "YulIf",
															"src": "853:55:24"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "934:6:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "942:4:24",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "930:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "930:17:24"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "953:6:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "961:4:24",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "949:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "949:17:24"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "968:2:24"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "917:12:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "917:54:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "917:54:24"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "995:6:24"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "1003:2:24"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "991:3:24"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "991:15:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1008:4:24",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "987:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "987:26:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1015:1:24",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "980:37:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "980:37:24"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1026:15:24",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1035:6:24"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1026:5:24"
																}
															]
														}
													]
												},
												"name": "abi_decode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "355:6:24",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "363:3:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "371:5:24",
														"type": ""
													}
												],
												"src": "328:719:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1149:293:24",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1195:16:24",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1204:1:24",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1207:1:24",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1197:6:24"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1197:12:24"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1197:12:24"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1170:7:24"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1179:9:24"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1166:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1166:23:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1191:2:24",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1162:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "1162:32:24"
															},
															"nodeType": "YulIf",
															"src": "1159:52:24"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1220:33:24",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1243:9:24"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1230:12:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "1230:23:24"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1220:6:24"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1262:46:24",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1293:9:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1304:2:24",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1289:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1289:18:24"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1276:12:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "1276:32:24"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1266:6:24",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1351:16:24",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1360:1:24",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1363:1:24",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1353:6:24"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1353:12:24"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1353:12:24"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1323:6:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1331:18:24",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1320:2:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "1320:30:24"
															},
															"nodeType": "YulIf",
															"src": "1317:50:24"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1376:60:24",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1408:9:24"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1419:6:24"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1404:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1404:22:24"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1428:7:24"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nodeType": "YulIdentifier",
																	"src": "1386:17:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "1386:50:24"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1376:6:24"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1107:9:24",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1118:7:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1130:6:24",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1138:6:24",
														"type": ""
													}
												],
												"src": "1052:390:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1517:110:24",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1563:16:24",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1572:1:24",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1575:1:24",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1565:6:24"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1565:12:24"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1565:12:24"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1538:7:24"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1547:9:24"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1534:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1534:23:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1559:2:24",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1530:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "1530:32:24"
															},
															"nodeType": "YulIf",
															"src": "1527:52:24"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1588:33:24",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1611:9:24"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1598:12:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "1598:23:24"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:24"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1483:9:24",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1494:7:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1506:6:24",
														"type": ""
													}
												],
												"src": "1447:180:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1733:102:24",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1743:26:24",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1755:9:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1766:2:24",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1751:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "1751:18:24"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1743:4:24"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1785:9:24"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1800:6:24"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1816:3:24",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1821:1:24",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1812:3:24"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1812:11:24"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1825:1:24",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1808:3:24"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1808:19:24"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1796:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1796:32:24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1778:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "1778:51:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1778:51:24"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1702:9:24",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1713:6:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1724:4:24",
														"type": ""
													}
												],
												"src": "1632:203:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1965:102:24",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1975:26:24",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1987:9:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1998:2:24",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1983:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "1983:18:24"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1975:4:24"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2017:9:24"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2032:6:24"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2048:3:24",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2053:1:24",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2044:3:24"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2044:11:24"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2057:1:24",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2040:3:24"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2040:19:24"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2028:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2028:32:24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2010:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "2010:51:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2010:51:24"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_MainBot_$1247__to_t_address_payable__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1934:9:24",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1945:6:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1956:4:24",
														"type": ""
													}
												],
												"src": "1840:227:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2169:293:24",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2215:16:24",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2224:1:24",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2227:1:24",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2217:6:24"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2217:12:24"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2217:12:24"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2190:7:24"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2199:9:24"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2186:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2186:23:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2211:2:24",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2182:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "2182:32:24"
															},
															"nodeType": "YulIf",
															"src": "2179:52:24"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2240:37:24",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2267:9:24"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2254:12:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "2254:23:24"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "2244:6:24",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2320:16:24",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2329:1:24",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2332:1:24",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2322:6:24"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2322:12:24"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2322:12:24"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2292:6:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2300:18:24",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2289:2:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "2289:30:24"
															},
															"nodeType": "YulIf",
															"src": "2286:50:24"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2345:60:24",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2377:9:24"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2388:6:24"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2373:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2373:22:24"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2397:7:24"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nodeType": "YulIdentifier",
																	"src": "2355:17:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "2355:50:24"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2345:6:24"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2414:42:24",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2441:9:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2452:2:24",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2437:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2437:18:24"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2424:12:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "2424:32:24"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2414:6:24"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2127:9:24",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2138:7:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2150:6:24",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2158:6:24",
														"type": ""
													}
												],
												"src": "2072:390:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2641:163:24",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2658:9:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2669:2:24",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2651:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "2651:21:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2651:21:24"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2692:9:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2703:2:24",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2688:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2688:18:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2708:2:24",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2681:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "2681:30:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2681:30:24"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2731:9:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2742:2:24",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2727:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2727:18:24"
																	},
																	{
																		"hexValue": "4e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2747:15:24",
																		"type": "",
																		"value": "Not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2720:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "2720:43:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2720:43:24"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2772:26:24",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2784:9:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2795:2:24",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2780:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "2780:18:24"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2772:4:24"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2618:9:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2632:4:24",
														"type": ""
													}
												],
												"src": "2467:337:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2859:373:24",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2869:26:24",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2889:5:24"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2883:5:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "2883:12:24"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2873:6:24",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2911:3:24"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2916:6:24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2904:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "2904:19:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2904:19:24"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2932:10:24",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2941:1:24",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "2936:1:24",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3003:110:24",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "3017:14:24",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "3027:4:24",
																			"type": "",
																			"value": "0x20"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "3021:2:24",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "pos",
																									"nodeType": "YulIdentifier",
																									"src": "3059:3:24"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "3064:1:24"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3055:3:24"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3055:11:24"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "3068:2:24"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3051:3:24"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3051:20:24"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "3087:5:24"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "3094:1:24"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "3083:3:24"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "3083:13:24"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "3098:2:24"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3079:3:24"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3079:22:24"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "3073:5:24"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3073:29:24"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3044:6:24"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3044:59:24"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3044:59:24"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2962:1:24"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2965:6:24"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2959:2:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "2959:13:24"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2973:21:24",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2975:17:24",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "2984:1:24"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2987:4:24",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2980:3:24"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2980:12:24"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "2975:1:24"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2955:3:24",
																"statements": []
															},
															"src": "2951:162:24"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "3137:3:24"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "3142:6:24"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3133:3:24"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3133:16:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3151:4:24",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3129:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3129:27:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3158:1:24",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3122:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "3122:38:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3122:38:24"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3169:57:24",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "3184:3:24"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "3197:6:24"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3205:2:24",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "3193:3:24"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3193:15:24"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3214:2:24",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "3210:3:24"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3210:7:24"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "3189:3:24"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3189:29:24"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3180:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3180:39:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3221:4:24",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3176:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "3176:50:24"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3169:3:24"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2836:5:24",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2843:3:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2851:3:24",
														"type": ""
													}
												],
												"src": "2809:423:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3358:99:24",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3375:9:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3386:2:24",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3368:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "3368:21:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3368:21:24"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3398:53:24",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3424:6:24"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3436:9:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3447:2:24",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3432:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3432:18:24"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "3406:17:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "3406:45:24"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3398:4:24"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3327:9:24",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3338:6:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3349:4:24",
														"type": ""
													}
												],
												"src": "3237:220:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3494:95:24",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3511:1:24",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3518:3:24",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3523:10:24",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3514:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3514:20:24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3504:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "3504:31:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3504:31:24"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3551:1:24",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3554:4:24",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3544:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "3544:15:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3544:15:24"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3575:1:24",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3578:4:24",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3568:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "3568:15:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3568:15:24"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "3462:127:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3646:116:24",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3656:20:24",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3671:1:24"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3674:1:24"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "3667:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "3667:9:24"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "3656:7:24"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3734:22:24",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3736:16:24"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3736:18:24"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3736:18:24"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "3705:1:24"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3698:6:24"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3698:9:24"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "3712:1:24"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "3719:7:24"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "3728:1:24"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "3715:3:24"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3715:15:24"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "3709:2:24"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3709:22:24"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "3695:2:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3695:37:24"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3688:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "3688:45:24"
															},
															"nodeType": "YulIf",
															"src": "3685:71:24"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3625:1:24",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3628:1:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "3634:7:24",
														"type": ""
													}
												],
												"src": "3594:168:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3941:170:24",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3958:9:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3969:2:24",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3951:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "3951:21:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3951:21:24"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3992:9:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4003:2:24",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3988:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3988:18:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4008:2:24",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3981:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "3981:30:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3981:30:24"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4031:9:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4042:2:24",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4027:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4027:18:24"
																	},
																	{
																		"hexValue": "496e73756666696369656e742062616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4047:22:24",
																		"type": "",
																		"value": "Insufficient balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4020:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "4020:50:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4020:50:24"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4079:26:24",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4091:9:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4102:2:24",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4087:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "4087:18:24"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4079:4:24"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3918:9:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3932:4:24",
														"type": ""
													}
												],
												"src": "3767:344:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4148:95:24",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4165:1:24",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4172:3:24",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4177:10:24",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "4168:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4168:20:24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4158:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "4158:31:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4158:31:24"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4205:1:24",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4208:4:24",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4198:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "4198:15:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4198:15:24"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4229:1:24",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4232:4:24",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4222:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "4222:15:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4222:15:24"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "4116:127:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4450:215:24",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4467:9:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4478:2:24",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4460:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "4460:21:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4460:21:24"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4501:9:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4512:2:24",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4497:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4497:18:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4517:2:24",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4490:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "4490:30:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4490:30:24"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4540:9:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4551:2:24",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4536:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4536:18:24"
																	},
																	{
																		"hexValue": "41646a757374696e672074696d656672616d65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4556:21:24",
																		"type": "",
																		"value": "Adjusting timeframe"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4529:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "4529:49:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4529:49:24"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4587:27:24",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4599:9:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4610:3:24",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4595:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "4595:19:24"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4587:4:24"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4634:9:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4645:4:24",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4630:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4630:20:24"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4652:6:24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4623:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "4623:36:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4623:36:24"
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc162d2f035f316232d784025f19583e5a4b535fde2dcb64fff53e8425e24ae3_t_uint256__to_t_string_memory_ptr_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4419:9:24",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4430:6:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4441:4:24",
														"type": ""
													}
												],
												"src": "4248:417:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4844:226:24",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4861:9:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4872:2:24",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4854:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "4854:21:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4854:21:24"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4895:9:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4906:2:24",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4891:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4891:18:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4911:2:24",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4884:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "4884:30:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4884:30:24"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4934:9:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4945:2:24",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4930:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4930:18:24"
																	},
																	{
																		"hexValue": "49742773206e6f742074696d6520666f7220746865206e65787420636865636b",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4950:34:24",
																		"type": "",
																		"value": "It's not time for the next check"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4923:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "4923:62:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4923:62:24"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5005:9:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5016:2:24",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5001:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5001:18:24"
																	},
																	{
																		"hexValue": "20796574",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5021:6:24",
																		"type": "",
																		"value": " yet"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4994:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "4994:34:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4994:34:24"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5037:27:24",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5049:9:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5060:3:24",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5045:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "5045:19:24"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5037:4:24"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d83fc4bcc48d9861126a9a171854eb7f3b6e2fea418e78b773624359d1d0810b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4821:9:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4835:4:24",
														"type": ""
													}
												],
												"src": "4670:400:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5156:103:24",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5202:16:24",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5211:1:24",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5214:1:24",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5204:6:24"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5204:12:24"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5204:12:24"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5177:7:24"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5186:9:24"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5173:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5173:23:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5198:2:24",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5169:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "5169:32:24"
															},
															"nodeType": "YulIf",
															"src": "5166:52:24"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5227:26:24",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5243:9:24"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5237:5:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "5237:16:24"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5227:6:24"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5122:9:24",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5133:7:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5145:6:24",
														"type": ""
													}
												],
												"src": "5075:184:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5476:199:24",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5493:9:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5504:2:24",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5486:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "5486:21:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5486:21:24"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5527:9:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5538:2:24",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5523:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5523:18:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5543:1:24",
																		"type": "",
																		"value": "4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5516:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "5516:29:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5516:29:24"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5565:9:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5576:2:24",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5561:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5561:18:24"
																	},
																	{
																		"hexValue": "73656c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5581:6:24",
																		"type": "",
																		"value": "sell"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5554:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "5554:34:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5554:34:24"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5597:27:24",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5609:9:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5620:3:24",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5605:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "5605:19:24"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5597:4:24"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5644:9:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5655:4:24",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5640:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5640:20:24"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5662:6:24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5633:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "5633:36:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5633:36:24"
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f3b277728b3fee749481eb3e0b3b48980dbbab78658fc419025cb16eee346775_t_rational_100_by_1__to_t_string_memory_ptr_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5445:9:24",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5456:6:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5467:4:24",
														"type": ""
													}
												],
												"src": "5264:411:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5892:198:24",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5909:9:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5920:2:24",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5902:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "5902:21:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5902:21:24"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5943:9:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5954:2:24",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5939:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5939:18:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5959:1:24",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5932:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "5932:29:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5932:29:24"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5981:9:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5992:2:24",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5977:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5977:18:24"
																	},
																	{
																		"hexValue": "627579",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5997:5:24",
																		"type": "",
																		"value": "buy"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5970:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "5970:33:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5970:33:24"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6012:27:24",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6024:9:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6035:3:24",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6020:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "6020:19:24"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6012:4:24"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6059:9:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6070:4:24",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6055:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6055:20:24"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6077:6:24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6048:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "6048:36:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6048:36:24"
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6ed88e868af0a1983e3886d5f3e95a2fafbd6c3450bc229e27342283dc429ccc_t_rational_100_by_1__to_t_string_memory_ptr_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5861:9:24",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5872:6:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5883:4:24",
														"type": ""
													}
												],
												"src": "5680:410:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6143:77:24",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6153:16:24",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6164:1:24"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6167:1:24"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6160:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "6160:9:24"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "6153:3:24"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6192:22:24",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6194:16:24"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6194:18:24"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6194:18:24"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6184:1:24"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "6187:3:24"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6181:2:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "6181:10:24"
															},
															"nodeType": "YulIf",
															"src": "6178:36:24"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6126:1:24",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6129:1:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "6135:3:24",
														"type": ""
													}
												],
												"src": "6095:125:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6374:142:24",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6391:9:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6402:2:24",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6384:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "6384:21:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6384:21:24"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6414:53:24",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6440:6:24"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6452:9:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6463:2:24",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6448:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6448:18:24"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "6422:17:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "6422:45:24"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6414:4:24"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6487:9:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6498:2:24",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6483:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6483:18:24"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6503:6:24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6476:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "6476:34:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6476:34:24"
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr_t_uint256__to_t_string_memory_ptr_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6335:9:24",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6346:6:24",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6354:6:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6365:4:24",
														"type": ""
													}
												],
												"src": "6225:291:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6731:224:24",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6748:9:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6759:2:24",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6741:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "6741:21:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6741:21:24"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6782:9:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6793:2:24",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6778:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6778:18:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6798:2:24",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6771:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "6771:30:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6771:30:24"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6821:9:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6832:2:24",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6817:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6817:18:24"
																	},
																	{
																		"hexValue": "53746f702064756520746f2070657273697374656e74206572726f72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6837:30:24",
																		"type": "",
																		"value": "Stop due to persistent error"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6810:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "6810:58:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6810:58:24"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6877:27:24",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6889:9:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6900:3:24",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6885:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "6885:19:24"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6877:4:24"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6924:9:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6935:4:24",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6920:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6920:20:24"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6942:6:24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6913:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "6913:36:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6913:36:24"
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ec981ea7387b20aa445aafc51c47f81796098078ae4bfcdd78149f5876d236f8_t_rational_0_by_1__to_t_string_memory_ptr_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6700:9:24",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6711:6:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6722:4:24",
														"type": ""
													}
												],
												"src": "6521:434:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7007:88:24",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7038:22:24",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7040:16:24"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7040:18:24"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7040:18:24"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7023:5:24"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7034:1:24",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "7030:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7030:6:24"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "7020:2:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "7020:17:24"
															},
															"nodeType": "YulIf",
															"src": "7017:43:24"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7069:20:24",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7080:5:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7087:1:24",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7076:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "7076:13:24"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "7069:3:24"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6989:5:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "6999:3:24",
														"type": ""
													}
												],
												"src": "6960:135:24"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_uint256t_string_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_MainBot_$1247__to_t_address_payable__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 13)\n        mstore(add(headStart, 64), \"Not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Insufficient balance\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_fc162d2f035f316232d784025f19583e5a4b535fde2dcb64fff53e8425e24ae3_t_uint256__to_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 64)\n        mstore(add(headStart, 64), 19)\n        mstore(add(headStart, 96), \"Adjusting timeframe\")\n        tail := add(headStart, 128)\n        mstore(add(headStart, 0x20), value0)\n    }\n    function abi_encode_tuple_t_stringliteral_d83fc4bcc48d9861126a9a171854eb7f3b6e2fea418e78b773624359d1d0810b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"It's not time for the next check\")\n        mstore(add(headStart, 96), \" yet\")\n        tail := add(headStart, 128)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_f3b277728b3fee749481eb3e0b3b48980dbbab78658fc419025cb16eee346775_t_rational_100_by_1__to_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 64)\n        mstore(add(headStart, 64), 4)\n        mstore(add(headStart, 96), \"sell\")\n        tail := add(headStart, 128)\n        mstore(add(headStart, 0x20), value0)\n    }\n    function abi_encode_tuple_t_stringliteral_6ed88e868af0a1983e3886d5f3e95a2fafbd6c3450bc229e27342283dc429ccc_t_rational_100_by_1__to_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 64)\n        mstore(add(headStart, 64), 3)\n        mstore(add(headStart, 96), \"buy\")\n        tail := add(headStart, 128)\n        mstore(add(headStart, 0x20), value0)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_uint256__to_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        tail := abi_encode_string(value0, add(headStart, 64))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_ec981ea7387b20aa445aafc51c47f81796098078ae4bfcdd78149f5876d236f8_t_rational_0_by_1__to_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 64)\n        mstore(add(headStart, 64), 28)\n        mstore(add(headStart, 96), \"Stop due to persistent error\")\n        tail := add(headStart, 128)\n        mstore(add(headStart, 0x20), value0)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n}",
									"id": 24,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100a6575f3560e01c806388ac3ea11161006e57806388ac3ea1146100ff5780638c44c530146101125780638da5cb5b1461011a578063c98706c314610145578063e529930a1461014d578063efa274ef1461015f575f80fd5b806336dff6b6146100aa57806341c0e1b5146100c65780634359b7ef146100d0578063457f3cb0146100e3578063838c29b6146100f6575b5f80fd5b6100b360035481565b6040519081526020015b60405180910390f35b6100ce610172565b005b6100ce6100de366004610b2e565b6101d1565b6100ce6100f1366004610b72565b610269565b6100b360025481565b6100ce61010d366004610b72565b610327565b6100ce610556565b60015461012d906001600160a01b031681565b6040516001600160a01b0390911681526020016100bd565b6100ce610627565b5f5461012d906001600160a01b031681565b6100ce61016d366004610b89565b6108f4565b6001546001600160a01b031633146101a55760405162461bcd60e51b815260040161019c90610bcb565b60405180910390fd5b60405133904780156108fc02915f818181858888f193505050501580156101ce573d5f803e3d5ffd5b50565b6001546001600160a01b031633146101fb5760405162461bcd60e51b815260040161019c90610bcb565b6040518281527f4896f6f06b46d0ebc6bd420e59b05a5e5486f3a5a2e306e20def08c8f284f3749060200160405180910390a17f6e001753e59c246317b708b3090a58d44776f3b9e74dcd996149a49758f4d4878160405161025d9190610c35565b60405180910390a15050565b6001546001600160a01b031633146102935760405162461bcd60e51b815260040161019c90610bcb565b5f6102a282633b9aca00610c62565b9050804710156102eb5760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b604482015260640161019c565b6001546040516001600160a01b039091169082156108fc029083905f818181858888f19350505050158015610322573d5f803e3d5ffd5b505050565b6001546001600160a01b031633146103515760405162461bcd60e51b815260040161019c90610bcb565b60408051600880825261012082019092525f916020820161010080368337019050509050610384815f8151811061038a5761038a610c7f565b602002602001018181525050610708816001815181106103ac576103ac610c7f565b602002602001018181525050610e10816002815181106103ce576103ce610c7f565b602002602001018181525050611c20816003815181106103f0576103f0610c7f565b6020026020010181815250506138408160048151811061041257610412610c7f565b6020026020010181815250506170808160058151811061043457610434610c7f565b602002602001018181525050620151808160068151811061045757610457610c7f565b60200260200101818152505062093a808160078151811061047a5761047a610c7f565b6020026020010181815250505f81838151811061049957610499610c7f565b60209081029190910101515f5460405163869665e960e01b8152600481018390529192506001600160a01b03169063869665e9906024015f604051808303815f87803b1580156104e7575f80fd5b505af11580156104f9573d5f803e3d5ffd5b505050505f80516020610cf783398151915281604051610549919060408082526013908201527241646a757374696e672074696d656672616d6560681b6060820152602081019190915260800190565b60405180910390a1505050565b6001546001600160a01b031633146105805760405162461bcd60e51b815260040161019c90610bcb565b6040517f7541b06c3dec9fdc83c6c723dc48e42d9b1632a4ab380f150eb91c2e6fc310b9905f90a15f805460408051639d8ef1e160e01b815290516001600160a01b0390921692639d8ef1e19260048084019382900301818387803b1580156105e7575f80fd5b505af11580156105f9573d5f803e3d5ffd5b50506040517f9dc90ce348fed0b93ddbc45640ba9e0ab32f42e205a3c0b452fb17474b96e1c092505f9150a1565b6001546001600160a01b031633146106515760405162461bcd60e51b815260040161019c90610bcb565b6003544210156106af5760405162461bcd60e51b8152602060048201526024808201527f49742773206e6f742074696d6520666f7220746865206e65787420636865636b604482015263081e595d60e21b606482015260840161019c565b5f805f9054906101000a90046001600160a01b03166001600160a01b0316638fc3047d6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106ff573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107239190610c93565b90507f4896f6f06b46d0ebc6bd420e59b05a5e5486f3a5a2e306e20def08c8f284f3744260405161075691815260200190565b60405180910390a161041a811115610826575f546040516326c403ed60e01b81526001600160a01b03909116906326c403ed906107b9906064906004016040808252600490820152631cd95b1b60e21b6060820152602081019190915260800190565b5f604051808303815f87803b1580156107d0575f80fd5b505af11580156107e2573d5f803e3d5ffd5b505060408051818152600481830152631cd95b1b60e21b60608201526064602082015290515f80516020610cf78339815191529350908190036080019150a16108e1565b6103b68110156108e1575f54604080516326c403ed60e01b81526004810191909152600360448201526262757960e81b60648083019190915260248201526001600160a01b03909116906326c403ed906084015f604051808303815f87803b158015610890575f80fd5b505af11580156108a2573d5f803e3d5ffd5b5050604080518181526003818301526262757960e81b60608201526064602082015290515f80516020610cf78339815191529350908190036080019150a15b6002546108ee9042610caa565b60035550565b6001546001600160a01b0316331461091e5760405162461bcd60e51b815260040161019c90610bcb565b5f805b60038210801561092f575080155b156109ce575f546040516326c403ed60e01b81526001600160a01b03909116906326c403ed906109659087908790600401610cbd565b5f604051808303815f87803b15801561097c575f80fd5b505af192505050801561098d575060015b61099f5761099a826109d4565b610921565b600190505f80516020610cf783398151915284846040516109c1929190610cbd565b60405180910390a1610921565b50505050565b60038110610a87575f8054604080516317700f0160e01b815290516001600160a01b03909216926317700f019260048084019382900301818387803b158015610a1b575f80fd5b505af1158015610a2d573d5f803e3d5ffd5b505060408051818152601c818301527f53746f702064756520746f2070657273697374656e74206572726f720000000060608201525f602082015290515f80516020610cf78339815191529350908190036080019150a150565b8061032281610cde565b634e487b7160e01b5f52604160045260245ffd5b5f82601f830112610ab4575f80fd5b813567ffffffffffffffff80821115610acf57610acf610a91565b604051601f8301601f19908116603f01168101908282118183101715610af757610af7610a91565b81604052838152866020858801011115610b0f575f80fd5b836020870160208301375f602085830101528094505050505092915050565b5f8060408385031215610b3f575f80fd5b82359150602083013567ffffffffffffffff811115610b5c575f80fd5b610b6885828601610aa5565b9150509250929050565b5f60208284031215610b82575f80fd5b5035919050565b5f8060408385031215610b9a575f80fd5b823567ffffffffffffffff811115610bb0575f80fd5b610bbc85828601610aa5565b95602094909401359450505050565b6020808252600d908201526c2737ba103a34329037bbb732b960991b604082015260600190565b5f81518084525f5b81811015610c1657602081850181015186830182015201610bfa565b505f602082860101526020601f19601f83011685010191505092915050565b602081525f610c476020830184610bf2565b9392505050565b634e487b7160e01b5f52601160045260245ffd5b8082028115828204841417610c7957610c79610c4e565b92915050565b634e487b7160e01b5f52603260045260245ffd5b5f60208284031215610ca3575f80fd5b5051919050565b80820180821115610c7957610c79610c4e565b604081525f610ccf6040830185610bf2565b90508260208301529392505050565b5f60018201610cef57610cef610c4e565b506001019056fe573f22c312382d046159d834aa0e9f7c23b7ba1ba8c9ff20b839b47844686e88a264697066735822122060e631a870370823e7287b2615831e7aa9884c024dc9d44288a0bc42ad6e0f4864736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA6 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x88AC3EA1 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0x88AC3EA1 EQ PUSH2 0xFF JUMPI DUP1 PUSH4 0x8C44C530 EQ PUSH2 0x112 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0xC98706C3 EQ PUSH2 0x145 JUMPI DUP1 PUSH4 0xE529930A EQ PUSH2 0x14D JUMPI DUP1 PUSH4 0xEFA274EF EQ PUSH2 0x15F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x36DFF6B6 EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x41C0E1B5 EQ PUSH2 0xC6 JUMPI DUP1 PUSH4 0x4359B7EF EQ PUSH2 0xD0 JUMPI DUP1 PUSH4 0x457F3CB0 EQ PUSH2 0xE3 JUMPI DUP1 PUSH4 0x838C29B6 EQ PUSH2 0xF6 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB3 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCE PUSH2 0x172 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xCE PUSH2 0xDE CALLDATASIZE PUSH1 0x4 PUSH2 0xB2E JUMP JUMPDEST PUSH2 0x1D1 JUMP JUMPDEST PUSH2 0xCE PUSH2 0xF1 CALLDATASIZE PUSH1 0x4 PUSH2 0xB72 JUMP JUMPDEST PUSH2 0x269 JUMP JUMPDEST PUSH2 0xB3 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xCE PUSH2 0x10D CALLDATASIZE PUSH1 0x4 PUSH2 0xB72 JUMP JUMPDEST PUSH2 0x327 JUMP JUMPDEST PUSH2 0xCE PUSH2 0x556 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x12D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBD JUMP JUMPDEST PUSH2 0xCE PUSH2 0x627 JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x12D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xCE PUSH2 0x16D CALLDATASIZE PUSH1 0x4 PUSH2 0xB89 JUMP JUMPDEST PUSH2 0x8F4 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1A5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19C SWAP1 PUSH2 0xBCB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 SELFBALANCE DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1CE JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19C SWAP1 PUSH2 0xBCB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH32 0x4896F6F06B46D0EBC6BD420E59B05A5E5486F3A5A2E306E20DEF08C8F284F374 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH32 0x6E001753E59C246317B708B3090A58D44776F3B9E74DCD996149A49758F4D487 DUP2 PUSH1 0x40 MLOAD PUSH2 0x25D SWAP2 SWAP1 PUSH2 0xC35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x293 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19C SWAP1 PUSH2 0xBCB JUMP JUMPDEST PUSH0 PUSH2 0x2A2 DUP3 PUSH4 0x3B9ACA00 PUSH2 0xC62 JUMP JUMPDEST SWAP1 POP DUP1 SELFBALANCE LT ISZERO PUSH2 0x2EB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742062616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x19C JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x322 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x351 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19C SWAP1 PUSH2 0xBCB JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x8 DUP1 DUP3 MSTORE PUSH2 0x120 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH0 SWAP2 PUSH1 0x20 DUP3 ADD PUSH2 0x100 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP PUSH2 0x384 DUP2 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0x38A JUMPI PUSH2 0x38A PUSH2 0xC7F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x708 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x3AC JUMPI PUSH2 0x3AC PUSH2 0xC7F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0xE10 DUP2 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x3CE JUMPI PUSH2 0x3CE PUSH2 0xC7F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x1C20 DUP2 PUSH1 0x3 DUP2 MLOAD DUP2 LT PUSH2 0x3F0 JUMPI PUSH2 0x3F0 PUSH2 0xC7F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x3840 DUP2 PUSH1 0x4 DUP2 MLOAD DUP2 LT PUSH2 0x412 JUMPI PUSH2 0x412 PUSH2 0xC7F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x7080 DUP2 PUSH1 0x5 DUP2 MLOAD DUP2 LT PUSH2 0x434 JUMPI PUSH2 0x434 PUSH2 0xC7F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH3 0x15180 DUP2 PUSH1 0x6 DUP2 MLOAD DUP2 LT PUSH2 0x457 JUMPI PUSH2 0x457 PUSH2 0xC7F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH3 0x93A80 DUP2 PUSH1 0x7 DUP2 MLOAD DUP2 LT PUSH2 0x47A JUMPI PUSH2 0x47A PUSH2 0xC7F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH0 DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x499 JUMPI PUSH2 0x499 PUSH2 0xC7F JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x869665E9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x869665E9 SWAP1 PUSH1 0x24 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4E7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4F9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xCF7 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 PUSH1 0x40 MLOAD PUSH2 0x549 SWAP2 SWAP1 PUSH1 0x40 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH19 0x41646A757374696E672074696D656672616D65 PUSH1 0x68 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x580 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19C SWAP1 PUSH2 0xBCB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x7541B06C3DEC9FDC83C6C723DC48E42D9B1632A4AB380F150EB91C2E6FC310B9 SWAP1 PUSH0 SWAP1 LOG1 PUSH0 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x9D8EF1E1 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 PUSH4 0x9D8EF1E1 SWAP3 PUSH1 0x4 DUP1 DUP5 ADD SWAP4 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5E7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5F9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH32 0x9DC90CE348FED0B93DDBC45640BA9E0AB32F42E205A3C0B452FB17474B96E1C0 SWAP3 POP PUSH0 SWAP2 POP LOG1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x651 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19C SWAP1 PUSH2 0xBCB JUMP JUMPDEST PUSH1 0x3 SLOAD TIMESTAMP LT ISZERO PUSH2 0x6AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x49742773206E6F742074696D6520666F7220746865206E65787420636865636B PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x81E595D PUSH1 0xE2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x19C JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x8FC3047D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6FF JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x723 SWAP2 SWAP1 PUSH2 0xC93 JUMP JUMPDEST SWAP1 POP PUSH32 0x4896F6F06B46D0EBC6BD420E59B05A5E5486F3A5A2E306E20DEF08C8F284F374 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x756 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x41A DUP2 GT ISZERO PUSH2 0x826 JUMPI PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x26C403ED PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x26C403ED SWAP1 PUSH2 0x7B9 SWAP1 PUSH1 0x64 SWAP1 PUSH1 0x4 ADD PUSH1 0x40 DUP1 DUP3 MSTORE PUSH1 0x4 SWAP1 DUP3 ADD MSTORE PUSH4 0x1CD95B1B PUSH1 0xE2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7D0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7E2 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP2 DUP2 MSTORE PUSH1 0x4 DUP2 DUP4 ADD MSTORE PUSH4 0x1CD95B1B PUSH1 0xE2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x64 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 MLOAD PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xCF7 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP4 POP SWAP1 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP2 POP LOG1 PUSH2 0x8E1 JUMP JUMPDEST PUSH2 0x3B6 DUP2 LT ISZERO PUSH2 0x8E1 JUMPI PUSH0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x26C403ED PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x627579 PUSH1 0xE8 SHL PUSH1 0x64 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x26C403ED SWAP1 PUSH1 0x84 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x890 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8A2 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP2 DUP2 MSTORE PUSH1 0x3 DUP2 DUP4 ADD MSTORE PUSH3 0x627579 PUSH1 0xE8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x64 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 MLOAD PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xCF7 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP4 POP SWAP1 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP2 POP LOG1 JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x8EE SWAP1 TIMESTAMP PUSH2 0xCAA JUMP JUMPDEST PUSH1 0x3 SSTORE POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x91E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19C SWAP1 PUSH2 0xBCB JUMP JUMPDEST PUSH0 DUP1 JUMPDEST PUSH1 0x3 DUP3 LT DUP1 ISZERO PUSH2 0x92F JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x9CE JUMPI PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x26C403ED PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x26C403ED SWAP1 PUSH2 0x965 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0xCBD JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x97C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x98D JUMPI POP PUSH1 0x1 JUMPDEST PUSH2 0x99F JUMPI PUSH2 0x99A DUP3 PUSH2 0x9D4 JUMP JUMPDEST PUSH2 0x921 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xCF7 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x9C1 SWAP3 SWAP2 SWAP1 PUSH2 0xCBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x921 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0xA87 JUMPI PUSH0 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x17700F01 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 PUSH4 0x17700F01 SWAP3 PUSH1 0x4 DUP1 DUP5 ADD SWAP4 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA1B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA2D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1C DUP2 DUP4 ADD MSTORE PUSH32 0x53746F702064756520746F2070657273697374656E74206572726F7200000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH0 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 MLOAD PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xCF7 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP4 POP SWAP1 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP2 POP LOG1 POP JUMP JUMPDEST DUP1 PUSH2 0x322 DUP2 PUSH2 0xCDE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xAB4 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xACF JUMPI PUSH2 0xACF PUSH2 0xA91 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xAF7 JUMPI PUSH2 0xAF7 PUSH2 0xA91 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0xB0F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB3F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB5C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB68 DUP6 DUP3 DUP7 ADD PUSH2 0xAA5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB82 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB9A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xBB0 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xBBC DUP6 DUP3 DUP7 ADD PUSH2 0xAA5 JUMP JUMPDEST SWAP6 PUSH1 0x20 SWAP5 SWAP1 SWAP5 ADD CALLDATALOAD SWAP5 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xD SWAP1 DUP3 ADD MSTORE PUSH13 0x2737BA103A34329037BBB732B9 PUSH1 0x99 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC16 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xBFA JUMP JUMPDEST POP PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0xC47 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xBF2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0xC79 JUMPI PUSH2 0xC79 PUSH2 0xC4E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCA3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xC79 JUMPI PUSH2 0xC79 PUSH2 0xC4E JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH0 PUSH2 0xCCF PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xBF2 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0xCEF JUMPI PUSH2 0xCEF PUSH2 0xC4E JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID JUMPI EXTCODEHASH 0x22 0xC3 SLT CODESIZE 0x2D DIV PUSH2 0x59D8 CALLVALUE 0xAA 0xE SWAP16 PUSH29 0x23B7BA1BA8C9FF20B839B47844686E88A264697066735822122060E631 0xA8 PUSH17 0x370823E7287B2615831E7AA9884C024DC9 0xD4 TIMESTAMP DUP9 LOG0 0xBC TIMESTAMP 0xAD PUSH15 0xF4864736F6C634300081400330000 ",
							"sourceMap": "83:3540:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;197:28;;;;;;;;;160:25:24;;;148:2;133:18;197:28:0;;;;;;;;3095:95;;;:::i;:::-;;3452:169;;;;;;:::i;:::-;;:::i;3196:250::-;;;;;;:::i;:::-;;:::i;163:28::-;;;;;;2409:684;;;;;;:::i;:::-;;:::i;1523:160::-;;;:::i;137:20::-;;;;;-1:-1:-1;;;;;137:20:0;;;;;;-1:-1:-1;;;;;1796:32:24;;;1778:51;;1766:2;1751:18;137:20:0;1632:203:24;830:687:0;;;:::i;109:22::-;;;;;-1:-1:-1;;;;;109:22:0;;;1951:452;;;;;;:::i;:::-;;:::i;3095:95::-;508:5;;-1:-1:-1;;;;;508:5:0;494:10;:19;486:45;;;;-1:-1:-1;;;486:45:0;;;;;;;:::i;:::-;;;;;;;;;3136:51:::1;::::0;3144:10:::1;::::0;3165:21:::1;3136:51:::0;::::1;;;::::0;::::1;::::0;;;3165:21;3144:10;3136:51;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;3095:95::o:0;3452:169::-;508:5;;-1:-1:-1;;;;;508:5:0;494:10;:19;486:45;;;;-1:-1:-1;;;486:45:0;;;;;;;:::i;:::-;3545:29:::1;::::0;160:25:24;;;3545:29:0::1;::::0;148:2:24;133:18;3545:29:0::1;;;;;;;3589:25;3605:8;3589:25;;;;;;:::i;:::-;;;;;;;;3452:169:::0;;:::o;3196:250::-;508:5;;-1:-1:-1;;;;;508:5:0;494:10;:19;486:45;;;;-1:-1:-1;;;486:45:0;;;;;;;:::i;:::-;3271:19:::1;3293:21;:12:::0;3308:6:::1;3293:21;:::i;:::-;3271:43;;3357:11;3332:21;:36;;3324:69;;;::::0;-1:-1:-1;;;3324:69:0;;3969:2:24;3324:69:0::1;::::0;::::1;3951:21:24::0;4008:2;3988:18;;;3981:30;-1:-1:-1;;;4027:18:24;;;4020:50;4087:18;;3324:69:0::1;3767:344:24::0;3324:69:0::1;3411:5;::::0;3403:36:::1;::::0;-1:-1:-1;;;;;3411:5:0;;::::1;::::0;3403:36;::::1;;;::::0;3427:11;;3411:5:::1;3403:36:::0;3411:5;3403:36;3427:11;3411:5;3403:36;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;3261:185;3196:250:::0;:::o;2409:684::-;508:5;;-1:-1:-1;;;;;508:5:0;494:10;:19;486:45;;;;-1:-1:-1;;;486:45:0;;;;;;;:::i;:::-;2521:16:::1;::::0;;2535:1:::1;2521:16:::0;;;;;::::1;::::0;;;2491:27:::1;::::0;2521:16:::1;::::0;::::1;::::0;;::::1;::::0;::::1;;::::0;-1:-1:-1;2521:16:0::1;2491:46;;2563:3;2547:10;2558:1;2547:13;;;;;;;;:::i;:::-;;;;;;:19;;;::::0;::::1;2610:4;2594:10;2605:1;2594:13;;;;;;;;:::i;:::-;;;;;;:20;;;::::0;::::1;2657:4;2641:10;2652:1;2641:13;;;;;;;;:::i;:::-;;;;;;:20;;;::::0;::::1;2700:4;2684:10;2695:1;2684:13;;;;;;;;:::i;:::-;;;;;;:20;;;::::0;::::1;2744:5;2728:10;2739:1;2728:13;;;;;;;;:::i;:::-;;;;;;:21;;;::::0;::::1;2788:5;2772:10;2783:1;2772:13;;;;;;;;:::i;:::-;;;;;;:21;;;::::0;::::1;2832:5;2816:10;2827:1;2816:13;;;;;;;;:::i;:::-;;;;;;:21;;;::::0;::::1;2877:6;2861:10;2872:1;2861:13;;;;;;;;:::i;:::-;;;;;;:22;;;::::0;::::1;2905:25;2933:10;2944:14;2933:26;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;2969:7:::1;::::0;:42:::1;::::0;-1:-1:-1;;;2969:42:0;;::::1;::::0;::::1;160:25:24::0;;;2933:26:0;;-1:-1:-1;;;;;;2969:7:0::1;::::0;:23:::1;::::0;133:18:24;;2969:42:0::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;-1:-1:-1::0;;;;;;;;;;;3068:17:0::1;3026:60;;;;;4478:2:24::0;4460:21;;;4517:2;4497:18;;;4490:30;-1:-1:-1;;;4551:2:24;4536:18;;4529:49;4645:4;4630:20;;4623:36;;;;4610:3;4595:19;;4248:417;3026:60:0::1;;;;;;;;2481:612;;2409:684:::0;:::o;1523:160::-;508:5;;-1:-1:-1;;;;;508:5:0;494:10;:19;486:45;;;;-1:-1:-1;;;486:45:0;;;;;;;:::i;:::-;1580:22:::1;::::0;::::1;::::0;;;::::1;1612:7;::::0;;:25:::1;::::0;;-1:-1:-1;;;1612:25:0;;;;-1:-1:-1;;;;;1612:7:0;;::::1;::::0;:23:::1;::::0;:25:::1;::::0;;::::1;::::0;;;;;;:7;;:25;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;1652:24:0::1;::::0;::::1;::::0;-1:-1:-1;1652:24:0;;-1:-1:-1;1652:24:0::1;1523:160::o:0;830:687::-;508:5;;-1:-1:-1;;;;;508:5:0;494:10;:19;486:45;;;;-1:-1:-1;;;486:45:0;;;;;;;:::i;:::-;911:13:::1;;892:15;:32;;884:81;;;::::0;-1:-1:-1;;;884:81:0;;4872:2:24;884:81:0::1;::::0;::::1;4854:21:24::0;4911:2;4891:18;;;4884:30;4950:34;4930:18;;;4923:62;-1:-1:-1;;;5001:18:24;;;4994:34;5045:19;;884:81:0::1;4670:400:24::0;884:81:0::1;984:13;1000:7:::0;::::1;;;;;;;;-1:-1:-1::0;;;;;1000:7:0::1;-1:-1:-1::0;;;;;1000:18:0::1;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;984:36;;1035:35;1054:15;1035:35;;;;160:25:24::0;;148:2;133:18;;14:177;1035:35:0::1;;;;;;;;1166:4;1158:5;:12;1154:299;;;1207:7;::::0;:34:::1;::::0;-1:-1:-1;;;1207:34:0;;-1:-1:-1;;;;;1207:7:0;;::::1;::::0;:21:::1;::::0;:34:::1;::::0;1237:3:::1;::::0;1207:34:::1;;5504:2:24::0;5486:21;;;5543:1;5523:18;;;5516:29;-1:-1:-1;;;5576:2:24;5561:18;;5554:34;5655:4;5640:20;;5633:36;;;;5620:3;5605:19;;5264:411;1207:34:0::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;1260:31:0::1;::::0;;5486:21:24;;;5543:1;5523:18;;;5516:29;-1:-1:-1;;;5576:2:24;5561:18;;5554:34;1287:3:0::1;5655:4:24::0;5640:20;;5633:36;1260:31:0;;-1:-1:-1;;;;;;;;;;;1260:31:0;-1:-1:-1;1260:31:0;;;;5620:3:24;1260:31:0;;-1:-1:-1;1260:31:0::1;1154:299;;;1320:3;1312:5;:11;1308:145;;;1360:7;::::0;:33:::1;::::0;;-1:-1:-1;;;1360:33:0;;::::1;::::0;::::1;5902:21:24::0;;;;5959:1;5939:18;;;5932:29;-1:-1:-1;;;1389:3:0::1;5977:18:24::0;;;5970:33;;;;6055:20;;;6048:36;-1:-1:-1;;;;;1360:7:0;;::::1;::::0;:21:::1;::::0;6020:19:24;;1360:33:0::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;1412:30:0::1;::::0;;5902:21:24;;;5959:1;5939:18;;;5932:29;-1:-1:-1;;;5992:2:24;5977:18;;5970:33;1438:3:0::1;6070:4:24::0;6055:20;;6048:36;1412:30:0;;-1:-1:-1;;;;;;;;;;;1412:30:0;-1:-1:-1;1412:30:0;;;;6035:3:24;1412:30:0;;-1:-1:-1;1412:30:0::1;1308:145;1497:13;::::0;1479:31:::1;::::0;:15:::1;:31;:::i;:::-;1463:13;:47:::0;-1:-1:-1;830:687:0:o;1951:452::-;508:5;;-1:-1:-1;;;;;508:5:0;494:10;:19;486:45;;;;-1:-1:-1;;;486:45:0;;;;;;;:::i;:::-;2056:18:::1;2088:12:::0;2118:279:::1;2138:1;2125:10;:14;:26;;;;;2144:7;2143:8;2125:26;2118:279;;;2171:7;::::0;:40:::1;::::0;-1:-1:-1;;;2171:40:0;;-1:-1:-1;;;;;2171:7:0;;::::1;::::0;:21:::1;::::0;:40:::1;::::0;2193:9;;2204:6;;2171:40:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;2167:220;;2344:28;2361:10;2344:16;:28::i;:::-;2118:279;;2167:220;2240:4;2230:14;;-1:-1:-1::0;;;;;;;;;;;2286:9:0::1;2297:6;2267:37;;;;;;;:::i;:::-;;;;;;;;2118:279;;;2046:357;;1951:452:::0;;:::o;1689:256::-;1772:1;1758:10;:15;1754:185;;1789:7;;;:24;;;-1:-1:-1;;;1789:24:0;;;;-1:-1:-1;;;;;1789:7:0;;;;:22;;:24;;;;;;;;;;:7;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1832:53:0;;;6741:21:24;;;6798:2;6778:18;;;6771:30;6837;6832:2;6817:18;;6810:58;-1:-1:-1;6935:4:24;6920:20;;6913:36;1832:53:0;;-1:-1:-1;;;;;;;;;;;1832:53:0;-1:-1:-1;1832:53:0;;;;6900:3:24;1832:53:0;;-1:-1:-1;1832:53:0;3136:51:::1;3095:95::o:0;1754:185::-;1916:12;;;;:::i;196:127:24:-;257:10;252:3;248:20;245:1;238:31;288:4;285:1;278:15;312:4;309:1;302:15;328:719;371:5;424:3;417:4;409:6;405:17;401:27;391:55;;442:1;439;432:12;391:55;478:6;465:20;504:18;541:2;537;534:10;531:36;;;547:18;;:::i;:::-;622:2;616:9;590:2;676:13;;-1:-1:-1;;672:22:24;;;696:2;668:31;664:40;652:53;;;720:18;;;740:22;;;717:46;714:72;;;766:18;;:::i;:::-;806:10;802:2;795:22;841:2;833:6;826:18;887:3;880:4;875:2;867:6;863:15;859:26;856:35;853:55;;;904:1;901;894:12;853:55;968:2;961:4;953:6;949:17;942:4;934:6;930:17;917:54;1015:1;1008:4;1003:2;995:6;991:15;987:26;980:37;1035:6;1026:15;;;;;;328:719;;;;:::o;1052:390::-;1130:6;1138;1191:2;1179:9;1170:7;1166:23;1162:32;1159:52;;;1207:1;1204;1197:12;1159:52;1243:9;1230:23;1220:33;;1304:2;1293:9;1289:18;1276:32;1331:18;1323:6;1320:30;1317:50;;;1363:1;1360;1353:12;1317:50;1386;1428:7;1419:6;1408:9;1404:22;1386:50;:::i;:::-;1376:60;;;1052:390;;;;;:::o;1447:180::-;1506:6;1559:2;1547:9;1538:7;1534:23;1530:32;1527:52;;;1575:1;1572;1565:12;1527:52;-1:-1:-1;1598:23:24;;1447:180;-1:-1:-1;1447:180:24:o;2072:390::-;2150:6;2158;2211:2;2199:9;2190:7;2186:23;2182:32;2179:52;;;2227:1;2224;2217:12;2179:52;2267:9;2254:23;2300:18;2292:6;2289:30;2286:50;;;2332:1;2329;2322:12;2286:50;2355;2397:7;2388:6;2377:9;2373:22;2355:50;:::i;:::-;2345:60;2452:2;2437:18;;;;2424:32;;-1:-1:-1;;;;2072:390:24:o;2467:337::-;2669:2;2651:21;;;2708:2;2688:18;;;2681:30;-1:-1:-1;;;2742:2:24;2727:18;;2720:43;2795:2;2780:18;;2467:337::o;2809:423::-;2851:3;2889:5;2883:12;2916:6;2911:3;2904:19;2941:1;2951:162;2965:6;2962:1;2959:13;2951:162;;;3027:4;3083:13;;;3079:22;;3073:29;3055:11;;;3051:20;;3044:59;2980:12;2951:162;;;2955:3;3158:1;3151:4;3142:6;3137:3;3133:16;3129:27;3122:38;3221:4;3214:2;3210:7;3205:2;3197:6;3193:15;3189:29;3184:3;3180:39;3176:50;3169:57;;;2809:423;;;;:::o;3237:220::-;3386:2;3375:9;3368:21;3349:4;3406:45;3447:2;3436:9;3432:18;3424:6;3406:45;:::i;:::-;3398:53;3237:220;-1:-1:-1;;;3237:220:24:o;3462:127::-;3523:10;3518:3;3514:20;3511:1;3504:31;3554:4;3551:1;3544:15;3578:4;3575:1;3568:15;3594:168;3667:9;;;3698;;3715:15;;;3709:22;;3695:37;3685:71;;3736:18;;:::i;:::-;3594:168;;;;:::o;4116:127::-;4177:10;4172:3;4168:20;4165:1;4158:31;4208:4;4205:1;4198:15;4232:4;4229:1;4222:15;5075:184;5145:6;5198:2;5186:9;5177:7;5173:23;5169:32;5166:52;;;5214:1;5211;5204:12;5166:52;-1:-1:-1;5237:16:24;;5075:184;-1:-1:-1;5075:184:24:o;6095:125::-;6160:9;;;6181:10;;;6178:36;;;6194:18;;:::i;6225:291::-;6402:2;6391:9;6384:21;6365:4;6422:45;6463:2;6452:9;6448:18;6440:6;6422:45;:::i;:::-;6414:53;;6503:6;6498:2;6487:9;6483:18;6476:34;6225:291;;;;;:::o;6960:135::-;6999:3;7020:17;;;7017:43;;7040:18;;:::i;:::-;-1:-1:-1;7087:1:24;7076:13;;6960:135::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "680800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"Consolidate()": "infinite",
								"checkInterval()": "2372",
								"initiateTradeWithHandling(string,uint256)": "infinite",
								"kill()": "infinite",
								"logEvent(uint256,string)": "infinite",
								"mainBot()": "2423",
								"nextCheckTime()": "2284",
								"owner()": "2380",
								"periodicCheck()": "infinite",
								"setTradingTimeframe(uint256)": "infinite",
								"withdrawInGwei(uint256)": "infinite"
							},
							"internal": {
								"handleTradeError(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 83,
									"end": 3623,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 83,
									"end": 3623,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 83,
									"end": 3623,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 555,
									"end": 824,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 555,
									"end": 824,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 555,
									"end": 824,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 555,
									"end": 824,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 555,
									"end": 824,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 555,
									"end": 824,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 555,
									"end": 824,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 555,
									"end": 824,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 555,
									"end": 824,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 555,
									"end": 824,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 555,
									"end": 824,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 555,
									"end": 824,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 555,
									"end": 824,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 555,
									"end": 824,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 555,
									"end": 824,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 555,
									"end": 824,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 555,
									"end": 824,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 555,
									"end": 824,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 555,
									"end": 824,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 555,
									"end": 824,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 555,
									"end": 824,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 555,
									"end": 824,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 555,
									"end": 824,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 555,
									"end": 824,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 555,
									"end": 824,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 555,
									"end": 824,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 555,
									"end": 824,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 555,
									"end": 824,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 555,
									"end": 824,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 555,
									"end": 824,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 555,
									"end": 824,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 555,
									"end": 824,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 633,
									"end": 640,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 633,
									"end": 666,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 633,
									"end": 666,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 633,
									"end": 666,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 633,
									"end": 666,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 633,
									"end": 666,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 633,
									"end": 666,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 633,
									"end": 666,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 633,
									"end": 666,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 633,
									"end": 666,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 633,
									"end": 666,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 633,
									"end": 666,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 633,
									"end": 666,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 676,
									"end": 694,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 676,
									"end": 694,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 676,
									"end": 694,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 676,
									"end": 694,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 676,
									"end": 694,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 684,
									"end": 694,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 676,
									"end": 694,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 676,
									"end": 694,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 676,
									"end": 694,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 704,
									"end": 717,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 704,
									"end": 734,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 704,
									"end": 734,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 704,
									"end": 734,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 786,
									"end": 817,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 720,
									"end": 734,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 786,
									"end": 801,
									"name": "TIMESTAMP",
									"source": 0
								},
								{
									"begin": 786,
									"end": 817,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 786,
									"end": 817,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 786,
									"end": 817,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 786,
									"end": 817,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 770,
									"end": 783,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 770,
									"end": 817,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 83,
									"end": 3623,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 83,
									"end": 3623,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 83,
									"end": 3623,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 373,
									"name": "tag",
									"source": 24,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 373,
									"name": "JUMPDEST",
									"source": 24
								},
								{
									"begin": 101,
									"end": 107,
									"name": "PUSH",
									"source": 24,
									"value": "0"
								},
								{
									"begin": 109,
									"end": 115,
									"name": "DUP1",
									"source": 24
								},
								{
									"begin": 162,
									"end": 164,
									"name": "PUSH",
									"source": 24,
									"value": "40"
								},
								{
									"begin": 150,
									"end": 159,
									"name": "DUP4",
									"source": 24
								},
								{
									"begin": 141,
									"end": 148,
									"name": "DUP6",
									"source": 24
								},
								{
									"begin": 137,
									"end": 160,
									"name": "SUB",
									"source": 24
								},
								{
									"begin": 133,
									"end": 165,
									"name": "SLT",
									"source": 24
								},
								{
									"begin": 130,
									"end": 182,
									"name": "ISZERO",
									"source": 24
								},
								{
									"begin": 130,
									"end": 182,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "11"
								},
								{
									"begin": 130,
									"end": 182,
									"name": "JUMPI",
									"source": 24
								},
								{
									"begin": 178,
									"end": 179,
									"name": "PUSH",
									"source": 24,
									"value": "0"
								},
								{
									"begin": 175,
									"end": 176,
									"name": "DUP1",
									"source": 24
								},
								{
									"begin": 168,
									"end": 180,
									"name": "REVERT",
									"source": 24
								},
								{
									"begin": 130,
									"end": 182,
									"name": "tag",
									"source": 24,
									"value": "11"
								},
								{
									"begin": 130,
									"end": 182,
									"name": "JUMPDEST",
									"source": 24
								},
								{
									"begin": 204,
									"end": 220,
									"name": "DUP3",
									"source": 24
								},
								{
									"begin": 204,
									"end": 220,
									"name": "MLOAD",
									"source": 24
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 249,
									"end": 280,
									"name": "DUP2",
									"source": 24
								},
								{
									"begin": 249,
									"end": 280,
									"name": "AND",
									"source": 24
								},
								{
									"begin": 239,
									"end": 281,
									"name": "DUP2",
									"source": 24
								},
								{
									"begin": 239,
									"end": 281,
									"name": "EQ",
									"source": 24
								},
								{
									"begin": 229,
									"end": 299,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "12"
								},
								{
									"begin": 229,
									"end": 299,
									"name": "JUMPI",
									"source": 24
								},
								{
									"begin": 295,
									"end": 296,
									"name": "PUSH",
									"source": 24,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 293,
									"name": "DUP1",
									"source": 24
								},
								{
									"begin": 285,
									"end": 297,
									"name": "REVERT",
									"source": 24
								},
								{
									"begin": 229,
									"end": 299,
									"name": "tag",
									"source": 24,
									"value": "12"
								},
								{
									"begin": 229,
									"end": 299,
									"name": "JUMPDEST",
									"source": 24
								},
								{
									"begin": 363,
									"end": 365,
									"name": "PUSH",
									"source": 24,
									"value": "20"
								},
								{
									"begin": 348,
									"end": 366,
									"name": "SWAP4",
									"source": 24
								},
								{
									"begin": 348,
									"end": 366,
									"name": "SWAP1",
									"source": 24
								},
								{
									"begin": 348,
									"end": 366,
									"name": "SWAP4",
									"source": 24
								},
								{
									"begin": 348,
									"end": 366,
									"name": "ADD",
									"source": 24
								},
								{
									"begin": 342,
									"end": 367,
									"name": "MLOAD",
									"source": 24
								},
								{
									"begin": 318,
									"end": 323,
									"name": "SWAP3",
									"source": 24
								},
								{
									"begin": 318,
									"end": 323,
									"name": "SWAP5",
									"source": 24
								},
								{
									"begin": 342,
									"end": 367,
									"name": "SWAP3",
									"source": 24
								},
								{
									"begin": 342,
									"end": 367,
									"name": "SWAP4",
									"source": 24
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 373,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 24
								},
								{
									"begin": 378,
									"end": 600,
									"name": "tag",
									"source": 24,
									"value": "7"
								},
								{
									"begin": 378,
									"end": 600,
									"name": "JUMPDEST",
									"source": 24
								},
								{
									"begin": 443,
									"end": 452,
									"name": "DUP1",
									"source": 24
								},
								{
									"begin": 443,
									"end": 452,
									"name": "DUP3",
									"source": 24
								},
								{
									"begin": 443,
									"end": 452,
									"name": "ADD",
									"source": 24
								},
								{
									"begin": 464,
									"end": 474,
									"name": "DUP1",
									"source": 24
								},
								{
									"begin": 464,
									"end": 474,
									"name": "DUP3",
									"source": 24
								},
								{
									"begin": 464,
									"end": 474,
									"name": "GT",
									"source": 24
								},
								{
									"begin": 461,
									"end": 594,
									"name": "ISZERO",
									"source": 24
								},
								{
									"begin": 461,
									"end": 594,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "14"
								},
								{
									"begin": 461,
									"end": 594,
									"name": "JUMPI",
									"source": 24
								},
								{
									"begin": 516,
									"end": 526,
									"name": "PUSH",
									"source": 24,
									"value": "4E487B71"
								},
								{
									"begin": 511,
									"end": 514,
									"name": "PUSH",
									"source": 24,
									"value": "E0"
								},
								{
									"begin": 507,
									"end": 527,
									"name": "SHL",
									"source": 24
								},
								{
									"begin": 504,
									"end": 505,
									"name": "PUSH",
									"source": 24,
									"value": "0"
								},
								{
									"begin": 497,
									"end": 528,
									"name": "MSTORE",
									"source": 24
								},
								{
									"begin": 551,
									"end": 555,
									"name": "PUSH",
									"source": 24,
									"value": "11"
								},
								{
									"begin": 548,
									"end": 549,
									"name": "PUSH",
									"source": 24,
									"value": "4"
								},
								{
									"begin": 541,
									"end": 556,
									"name": "MSTORE",
									"source": 24
								},
								{
									"begin": 579,
									"end": 583,
									"name": "PUSH",
									"source": 24,
									"value": "24"
								},
								{
									"begin": 576,
									"end": 577,
									"name": "PUSH",
									"source": 24,
									"value": "0"
								},
								{
									"begin": 569,
									"end": 584,
									"name": "REVERT",
									"source": 24
								},
								{
									"begin": 461,
									"end": 594,
									"name": "tag",
									"source": 24,
									"value": "14"
								},
								{
									"begin": 461,
									"end": 594,
									"name": "JUMPDEST",
									"source": 24
								},
								{
									"begin": 378,
									"end": 600,
									"name": "SWAP3",
									"source": 24
								},
								{
									"begin": 378,
									"end": 600,
									"name": "SWAP2",
									"source": 24
								},
								{
									"begin": 378,
									"end": 600,
									"name": "POP",
									"source": 24
								},
								{
									"begin": 378,
									"end": 600,
									"name": "POP",
									"source": 24
								},
								{
									"begin": 378,
									"end": 600,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 24
								},
								{
									"begin": 378,
									"end": 600,
									"name": "tag",
									"source": 24,
									"value": "9"
								},
								{
									"begin": 378,
									"end": 600,
									"name": "JUMPDEST",
									"source": 24
								},
								{
									"begin": 83,
									"end": 3623,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 83,
									"end": 3623,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 83,
									"end": 3623,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 83,
									"end": 3623,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 83,
									"end": 3623,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 83,
									"end": 3623,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 83,
									"end": 3623,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122060e631a870370823e7287b2615831e7aa9884c024dc9d44288a0bc42ad6e0f4864736f6c63430008140033",
									".code": [
										{
											"begin": 83,
											"end": 3623,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 83,
											"end": 3623,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 83,
											"end": 3623,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 83,
											"end": 3623,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 83,
											"end": 3623,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 83,
											"end": 3623,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 83,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 83,
											"end": 3623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 83,
											"end": 3623,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 83,
											"end": 3623,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 83,
											"end": 3623,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 83,
											"end": 3623,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 83,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 83,
											"end": 3623,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 83,
											"end": 3623,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 83,
											"end": 3623,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 83,
											"end": 3623,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 83,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 83,
											"end": 3623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 83,
											"end": 3623,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 83,
											"end": 3623,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 83,
											"end": 3623,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 83,
											"end": 3623,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 83,
											"end": 3623,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 83,
											"end": 3623,
											"name": "PUSH",
											"source": 0,
											"value": "88AC3EA1"
										},
										{
											"begin": 83,
											"end": 3623,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 83,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 83,
											"end": 3623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 83,
											"end": 3623,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 83,
											"end": 3623,
											"name": "PUSH",
											"source": 0,
											"value": "88AC3EA1"
										},
										{
											"begin": 83,
											"end": 3623,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 83,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 83,
											"end": 3623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 83,
											"end": 3623,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 83,
											"end": 3623,
											"name": "PUSH",
											"source": 0,
											"value": "8C44C530"
										},
										{
											"begin": 83,
											"end": 3623,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 83,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 83,
											"end": 3623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 83,
											"end": 3623,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 83,
											"end": 3623,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 83,
											"end": 3623,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 83,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 83,
											"end": 3623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 83,
											"end": 3623,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 83,
											"end": 3623,
											"name": "PUSH",
											"source": 0,
											"value": "C98706C3"
										},
										{
											"begin": 83,
											"end": 3623,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 83,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 83,
											"end": 3623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 83,
											"end": 3623,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 83,
											"end": 3623,
											"name": "PUSH",
											"source": 0,
											"value": "E529930A"
										},
										{
											"begin": 83,
											"end": 3623,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 83,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 83,
											"end": 3623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 83,
											"end": 3623,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 83,
											"end": 3623,
											"name": "PUSH",
											"source": 0,
											"value": "EFA274EF"
										},
										{
											"begin": 83,
											"end": 3623,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 83,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 83,
											"end": 3623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 83,
											"end": 3623,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 83,
											"end": 3623,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 83,
											"end": 3623,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 83,
											"end": 3623,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 83,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 83,
											"end": 3623,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 83,
											"end": 3623,
											"name": "PUSH",
											"source": 0,
											"value": "36DFF6B6"
										},
										{
											"begin": 83,
											"end": 3623,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 83,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 83,
											"end": 3623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 83,
											"end": 3623,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 83,
											"end": 3623,
											"name": "PUSH",
											"source": 0,
											"value": "41C0E1B5"
										},
										{
											"begin": 83,
											"end": 3623,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 83,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 83,
											"end": 3623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 83,
											"end": 3623,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 83,
											"end": 3623,
											"name": "PUSH",
											"source": 0,
											"value": "4359B7EF"
										},
										{
											"begin": 83,
											"end": 3623,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 83,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 83,
											"end": 3623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 83,
											"end": 3623,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 83,
											"end": 3623,
											"name": "PUSH",
											"source": 0,
											"value": "457F3CB0"
										},
										{
											"begin": 83,
											"end": 3623,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 83,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 83,
											"end": 3623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 83,
											"end": 3623,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 83,
											"end": 3623,
											"name": "PUSH",
											"source": 0,
											"value": "838C29B6"
										},
										{
											"begin": 83,
											"end": 3623,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 83,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 83,
											"end": 3623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 83,
											"end": 3623,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 83,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 83,
											"end": 3623,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 83,
											"end": 3623,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 83,
											"end": 3623,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 197,
											"end": 225,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 197,
											"end": 225,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 197,
											"end": 225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 197,
											"end": 225,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 197,
											"end": 225,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 197,
											"end": 225,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 197,
											"end": 225,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 197,
											"end": 225,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 197,
											"end": 225,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 197,
											"end": 225,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 197,
											"end": 225,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 197,
											"end": 225,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 197,
											"end": 225,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 197,
											"end": 225,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 197,
											"end": 225,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 197,
											"end": 225,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 197,
											"end": 225,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 197,
											"end": 225,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 197,
											"end": 225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 197,
											"end": 225,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3095,
											"end": 3190,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3095,
											"end": 3190,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3095,
											"end": 3190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 3095,
											"end": 3190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3095,
											"end": 3190,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 3095,
											"end": 3190,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3095,
											"end": 3190,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3452,
											"end": 3621,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3452,
											"end": 3621,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3452,
											"end": 3621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 3452,
											"end": 3621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 3452,
											"end": 3621,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3452,
											"end": 3621,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3452,
											"end": 3621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 3452,
											"end": 3621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3452,
											"end": 3621,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 3452,
											"end": 3621,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3452,
											"end": 3621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 3452,
											"end": 3621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3196,
											"end": 3446,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3196,
											"end": 3446,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3196,
											"end": 3446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 3196,
											"end": 3446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 3196,
											"end": 3446,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3196,
											"end": 3446,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3196,
											"end": 3446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 3196,
											"end": 3446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3196,
											"end": 3446,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 3196,
											"end": 3446,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3196,
											"end": 3446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 3196,
											"end": 3446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 163,
											"end": 191,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 163,
											"end": 191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 163,
											"end": 191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 163,
											"end": 191,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 163,
											"end": 191,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 163,
											"end": 191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 163,
											"end": 191,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2409,
											"end": 3093,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2409,
											"end": 3093,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2409,
											"end": 3093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2409,
											"end": 3093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2409,
											"end": 3093,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2409,
											"end": 3093,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2409,
											"end": 3093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2409,
											"end": 3093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2409,
											"end": 3093,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2409,
											"end": 3093,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2409,
											"end": 3093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2409,
											"end": 3093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1523,
											"end": 1683,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1523,
											"end": 1683,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1523,
											"end": 1683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1523,
											"end": 1683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1523,
											"end": 1683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 137,
											"end": 157,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 137,
											"end": 157,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 137,
											"end": 157,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 137,
											"end": 157,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 137,
											"end": 157,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 137,
											"end": 157,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 137,
											"end": 157,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 137,
											"end": 157,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 137,
											"end": 157,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 137,
											"end": 157,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 137,
											"end": 157,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 137,
											"end": 157,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 137,
											"end": 157,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1796,
											"end": 1828,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 1796,
											"end": 1828,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 1796,
											"end": 1828,
											"name": "AND",
											"source": 24
										},
										{
											"begin": 1778,
											"end": 1829,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 1778,
											"end": 1829,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 1766,
											"end": 1768,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 1751,
											"end": 1769,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 137,
											"end": 157,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1632,
											"end": 1835,
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 830,
											"end": 1517,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 830,
											"end": 1517,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 830,
											"end": 1517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 830,
											"end": 1517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 830,
											"end": 1517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 109,
											"end": 131,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 109,
											"end": 131,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 109,
											"end": 131,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 109,
											"end": 131,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 109,
											"end": 131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 109,
											"end": 131,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 109,
											"end": 131,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 109,
											"end": 131,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 109,
											"end": 131,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1951,
											"end": 2403,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1951,
											"end": 2403,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1951,
											"end": 2403,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1951,
											"end": 2403,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1951,
											"end": 2403,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1951,
											"end": 2403,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1951,
											"end": 2403,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1951,
											"end": 2403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1951,
											"end": 2403,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1951,
											"end": 2403,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1951,
											"end": 2403,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1951,
											"end": 2403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3095,
											"end": 3190,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3190,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 508,
											"end": 513,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 508,
											"end": 513,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 494,
											"end": 504,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 494,
											"end": 513,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 486,
											"end": 531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 486,
											"end": 531,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 486,
											"end": 531,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 486,
											"end": 531,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 486,
											"end": 531,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 486,
											"end": 531,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 486,
											"end": 531,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 486,
											"end": 531,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 486,
											"end": 531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 486,
											"end": 531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 486,
											"end": 531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 486,
											"end": 531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 486,
											"end": 531,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 486,
											"end": 531,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 486,
											"end": 531,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 486,
											"end": 531,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 486,
											"end": 531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 486,
											"end": 531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 486,
											"end": 531,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 486,
											"end": 531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 486,
											"end": 531,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 486,
											"end": 531,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 486,
											"end": 531,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3136,
											"end": 3187,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3136,
											"end": 3187,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3144,
											"end": 3154,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3144,
											"end": 3154,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3165,
											"end": 3186,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 3136,
											"end": 3187,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3136,
											"end": 3187,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3136,
											"end": 3187,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 3136,
											"end": 3187,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3136,
											"end": 3187,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3136,
											"end": 3187,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3136,
											"end": 3187,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3136,
											"end": 3187,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3136,
											"end": 3187,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3165,
											"end": 3186,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3144,
											"end": 3154,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 3136,
											"end": 3187,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 3136,
											"end": 3187,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 3136,
											"end": 3187,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3136,
											"end": 3187,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3136,
											"end": 3187,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3136,
											"end": 3187,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3136,
											"end": 3187,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3136,
											"end": 3187,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3136,
											"end": 3187,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3136,
											"end": 3187,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3136,
											"end": 3187,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 3136,
											"end": 3187,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3136,
											"end": 3187,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3136,
											"end": 3187,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3136,
											"end": 3187,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3136,
											"end": 3187,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 3136,
											"end": 3187,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3136,
											"end": 3187,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3136,
											"end": 3187,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3136,
											"end": 3187,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 3136,
											"end": 3187,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3136,
											"end": 3187,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3095,
											"end": 3190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3452,
											"end": 3621,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 3452,
											"end": 3621,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 508,
											"end": 513,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 508,
											"end": 513,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 494,
											"end": 504,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 494,
											"end": 513,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 486,
											"end": 531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 486,
											"end": 531,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 486,
											"end": 531,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 486,
											"end": 531,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 486,
											"end": 531,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 486,
											"end": 531,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 486,
											"end": 531,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 486,
											"end": 531,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 486,
											"end": 531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 486,
											"end": 531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 486,
											"end": 531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 486,
											"end": 531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 486,
											"end": 531,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 486,
											"end": 531,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3545,
											"end": 3574,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3545,
											"end": 3574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 3545,
											"end": 3574,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4896F6F06B46D0EBC6BD420E59B05A5E5486F3A5A2E306E20DEF08C8F284F374"
										},
										{
											"begin": 3545,
											"end": 3574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 3545,
											"end": 3574,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3545,
											"end": 3574,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3545,
											"end": 3574,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3545,
											"end": 3574,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3545,
											"end": 3574,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3545,
											"end": 3574,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3545,
											"end": 3574,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 3589,
											"end": 3614,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "6E001753E59C246317B708B3090A58D44776F3B9E74DCD996149A49758F4D487"
										},
										{
											"begin": 3605,
											"end": 3613,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3589,
											"end": 3614,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3589,
											"end": 3614,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3589,
											"end": 3614,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 3589,
											"end": 3614,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3589,
											"end": 3614,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3589,
											"end": 3614,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 3589,
											"end": 3614,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3589,
											"end": 3614,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 3589,
											"end": 3614,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3589,
											"end": 3614,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3589,
											"end": 3614,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3589,
											"end": 3614,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3589,
											"end": 3614,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3589,
											"end": 3614,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3589,
											"end": 3614,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3589,
											"end": 3614,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 3452,
											"end": 3621,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3452,
											"end": 3621,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3452,
											"end": 3621,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3196,
											"end": 3446,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 3196,
											"end": 3446,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 508,
											"end": 513,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 508,
											"end": 513,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 494,
											"end": 504,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 494,
											"end": 513,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 486,
											"end": 531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 486,
											"end": 531,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 486,
											"end": 531,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 486,
											"end": 531,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 486,
											"end": 531,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 486,
											"end": 531,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 486,
											"end": 531,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 486,
											"end": 531,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 486,
											"end": 531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 486,
											"end": 531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 486,
											"end": 531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 486,
											"end": 531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 486,
											"end": 531,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 486,
											"end": 531,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3271,
											"end": 3290,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3293,
											"end": 3314,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 3293,
											"end": 3305,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3308,
											"end": 3314,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "3B9ACA00"
										},
										{
											"begin": 3293,
											"end": 3314,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 3293,
											"end": 3314,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3293,
											"end": 3314,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 3293,
											"end": 3314,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3271,
											"end": 3314,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3271,
											"end": 3314,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3357,
											"end": 3368,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3332,
											"end": 3353,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 3332,
											"end": 3368,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3332,
											"end": 3368,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3324,
											"end": 3393,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 3324,
											"end": 3393,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3324,
											"end": 3393,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3324,
											"end": 3393,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3324,
											"end": 3393,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3324,
											"end": 3393,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3969,
											"end": 3971,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 3324,
											"end": 3393,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3324,
											"end": 3393,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3324,
											"end": 3393,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3951,
											"end": 3972,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 4008,
											"end": 4010,
											"name": "PUSH",
											"source": 24,
											"value": "14"
										},
										{
											"begin": 3988,
											"end": 4006,
											"name": "PUSH",
											"source": 24,
											"value": "24"
										},
										{
											"begin": 3988,
											"end": 4006,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 3988,
											"end": 4006,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 3981,
											"end": 4011,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E73756666696369656E742062616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4027,
											"end": 4045,
											"name": "PUSH",
											"source": 24,
											"value": "44"
										},
										{
											"begin": 4027,
											"end": 4045,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 4027,
											"end": 4045,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 4020,
											"end": 4070,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 4087,
											"end": 4105,
											"name": "PUSH",
											"source": 24,
											"value": "64"
										},
										{
											"begin": 4087,
											"end": 4105,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 3324,
											"end": 3393,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 3767,
											"end": 4111,
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 3324,
											"end": 3393,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 3324,
											"end": 3393,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3411,
											"end": 3416,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3411,
											"end": 3416,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3403,
											"end": 3439,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3403,
											"end": 3439,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3411,
											"end": 3416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3411,
											"end": 3416,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3411,
											"end": 3416,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3411,
											"end": 3416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3403,
											"end": 3439,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3403,
											"end": 3439,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3403,
											"end": 3439,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 3403,
											"end": 3439,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3403,
											"end": 3439,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3427,
											"end": 3438,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3427,
											"end": 3438,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3411,
											"end": 3416,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3403,
											"end": 3439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3411,
											"end": 3416,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3403,
											"end": 3439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3427,
											"end": 3438,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3411,
											"end": 3416,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 3403,
											"end": 3439,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 3403,
											"end": 3439,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 3403,
											"end": 3439,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3403,
											"end": 3439,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3403,
											"end": 3439,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3403,
											"end": 3439,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3403,
											"end": 3439,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3403,
											"end": 3439,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3403,
											"end": 3439,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3403,
											"end": 3439,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3403,
											"end": 3439,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 3403,
											"end": 3439,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3403,
											"end": 3439,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3403,
											"end": 3439,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3403,
											"end": 3439,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3403,
											"end": 3439,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 3403,
											"end": 3439,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3403,
											"end": 3439,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3403,
											"end": 3439,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3403,
											"end": 3439,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 3403,
											"end": 3439,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3403,
											"end": 3439,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3261,
											"end": 3446,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3196,
											"end": 3446,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3196,
											"end": 3446,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2409,
											"end": 3093,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2409,
											"end": 3093,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 508,
											"end": 513,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 508,
											"end": 513,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 494,
											"end": 504,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 494,
											"end": 513,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 486,
											"end": 531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 486,
											"end": 531,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 486,
											"end": 531,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 486,
											"end": 531,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 486,
											"end": 531,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 486,
											"end": 531,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 486,
											"end": 531,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 486,
											"end": 531,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 486,
											"end": 531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 486,
											"end": 531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 486,
											"end": 531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 486,
											"end": 531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 486,
											"end": 531,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 486,
											"end": 531,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2521,
											"end": 2537,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2537,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2521,
											"end": 2537,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2535,
											"end": 2536,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2521,
											"end": 2537,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2521,
											"end": 2537,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2521,
											"end": 2537,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2521,
											"end": 2537,
											"name": "PUSH",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2521,
											"end": 2537,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2521,
											"end": 2537,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2521,
											"end": 2537,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2521,
											"end": 2537,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2521,
											"end": 2537,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2491,
											"end": 2518,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2491,
											"end": 2518,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2521,
											"end": 2537,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2521,
											"end": 2537,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2521,
											"end": 2537,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2521,
											"end": 2537,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2521,
											"end": 2537,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2521,
											"end": 2537,
											"modifierDepth": 1,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2521,
											"end": 2537,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2521,
											"end": 2537,
											"modifierDepth": 1,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 2521,
											"end": 2537,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2521,
											"end": 2537,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2521,
											"end": 2537,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2491,
											"end": 2537,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2491,
											"end": 2537,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2566,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "384"
										},
										{
											"begin": 2547,
											"end": 2557,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2558,
											"end": 2559,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2547,
											"end": 2560,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2547,
											"end": 2560,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2547,
											"end": 2560,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2547,
											"end": 2560,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2547,
											"end": 2560,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2547,
											"end": 2560,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2547,
											"end": 2560,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2547,
											"end": 2560,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2547,
											"end": 2560,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2547,
											"end": 2560,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2547,
											"end": 2560,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2547,
											"end": 2560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2547,
											"end": 2560,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2547,
											"end": 2560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2547,
											"end": 2560,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2547,
											"end": 2560,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2547,
											"end": 2566,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2547,
											"end": 2566,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2547,
											"end": 2566,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2547,
											"end": 2566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2547,
											"end": 2566,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2614,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "708"
										},
										{
											"begin": 2594,
											"end": 2604,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2605,
											"end": 2606,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2594,
											"end": 2607,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2607,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2607,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2607,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2607,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2594,
											"end": 2607,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2607,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2594,
											"end": 2607,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2594,
											"end": 2607,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2607,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2594,
											"end": 2607,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2607,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2594,
											"end": 2607,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2607,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2594,
											"end": 2607,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2607,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2614,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2614,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2614,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2614,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2614,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2657,
											"end": 2661,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "E10"
										},
										{
											"begin": 2641,
											"end": 2651,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2652,
											"end": 2653,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2641,
											"end": 2654,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2641,
											"end": 2654,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2641,
											"end": 2654,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2641,
											"end": 2654,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2641,
											"end": 2654,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2641,
											"end": 2654,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2641,
											"end": 2654,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2641,
											"end": 2654,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2641,
											"end": 2654,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2641,
											"end": 2654,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2641,
											"end": 2654,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2641,
											"end": 2654,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2641,
											"end": 2654,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2641,
											"end": 2654,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2641,
											"end": 2654,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2641,
											"end": 2654,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2641,
											"end": 2661,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2641,
											"end": 2661,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2641,
											"end": 2661,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2641,
											"end": 2661,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2641,
											"end": 2661,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2704,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1C20"
										},
										{
											"begin": 2684,
											"end": 2694,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2695,
											"end": 2696,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2684,
											"end": 2697,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2684,
											"end": 2697,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2684,
											"end": 2697,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2684,
											"end": 2697,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2684,
											"end": 2697,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2684,
											"end": 2697,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2684,
											"end": 2697,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2684,
											"end": 2697,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2684,
											"end": 2697,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2684,
											"end": 2697,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2684,
											"end": 2697,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2684,
											"end": 2697,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2684,
											"end": 2697,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2684,
											"end": 2697,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2684,
											"end": 2697,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2684,
											"end": 2697,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2684,
											"end": 2704,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2684,
											"end": 2704,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2684,
											"end": 2704,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2684,
											"end": 2704,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2684,
											"end": 2704,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2744,
											"end": 2749,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "3840"
										},
										{
											"begin": 2728,
											"end": 2738,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2739,
											"end": 2740,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2728,
											"end": 2741,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2728,
											"end": 2741,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2728,
											"end": 2741,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2728,
											"end": 2741,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2728,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2728,
											"end": 2741,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2728,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2728,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2728,
											"end": 2741,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2728,
											"end": 2741,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2728,
											"end": 2741,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2728,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2728,
											"end": 2741,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2728,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2728,
											"end": 2741,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2728,
											"end": 2741,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2728,
											"end": 2749,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2728,
											"end": 2749,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2728,
											"end": 2749,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2728,
											"end": 2749,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2728,
											"end": 2749,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2788,
											"end": 2793,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "7080"
										},
										{
											"begin": 2772,
											"end": 2782,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2784,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2772,
											"end": 2785,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2772,
											"end": 2785,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2772,
											"end": 2785,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2772,
											"end": 2785,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2772,
											"end": 2785,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2772,
											"end": 2785,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2772,
											"end": 2785,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2772,
											"end": 2785,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2772,
											"end": 2785,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2772,
											"end": 2785,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2772,
											"end": 2785,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2772,
											"end": 2785,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2772,
											"end": 2785,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2772,
											"end": 2785,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2772,
											"end": 2785,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2772,
											"end": 2785,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2772,
											"end": 2793,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2772,
											"end": 2793,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2772,
											"end": 2793,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2772,
											"end": 2793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2772,
											"end": 2793,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2832,
											"end": 2837,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "15180"
										},
										{
											"begin": 2816,
											"end": 2826,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2827,
											"end": 2828,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2816,
											"end": 2829,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2816,
											"end": 2829,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2816,
											"end": 2829,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2816,
											"end": 2829,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2816,
											"end": 2829,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2816,
											"end": 2829,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2816,
											"end": 2829,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2816,
											"end": 2829,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2816,
											"end": 2829,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2816,
											"end": 2829,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2816,
											"end": 2829,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2816,
											"end": 2829,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2816,
											"end": 2829,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2816,
											"end": 2829,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2816,
											"end": 2829,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2816,
											"end": 2829,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2816,
											"end": 2837,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2816,
											"end": 2837,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2816,
											"end": 2837,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2816,
											"end": 2837,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2816,
											"end": 2837,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2877,
											"end": 2883,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "93A80"
										},
										{
											"begin": 2861,
											"end": 2871,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2872,
											"end": 2873,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2861,
											"end": 2874,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2861,
											"end": 2874,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2861,
											"end": 2874,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2861,
											"end": 2874,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2861,
											"end": 2874,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2861,
											"end": 2874,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2861,
											"end": 2874,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2861,
											"end": 2874,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2861,
											"end": 2874,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2861,
											"end": 2874,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2861,
											"end": 2874,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2861,
											"end": 2874,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2861,
											"end": 2874,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2861,
											"end": 2874,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2861,
											"end": 2874,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2861,
											"end": 2874,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2861,
											"end": 2883,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2861,
											"end": 2883,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2861,
											"end": 2883,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2861,
											"end": 2883,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2861,
											"end": 2883,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2905,
											"end": 2930,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2933,
											"end": 2943,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2944,
											"end": 2958,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2933,
											"end": 2959,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2933,
											"end": 2959,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2933,
											"end": 2959,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2933,
											"end": 2959,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2933,
											"end": 2959,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2933,
											"end": 2959,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2933,
											"end": 2959,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2933,
											"end": 2959,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2933,
											"end": 2959,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2933,
											"end": 2959,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2933,
											"end": 2959,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2933,
											"end": 2959,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2933,
											"end": 2959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2933,
											"end": 2959,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2933,
											"end": 2959,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2933,
											"end": 2959,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2933,
											"end": 2959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2933,
											"end": 2959,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2933,
											"end": 2959,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2933,
											"end": 2959,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2933,
											"end": 2959,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 2976,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2969,
											"end": 2976,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 3011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "869665E9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 3011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 3011,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 2933,
											"end": 2959,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2933,
											"end": 2959,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2969,
											"end": 2976,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 2976,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 2992,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "869665E9"
										},
										{
											"begin": 2969,
											"end": 2992,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 24,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 2969,
											"end": 3011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2969,
											"end": 3011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2969,
											"end": 3011,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 3011,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 3011,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 3011,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 3011,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 3011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2969,
											"end": 3011,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 3011,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 3011,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 3011,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 3011,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 3011,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 3011,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2969,
											"end": 3011,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 3011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 3011,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 3011,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2969,
											"end": 3011,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 3011,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 3011,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 3011,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 3011,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 3011,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 3011,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 3011,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2969,
											"end": 3011,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 3011,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 3011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 3011,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 3011,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 3011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2969,
											"end": 3011,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 3011,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2969,
											"end": 3011,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 3011,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 3011,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 3011,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 3011,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "CEEEA03D3BC4262E4464E93B48823B6306BBBB1661739B8798146C0BD453CFA4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3068,
											"end": 3085,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3026,
											"end": 3086,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3026,
											"end": 3086,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3026,
											"end": 3086,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 3026,
											"end": 3086,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3026,
											"end": 3086,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4478,
											"end": 4480,
											"name": "PUSH",
											"source": 24,
											"value": "40"
										},
										{
											"begin": 4460,
											"end": 4481,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 4460,
											"end": 4481,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 4460,
											"end": 4481,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 4517,
											"end": 4519,
											"name": "PUSH",
											"source": 24,
											"value": "13"
										},
										{
											"begin": 4497,
											"end": 4515,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 4497,
											"end": 4515,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 4497,
											"end": 4515,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 4490,
											"end": 4520,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "41646A757374696E672074696D656672616D65"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4551,
											"end": 4553,
											"name": "PUSH",
											"source": 24,
											"value": "60"
										},
										{
											"begin": 4536,
											"end": 4554,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 4536,
											"end": 4554,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 4529,
											"end": 4578,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 4645,
											"end": 4649,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 4630,
											"end": 4650,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 4630,
											"end": 4650,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 4623,
											"end": 4659,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 4623,
											"end": 4659,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 4623,
											"end": 4659,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 4623,
											"end": 4659,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 4610,
											"end": 4613,
											"name": "PUSH",
											"source": 24,
											"value": "80"
										},
										{
											"begin": 4595,
											"end": 4614,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 4595,
											"end": 4614,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 4248,
											"end": 4665,
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 3026,
											"end": 3086,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 3026,
											"end": 3086,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3026,
											"end": 3086,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3026,
											"end": 3086,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3026,
											"end": 3086,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3026,
											"end": 3086,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3026,
											"end": 3086,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3026,
											"end": 3086,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3026,
											"end": 3086,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 2481,
											"end": 3093,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2481,
											"end": 3093,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2409,
											"end": 3093,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2409,
											"end": 3093,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1523,
											"end": 1683,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1523,
											"end": 1683,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 508,
											"end": 513,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 508,
											"end": 513,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 494,
											"end": 504,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 494,
											"end": 513,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 486,
											"end": 531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 486,
											"end": 531,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 486,
											"end": 531,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 486,
											"end": 531,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 486,
											"end": 531,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 486,
											"end": 531,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 486,
											"end": 531,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 486,
											"end": 531,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 486,
											"end": 531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 486,
											"end": 531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 486,
											"end": 531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 486,
											"end": 531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 486,
											"end": 531,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 486,
											"end": 531,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1580,
											"end": 1602,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1580,
											"end": 1602,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1580,
											"end": 1602,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "7541B06C3DEC9FDC83C6C723DC48E42D9B1632A4AB380F150EB91C2E6FC310B9"
										},
										{
											"begin": 1580,
											"end": 1602,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1580,
											"end": 1602,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1580,
											"end": 1602,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1580,
											"end": 1602,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1619,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1612,
											"end": 1619,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1619,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1637,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1612,
											"end": 1637,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1637,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9D8EF1E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1612,
											"end": 1637,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1637,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1637,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1637,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1612,
											"end": 1619,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1619,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1619,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1619,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1635,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "9D8EF1E1"
										},
										{
											"begin": 1612,
											"end": 1635,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1637,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1612,
											"end": 1637,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1637,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1637,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1637,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1637,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1637,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1637,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1637,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1637,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1619,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1619,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1637,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1637,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1637,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1637,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1637,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1637,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1612,
											"end": 1637,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1637,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1612,
											"end": 1637,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1637,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1637,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1612,
											"end": 1637,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1637,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1637,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1637,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1637,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1637,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1637,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1637,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1612,
											"end": 1637,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1637,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1637,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1612,
											"end": 1637,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1637,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1637,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1637,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1612,
											"end": 1637,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1637,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1612,
											"end": 1637,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1652,
											"end": 1676,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1652,
											"end": 1676,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1652,
											"end": 1676,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "9DC90CE348FED0B93DDBC45640BA9E0AB32F42E205A3C0B452FB17474B96E1C0"
										},
										{
											"begin": 1652,
											"end": 1676,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1652,
											"end": 1676,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1652,
											"end": 1676,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1652,
											"end": 1676,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 1523,
											"end": 1683,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 830,
											"end": 1517,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 830,
											"end": 1517,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 508,
											"end": 513,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 508,
											"end": 513,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 494,
											"end": 504,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 494,
											"end": 513,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 486,
											"end": 531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 486,
											"end": 531,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 486,
											"end": 531,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 486,
											"end": 531,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 486,
											"end": 531,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 486,
											"end": 531,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 486,
											"end": 531,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 486,
											"end": 531,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 486,
											"end": 531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 486,
											"end": 531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 486,
											"end": 531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 486,
											"end": 531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 486,
											"end": 531,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 486,
											"end": 531,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 911,
											"end": 924,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 911,
											"end": 924,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 892,
											"end": 907,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 892,
											"end": 924,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 892,
											"end": 924,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 884,
											"end": 965,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 884,
											"end": 965,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 884,
											"end": 965,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 884,
											"end": 965,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 884,
											"end": 965,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 884,
											"end": 965,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4872,
											"end": 4874,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 884,
											"end": 965,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 884,
											"end": 965,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 884,
											"end": 965,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4854,
											"end": 4875,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 4911,
											"end": 4913,
											"name": "PUSH",
											"source": 24,
											"value": "24"
										},
										{
											"begin": 4891,
											"end": 4909,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 4891,
											"end": 4909,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 4891,
											"end": 4909,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 4884,
											"end": 4914,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 4950,
											"end": 4984,
											"name": "PUSH",
											"source": 24,
											"value": "49742773206E6F742074696D6520666F7220746865206E65787420636865636B"
										},
										{
											"begin": 4930,
											"end": 4948,
											"name": "PUSH",
											"source": 24,
											"value": "44"
										},
										{
											"begin": 4930,
											"end": 4948,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 4930,
											"end": 4948,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 4923,
											"end": 4985,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "81E595D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5001,
											"end": 5019,
											"name": "PUSH",
											"source": 24,
											"value": "64"
										},
										{
											"begin": 5001,
											"end": 5019,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 5001,
											"end": 5019,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 4994,
											"end": 5028,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 5045,
											"end": 5064,
											"name": "PUSH",
											"source": 24,
											"value": "84"
										},
										{
											"begin": 5045,
											"end": 5064,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 884,
											"end": 965,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 4670,
											"end": 5070,
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 884,
											"end": 965,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 884,
											"end": 965,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 984,
											"end": 997,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1000,
											"end": 1007,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1000,
											"end": 1007,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1000,
											"end": 1007,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1000,
											"end": 1007,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1000,
											"end": 1007,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1000,
											"end": 1007,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1000,
											"end": 1007,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1000,
											"end": 1007,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1000,
											"end": 1007,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1000,
											"end": 1007,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1000,
											"end": 1018,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1000,
											"end": 1018,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8FC3047D"
										},
										{
											"begin": 1000,
											"end": 1020,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1000,
											"end": 1020,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1000,
											"end": 1020,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1000,
											"end": 1020,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1000,
											"end": 1020,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1000,
											"end": 1020,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1000,
											"end": 1020,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1000,
											"end": 1020,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1000,
											"end": 1020,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1000,
											"end": 1020,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1000,
											"end": 1020,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1000,
											"end": 1020,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1000,
											"end": 1020,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1000,
											"end": 1020,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1000,
											"end": 1020,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1000,
											"end": 1020,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1000,
											"end": 1020,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1000,
											"end": 1020,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1000,
											"end": 1020,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1000,
											"end": 1020,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 1000,
											"end": 1020,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 1000,
											"end": 1020,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1000,
											"end": 1020,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1000,
											"end": 1020,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1000,
											"end": 1020,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1000,
											"end": 1020,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1000,
											"end": 1020,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1000,
											"end": 1020,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1000,
											"end": 1020,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1000,
											"end": 1020,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1000,
											"end": 1020,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1000,
											"end": 1020,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1000,
											"end": 1020,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1000,
											"end": 1020,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1000,
											"end": 1020,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1000,
											"end": 1020,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1000,
											"end": 1020,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1000,
											"end": 1020,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1000,
											"end": 1020,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1000,
											"end": 1020,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1000,
											"end": 1020,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1000,
											"end": 1020,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1000,
											"end": 1020,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1000,
											"end": 1020,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1000,
											"end": 1020,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1000,
											"end": 1020,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1000,
											"end": 1020,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1000,
											"end": 1020,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1000,
											"end": 1020,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1000,
											"end": 1020,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1000,
											"end": 1020,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1000,
											"end": 1020,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1000,
											"end": 1020,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1000,
											"end": 1020,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1000,
											"end": 1020,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1000,
											"end": 1020,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1000,
											"end": 1020,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1000,
											"end": 1020,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 1000,
											"end": 1020,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1000,
											"end": 1020,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1000,
											"end": 1020,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 1000,
											"end": 1020,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1000,
											"end": 1020,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 1000,
											"end": 1020,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 984,
											"end": 1020,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 984,
											"end": 1020,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1035,
											"end": 1070,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4896F6F06B46D0EBC6BD420E59B05A5E5486F3A5A2E306E20DEF08C8F284F374"
										},
										{
											"begin": 1054,
											"end": 1069,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 1035,
											"end": 1070,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1035,
											"end": 1070,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1035,
											"end": 1070,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1035,
											"end": 1070,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 133,
											"end": 151,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 1035,
											"end": 1070,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1035,
											"end": 1070,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1035,
											"end": 1070,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1035,
											"end": 1070,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1035,
											"end": 1070,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1035,
											"end": 1070,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1035,
											"end": 1070,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1035,
											"end": 1070,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1035,
											"end": 1070,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1170,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "41A"
										},
										{
											"begin": 1158,
											"end": 1163,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 1170,
											"modifierDepth": 1,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1154,
											"end": 1453,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1154,
											"end": 1453,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1154,
											"end": 1453,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1207,
											"end": 1214,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 1214,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1207,
											"end": 1241,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1207,
											"end": 1241,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "26C403ED"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1207,
											"end": 1241,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1207,
											"end": 1241,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1207,
											"end": 1214,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1207,
											"end": 1214,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1207,
											"end": 1214,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1207,
											"end": 1214,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1207,
											"end": 1228,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "26C403ED"
										},
										{
											"begin": 1207,
											"end": 1228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1207,
											"end": 1241,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1207,
											"end": 1241,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1237,
											"end": 1240,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1237,
											"end": 1240,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1207,
											"end": 1241,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1207,
											"end": 1241,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5504,
											"end": 5506,
											"name": "PUSH",
											"source": 24,
											"value": "40"
										},
										{
											"begin": 5486,
											"end": 5507,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 5486,
											"end": 5507,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 5486,
											"end": 5507,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 5543,
											"end": 5544,
											"name": "PUSH",
											"source": 24,
											"value": "4"
										},
										{
											"begin": 5523,
											"end": 5541,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 5523,
											"end": 5541,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 5523,
											"end": 5541,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 5516,
											"end": 5545,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1CD95B1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5576,
											"end": 5578,
											"name": "PUSH",
											"source": 24,
											"value": "60"
										},
										{
											"begin": 5561,
											"end": 5579,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 5561,
											"end": 5579,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 5554,
											"end": 5588,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 5655,
											"end": 5659,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 5640,
											"end": 5660,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 5640,
											"end": 5660,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 5633,
											"end": 5669,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 5633,
											"end": 5669,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 5633,
											"end": 5669,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 5633,
											"end": 5669,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 5620,
											"end": 5623,
											"name": "PUSH",
											"source": 24,
											"value": "80"
										},
										{
											"begin": 5605,
											"end": 5624,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 5605,
											"end": 5624,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 5264,
											"end": 5675,
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 1207,
											"end": 1241,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1207,
											"end": 1241,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1207,
											"end": 1241,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 1241,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1207,
											"end": 1241,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1207,
											"end": 1241,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1207,
											"end": 1241,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1207,
											"end": 1241,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1207,
											"end": 1241,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1207,
											"end": 1241,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 1241,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 1207,
											"end": 1241,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1207,
											"end": 1241,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 1207,
											"end": 1241,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1207,
											"end": 1241,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1207,
											"end": 1241,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1207,
											"end": 1241,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1207,
											"end": 1241,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1207,
											"end": 1241,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 1241,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1207,
											"end": 1241,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1207,
											"end": 1241,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1207,
											"end": 1241,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1207,
											"end": 1241,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1207,
											"end": 1241,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 1207,
											"end": 1241,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 1207,
											"end": 1241,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1207,
											"end": 1241,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1207,
											"end": 1241,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1207,
											"end": 1241,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 1207,
											"end": 1241,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1207,
											"end": 1241,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1207,
											"end": 1241,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 1241,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1207,
											"end": 1241,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1207,
											"end": 1241,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1207,
											"end": 1241,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 1241,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1207,
											"end": 1241,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 1207,
											"end": 1241,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1260,
											"end": 1291,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1260,
											"end": 1291,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1260,
											"end": 1291,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5486,
											"end": 5507,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 5486,
											"end": 5507,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 5486,
											"end": 5507,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 5543,
											"end": 5544,
											"name": "PUSH",
											"source": 24,
											"value": "4"
										},
										{
											"begin": 5523,
											"end": 5541,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 5523,
											"end": 5541,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 5523,
											"end": 5541,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 5516,
											"end": 5545,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1CD95B1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5576,
											"end": 5578,
											"name": "PUSH",
											"source": 24,
											"value": "60"
										},
										{
											"begin": 5561,
											"end": 5579,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 5561,
											"end": 5579,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 5554,
											"end": 5588,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 1287,
											"end": 1290,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 5655,
											"end": 5659,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 5640,
											"end": 5660,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 5640,
											"end": 5660,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 5633,
											"end": 5669,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 1260,
											"end": 1291,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1260,
											"end": 1291,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "CEEEA03D3BC4262E4464E93B48823B6306BBBB1661739B8798146C0BD453CFA4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1260,
											"end": 1291,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1260,
											"end": 1291,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1260,
											"end": 1291,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1260,
											"end": 1291,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1260,
											"end": 1291,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5620,
											"end": 5623,
											"name": "PUSH",
											"source": 24,
											"value": "80"
										},
										{
											"begin": 1260,
											"end": 1291,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1260,
											"end": 1291,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1260,
											"end": 1291,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 1154,
											"end": 1453,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 1154,
											"end": 1453,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1154,
											"end": 1453,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1154,
											"end": 1453,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1320,
											"end": 1323,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "3B6"
										},
										{
											"begin": 1312,
											"end": 1317,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1312,
											"end": 1323,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1308,
											"end": 1453,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1308,
											"end": 1453,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 1308,
											"end": 1453,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1367,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1360,
											"end": 1367,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1393,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1360,
											"end": 1393,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1393,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "26C403ED"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1360,
											"end": 1393,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1393,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1393,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1360,
											"end": 1393,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1393,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5902,
											"end": 5923,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 5902,
											"end": 5923,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 5902,
											"end": 5923,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 5902,
											"end": 5923,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 5959,
											"end": 5960,
											"name": "PUSH",
											"source": 24,
											"value": "3"
										},
										{
											"begin": 5939,
											"end": 5957,
											"name": "PUSH",
											"source": 24,
											"value": "44"
										},
										{
											"begin": 5939,
											"end": 5957,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 5939,
											"end": 5957,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 5932,
											"end": 5961,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "627579"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1389,
											"end": 1392,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 5977,
											"end": 5995,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 5977,
											"end": 5995,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 5977,
											"end": 5995,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 5970,
											"end": 6003,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 5970,
											"end": 6003,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 5970,
											"end": 6003,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 5970,
											"end": 6003,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 6055,
											"end": 6075,
											"name": "PUSH",
											"source": 24,
											"value": "24"
										},
										{
											"begin": 6055,
											"end": 6075,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 6055,
											"end": 6075,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 6048,
											"end": 6084,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1360,
											"end": 1367,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1367,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1367,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1367,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1381,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "26C403ED"
										},
										{
											"begin": 1360,
											"end": 1381,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6020,
											"end": 6039,
											"name": "PUSH",
											"source": 24,
											"value": "84"
										},
										{
											"begin": 6020,
											"end": 6039,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 1360,
											"end": 1393,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1360,
											"end": 1393,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1360,
											"end": 1393,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1393,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1393,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1393,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1393,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1393,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1360,
											"end": 1393,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1393,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1393,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1393,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1393,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1393,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1393,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 1360,
											"end": 1393,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1393,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1360,
											"end": 1393,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1393,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1393,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 1360,
											"end": 1393,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1393,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1393,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1393,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1393,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1393,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1393,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1393,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 1360,
											"end": 1393,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1393,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1393,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1360,
											"end": 1393,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1393,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1393,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1393,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1360,
											"end": 1393,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1393,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 1360,
											"end": 1393,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1412,
											"end": 1442,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1442,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1412,
											"end": 1442,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5902,
											"end": 5923,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 5902,
											"end": 5923,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 5902,
											"end": 5923,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 5959,
											"end": 5960,
											"name": "PUSH",
											"source": 24,
											"value": "3"
										},
										{
											"begin": 5939,
											"end": 5957,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 5939,
											"end": 5957,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 5939,
											"end": 5957,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 5932,
											"end": 5961,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "627579"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5992,
											"end": 5994,
											"name": "PUSH",
											"source": 24,
											"value": "60"
										},
										{
											"begin": 5977,
											"end": 5995,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 5977,
											"end": 5995,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 5970,
											"end": 6003,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 1438,
											"end": 1441,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 6070,
											"end": 6074,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 6055,
											"end": 6075,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 6055,
											"end": 6075,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 6048,
											"end": 6084,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 1412,
											"end": 1442,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1412,
											"end": 1442,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "CEEEA03D3BC4262E4464E93B48823B6306BBBB1661739B8798146C0BD453CFA4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1412,
											"end": 1442,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1412,
											"end": 1442,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1412,
											"end": 1442,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1412,
											"end": 1442,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1412,
											"end": 1442,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6035,
											"end": 6038,
											"name": "PUSH",
											"source": 24,
											"value": "80"
										},
										{
											"begin": 1412,
											"end": 1442,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1412,
											"end": 1442,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1412,
											"end": 1442,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 1308,
											"end": 1453,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 1308,
											"end": 1453,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1497,
											"end": 1510,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1497,
											"end": 1510,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1479,
											"end": 1510,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1479,
											"end": 1510,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1479,
											"end": 1494,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 1479,
											"end": 1510,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1479,
											"end": 1510,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1479,
											"end": 1510,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1479,
											"end": 1510,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1463,
											"end": 1476,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1463,
											"end": 1510,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 830,
											"end": 1517,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1951,
											"end": 2403,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1951,
											"end": 2403,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 508,
											"end": 513,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 508,
											"end": 513,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 494,
											"end": 504,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 494,
											"end": 513,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 486,
											"end": 531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 486,
											"end": 531,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 486,
											"end": 531,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 486,
											"end": 531,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 486,
											"end": 531,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 486,
											"end": 531,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 486,
											"end": 531,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 486,
											"end": 531,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 486,
											"end": 531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 486,
											"end": 531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 486,
											"end": 531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 486,
											"end": 531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 486,
											"end": 531,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 486,
											"end": 531,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2074,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2088,
											"end": 2100,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2118,
											"end": 2397,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 2118,
											"end": 2397,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2138,
											"end": 2139,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2125,
											"end": 2135,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2139,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2151,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2151,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2151,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 2125,
											"end": 2151,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2151,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2144,
											"end": 2151,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2151,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2151,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 2125,
											"end": 2151,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2118,
											"end": 2397,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2118,
											"end": 2397,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 2118,
											"end": 2397,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2171,
											"end": 2178,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2171,
											"end": 2178,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2171,
											"end": 2211,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2171,
											"end": 2211,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "26C403ED"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2171,
											"end": 2211,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2171,
											"end": 2211,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2171,
											"end": 2178,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2171,
											"end": 2178,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2171,
											"end": 2178,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2171,
											"end": 2178,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2171,
											"end": 2192,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "26C403ED"
										},
										{
											"begin": 2171,
											"end": 2192,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2171,
											"end": 2211,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 2171,
											"end": 2211,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2193,
											"end": 2202,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 2193,
											"end": 2202,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2210,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2210,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2171,
											"end": 2211,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2171,
											"end": 2211,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2171,
											"end": 2211,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 2171,
											"end": 2211,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2171,
											"end": 2211,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 2171,
											"end": 2211,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2171,
											"end": 2211,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2171,
											"end": 2211,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2171,
											"end": 2211,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2171,
											"end": 2211,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2171,
											"end": 2211,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2171,
											"end": 2211,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2171,
											"end": 2211,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2171,
											"end": 2211,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2171,
											"end": 2211,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 2171,
											"end": 2211,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2171,
											"end": 2211,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 2171,
											"end": 2211,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2171,
											"end": 2211,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2171,
											"end": 2211,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2171,
											"end": 2211,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 2171,
											"end": 2211,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2171,
											"end": 2211,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2171,
											"end": 2211,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2171,
											"end": 2211,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2171,
											"end": 2211,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 2171,
											"end": 2211,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2171,
											"end": 2211,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2171,
											"end": 2211,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 2171,
											"end": 2211,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 2171,
											"end": 2211,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2171,
											"end": 2211,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2171,
											"end": 2211,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2171,
											"end": 2211,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2171,
											"end": 2211,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2171,
											"end": 2211,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2171,
											"end": 2211,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 2171,
											"end": 2211,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2171,
											"end": 2211,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2171,
											"end": 2211,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2171,
											"end": 2211,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 2171,
											"end": 2211,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2167,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 2167,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2344,
											"end": 2372,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 2361,
											"end": 2371,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2344,
											"end": 2360,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 2344,
											"end": 2372,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2344,
											"end": 2372,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 2344,
											"end": 2372,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2118,
											"end": 2397,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 2118,
											"end": 2397,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2167,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 2167,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2240,
											"end": 2244,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2230,
											"end": 2244,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2230,
											"end": 2244,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "CEEEA03D3BC4262E4464E93B48823B6306BBBB1661739B8798146C0BD453CFA4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2286,
											"end": 2295,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2297,
											"end": 2303,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2267,
											"end": 2304,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2267,
											"end": 2304,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2267,
											"end": 2304,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 2267,
											"end": 2304,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2267,
											"end": 2304,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2267,
											"end": 2304,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2267,
											"end": 2304,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 2267,
											"end": 2304,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2267,
											"end": 2304,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 2267,
											"end": 2304,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2267,
											"end": 2304,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2267,
											"end": 2304,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2267,
											"end": 2304,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2267,
											"end": 2304,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2267,
											"end": 2304,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2267,
											"end": 2304,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2267,
											"end": 2304,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 2118,
											"end": 2397,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 2118,
											"end": 2397,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2118,
											"end": 2397,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 2118,
											"end": 2397,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2046,
											"end": 2403,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2046,
											"end": 2403,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1951,
											"end": 2403,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1951,
											"end": 2403,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1951,
											"end": 2403,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1689,
											"end": 1945,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 1689,
											"end": 1945,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1772,
											"end": 1773,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1758,
											"end": 1768,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1758,
											"end": 1773,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1754,
											"end": 1939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 1754,
											"end": 1939,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1789,
											"end": 1796,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1789,
											"end": 1796,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1789,
											"end": 1796,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1789,
											"end": 1813,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1789,
											"end": 1813,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1789,
											"end": 1813,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "17700F01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1789,
											"end": 1813,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1789,
											"end": 1813,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1789,
											"end": 1813,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1789,
											"end": 1813,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1789,
											"end": 1796,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1789,
											"end": 1796,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1789,
											"end": 1796,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1789,
											"end": 1796,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1789,
											"end": 1811,
											"name": "PUSH",
											"source": 0,
											"value": "17700F01"
										},
										{
											"begin": 1789,
											"end": 1811,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1789,
											"end": 1813,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1789,
											"end": 1813,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1789,
											"end": 1813,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1789,
											"end": 1813,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1789,
											"end": 1813,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1789,
											"end": 1813,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1789,
											"end": 1813,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1789,
											"end": 1813,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1789,
											"end": 1813,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1789,
											"end": 1813,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1789,
											"end": 1796,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1789,
											"end": 1796,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 1789,
											"end": 1813,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1789,
											"end": 1813,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 1789,
											"end": 1813,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1789,
											"end": 1813,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1789,
											"end": 1813,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1789,
											"end": 1813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 1789,
											"end": 1813,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1789,
											"end": 1813,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1789,
											"end": 1813,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1789,
											"end": 1813,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1789,
											"end": 1813,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 1789,
											"end": 1813,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1789,
											"end": 1813,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1789,
											"end": 1813,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 1789,
											"end": 1813,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 1789,
											"end": 1813,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1789,
											"end": 1813,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1789,
											"end": 1813,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1789,
											"end": 1813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1789,
											"end": 1813,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1789,
											"end": 1813,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1789,
											"end": 1813,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1789,
											"end": 1813,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1789,
											"end": 1813,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1789,
											"end": 1813,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1789,
											"end": 1813,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1789,
											"end": 1813,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1789,
											"end": 1813,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1789,
											"end": 1813,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1832,
											"end": 1885,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1832,
											"end": 1885,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1832,
											"end": 1885,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6741,
											"end": 6762,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 6741,
											"end": 6762,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 6741,
											"end": 6762,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 6798,
											"end": 6800,
											"name": "PUSH",
											"source": 24,
											"value": "1C"
										},
										{
											"begin": 6778,
											"end": 6796,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 6778,
											"end": 6796,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 6778,
											"end": 6796,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 6771,
											"end": 6801,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 6837,
											"end": 6867,
											"name": "PUSH",
											"source": 24,
											"value": "53746F702064756520746F2070657273697374656E74206572726F7200000000"
										},
										{
											"begin": 6832,
											"end": 6834,
											"name": "PUSH",
											"source": 24,
											"value": "60"
										},
										{
											"begin": 6817,
											"end": 6835,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 6817,
											"end": 6835,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 6810,
											"end": 6868,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6935,
											"end": 6939,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 6920,
											"end": 6940,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 6920,
											"end": 6940,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 6913,
											"end": 6949,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 1832,
											"end": 1885,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1832,
											"end": 1885,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "CEEEA03D3BC4262E4464E93B48823B6306BBBB1661739B8798146C0BD453CFA4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1832,
											"end": 1885,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1832,
											"end": 1885,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1832,
											"end": 1885,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1832,
											"end": 1885,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1832,
											"end": 1885,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6903,
											"name": "PUSH",
											"source": 24,
											"value": "80"
										},
										{
											"begin": 1832,
											"end": 1885,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1832,
											"end": 1885,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1832,
											"end": 1885,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 3136,
											"end": 3187,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3095,
											"end": 3190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1754,
											"end": 1939,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 1754,
											"end": 1939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1928,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1928,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1916,
											"end": 1928,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1928,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 1916,
											"end": 1928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 196,
											"end": 323,
											"name": "tag",
											"source": 24,
											"value": "82"
										},
										{
											"begin": 196,
											"end": 323,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 257,
											"end": 267,
											"name": "PUSH",
											"source": 24,
											"value": "4E487B71"
										},
										{
											"begin": 252,
											"end": 255,
											"name": "PUSH",
											"source": 24,
											"value": "E0"
										},
										{
											"begin": 248,
											"end": 268,
											"name": "SHL",
											"source": 24
										},
										{
											"begin": 245,
											"end": 246,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 238,
											"end": 269,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 288,
											"end": 292,
											"name": "PUSH",
											"source": 24,
											"value": "41"
										},
										{
											"begin": 285,
											"end": 286,
											"name": "PUSH",
											"source": 24,
											"value": "4"
										},
										{
											"begin": 278,
											"end": 293,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 312,
											"end": 316,
											"name": "PUSH",
											"source": 24,
											"value": "24"
										},
										{
											"begin": 309,
											"end": 310,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 302,
											"end": 317,
											"name": "REVERT",
											"source": 24
										},
										{
											"begin": 328,
											"end": 1047,
											"name": "tag",
											"source": 24,
											"value": "174"
										},
										{
											"begin": 328,
											"end": 1047,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 371,
											"end": 376,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 424,
											"end": 427,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 417,
											"end": 421,
											"name": "PUSH",
											"source": 24,
											"value": "1F"
										},
										{
											"begin": 409,
											"end": 415,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 405,
											"end": 422,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 401,
											"end": 428,
											"name": "SLT",
											"source": 24
										},
										{
											"begin": 391,
											"end": 446,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "181"
										},
										{
											"begin": 391,
											"end": 446,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 442,
											"end": 443,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 439,
											"end": 440,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 432,
											"end": 444,
											"name": "REVERT",
											"source": 24
										},
										{
											"begin": 391,
											"end": 446,
											"name": "tag",
											"source": 24,
											"value": "181"
										},
										{
											"begin": 391,
											"end": 446,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 478,
											"end": 484,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 465,
											"end": 485,
											"name": "CALLDATALOAD",
											"source": 24
										},
										{
											"begin": 504,
											"end": 522,
											"name": "PUSH",
											"source": 24,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 541,
											"end": 543,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 537,
											"end": 539,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 534,
											"end": 544,
											"name": "GT",
											"source": 24
										},
										{
											"begin": 531,
											"end": 567,
											"name": "ISZERO",
											"source": 24
										},
										{
											"begin": 531,
											"end": 567,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "183"
										},
										{
											"begin": 531,
											"end": 567,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 547,
											"end": 565,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "183"
										},
										{
											"begin": 547,
											"end": 565,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "82"
										},
										{
											"begin": 547,
											"end": 565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 547,
											"end": 565,
											"name": "tag",
											"source": 24,
											"value": "183"
										},
										{
											"begin": 547,
											"end": 565,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 622,
											"end": 624,
											"name": "PUSH",
											"source": 24,
											"value": "40"
										},
										{
											"begin": 616,
											"end": 625,
											"name": "MLOAD",
											"source": 24
										},
										{
											"begin": 590,
											"end": 592,
											"name": "PUSH",
											"source": 24,
											"value": "1F"
										},
										{
											"begin": 676,
											"end": 689,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 676,
											"end": 689,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 672,
											"end": 694,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 672,
											"end": 694,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 672,
											"end": 694,
											"name": "AND",
											"source": 24
										},
										{
											"begin": 696,
											"end": 698,
											"name": "PUSH",
											"source": 24,
											"value": "3F"
										},
										{
											"begin": 668,
											"end": 699,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 664,
											"end": 704,
											"name": "AND",
											"source": 24
										},
										{
											"begin": 652,
											"end": 705,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 652,
											"end": 705,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 652,
											"end": 705,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 720,
											"end": 738,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 720,
											"end": 738,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 720,
											"end": 738,
											"name": "GT",
											"source": 24
										},
										{
											"begin": 740,
											"end": 762,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 740,
											"end": 762,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 740,
											"end": 762,
											"name": "LT",
											"source": 24
										},
										{
											"begin": 717,
											"end": 763,
											"name": "OR",
											"source": 24
										},
										{
											"begin": 714,
											"end": 786,
											"name": "ISZERO",
											"source": 24
										},
										{
											"begin": 714,
											"end": 786,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "185"
										},
										{
											"begin": 714,
											"end": 786,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 766,
											"end": 784,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "185"
										},
										{
											"begin": 766,
											"end": 784,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "82"
										},
										{
											"begin": 766,
											"end": 784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 766,
											"end": 784,
											"name": "tag",
											"source": 24,
											"value": "185"
										},
										{
											"begin": 766,
											"end": 784,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 806,
											"end": 816,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 802,
											"end": 804,
											"name": "PUSH",
											"source": 24,
											"value": "40"
										},
										{
											"begin": 795,
											"end": 817,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 841,
											"end": 843,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 833,
											"end": 839,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 826,
											"end": 844,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 887,
											"end": 890,
											"name": "DUP7",
											"source": 24
										},
										{
											"begin": 880,
											"end": 884,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 875,
											"end": 877,
											"name": "DUP6",
											"source": 24
										},
										{
											"begin": 867,
											"end": 873,
											"name": "DUP9",
											"source": 24
										},
										{
											"begin": 863,
											"end": 878,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 859,
											"end": 885,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 856,
											"end": 891,
											"name": "GT",
											"source": 24
										},
										{
											"begin": 853,
											"end": 908,
											"name": "ISZERO",
											"source": 24
										},
										{
											"begin": 853,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "186"
										},
										{
											"begin": 853,
											"end": 908,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 904,
											"end": 905,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 901,
											"end": 902,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 894,
											"end": 906,
											"name": "REVERT",
											"source": 24
										},
										{
											"begin": 853,
											"end": 908,
											"name": "tag",
											"source": 24,
											"value": "186"
										},
										{
											"begin": 853,
											"end": 908,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 968,
											"end": 970,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 961,
											"end": 965,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 953,
											"end": 959,
											"name": "DUP8",
											"source": 24
										},
										{
											"begin": 949,
											"end": 966,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 942,
											"end": 946,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 934,
											"end": 940,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 930,
											"end": 947,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 917,
											"end": 971,
											"name": "CALLDATACOPY",
											"source": 24
										},
										{
											"begin": 1015,
											"end": 1016,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 1008,
											"end": 1012,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 1003,
											"end": 1005,
											"name": "DUP6",
											"source": 24
										},
										{
											"begin": 995,
											"end": 1001,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 991,
											"end": 1006,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 987,
											"end": 1013,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 980,
											"end": 1017,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 1035,
											"end": 1041,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 1026,
											"end": 1041,
											"name": "SWAP5",
											"source": 24
										},
										{
											"begin": 1026,
											"end": 1041,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 1026,
											"end": 1041,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 1026,
											"end": 1041,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 1026,
											"end": 1041,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 1026,
											"end": 1041,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 328,
											"end": 1047,
											"name": "SWAP3",
											"source": 24
										},
										{
											"begin": 328,
											"end": 1047,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 328,
											"end": 1047,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 328,
											"end": 1047,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 328,
											"end": 1047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 1052,
											"end": 1442,
											"name": "tag",
											"source": 24,
											"value": "23"
										},
										{
											"begin": 1052,
											"end": 1442,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 1130,
											"end": 1136,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 1138,
											"end": 1144,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 1191,
											"end": 1193,
											"name": "PUSH",
											"source": 24,
											"value": "40"
										},
										{
											"begin": 1179,
											"end": 1188,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 1170,
											"end": 1177,
											"name": "DUP6",
											"source": 24
										},
										{
											"begin": 1166,
											"end": 1189,
											"name": "SUB",
											"source": 24
										},
										{
											"begin": 1162,
											"end": 1194,
											"name": "SLT",
											"source": 24
										},
										{
											"begin": 1159,
											"end": 1211,
											"name": "ISZERO",
											"source": 24
										},
										{
											"begin": 1159,
											"end": 1211,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "188"
										},
										{
											"begin": 1159,
											"end": 1211,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 1207,
											"end": 1208,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 1204,
											"end": 1205,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 1197,
											"end": 1209,
											"name": "REVERT",
											"source": 24
										},
										{
											"begin": 1159,
											"end": 1211,
											"name": "tag",
											"source": 24,
											"value": "188"
										},
										{
											"begin": 1159,
											"end": 1211,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 1243,
											"end": 1252,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 1230,
											"end": 1253,
											"name": "CALLDATALOAD",
											"source": 24
										},
										{
											"begin": 1220,
											"end": 1253,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 1220,
											"end": 1253,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 1304,
											"end": 1306,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 1293,
											"end": 1302,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 1289,
											"end": 1307,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 1276,
											"end": 1308,
											"name": "CALLDATALOAD",
											"source": 24
										},
										{
											"begin": 1331,
											"end": 1349,
											"name": "PUSH",
											"source": 24,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1323,
											"end": 1329,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 1320,
											"end": 1350,
											"name": "GT",
											"source": 24
										},
										{
											"begin": 1317,
											"end": 1367,
											"name": "ISZERO",
											"source": 24
										},
										{
											"begin": 1317,
											"end": 1367,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "189"
										},
										{
											"begin": 1317,
											"end": 1367,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 1363,
											"end": 1364,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 1360,
											"end": 1361,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 1353,
											"end": 1365,
											"name": "REVERT",
											"source": 24
										},
										{
											"begin": 1317,
											"end": 1367,
											"name": "tag",
											"source": 24,
											"value": "189"
										},
										{
											"begin": 1317,
											"end": 1367,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 1386,
											"end": 1436,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "190"
										},
										{
											"begin": 1428,
											"end": 1435,
											"name": "DUP6",
											"source": 24
										},
										{
											"begin": 1419,
											"end": 1425,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 1408,
											"end": 1417,
											"name": "DUP7",
											"source": 24
										},
										{
											"begin": 1404,
											"end": 1426,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 1386,
											"end": 1436,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "174"
										},
										{
											"begin": 1386,
											"end": 1436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 1386,
											"end": 1436,
											"name": "tag",
											"source": 24,
											"value": "190"
										},
										{
											"begin": 1386,
											"end": 1436,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 1376,
											"end": 1436,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 1376,
											"end": 1436,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 1376,
											"end": 1436,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 1052,
											"end": 1442,
											"name": "SWAP3",
											"source": 24
										},
										{
											"begin": 1052,
											"end": 1442,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 1052,
											"end": 1442,
											"name": "SWAP3",
											"source": 24
										},
										{
											"begin": 1052,
											"end": 1442,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 1052,
											"end": 1442,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 1052,
											"end": 1442,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 1447,
											"end": 1627,
											"name": "tag",
											"source": 24,
											"value": "27"
										},
										{
											"begin": 1447,
											"end": 1627,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 1506,
											"end": 1512,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 1559,
											"end": 1561,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 1547,
											"end": 1556,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 1538,
											"end": 1545,
											"name": "DUP5",
											"source": 24
										},
										{
											"begin": 1534,
											"end": 1557,
											"name": "SUB",
											"source": 24
										},
										{
											"begin": 1530,
											"end": 1562,
											"name": "SLT",
											"source": 24
										},
										{
											"begin": 1527,
											"end": 1579,
											"name": "ISZERO",
											"source": 24
										},
										{
											"begin": 1527,
											"end": 1579,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "192"
										},
										{
											"begin": 1527,
											"end": 1579,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 1575,
											"end": 1576,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 1572,
											"end": 1573,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 1565,
											"end": 1577,
											"name": "REVERT",
											"source": 24
										},
										{
											"begin": 1527,
											"end": 1579,
											"name": "tag",
											"source": 24,
											"value": "192"
										},
										{
											"begin": 1527,
											"end": 1579,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1598,
											"end": 1621,
											"name": "CALLDATALOAD",
											"source": 24
										},
										{
											"begin": 1598,
											"end": 1621,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 1447,
											"end": 1627,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1447,
											"end": 1627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 2072,
											"end": 2462,
											"name": "tag",
											"source": 24,
											"value": "49"
										},
										{
											"begin": 2072,
											"end": 2462,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 2150,
											"end": 2156,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 2158,
											"end": 2164,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 2211,
											"end": 2213,
											"name": "PUSH",
											"source": 24,
											"value": "40"
										},
										{
											"begin": 2199,
											"end": 2208,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 2190,
											"end": 2197,
											"name": "DUP6",
											"source": 24
										},
										{
											"begin": 2186,
											"end": 2209,
											"name": "SUB",
											"source": 24
										},
										{
											"begin": 2182,
											"end": 2214,
											"name": "SLT",
											"source": 24
										},
										{
											"begin": 2179,
											"end": 2231,
											"name": "ISZERO",
											"source": 24
										},
										{
											"begin": 2179,
											"end": 2231,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "196"
										},
										{
											"begin": 2179,
											"end": 2231,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 2227,
											"end": 2228,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 2224,
											"end": 2225,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 2217,
											"end": 2229,
											"name": "REVERT",
											"source": 24
										},
										{
											"begin": 2179,
											"end": 2231,
											"name": "tag",
											"source": 24,
											"value": "196"
										},
										{
											"begin": 2179,
											"end": 2231,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 2267,
											"end": 2276,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 2254,
											"end": 2277,
											"name": "CALLDATALOAD",
											"source": 24
										},
										{
											"begin": 2300,
											"end": 2318,
											"name": "PUSH",
											"source": 24,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2292,
											"end": 2298,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 2289,
											"end": 2319,
											"name": "GT",
											"source": 24
										},
										{
											"begin": 2286,
											"end": 2336,
											"name": "ISZERO",
											"source": 24
										},
										{
											"begin": 2286,
											"end": 2336,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "197"
										},
										{
											"begin": 2286,
											"end": 2336,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 2332,
											"end": 2333,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 2329,
											"end": 2330,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 2322,
											"end": 2334,
											"name": "REVERT",
											"source": 24
										},
										{
											"begin": 2286,
											"end": 2336,
											"name": "tag",
											"source": 24,
											"value": "197"
										},
										{
											"begin": 2286,
											"end": 2336,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 2355,
											"end": 2405,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "198"
										},
										{
											"begin": 2397,
											"end": 2404,
											"name": "DUP6",
											"source": 24
										},
										{
											"begin": 2388,
											"end": 2394,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 2377,
											"end": 2386,
											"name": "DUP7",
											"source": 24
										},
										{
											"begin": 2373,
											"end": 2395,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 2355,
											"end": 2405,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "174"
										},
										{
											"begin": 2355,
											"end": 2405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 2355,
											"end": 2405,
											"name": "tag",
											"source": 24,
											"value": "198"
										},
										{
											"begin": 2355,
											"end": 2405,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 2345,
											"end": 2405,
											"name": "SWAP6",
											"source": 24
										},
										{
											"begin": 2452,
											"end": 2454,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 2437,
											"end": 2455,
											"name": "SWAP5",
											"source": 24
										},
										{
											"begin": 2437,
											"end": 2455,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 2437,
											"end": 2455,
											"name": "SWAP5",
											"source": 24
										},
										{
											"begin": 2437,
											"end": 2455,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 2424,
											"end": 2456,
											"name": "CALLDATALOAD",
											"source": 24
										},
										{
											"begin": 2424,
											"end": 2456,
											"name": "SWAP5",
											"source": 24
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2072,
											"end": 2462,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 2467,
											"end": 2804,
											"name": "tag",
											"source": 24,
											"value": "54"
										},
										{
											"begin": 2467,
											"end": 2804,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 2669,
											"end": 2671,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 2651,
											"end": 2672,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 2651,
											"end": 2672,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 2651,
											"end": 2672,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 2708,
											"end": 2710,
											"name": "PUSH",
											"source": 24,
											"value": "D"
										},
										{
											"begin": 2688,
											"end": 2706,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 2688,
											"end": 2706,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 2688,
											"end": 2706,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 2681,
											"end": 2711,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2737BA103A34329037BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "99"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2742,
											"end": 2744,
											"name": "PUSH",
											"source": 24,
											"value": "40"
										},
										{
											"begin": 2727,
											"end": 2745,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 2727,
											"end": 2745,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 2795,
											"end": 2797,
											"name": "PUSH",
											"source": 24,
											"value": "60"
										},
										{
											"begin": 2780,
											"end": 2798,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 2780,
											"end": 2798,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 2467,
											"end": 2804,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 2809,
											"end": 3232,
											"name": "tag",
											"source": 24,
											"value": "175"
										},
										{
											"begin": 2809,
											"end": 3232,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 2851,
											"end": 2854,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 2889,
											"end": 2894,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 2883,
											"end": 2895,
											"name": "MLOAD",
											"source": 24
										},
										{
											"begin": 2916,
											"end": 2922,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 2911,
											"end": 2914,
											"name": "DUP5",
											"source": 24
										},
										{
											"begin": 2904,
											"end": 2923,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 2941,
											"end": 2942,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 2951,
											"end": 3113,
											"name": "tag",
											"source": 24,
											"value": "201"
										},
										{
											"begin": 2951,
											"end": 3113,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 2965,
											"end": 2971,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 2962,
											"end": 2963,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 2959,
											"end": 2972,
											"name": "LT",
											"source": 24
										},
										{
											"begin": 2951,
											"end": 3113,
											"name": "ISZERO",
											"source": 24
										},
										{
											"begin": 2951,
											"end": 3113,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "203"
										},
										{
											"begin": 2951,
											"end": 3113,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 3027,
											"end": 3031,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 3083,
											"end": 3096,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 3083,
											"end": 3096,
											"name": "DUP6",
											"source": 24
										},
										{
											"begin": 3083,
											"end": 3096,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 3079,
											"end": 3101,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 3079,
											"end": 3101,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 3073,
											"end": 3102,
											"name": "MLOAD",
											"source": 24
										},
										{
											"begin": 3055,
											"end": 3066,
											"name": "DUP7",
											"source": 24
										},
										{
											"begin": 3055,
											"end": 3066,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 3055,
											"end": 3066,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 3051,
											"end": 3071,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 3051,
											"end": 3071,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 3044,
											"end": 3103,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 2980,
											"end": 2992,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 2951,
											"end": 3113,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "201"
										},
										{
											"begin": 2951,
											"end": 3113,
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 2951,
											"end": 3113,
											"name": "tag",
											"source": 24,
											"value": "203"
										},
										{
											"begin": 2951,
											"end": 3113,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 2955,
											"end": 2958,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 3158,
											"end": 3159,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 3151,
											"end": 3155,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 3142,
											"end": 3148,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 3137,
											"end": 3140,
											"name": "DUP7",
											"source": 24
										},
										{
											"begin": 3133,
											"end": 3149,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 3129,
											"end": 3156,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 3122,
											"end": 3160,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 3221,
											"end": 3225,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 3214,
											"end": 3216,
											"name": "PUSH",
											"source": 24,
											"value": "1F"
										},
										{
											"begin": 3210,
											"end": 3217,
											"name": "NOT",
											"source": 24
										},
										{
											"begin": 3205,
											"end": 3207,
											"name": "PUSH",
											"source": 24,
											"value": "1F"
										},
										{
											"begin": 3197,
											"end": 3203,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 3193,
											"end": 3208,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 3189,
											"end": 3218,
											"name": "AND",
											"source": 24
										},
										{
											"begin": 3184,
											"end": 3187,
											"name": "DUP6",
											"source": 24
										},
										{
											"begin": 3180,
											"end": 3219,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 3176,
											"end": 3226,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 3169,
											"end": 3226,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 3169,
											"end": 3226,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 3169,
											"end": 3226,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 2809,
											"end": 3232,
											"name": "SWAP3",
											"source": 24
										},
										{
											"begin": 2809,
											"end": 3232,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 2809,
											"end": 3232,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 2809,
											"end": 3232,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 2809,
											"end": 3232,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 3237,
											"end": 3457,
											"name": "tag",
											"source": 24,
											"value": "64"
										},
										{
											"begin": 3237,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 3386,
											"end": 3388,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 3375,
											"end": 3384,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 3368,
											"end": 3389,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 3349,
											"end": 3353,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 3406,
											"end": 3451,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "205"
										},
										{
											"begin": 3447,
											"end": 3449,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 3436,
											"end": 3445,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 3432,
											"end": 3450,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 3424,
											"end": 3430,
											"name": "DUP5",
											"source": 24
										},
										{
											"begin": 3406,
											"end": 3451,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "175"
										},
										{
											"begin": 3406,
											"end": 3451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 3406,
											"end": 3451,
											"name": "tag",
											"source": 24,
											"value": "205"
										},
										{
											"begin": 3406,
											"end": 3451,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 3398,
											"end": 3451,
											"name": "SWAP4",
											"source": 24
										},
										{
											"begin": 3237,
											"end": 3457,
											"name": "SWAP3",
											"source": 24
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3237,
											"end": 3457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 3462,
											"end": 3589,
											"name": "tag",
											"source": 24,
											"value": "176"
										},
										{
											"begin": 3462,
											"end": 3589,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 3523,
											"end": 3533,
											"name": "PUSH",
											"source": 24,
											"value": "4E487B71"
										},
										{
											"begin": 3518,
											"end": 3521,
											"name": "PUSH",
											"source": 24,
											"value": "E0"
										},
										{
											"begin": 3514,
											"end": 3534,
											"name": "SHL",
											"source": 24
										},
										{
											"begin": 3511,
											"end": 3512,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 3504,
											"end": 3535,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 3554,
											"end": 3558,
											"name": "PUSH",
											"source": 24,
											"value": "11"
										},
										{
											"begin": 3551,
											"end": 3552,
											"name": "PUSH",
											"source": 24,
											"value": "4"
										},
										{
											"begin": 3544,
											"end": 3559,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 3578,
											"end": 3582,
											"name": "PUSH",
											"source": 24,
											"value": "24"
										},
										{
											"begin": 3575,
											"end": 3576,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 3568,
											"end": 3583,
											"name": "REVERT",
											"source": 24
										},
										{
											"begin": 3594,
											"end": 3762,
											"name": "tag",
											"source": 24,
											"value": "70"
										},
										{
											"begin": 3594,
											"end": 3762,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 3667,
											"end": 3676,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 3667,
											"end": 3676,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 3667,
											"end": 3676,
											"name": "MUL",
											"source": 24
										},
										{
											"begin": 3698,
											"end": 3707,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 3698,
											"end": 3707,
											"name": "ISZERO",
											"source": 24
										},
										{
											"begin": 3715,
											"end": 3730,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 3715,
											"end": 3730,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 3715,
											"end": 3730,
											"name": "DIV",
											"source": 24
										},
										{
											"begin": 3709,
											"end": 3731,
											"name": "DUP5",
											"source": 24
										},
										{
											"begin": 3709,
											"end": 3731,
											"name": "EQ",
											"source": 24
										},
										{
											"begin": 3695,
											"end": 3732,
											"name": "OR",
											"source": 24
										},
										{
											"begin": 3685,
											"end": 3756,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "209"
										},
										{
											"begin": 3685,
											"end": 3756,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 3736,
											"end": 3754,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "209"
										},
										{
											"begin": 3736,
											"end": 3754,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "176"
										},
										{
											"begin": 3736,
											"end": 3754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 3736,
											"end": 3754,
											"name": "tag",
											"source": 24,
											"value": "209"
										},
										{
											"begin": 3736,
											"end": 3754,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 3594,
											"end": 3762,
											"name": "SWAP3",
											"source": 24
										},
										{
											"begin": 3594,
											"end": 3762,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 3594,
											"end": 3762,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 3594,
											"end": 3762,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 3594,
											"end": 3762,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 4116,
											"end": 4243,
											"name": "tag",
											"source": 24,
											"value": "86"
										},
										{
											"begin": 4116,
											"end": 4243,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 4177,
											"end": 4187,
											"name": "PUSH",
											"source": 24,
											"value": "4E487B71"
										},
										{
											"begin": 4172,
											"end": 4175,
											"name": "PUSH",
											"source": 24,
											"value": "E0"
										},
										{
											"begin": 4168,
											"end": 4188,
											"name": "SHL",
											"source": 24
										},
										{
											"begin": 4165,
											"end": 4166,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 4158,
											"end": 4189,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 4208,
											"end": 4212,
											"name": "PUSH",
											"source": 24,
											"value": "32"
										},
										{
											"begin": 4205,
											"end": 4206,
											"name": "PUSH",
											"source": 24,
											"value": "4"
										},
										{
											"begin": 4198,
											"end": 4213,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 4232,
											"end": 4236,
											"name": "PUSH",
											"source": 24,
											"value": "24"
										},
										{
											"begin": 4229,
											"end": 4230,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 4222,
											"end": 4237,
											"name": "REVERT",
											"source": 24
										},
										{
											"begin": 5075,
											"end": 5259,
											"name": "tag",
											"source": 24,
											"value": "126"
										},
										{
											"begin": 5075,
											"end": 5259,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 5145,
											"end": 5151,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 5198,
											"end": 5200,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 5186,
											"end": 5195,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 5177,
											"end": 5184,
											"name": "DUP5",
											"source": 24
										},
										{
											"begin": 5173,
											"end": 5196,
											"name": "SUB",
											"source": 24
										},
										{
											"begin": 5169,
											"end": 5201,
											"name": "SLT",
											"source": 24
										},
										{
											"begin": 5166,
											"end": 5218,
											"name": "ISZERO",
											"source": 24
										},
										{
											"begin": 5166,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "215"
										},
										{
											"begin": 5166,
											"end": 5218,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 5214,
											"end": 5215,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 5211,
											"end": 5212,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 5204,
											"end": 5216,
											"name": "REVERT",
											"source": 24
										},
										{
											"begin": 5166,
											"end": 5218,
											"name": "tag",
											"source": 24,
											"value": "215"
										},
										{
											"begin": 5166,
											"end": 5218,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5237,
											"end": 5253,
											"name": "MLOAD",
											"source": 24
										},
										{
											"begin": 5237,
											"end": 5253,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 5075,
											"end": 5259,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5075,
											"end": 5259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 6095,
											"end": 6220,
											"name": "tag",
											"source": 24,
											"value": "144"
										},
										{
											"begin": 6095,
											"end": 6220,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 6160,
											"end": 6169,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 6160,
											"end": 6169,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 6160,
											"end": 6169,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 6181,
											"end": 6191,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 6181,
											"end": 6191,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 6181,
											"end": 6191,
											"name": "GT",
											"source": 24
										},
										{
											"begin": 6178,
											"end": 6214,
											"name": "ISZERO",
											"source": 24
										},
										{
											"begin": 6178,
											"end": 6214,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "209"
										},
										{
											"begin": 6178,
											"end": 6214,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 6194,
											"end": 6212,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "209"
										},
										{
											"begin": 6194,
											"end": 6212,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "176"
										},
										{
											"begin": 6194,
											"end": 6212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 6225,
											"end": 6516,
											"name": "tag",
											"source": 24,
											"value": "153"
										},
										{
											"begin": 6225,
											"end": 6516,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 6402,
											"end": 6404,
											"name": "PUSH",
											"source": 24,
											"value": "40"
										},
										{
											"begin": 6391,
											"end": 6400,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 6384,
											"end": 6405,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 6365,
											"end": 6369,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 6422,
											"end": 6467,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "222"
										},
										{
											"begin": 6463,
											"end": 6465,
											"name": "PUSH",
											"source": 24,
											"value": "40"
										},
										{
											"begin": 6452,
											"end": 6461,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 6448,
											"end": 6466,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 6440,
											"end": 6446,
											"name": "DUP6",
											"source": 24
										},
										{
											"begin": 6422,
											"end": 6467,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "175"
										},
										{
											"begin": 6422,
											"end": 6467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 6422,
											"end": 6467,
											"name": "tag",
											"source": 24,
											"value": "222"
										},
										{
											"begin": 6422,
											"end": 6467,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 6414,
											"end": 6467,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 6414,
											"end": 6467,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 6503,
											"end": 6509,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 6498,
											"end": 6500,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 6487,
											"end": 6496,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 6483,
											"end": 6501,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 6476,
											"end": 6510,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 6225,
											"end": 6516,
											"name": "SWAP4",
											"source": 24
										},
										{
											"begin": 6225,
											"end": 6516,
											"name": "SWAP3",
											"source": 24
										},
										{
											"begin": 6225,
											"end": 6516,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 6225,
											"end": 6516,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 6225,
											"end": 6516,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 6225,
											"end": 6516,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 6960,
											"end": 7095,
											"name": "tag",
											"source": 24,
											"value": "173"
										},
										{
											"begin": 6960,
											"end": 7095,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 6999,
											"end": 7002,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 7020,
											"end": 7037,
											"name": "PUSH",
											"source": 24,
											"value": "1"
										},
										{
											"begin": 7020,
											"end": 7037,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 7020,
											"end": 7037,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 7017,
											"end": 7060,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "226"
										},
										{
											"begin": 7017,
											"end": 7060,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 7040,
											"end": 7058,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "226"
										},
										{
											"begin": 7040,
											"end": 7058,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "176"
										},
										{
											"begin": 7040,
											"end": 7058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 7040,
											"end": 7058,
											"name": "tag",
											"source": 24,
											"value": "226"
										},
										{
											"begin": 7040,
											"end": 7058,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7087,
											"end": 7088,
											"name": "PUSH",
											"source": 24,
											"value": "1"
										},
										{
											"begin": 7076,
											"end": 7089,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 7076,
											"end": 7089,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 6960,
											"end": 7095,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										}
									],
									".data": {
										"CEEEA03D3BC4262E4464E93B48823B6306BBBB1661739B8798146C0BD453CFA4": "573f22c312382d046159d834aa0e9f7c23b7ba1ba8c9ff20b839b47844686e88"
									}
								}
							},
							"sourceList": [
								"contracts/Controller.sol",
								"contracts/MainBot.sol",
								"contracts/aave/protocol-v2/contracts/interfaces/DataTypes.sol",
								"contracts/aave/protocol-v2/contracts/interfaces/ILendingPool.sol",
								"contracts/aave/protocol-v2/contracts/interfaces/ILendingPoolAddressesProvider.sol",
								"contracts/chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol",
								"contracts/openzeppelin/contracts/token/ERC721/IERC721.sol",
								"contracts/openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol",
								"contracts/openzeppelin/contracts/token/ERC721/IERC721Metadata.sol",
								"contracts/openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/uniswap/v3-periphery/contracts/interfaces/IERC721Permit.sol",
								"contracts/uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol",
								"contracts/uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol",
								"contracts/uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol",
								"contracts/uniswap/v3-periphery/contracts/interfaces/IPoolInitializer.sol",
								"contracts/uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
								"contracts/uniswap/v3-periphery/contracts/interfaces/IUniswapV3Pool.sol",
								"contracts/uniswap/v3-periphery/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
								"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
								"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
								"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
								"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
								"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
								"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolState.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"Consolidate()": "8c44c530",
							"checkInterval()": "838c29b6",
							"initiateTradeWithHandling(string,uint256)": "efa274ef",
							"kill()": "41c0e1b5",
							"logEvent(uint256,string)": "4359b7ef",
							"mainBot()": "e529930a",
							"nextCheckTime()": "36dff6b6",
							"owner()": "8da5cb5b",
							"periodicCheck()": "c98706c3",
							"setTradingTimeframe(uint256)": "88ac3ea1",
							"withdrawInGwei(uint256)": "457f3cb0"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"mainBotAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_checkInterval\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"ConsolidationCompleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"ConsolidationStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"activity\",\"type\":\"string\"}],\"name\":\"CurrentActivity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"LogControllerCheck\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"tradeType\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"LogControllerTrade\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"Consolidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkInterval\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tradeType\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"initiateTradeWithHandling\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"activity\",\"type\":\"string\"}],\"name\":\"logEvent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mainBot\",\"outputs\":[{\"internalType\":\"contract MainBot\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextCheckTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"periodicCheck\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timeframeIndex\",\"type\":\"uint256\"}],\"name\":\"setTradingTimeframe\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountInGwei\",\"type\":\"uint256\"}],\"name\":\"withdrawInGwei\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Controller.sol\":\"Controller\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Controller.sol\":{\"keccak256\":\"0xe232d7f400442a66449e891bd3e0d0b155384e7534c4200e855ddce4cacf1c2b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://96abba27cc8057212fdc9cb8e17d133b042fa6f95c18233379483adb7104dcb1\",\"dweb:/ipfs/QmWed4mGTeEJFB3yhcUAcesUHTiDqEbcD4UysDhjttdpD5\"]},\"contracts/MainBot.sol\":{\"keccak256\":\"0x56eac8493c21c7d33dee50c4cf271f22d8956d11c5c11e4246256ae2d5b4330b\",\"license\":\"MITs\",\"urls\":[\"bzz-raw://42088ce0a38c5bd89f60629db180c1e24ccd28b1ef15b33629fa075e3cbfad47\",\"dweb:/ipfs/QmbbcVx6DmRDiYNyKCqrJzebyc8mEe452PCC2wQhW1Haxu\"]},\"contracts/aave/protocol-v2/contracts/interfaces/DataTypes.sol\":{\"keccak256\":\"0x81caed3fbb24bd8721c85094546ee31f033209a1dc5b8aa4d8ce094388666cb4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4ab7c3612816908da41df1a0f62bde806a9fe088198dcd7b70f6a8f31c7d131\",\"dweb:/ipfs/QmRNtcEwyFdiJmbJ1oyDiDZ3foyrHchCMo1MYjAXYR7zdd\"]},\"contracts/aave/protocol-v2/contracts/interfaces/ILendingPool.sol\":{\"keccak256\":\"0xbcbeb7a9a1bc100bae12891df6265691103d76f71e7eed72902d2024f05f654b\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://898ea64e297442bb3bc7c7215786ae6453dce7900200f836041ff9ed7867f4e0\",\"dweb:/ipfs/QmTuSyHSYg7PNo6eRDe1ATJZ2UxDxwFJUshJRnT22co19a\"]},\"contracts/aave/protocol-v2/contracts/interfaces/ILendingPoolAddressesProvider.sol\":{\"keccak256\":\"0x219d7db359e51dfd51b0a454dc284c44671b6ce6543b7f383ef0aec4534c7ea0\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://f09e938d9d6edadd398245b27e15eb0df96f20dd5104f523a10cfe4a9329ba92\",\"dweb:/ipfs/QmNhjFNzjeKkqUNe9SJnxiuH8wAQYVp9MX6mAGBzeESpyz\"]},\"contracts/chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x257a8d28fa83d3d942547c8e129ef465e4b5f3f31171e7be4739a4c98da6b4f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d39e11b1dc7b9b8ccdabbc9be442ab7cda4a81c748f57e316dcb1bcb4a28bf9\",\"dweb:/ipfs/QmaG6vz6W6iEUBsbHSBob5mdcitYxWjoygxREHpsJHfWrS\"]},\"contracts/openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x3c504de1aed405d34ff26733c7b6edc9fd9fd4f9aac504f541a4238dd50bf1d2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e373cc851a65ef3f01bb825f59c3c9cdb1969adab8ec871dd1f197423f6b9ed\",\"dweb:/ipfs/QmWNM3TyZgfxTKJsfqk7ZJk7DmZr29iab3f8T4c1itiynm\"]},\"contracts/openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol\":{\"keccak256\":\"0x49ae5d944b6f25701d67ef1d76cbce766f062bf1958a34b13543f539d7882850\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://851181789f63ce009fa30ddabd8ef159d90733216d5d1f2f9e13d16688f67489\",\"dweb:/ipfs/QmdT4okvCWQC1eSYNFfyqjUkJBAiWbSZMwAazzEuizBJSb\"]},\"contracts/openzeppelin/contracts/token/ERC721/IERC721Metadata.sol\":{\"keccak256\":\"0xfd743e54fb2a27413f703a389d1d78b003d957eaebbcfa15051d89793cf5136a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07683e02a762080a63f5ccec780488e5b87f79ded66d4c1e27f5cd62c1b5f8cb\",\"dweb:/ipfs/QmNtAngsTxV2c2XAKrqAo7PUUpXz1J69LNzwkEun4QTX7w\"]},\"contracts/openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x1e96fdc714c1d5e754ad716c7cb4ac8daa28856879f2d40bb428720adac47b69\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1725af76c335db636686b0b8f36dfdcfa15d40993509ed80c6e579dfd3e1c2f3\",\"dweb:/ipfs/QmcT6Bp635CWdmxQnv84bicV4eaD46cY1ywZNgriSusJXw\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/IERC721Permit.sol\":{\"keccak256\":\"0x9915ccd225c6840a809606b1a929404b0299bff8d7cbb6bc8439c5dfd74046d2\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f0cdf83091593d05e85f50c1c40cf17c8c1eb6aeaac87cb9f8c91e8e31cf162c\",\"dweb:/ipfs/QmZxxuzCfsPLnARKERZj2fvy2mEvyQWJd9uDWpFwj4UkJa\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol\":{\"keccak256\":\"0x631739110217293c69ff6fc6ca4499fcabe8774fb17de93a5546dabe6e207034\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://9f61686e40280404bb22e20c5c380ed8dd4467c8c5c164762566233146cc2e26\",\"dweb:/ipfs/QmbA6qoN6NJvnj3vTRFA5ozNLdnWqtK5iJjqzcR1NS3qJk\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol\":{\"keccak256\":\"0x7affcfeb5127c0925a71d6a65345e117c33537523aeca7bc98085ead8452519d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e16b291294210e71cb0f20cd0afe62ae2dc6878d627f5ccc19c4dc9cd80aec3f\",\"dweb:/ipfs/QmQGitSyBr26nour81BZmpmDMyJpvZRqHQZvnCD1Acb127\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol\":{\"keccak256\":\"0xb547e10f1e69bed03621a62b73a503e260643066c6b4054867a4d1fef47eb274\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f9a90f58f5fd5fb42f7811f4094113b532f307b14a73764c91f977590747f407\",\"dweb:/ipfs/QmSeNH2mfiDMKf3Q6V2sqtNxx1s72JNuA1VVxRM9HoMqYp\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/IPoolInitializer.sol\":{\"keccak256\":\"0x9d7695e8d94c22cc5fcced602017aabb988de89981ea7bee29ea629d5328a862\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://61b50933026ee1017db2a6273af8cedc3238c95dca58880db0918dbdbb2f064f\",\"dweb:/ipfs/QmUebR26pqG25d18aBELKz8aFFKkmHa8PxntzXTA7o9Ldu\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0xfa925dc6086cfc426967d6b47a651ade9bb30a747359c0d006912c59d88b5c4a\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ec22f5863805d4afbf740bbba06c07fe4572ba993e4936a234222c61b3d1dd6e\",\"dweb:/ipfs/QmNyC92QbbjjG5V67GNfiXbSN6Ehi7637uFQXkWwKXR3s6\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5\",\"dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0xe75caaf5ab5dad796a807a0db3ce9d5aeeadf3cc062aaa17f701134bbd085f53\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://21ae8e8c7af183532964bc81889b695801f868d903af91d18d02a77d793e14fb\",\"dweb:/ipfs/QmfDr8ugPEdbxtTCs6fut61Euf3adBvS2aNyFyC5CFAFGy\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 5,
								"contract": "contracts/Controller.sol:Controller",
								"label": "mainBot",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(MainBot)1247"
							},
							{
								"astId": 7,
								"contract": "contracts/Controller.sol:Controller",
								"label": "owner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 9,
								"contract": "contracts/Controller.sol:Controller",
								"label": "checkInterval",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 11,
								"contract": "contracts/Controller.sol:Controller",
								"label": "nextCheckTime",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(MainBot)1247": {
								"encoding": "inplace",
								"label": "contract MainBot",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/MainBot.sol": {
				"IERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"transfer(address,uint256)": "a9059cbb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MainBot.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MainBot.sol\":{\"keccak256\":\"0x56eac8493c21c7d33dee50c4cf271f22d8956d11c5c11e4246256ae2d5b4330b\",\"license\":\"MITs\",\"urls\":[\"bzz-raw://42088ce0a38c5bd89f60629db180c1e24ccd28b1ef15b33629fa075e3cbfad47\",\"dweb:/ipfs/QmbbcVx6DmRDiYNyKCqrJzebyc8mEe452PCC2wQhW1Haxu\"]},\"contracts/aave/protocol-v2/contracts/interfaces/DataTypes.sol\":{\"keccak256\":\"0x81caed3fbb24bd8721c85094546ee31f033209a1dc5b8aa4d8ce094388666cb4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4ab7c3612816908da41df1a0f62bde806a9fe088198dcd7b70f6a8f31c7d131\",\"dweb:/ipfs/QmRNtcEwyFdiJmbJ1oyDiDZ3foyrHchCMo1MYjAXYR7zdd\"]},\"contracts/aave/protocol-v2/contracts/interfaces/ILendingPool.sol\":{\"keccak256\":\"0xbcbeb7a9a1bc100bae12891df6265691103d76f71e7eed72902d2024f05f654b\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://898ea64e297442bb3bc7c7215786ae6453dce7900200f836041ff9ed7867f4e0\",\"dweb:/ipfs/QmTuSyHSYg7PNo6eRDe1ATJZ2UxDxwFJUshJRnT22co19a\"]},\"contracts/aave/protocol-v2/contracts/interfaces/ILendingPoolAddressesProvider.sol\":{\"keccak256\":\"0x219d7db359e51dfd51b0a454dc284c44671b6ce6543b7f383ef0aec4534c7ea0\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://f09e938d9d6edadd398245b27e15eb0df96f20dd5104f523a10cfe4a9329ba92\",\"dweb:/ipfs/QmNhjFNzjeKkqUNe9SJnxiuH8wAQYVp9MX6mAGBzeESpyz\"]},\"contracts/chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x257a8d28fa83d3d942547c8e129ef465e4b5f3f31171e7be4739a4c98da6b4f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d39e11b1dc7b9b8ccdabbc9be442ab7cda4a81c748f57e316dcb1bcb4a28bf9\",\"dweb:/ipfs/QmaG6vz6W6iEUBsbHSBob5mdcitYxWjoygxREHpsJHfWrS\"]},\"contracts/openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x3c504de1aed405d34ff26733c7b6edc9fd9fd4f9aac504f541a4238dd50bf1d2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e373cc851a65ef3f01bb825f59c3c9cdb1969adab8ec871dd1f197423f6b9ed\",\"dweb:/ipfs/QmWNM3TyZgfxTKJsfqk7ZJk7DmZr29iab3f8T4c1itiynm\"]},\"contracts/openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol\":{\"keccak256\":\"0x49ae5d944b6f25701d67ef1d76cbce766f062bf1958a34b13543f539d7882850\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://851181789f63ce009fa30ddabd8ef159d90733216d5d1f2f9e13d16688f67489\",\"dweb:/ipfs/QmdT4okvCWQC1eSYNFfyqjUkJBAiWbSZMwAazzEuizBJSb\"]},\"contracts/openzeppelin/contracts/token/ERC721/IERC721Metadata.sol\":{\"keccak256\":\"0xfd743e54fb2a27413f703a389d1d78b003d957eaebbcfa15051d89793cf5136a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07683e02a762080a63f5ccec780488e5b87f79ded66d4c1e27f5cd62c1b5f8cb\",\"dweb:/ipfs/QmNtAngsTxV2c2XAKrqAo7PUUpXz1J69LNzwkEun4QTX7w\"]},\"contracts/openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x1e96fdc714c1d5e754ad716c7cb4ac8daa28856879f2d40bb428720adac47b69\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1725af76c335db636686b0b8f36dfdcfa15d40993509ed80c6e579dfd3e1c2f3\",\"dweb:/ipfs/QmcT6Bp635CWdmxQnv84bicV4eaD46cY1ywZNgriSusJXw\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/IERC721Permit.sol\":{\"keccak256\":\"0x9915ccd225c6840a809606b1a929404b0299bff8d7cbb6bc8439c5dfd74046d2\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f0cdf83091593d05e85f50c1c40cf17c8c1eb6aeaac87cb9f8c91e8e31cf162c\",\"dweb:/ipfs/QmZxxuzCfsPLnARKERZj2fvy2mEvyQWJd9uDWpFwj4UkJa\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol\":{\"keccak256\":\"0x631739110217293c69ff6fc6ca4499fcabe8774fb17de93a5546dabe6e207034\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://9f61686e40280404bb22e20c5c380ed8dd4467c8c5c164762566233146cc2e26\",\"dweb:/ipfs/QmbA6qoN6NJvnj3vTRFA5ozNLdnWqtK5iJjqzcR1NS3qJk\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol\":{\"keccak256\":\"0x7affcfeb5127c0925a71d6a65345e117c33537523aeca7bc98085ead8452519d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e16b291294210e71cb0f20cd0afe62ae2dc6878d627f5ccc19c4dc9cd80aec3f\",\"dweb:/ipfs/QmQGitSyBr26nour81BZmpmDMyJpvZRqHQZvnCD1Acb127\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol\":{\"keccak256\":\"0xb547e10f1e69bed03621a62b73a503e260643066c6b4054867a4d1fef47eb274\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f9a90f58f5fd5fb42f7811f4094113b532f307b14a73764c91f977590747f407\",\"dweb:/ipfs/QmSeNH2mfiDMKf3Q6V2sqtNxx1s72JNuA1VVxRM9HoMqYp\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/IPoolInitializer.sol\":{\"keccak256\":\"0x9d7695e8d94c22cc5fcced602017aabb988de89981ea7bee29ea629d5328a862\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://61b50933026ee1017db2a6273af8cedc3238c95dca58880db0918dbdbb2f064f\",\"dweb:/ipfs/QmUebR26pqG25d18aBELKz8aFFKkmHa8PxntzXTA7o9Ldu\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0xfa925dc6086cfc426967d6b47a651ade9bb30a747359c0d006912c59d88b5c4a\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ec22f5863805d4afbf740bbba06c07fe4572ba993e4936a234222c61b3d1dd6e\",\"dweb:/ipfs/QmNyC92QbbjjG5V67GNfiXbSN6Ehi7637uFQXkWwKXR3s6\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5\",\"dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0xe75caaf5ab5dad796a807a0db3ce9d5aeeadf3cc062aaa17f701134bbd085f53\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://21ae8e8c7af183532964bc81889b695801f868d903af91d18d02a77d793e14fb\",\"dweb:/ipfs/QmfDr8ugPEdbxtTCs6fut61Euf3adBvS2aNyFyC5CFAFGy\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"MainBot": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_polToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_usdtToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_usdcToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_quickSwapRouter",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_priceFeedAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_uniswapRouter",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_uniswapPositionManager",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_aaveLendingPoolAddressesProvider",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "activity",
									"type": "string"
								}
							],
							"name": "CurrentActivity",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "currentBalance",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "threshold",
									"type": "uint256"
								}
							],
							"name": "StopLossTriggered",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "message",
									"type": "string"
								}
							],
							"name": "TestEvent",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "tradeType",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "TradeExecuted",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "aaveLendingPoolAddressesProvider",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "selectedTimeframe",
									"type": "uint256"
								}
							],
							"name": "adjustTimeframe",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "poolAddress",
									"type": "address"
								}
							],
							"name": "checkLiquidity",
							"outputs": [
								{
									"internalType": "bool",
									"name": "sufficientLiquidity",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "checkPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "convertAllToPOL",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "currentActivity",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"name": "dexRouters",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "disableTrading",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "gasCostMultiplier",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initialDeposit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "tradeType",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "initiateTrade",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "kill",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lossThreshold",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maticBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nextLogTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "polToken",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "priceFeedAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "profitThreshold",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "quickSwapRouter",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "controller",
									"type": "address"
								}
							],
							"name": "setController",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stablecoinBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tradingEnabled",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "trailingStopLoss",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "uniswapPositionManager",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "uniswapRouter",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "usdcToken",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "usdtToken",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountInGwei",
									"type": "uint256"
								}
							],
							"name": "withdrawInGwei",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/MainBot.sol\":1234:1235  3 */\n  0x03\n    /* \"contracts/MainBot.sol\":1199:1235  uint256 public gasCostMultiplier = 3 */\n  0x06\n  sstore\n    /* \"contracts/MainBot.sol\":1275:1277  10 */\n  0x0a\n    /* \"contracts/MainBot.sol\":1241:1277  uint256 public trailingStopLoss = 10 */\n  0x07\n  sstore\n    /* \"contracts/MainBot.sol\":1315:1361  string public currentActivity = \"Initializing\" */\n  0xc0\n    /* \"contracts/MainBot.sol\":941:7628  contract MainBot {... */\n  0x40\n    /* \"contracts/MainBot.sol\":1315:1361  string public currentActivity = \"Initializing\" */\n  mstore\n  0x0c\n    /* \"contracts/MainBot.sol\":941:7628  contract MainBot {... */\n  0x80\n    /* \"contracts/MainBot.sol\":1315:1361  string public currentActivity = \"Initializing\" */\n  swap1\n  dup2\n  mstore\n  mstore(0xa0, shl(0xa0, 0x496e697469616c697a696e67))\n  0x09\n  swap1\n  tag_1\n  swap1\n  dup3\n  tag_2\n  jump\t// in\ntag_1:\n  pop\n    /* \"contracts/MainBot.sol\":2178:3097  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_3\n  jumpi\n  0x00\n  dup1\n  revert\ntag_3:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_4\n  swap2\n  tag_5\n  jump\t// in\ntag_4:\n    /* \"contracts/MainBot.sol\":2482:2487  owner */\n  0x00\n    /* \"contracts/MainBot.sol\":2482:2500  owner = msg.sender */\n  dup1\n  sload\n    /* \"contracts/MainBot.sol\":2490:2500  msg.sender */\n  caller\n  not(sub(shl(0xa0, 0x01), 0x01))\n    /* \"contracts/MainBot.sol\":2482:2500  owner = msg.sender */\n  swap2\n  dup3\n  and\n  or\n  swap1\n  swap2\n  sstore\n    /* \"contracts/MainBot.sol\":2510:2518  polToken */\n  0x0a\n    /* \"contracts/MainBot.sol\":2510:2530  polToken = _polToken */\n  dup1\n  sload\n  dup3\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup12\n  dup2\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"contracts/MainBot.sol\":2540:2549  usdtToken */\n  0x0b\n    /* \"contracts/MainBot.sol\":2540:2562  usdtToken = _usdtToken */\n  dup1\n  sload\n  dup4\n  and\n  dup11\n  dup4\n  and\n  or\n  swap1\n  sstore\n    /* \"contracts/MainBot.sol\":2572:2581  usdcToken */\n  0x0c\n    /* \"contracts/MainBot.sol\":2572:2594  usdcToken = _usdcToken */\n  dup1\n  sload\n  dup4\n  and\n  dup10\n  dup4\n  and\n  or\n  swap1\n  sstore\n    /* \"contracts/MainBot.sol\":2604:2619  quickSwapRouter */\n  0x0d\n    /* \"contracts/MainBot.sol\":2604:2638  quickSwapRouter = _quickSwapRouter */\n  dup1\n  sload\n  dup4\n  and\n  dup9\n  dup4\n  and\n  swap1\n  dup2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"contracts/MainBot.sol\":2648:2664  priceFeedAddress */\n  0x0e\n    /* \"contracts/MainBot.sol\":2648:2684  priceFeedAddress = _priceFeedAddress */\n  dup1\n  sload\n  dup5\n  and\n  dup9\n  dup5\n  and\n  or\n  swap1\n  sstore\n    /* \"contracts/MainBot.sol\":2694:2707  uniswapRouter */\n  0x0f\n    /* \"contracts/MainBot.sol\":2694:2724  uniswapRouter = _uniswapRouter */\n  dup1\n  sload\n  dup5\n  and\n  dup8\n  dup5\n  and\n  or\n  swap1\n  sstore\n    /* \"contracts/MainBot.sol\":2734:2756  uniswapPositionManager */\n  0x10\n    /* \"contracts/MainBot.sol\":2734:2782  uniswapPositionManager = _uniswapPositionManager */\n  dup1\n  sload\n  dup5\n  and\n  dup7\n  dup5\n  and\n  or\n  swap1\n  sstore\n    /* \"contracts/MainBot.sol\":2792:2824  aaveLendingPoolAddressesProvider */\n  0x11\n    /* \"contracts/MainBot.sol\":2792:2860  aaveLendingPoolAddressesProvider = _aaveLendingPoolAddressesProvider */\n  dup1\n  sload\n  swap1\n  swap4\n  and\n  swap2\n  dup5\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"contracts/MainBot.sol\":2879:2902  dexRouters[\"QuickSwap\"] */\n  mload(0x40)\n  shl(0xbc, 0x0517569636b5377617)\n    /* \"#utility.yul\":3932:3956   */\n  dup2\n  mstore\n    /* \"contracts/MainBot.sol\":2879:2889  dexRouters */\n  0x12\n  swap1\n    /* \"#utility.yul\":3981:3982   */\n  0x09\n    /* \"#utility.yul\":3972:3983   */\n  add\n    /* \"contracts/MainBot.sol\":2879:2902  dexRouters[\"QuickSwap\"] */\n  swap1\n  dup2\n  mstore\n  mload(0x40)\n  swap1\n  dup2\n  swap1\n  sub\n  0x20\n  add\n  swap1\n  keccak256\n    /* \"contracts/MainBot.sol\":2879:2920  dexRouters[\"QuickSwap\"] = quickSwapRouter */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  swap3\n  swap1\n  swap3\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n  pop\n  pop\n    /* \"contracts/MainBot.sol\":2879:2902  dexRouters[\"QuickSwap\"] */\n  0x00\n    /* \"contracts/MainBot.sol\":2930:2952  tradingEnabled = false */\n  dup1\n  sload\n  not(shl(0xa0, 0xff))\n  and\n  swap1\n  sstore\n  pop\n  pop\n    /* \"contracts/MainBot.sol\":2980:2983  110 */\n  0x6e\n    /* \"contracts/MainBot.sol\":2962:2977  profitThreshold */\n  0x04\n    /* \"contracts/MainBot.sol\":2962:2983  profitThreshold = 110 */\n  sstore\n  pop\n  pop\n    /* \"contracts/MainBot.sol\":3023:3025  85 */\n  0x55\n    /* \"contracts/MainBot.sol\":3007:3020  lossThreshold */\n  0x05\n    /* \"contracts/MainBot.sol\":3007:3025  lossThreshold = 85 */\n  sstore\n  pop\n  pop\n    /* \"contracts/MainBot.sol\":3075:3090  block.timestamp */\n  timestamp\n    /* \"contracts/MainBot.sol\":3061:3072  nextLogTime */\n  0x08\n    /* \"contracts/MainBot.sol\":3061:3090  nextLogTime = block.timestamp */\n  sstore\n    /* \"contracts/MainBot.sol\":941:7628  contract MainBot {... */\n  jump(tag_17)\n    /* \"#utility.yul\":14:141   */\ntag_11:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:526   */\ntag_12:\n    /* \"#utility.yul\":225:226   */\n  0x01\n    /* \"#utility.yul\":221:233   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":268:280   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":289:350   */\n  tag_20\n  jumpi\n    /* \"#utility.yul\":343:347   */\n  0x7f\n    /* \"#utility.yul\":335:341   */\n  dup3\n    /* \"#utility.yul\":331:348   */\n  and\n    /* \"#utility.yul\":321:348   */\n  swap2\n  pop\n    /* \"#utility.yul\":289:350   */\ntag_20:\n    /* \"#utility.yul\":396:398   */\n  0x20\n    /* \"#utility.yul\":388:394   */\n  dup3\n    /* \"#utility.yul\":385:399   */\n  lt\n    /* \"#utility.yul\":365:383   */\n  dup2\n    /* \"#utility.yul\":362:400   */\n  sub\n    /* \"#utility.yul\":359:520   */\n  tag_21\n  jumpi\n    /* \"#utility.yul\":442:452   */\n  0x4e487b71\n    /* \"#utility.yul\":437:440   */\n  0xe0\n    /* \"#utility.yul\":433:453   */\n  shl\n    /* \"#utility.yul\":430:431   */\n  0x00\n    /* \"#utility.yul\":423:454   */\n  mstore\n    /* \"#utility.yul\":477:481   */\n  0x22\n    /* \"#utility.yul\":474:475   */\n  0x04\n    /* \"#utility.yul\":467:482   */\n  mstore\n    /* \"#utility.yul\":505:509   */\n  0x24\n    /* \"#utility.yul\":502:503   */\n  0x00\n    /* \"#utility.yul\":495:510   */\n  revert\n    /* \"#utility.yul\":359:520   */\ntag_21:\n  pop\n    /* \"#utility.yul\":146:526   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":657:1202   */\ntag_14:\n    /* \"#utility.yul\":759:761   */\n  0x1f\n    /* \"#utility.yul\":754:757   */\n  dup3\n    /* \"#utility.yul\":751:762   */\n  gt\n    /* \"#utility.yul\":748:1196   */\n  iszero\n  tag_24\n  jumpi\n    /* \"#utility.yul\":795:796   */\n  0x00\n    /* \"#utility.yul\":820:825   */\n  dup2\n    /* \"#utility.yul\":816:818   */\n  dup2\n    /* \"#utility.yul\":809:826   */\n  mstore\n    /* \"#utility.yul\":865:869   */\n  0x20\n    /* \"#utility.yul\":861:863   */\n  dup2\n    /* \"#utility.yul\":851:870   */\n  keccak256\n    /* \"#utility.yul\":935:937   */\n  0x1f\n    /* \"#utility.yul\":923:933   */\n  dup6\n    /* \"#utility.yul\":919:938   */\n  add\n    /* \"#utility.yul\":916:917   */\n  0x05\n    /* \"#utility.yul\":912:939   */\n  shr\n    /* \"#utility.yul\":906:910   */\n  dup2\n    /* \"#utility.yul\":902:940   */\n  add\n    /* \"#utility.yul\":971:975   */\n  0x20\n    /* \"#utility.yul\":959:969   */\n  dup7\n    /* \"#utility.yul\":956:976   */\n  lt\n    /* \"#utility.yul\":953:1000   */\n  iszero\n  tag_25\n  jumpi\n  pop\n    /* \"#utility.yul\":994:998   */\n  dup1\n    /* \"#utility.yul\":953:1000   */\ntag_25:\n    /* \"#utility.yul\":1049:1051   */\n  0x1f\n    /* \"#utility.yul\":1044:1047   */\n  dup6\n    /* \"#utility.yul\":1040:1052   */\n  add\n    /* \"#utility.yul\":1037:1038   */\n  0x05\n    /* \"#utility.yul\":1033:1053   */\n  shr\n    /* \"#utility.yul\":1027:1031   */\n  dup3\n    /* \"#utility.yul\":1023:1054   */\n  add\n    /* \"#utility.yul\":1013:1054   */\n  swap2\n  pop\n    /* \"#utility.yul\":1104:1186   */\ntag_26:\n    /* \"#utility.yul\":1122:1124   */\n  dup2\n    /* \"#utility.yul\":1115:1120   */\n  dup2\n    /* \"#utility.yul\":1112:1125   */\n  lt\n    /* \"#utility.yul\":1104:1186   */\n  iszero\n  tag_28\n  jumpi\n    /* \"#utility.yul\":1167:1184   */\n  dup3\n  dup2\n  sstore\n    /* \"#utility.yul\":1148:1149   */\n  0x01\n    /* \"#utility.yul\":1137:1150   */\n  add\n    /* \"#utility.yul\":1104:1186   */\n  jump(tag_26)\ntag_28:\n    /* \"#utility.yul\":1108:1111   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":748:1196   */\ntag_24:\n    /* \"#utility.yul\":657:1202   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1378:2730   */\ntag_2:\n    /* \"#utility.yul\":1498:1508   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1520:1550   */\n  dup2\n  gt\n    /* \"#utility.yul\":1517:1573   */\n  iszero\n  tag_32\n  jumpi\n    /* \"#utility.yul\":1553:1571   */\n  tag_32\n  tag_11\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":1582:1679   */\n  tag_33\n    /* \"#utility.yul\":1672:1678   */\n  dup2\n    /* \"#utility.yul\":1632:1670   */\n  tag_34\n    /* \"#utility.yul\":1664:1668   */\n  dup5\n    /* \"#utility.yul\":1658:1669   */\n  sload\n    /* \"#utility.yul\":1632:1670   */\n  tag_12\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":1626:1630   */\n  dup5\n    /* \"#utility.yul\":1582:1679   */\n  tag_14\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":1734:1738   */\n  0x20\n  dup1\n    /* \"#utility.yul\":1798:1800   */\n  0x1f\n    /* \"#utility.yul\":1787:1801   */\n  dup4\n  gt\n    /* \"#utility.yul\":1815:1816   */\n  0x01\n    /* \"#utility.yul\":1810:2473   */\n  dup2\n  eq\n  tag_36\n  jumpi\n    /* \"#utility.yul\":2517:2518   */\n  0x00\n    /* \"#utility.yul\":2534:2540   */\n  dup5\n    /* \"#utility.yul\":2531:2620   */\n  iszero\n  tag_37\n  jumpi\n  pop\n    /* \"#utility.yul\":2586:2605   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":2580:2606   */\n  mload\n    /* \"#utility.yul\":2531:2620   */\ntag_37:\n  not(0x00)\n    /* \"#utility.yul\":1335:1336   */\n  0x03\n    /* \"#utility.yul\":1331:1342   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":1327:1351   */\n  shr\n    /* \"#utility.yul\":1323:1352   */\n  not\n    /* \"#utility.yul\":1313:1353   */\n  and\n    /* \"#utility.yul\":1359:1360   */\n  0x01\n    /* \"#utility.yul\":1355:1366   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1310:1367   */\n  or\n    /* \"#utility.yul\":2633:2714   */\n  dup6\n  sstore\n    /* \"#utility.yul\":1780:2724   */\n  jump(tag_28)\n    /* \"#utility.yul\":1810:2473   */\ntag_36:\n    /* \"#utility.yul\":604:605   */\n  0x00\n    /* \"#utility.yul\":597:611   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":641:645   */\n  0x20\n    /* \"#utility.yul\":628:646   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":1846:1866   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":1964:2200   */\ntag_40:\n    /* \"#utility.yul\":1978:1985   */\n  dup3\n    /* \"#utility.yul\":1975:1976   */\n  dup2\n    /* \"#utility.yul\":1972:1986   */\n  lt\n    /* \"#utility.yul\":1964:2200   */\n  iszero\n  tag_42\n  jumpi\n    /* \"#utility.yul\":2067:2086   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":2061:2087   */\n  mload\n    /* \"#utility.yul\":2046:2088   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2159:2186   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":2127:2128   */\n  0x01\n    /* \"#utility.yul\":2115:2129   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":1994:2013   */\n  dup5\n  add\n    /* \"#utility.yul\":1964:2200   */\n  jump(tag_40)\ntag_42:\n    /* \"#utility.yul\":1968:1971   */\n  pop\n    /* \"#utility.yul\":2228:2234   */\n  dup6\n    /* \"#utility.yul\":2219:2226   */\n  dup3\n    /* \"#utility.yul\":2216:2235   */\n  lt\n    /* \"#utility.yul\":2213:2414   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":2289:2308   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":2283:2309   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2372:2373   */\n  0x03\n    /* \"#utility.yul\":2368:2382   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":2384:2387   */\n  0xf8\n    /* \"#utility.yul\":2364:2388   */\n  and\n    /* \"#utility.yul\":2360:2397   */\n  shr\n    /* \"#utility.yul\":2356:2398   */\n  not\n    /* \"#utility.yul\":2341:2399   */\n  and\n    /* \"#utility.yul\":2326:2400   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2213:2414   */\ntag_43:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2460:2461   */\n  0x01\n    /* \"#utility.yul\":2444:2458   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":2440:2462   */\n  add\n    /* \"#utility.yul\":2427:2463   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":1378:2730   */\n  jump\t// out\n    /* \"#utility.yul\":2735:2912   */\ntag_16:\n    /* \"#utility.yul\":2814:2827   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":2856:2887   */\n  dup2\n  and\n    /* \"#utility.yul\":2846:2888   */\n  dup2\n  eq\n    /* \"#utility.yul\":2836:2906   */\n  tag_45\n  jumpi\n    /* \"#utility.yul\":2902:2903   */\n  0x00\n    /* \"#utility.yul\":2899:2900   */\n  dup1\n    /* \"#utility.yul\":2892:2904   */\n  revert\n    /* \"#utility.yul\":2836:2906   */\ntag_45:\n    /* \"#utility.yul\":2735:2912   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2917:3725   */\ntag_5:\n    /* \"#utility.yul\":3050:3056   */\n  0x00\n    /* \"#utility.yul\":3058:3064   */\n  dup1\n    /* \"#utility.yul\":3066:3072   */\n  0x00\n    /* \"#utility.yul\":3074:3080   */\n  dup1\n    /* \"#utility.yul\":3082:3088   */\n  0x00\n    /* \"#utility.yul\":3090:3096   */\n  dup1\n    /* \"#utility.yul\":3098:3104   */\n  0x00\n    /* \"#utility.yul\":3106:3112   */\n  dup1\n    /* \"#utility.yul\":3159:3162   */\n  0x0100\n    /* \"#utility.yul\":3147:3156   */\n  dup10\n    /* \"#utility.yul\":3138:3145   */\n  dup12\n    /* \"#utility.yul\":3134:3157   */\n  sub\n    /* \"#utility.yul\":3130:3163   */\n  slt\n    /* \"#utility.yul\":3127:3180   */\n  iszero\n  tag_47\n  jumpi\n    /* \"#utility.yul\":3176:3177   */\n  0x00\n    /* \"#utility.yul\":3173:3174   */\n  dup1\n    /* \"#utility.yul\":3166:3178   */\n  revert\n    /* \"#utility.yul\":3127:3180   */\ntag_47:\n    /* \"#utility.yul\":3199:3239   */\n  tag_48\n    /* \"#utility.yul\":3229:3238   */\n  dup10\n    /* \"#utility.yul\":3199:3239   */\n  tag_16\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":3189:3239   */\n  swap8\n  pop\n    /* \"#utility.yul\":3258:3307   */\n  tag_49\n    /* \"#utility.yul\":3303:3305   */\n  0x20\n    /* \"#utility.yul\":3292:3301   */\n  dup11\n    /* \"#utility.yul\":3288:3306   */\n  add\n    /* \"#utility.yul\":3258:3307   */\n  tag_16\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":3248:3307   */\n  swap7\n  pop\n    /* \"#utility.yul\":3326:3375   */\n  tag_50\n    /* \"#utility.yul\":3371:3373   */\n  0x40\n    /* \"#utility.yul\":3360:3369   */\n  dup11\n    /* \"#utility.yul\":3356:3374   */\n  add\n    /* \"#utility.yul\":3326:3375   */\n  tag_16\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":3316:3375   */\n  swap6\n  pop\n    /* \"#utility.yul\":3394:3443   */\n  tag_51\n    /* \"#utility.yul\":3439:3441   */\n  0x60\n    /* \"#utility.yul\":3428:3437   */\n  dup11\n    /* \"#utility.yul\":3424:3442   */\n  add\n    /* \"#utility.yul\":3394:3443   */\n  tag_16\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":3384:3443   */\n  swap5\n  pop\n    /* \"#utility.yul\":3462:3512   */\n  tag_52\n    /* \"#utility.yul\":3507:3510   */\n  0x80\n    /* \"#utility.yul\":3496:3505   */\n  dup11\n    /* \"#utility.yul\":3492:3511   */\n  add\n    /* \"#utility.yul\":3462:3512   */\n  tag_16\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":3452:3512   */\n  swap4\n  pop\n    /* \"#utility.yul\":3531:3581   */\n  tag_53\n    /* \"#utility.yul\":3576:3579   */\n  0xa0\n    /* \"#utility.yul\":3565:3574   */\n  dup11\n    /* \"#utility.yul\":3561:3580   */\n  add\n    /* \"#utility.yul\":3531:3581   */\n  tag_16\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":3521:3581   */\n  swap3\n  pop\n    /* \"#utility.yul\":3600:3650   */\n  tag_54\n    /* \"#utility.yul\":3645:3648   */\n  0xc0\n    /* \"#utility.yul\":3634:3643   */\n  dup11\n    /* \"#utility.yul\":3630:3649   */\n  add\n    /* \"#utility.yul\":3600:3650   */\n  tag_16\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":3590:3650   */\n  swap2\n  pop\n    /* \"#utility.yul\":3669:3719   */\n  tag_55\n    /* \"#utility.yul\":3714:3717   */\n  0xe0\n    /* \"#utility.yul\":3703:3712   */\n  dup11\n    /* \"#utility.yul\":3699:3718   */\n  add\n    /* \"#utility.yul\":3669:3719   */\n  tag_16\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":3659:3719   */\n  swap1\n  pop\n    /* \"#utility.yul\":2917:3725   */\n  swap3\n  swap6\n  swap9\n  pop\n  swap3\n  swap6\n  swap9\n  swap1\n  swap4\n  swap7\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3730:3989   */\ntag_17:\n    /* \"contracts/MainBot.sol\":941:7628  contract MainBot {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/MainBot.sol\":941:7628  contract MainBot {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x869665e9\n      gt\n      tag_32\n      jumpi\n      dup1\n      0xb3ce56a2\n      gt\n      tag_33\n      jumpi\n      dup1\n      0xe0abca0b\n      gt\n      tag_34\n      jumpi\n      dup1\n      0xe0abca0b\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xe189eb42\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xe5047b30\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xf974821a\n      eq\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      dup1\n      0xb3ce56a2\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xb6658d07\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xc0fc247f\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xe037f889\n      eq\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      dup1\n      0x92eefe9b\n      gt\n      tag_35\n      jumpi\n      dup1\n      0x92eefe9b\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x9d8ef1e1\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xa30fb905\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xa98ad46c\n      eq\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      dup1\n      0x869665e9\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x8fc3047d\n      eq\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      dup1\n      0x41c0e1b5\n      gt\n      tag_36\n      jumpi\n      dup1\n      0x5e7ffa67\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x5e7ffa67\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x64aabb9e\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x6d546cdd\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x735de9f7\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      dup1\n      0x41c0e1b5\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x457f3cb0\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x4ada218b\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      dup1\n      0x1bf41362\n      gt\n      tag_38\n      jumpi\n      dup1\n      0x1bf41362\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x238f9b7a\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x26c403ed\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x3fb47a3b\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      dup1\n      0x11eac855\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1458d9d8\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x17700f01\n      eq\n      tag_5\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"contracts/MainBot.sol\":3261:3270  msg.value */\n      callvalue\n        /* \"contracts/MainBot.sol\":3243:3257  initialDeposit */\n      0x01\n      0x00\n        /* \"contracts/MainBot.sol\":3243:3270  initialDeposit += msg.value */\n      dup3\n      dup3\n      sload\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"contracts/MainBot.sol\":3315:3318  100 */\n      0x64\n      swap1\n      pop\n        /* \"contracts/MainBot.sol\":3297:3311  msg.value * 70 */\n      tag_43\n        /* \"contracts/MainBot.sol\":3297:3306  msg.value */\n      callvalue\n        /* \"contracts/MainBot.sol\":3309:3311  70 */\n      0x46\n        /* \"contracts/MainBot.sol\":3297:3311  msg.value * 70 */\n      tag_44\n      jump\t// in\n    tag_43:\n        /* \"contracts/MainBot.sol\":3296:3318  (msg.value * 70) / 100 */\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n        /* \"contracts/MainBot.sol\":3280:3292  maticBalance */\n      0x02\n      0x00\n        /* \"contracts/MainBot.sol\":3280:3318  maticBalance += (msg.value * 70) / 100 */\n      dup3\n      dup3\n      sload\n      tag_47\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_47:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"contracts/MainBot.sol\":3368:3371  100 */\n      0x64\n      swap1\n      pop\n        /* \"contracts/MainBot.sol\":3350:3364  msg.value * 30 */\n      tag_48\n        /* \"contracts/MainBot.sol\":3350:3359  msg.value */\n      callvalue\n        /* \"contracts/MainBot.sol\":3362:3364  30 */\n      0x1e\n        /* \"contracts/MainBot.sol\":3350:3364  msg.value * 30 */\n      tag_44\n      jump\t// in\n    tag_48:\n        /* \"contracts/MainBot.sol\":3349:3371  (msg.value * 30) / 100 */\n      tag_49\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_49:\n        /* \"contracts/MainBot.sol\":3328:3345  stablecoinBalance */\n      0x03\n      0x00\n        /* \"contracts/MainBot.sol\":3328:3371  stablecoinBalance += (msg.value * 30) / 100 */\n      dup3\n      dup3\n      sload\n      tag_50\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_50:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      stop\n        /* \"contracts/MainBot.sol\":941:7628  contract MainBot {... */\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/MainBot.sol\":1427:1451  address public usdcToken */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_51\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n      pop\n      sload(0x0c)\n      tag_52\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_52:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":835:867   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":817:868   */\n      dup2\n      mstore\n        /* \"#utility.yul\":805:807   */\n      0x20\n        /* \"#utility.yul\":790:808   */\n      add\n        /* \"contracts/MainBot.sol\":1427:1451  address public usdcToken */\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MainBot.sol\":1058:1085  uint256 public maticBalance */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_56\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_56:\n      pop\n      tag_57\n      sload(0x02)\n      dup2\n      jump\n    tag_57:\n      mload(0x40)\n        /* \"#utility.yul\":1025:1050   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1013:1015   */\n      0x20\n        /* \"#utility.yul\":998:1016   */\n      add\n        /* \"contracts/MainBot.sol\":1058:1085  uint256 public maticBalance */\n      tag_54\n        /* \"#utility.yul\":879:1056   */\n      jump\n        /* \"contracts/MainBot.sol\":4858:4942  function disableTrading() external onlyOwner {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_61\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_61:\n      pop\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n      stop\n        /* \"contracts/MainBot.sol\":1283:1309  uint256 public nextLogTime */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_64\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_64:\n      pop\n      tag_57\n      sload(0x08)\n      dup2\n      jump\n        /* \"contracts/MainBot.sol\":1607:1654  address public aaveLendingPoolAddressesProvider */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n      pop\n      sload(0x11)\n      tag_52\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/MainBot.sol\":3880:4044  function initiateTrade(string memory tradeType, uint256 amount) external onlyOwner {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_72\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_72:\n      pop\n      tag_62\n      tag_74\n      calldatasize\n      0x04\n      tag_75\n      jump\t// in\n    tag_74:\n      tag_76\n      jump\t// in\n        /* \"contracts/MainBot.sol\":4185:4659  function checkLiquidity(uint256 amountIn, address poolAddress) public view returns (bool sufficientLiquidity) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_77\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_77:\n      pop\n      tag_78\n      tag_79\n      calldatasize\n      0x04\n      tag_80\n      jump\t// in\n    tag_79:\n      tag_81\n      jump\t// in\n    tag_78:\n      mload(0x40)\n        /* \"#utility.yul\":2933:2947   */\n      swap1\n      iszero\n        /* \"#utility.yul\":2926:2948   */\n      iszero\n        /* \"#utility.yul\":2908:2949   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2896:2898   */\n      0x20\n        /* \"#utility.yul\":2881:2899   */\n      add\n        /* \"contracts/MainBot.sol\":4185:4659  function checkLiquidity(uint256 amountIn, address poolAddress) public view returns (bool sufficientLiquidity) {... */\n      tag_54\n        /* \"#utility.yul\":2768:2955   */\n      jump\n        /* \"contracts/MainBot.sol\":5204:5307  function kill() external onlyOwner {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_84\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_84:\n      pop\n      tag_62\n      tag_86\n      jump\t// in\n        /* \"contracts/MainBot.sol\":4948:5198  function withdrawInGwei(uint256 amountInGwei) external onlyOwner {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_87\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_87:\n      pop\n      tag_62\n      tag_89\n      calldatasize\n      0x04\n      tag_90\n      jump\t// in\n    tag_89:\n      tag_91\n      jump\t// in\n        /* \"contracts/MainBot.sol\":991:1017  bool public tradingEnabled */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_92\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_92:\n      pop\n      sload(0x00)\n      tag_78\n      swap1\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\n        /* \"contracts/MainBot.sol\":1661:1705  mapping(string => address) public dexRouters */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_96\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_96:\n      pop\n      tag_52\n      tag_98\n      calldatasize\n      0x04\n      tag_99\n      jump\t// in\n    tag_98:\n      dup1\n      mload\n      0x20\n      dup2\n      dup4\n      add\n      dup2\n      add\n      dup1\n      mload\n      0x12\n      dup3\n      mstore\n      swap3\n      dup3\n      add\n      swap2\n      swap1\n      swap4\n      add\n      keccak256\n      swap2\n      mstore\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/MainBot.sol\":1091:1123  uint256 public stablecoinBalance */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_102\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_102:\n      pop\n      tag_57\n      sload(0x03)\n      dup2\n      jump\n        /* \"contracts/MainBot.sol\":1315:1361  string public currentActivity = \"Initializing\" */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_106\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_106:\n      pop\n      tag_107\n      tag_108\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n        /* \"contracts/MainBot.sol\":1530:1558  address public uniswapRouter */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_111\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_111:\n      pop\n      sload(0x0f)\n      tag_52\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/MainBot.sol\":3384:3749  function adjustTimeframe(uint256 selectedTimeframe) external onlyOwner {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_115\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_115:\n      pop\n      tag_62\n      tag_117\n      calldatasize\n      0x04\n      tag_90\n      jump\t// in\n    tag_117:\n      tag_118\n      jump\t// in\n        /* \"contracts/MainBot.sol\":964:984  address public owner */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_119\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_119:\n      pop\n      sload(0x00)\n      tag_52\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/MainBot.sol\":3755:3874  function checkPrice() external view returns (uint256) {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_123\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_123:\n      pop\n      tag_57\n      tag_125\n      jump\t// in\n        /* \"contracts/MainBot.sol\":3103:3200  function setController(address controller) external onlyOwner {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_127\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_127:\n      pop\n      tag_62\n      tag_129\n      calldatasize\n      0x04\n      tag_130\n      jump\t// in\n    tag_129:\n      tag_131\n      jump\t// in\n        /* \"contracts/MainBot.sol\":4050:4179  function convertAllToPOL() external onlyOwner {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_132\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_132:\n      pop\n      tag_62\n      tag_134\n      jump\t// in\n        /* \"contracts/MainBot.sol\":1199:1235  uint256 public gasCostMultiplier = 3 */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_135\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_135:\n      pop\n      tag_57\n      sload(0x06)\n      dup2\n      jump\n        /* \"contracts/MainBot.sol\":1397:1421  address public usdtToken */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_139\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_139:\n      pop\n      sload(0x0b)\n      tag_52\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/MainBot.sol\":1241:1277  uint256 public trailingStopLoss = 10 */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_143\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_143:\n      pop\n      tag_57\n      sload(0x07)\n      dup2\n      jump\n        /* \"contracts/MainBot.sol\":1368:1391  address public polToken */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_147\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_147:\n      pop\n      sload(0x0a)\n      tag_52\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/MainBot.sol\":1165:1193  uint256 public lossThreshold */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_151\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_151:\n      pop\n      tag_57\n      sload(0x05)\n      dup2\n      jump\n        /* \"contracts/MainBot.sol\":1023:1052  uint256 public initialDeposit */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_155\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_155:\n      pop\n      tag_57\n      sload(0x01)\n      dup2\n      jump\n        /* \"contracts/MainBot.sol\":1493:1524  address public priceFeedAddress */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_159\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_159:\n      pop\n      sload(0x0e)\n      tag_52\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/MainBot.sol\":1457:1487  address public quickSwapRouter */\n    tag_29:\n      callvalue\n      dup1\n      iszero\n      tag_163\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_163:\n      pop\n      sload(0x0d)\n      tag_52\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/MainBot.sol\":1564:1601  address public uniswapPositionManager */\n    tag_30:\n      callvalue\n      dup1\n      iszero\n      tag_167\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_167:\n      pop\n      sload(0x10)\n      tag_52\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/MainBot.sol\":1129:1159  uint256 public profitThreshold */\n    tag_31:\n      callvalue\n      dup1\n      iszero\n      tag_171\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_171:\n      pop\n      tag_57\n      sload(0x04)\n      dup2\n      jump\n        /* \"contracts/MainBot.sol\":4858:4942  function disableTrading() external onlyOwner {... */\n    tag_63:\n        /* \"contracts/MainBot.sol\":2021:2026  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/MainBot.sol\":2007:2017  msg.sender */\n      caller\n        /* \"contracts/MainBot.sol\":2007:2026  msg.sender == owner */\n      eq\n        /* \"contracts/MainBot.sol\":1999:2044  require(msg.sender == owner, \"Not the owner\") */\n      tag_176\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_177\n      swap1\n      tag_178\n      jump\t// in\n    tag_177:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_176:\n        /* \"contracts/MainBot.sol\":4930:4935  false */\n      0x00\n        /* \"contracts/MainBot.sol\":4913:4935  tradingEnabled = false */\n      dup1\n      sload\n      not(shl(0xa0, 0xff))\n      and\n      swap1\n      sstore\n        /* \"contracts/MainBot.sol\":4858:4942  function disableTrading() external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/MainBot.sol\":3880:4044  function initiateTrade(string memory tradeType, uint256 amount) external onlyOwner {... */\n    tag_76:\n        /* \"contracts/MainBot.sol\":2021:2026  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/MainBot.sol\":2007:2017  msg.sender */\n      caller\n        /* \"contracts/MainBot.sol\":2007:2026  msg.sender == owner */\n      eq\n        /* \"contracts/MainBot.sol\":1999:2044  require(msg.sender == owner, \"Not the owner\") */\n      tag_181\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_177\n      swap1\n      tag_178\n      jump\t// in\n    tag_181:\n        /* \"contracts/MainBot.sol\":3992:4002  msg.sender */\n      caller\n        /* \"contracts/MainBot.sol\":3978:4037  TradeExecuted(msg.sender, tradeType, amount, 0, getPrice()) */\n      0x030fdcd4f0c28c5dbcbc3f59aa8e2260c7f58ac45be2a2dca652999af89c33e0\n        /* \"contracts/MainBot.sol\":4004:4013  tradeType */\n      dup4\n        /* \"contracts/MainBot.sol\":4015:4021  amount */\n      dup4\n        /* \"contracts/MainBot.sol\":4023:4024  0 */\n      0x00\n        /* \"contracts/MainBot.sol\":4026:4036  getPrice() */\n      tag_184\n        /* \"contracts/MainBot.sol\":4026:4034  getPrice */\n      tag_185\n        /* \"contracts/MainBot.sol\":4026:4036  getPrice() */\n      jump\t// in\n    tag_184:\n        /* \"contracts/MainBot.sol\":3978:4037  TradeExecuted(msg.sender, tradeType, amount, 0, getPrice()) */\n      mload(0x40)\n      tag_186\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_186:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/MainBot.sol\":3880:4044  function initiateTrade(string memory tradeType, uint256 amount) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MainBot.sol\":4185:4659  function checkLiquidity(uint256 amountIn, address poolAddress) public view returns (bool sufficientLiquidity) {... */\n    tag_81:\n        /* \"contracts/MainBot.sol\":4269:4293  bool sufficientLiquidity */\n      0x00\n        /* \"contracts/MainBot.sol\":4305:4324  IUniswapV3Pool pool */\n      dup1\n        /* \"contracts/MainBot.sol\":4342:4353  poolAddress */\n      dup3\n        /* \"contracts/MainBot.sol\":4305:4354  IUniswapV3Pool pool = IUniswapV3Pool(poolAddress) */\n      swap1\n      pop\n        /* \"contracts/MainBot.sol\":4365:4385  uint160 sqrtPriceX96 */\n      0x00\n        /* \"contracts/MainBot.sol\":4395:4399  pool */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MainBot.sol\":4395:4405  pool.slot0 */\n      and\n      0x3850c7bd\n        /* \"contracts/MainBot.sol\":4395:4407  pool.slot0() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0xe0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_190\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_190:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_191\n      swap2\n      swap1\n      tag_192\n      jump\t// in\n    tag_191:\n        /* \"contracts/MainBot.sol\":4364:4407  (uint160 sqrtPriceX96,,,,,,) = pool.slot0() */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/MainBot.sol\":4417:4434  uint256 liquidity */\n      0x00\n        /* \"contracts/MainBot.sol\":4437:4441  pool */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MainBot.sol\":4437:4451  pool.liquidity */\n      and\n      0x1a686502\n        /* \"contracts/MainBot.sol\":4437:4453  pool.liquidity() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_194\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_194:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_195\n      swap2\n      swap1\n      tag_196\n      jump\t// in\n    tag_195:\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"contracts/MainBot.sol\":4417:4453  uint256 liquidity = pool.liquidity() */\n      and\n      swap1\n      pop\n        /* \"contracts/MainBot.sol\":4463:4480  uint256 amountOut */\n      0x00\n        /* \"contracts/MainBot.sol\":4483:4536  calculateAmountOut(amountIn, sqrtPriceX96, liquidity) */\n      tag_197\n        /* \"contracts/MainBot.sol\":4502:4510  amountIn */\n      dup8\n        /* \"contracts/MainBot.sol\":4512:4524  sqrtPriceX96 */\n      dup5\n        /* \"contracts/MainBot.sol\":4526:4535  liquidity */\n      dup5\n        /* \"contracts/MainBot.sol\":4483:4501  calculateAmountOut */\n      tag_198\n        /* \"contracts/MainBot.sol\":4483:4536  calculateAmountOut(amountIn, sqrtPriceX96, liquidity) */\n      jump\t// in\n    tag_197:\n        /* \"contracts/MainBot.sol\":4463:4536  uint256 amountOut = calculateAmountOut(amountIn, sqrtPriceX96, liquidity) */\n      swap1\n      pop\n        /* \"contracts/MainBot.sol\":4546:4562  uint256 slippage */\n      0x00\n        /* \"contracts/MainBot.sol\":4583:4586  100 */\n      0x64\n        /* \"contracts/MainBot.sol\":4566:4579  amountOut * 1 */\n      tag_199\n        /* \"contracts/MainBot.sol\":4463:4536  uint256 amountOut = calculateAmountOut(amountIn, sqrtPriceX96, liquidity) */\n      dup4\n        /* \"contracts/MainBot.sol\":4578:4579  1 */\n      0x01\n        /* \"contracts/MainBot.sol\":4566:4579  amountOut * 1 */\n      tag_44\n      jump\t// in\n    tag_199:\n        /* \"contracts/MainBot.sol\":4565:4586  (amountOut * 1) / 100 */\n      tag_200\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_200:\n        /* \"contracts/MainBot.sol\":4546:4586  uint256 slippage = (amountOut * 1) / 100 */\n      swap1\n      pop\n        /* \"contracts/MainBot.sol\":4632:4651  amountIn - slippage */\n      tag_201\n        /* \"contracts/MainBot.sol\":4546:4586  uint256 slippage = (amountOut * 1) / 100 */\n      dup2\n        /* \"contracts/MainBot.sol\":4632:4640  amountIn */\n      dup10\n        /* \"contracts/MainBot.sol\":4632:4651  amountIn - slippage */\n      tag_202\n      jump\t// in\n    tag_201:\n        /* \"contracts/MainBot.sol\":4619:4651  amountOut >= amountIn - slippage */\n      swap1\n      swap2\n      lt\n      iszero\n      swap8\n        /* \"contracts/MainBot.sol\":4185:4659  function checkLiquidity(uint256 amountIn, address poolAddress) public view returns (bool sufficientLiquidity) {... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MainBot.sol\":5204:5307  function kill() external onlyOwner {... */\n    tag_86:\n        /* \"contracts/MainBot.sol\":2021:2026  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/MainBot.sol\":2007:2017  msg.sender */\n      caller\n        /* \"contracts/MainBot.sol\":2007:2026  msg.sender == owner */\n      eq\n        /* \"contracts/MainBot.sol\":1999:2044  require(msg.sender == owner, \"Not the owner\") */\n      tag_204\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_177\n      swap1\n      tag_178\n      jump\t// in\n    tag_204:\n        /* \"contracts/MainBot.sol\":5249:5300  payable(msg.sender).transfer(address(this).balance) */\n      mload(0x40)\n        /* \"contracts/MainBot.sol\":5257:5267  msg.sender */\n      caller\n      swap1\n        /* \"contracts/MainBot.sol\":5278:5299  address(this).balance */\n      selfbalance\n        /* \"contracts/MainBot.sol\":5249:5300  payable(msg.sender).transfer(address(this).balance) */\n      dup1\n      iszero\n      0x08fc\n      mul\n      swap2\n      0x00\n      dup2\n      dup2\n      dup2\n        /* \"contracts/MainBot.sol\":5278:5299  address(this).balance */\n      dup6\n        /* \"contracts/MainBot.sol\":5257:5267  msg.sender */\n      dup9\n        /* \"contracts/MainBot.sol\":5249:5300  payable(msg.sender).transfer(address(this).balance) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_208\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_208:\n      pop\n        /* \"contracts/MainBot.sol\":5204:5307  function kill() external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/MainBot.sol\":4948:5198  function withdrawInGwei(uint256 amountInGwei) external onlyOwner {... */\n    tag_91:\n        /* \"contracts/MainBot.sol\":2021:2026  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/MainBot.sol\":2007:2017  msg.sender */\n      caller\n        /* \"contracts/MainBot.sol\":2007:2026  msg.sender == owner */\n      eq\n        /* \"contracts/MainBot.sol\":1999:2044  require(msg.sender == owner, \"Not the owner\") */\n      tag_210\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_177\n      swap1\n      tag_178\n      jump\t// in\n    tag_210:\n        /* \"contracts/MainBot.sol\":5023:5042  uint256 amountInWei */\n      0x00\n        /* \"contracts/MainBot.sol\":5045:5066  amountInGwei * 1 gwei */\n      tag_213\n        /* \"contracts/MainBot.sol\":5045:5057  amountInGwei */\n      dup3\n        /* \"contracts/MainBot.sol\":5060:5066  1 gwei */\n      0x3b9aca00\n        /* \"contracts/MainBot.sol\":5045:5066  amountInGwei * 1 gwei */\n      tag_44\n      jump\t// in\n    tag_213:\n        /* \"contracts/MainBot.sol\":5023:5066  uint256 amountInWei = amountInGwei * 1 gwei */\n      swap1\n      pop\n        /* \"contracts/MainBot.sol\":5109:5120  amountInWei */\n      dup1\n        /* \"contracts/MainBot.sol\":5084:5105  address(this).balance */\n      selfbalance\n        /* \"contracts/MainBot.sol\":5084:5120  address(this).balance >= amountInWei */\n      lt\n      iszero\n        /* \"contracts/MainBot.sol\":5076:5145  require(address(this).balance >= amountInWei, \"Insufficient balance\") */\n      tag_214\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6971:6973   */\n      0x20\n        /* \"contracts/MainBot.sol\":5076:5145  require(address(this).balance >= amountInWei, \"Insufficient balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6953:6974   */\n      mstore\n        /* \"#utility.yul\":7010:7012   */\n      0x14\n        /* \"#utility.yul\":6990:7008   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6983:7013   */\n      mstore\n      shl(0x60, 0x496e73756666696369656e742062616c616e6365)\n        /* \"#utility.yul\":7029:7047   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7022:7072   */\n      mstore\n        /* \"#utility.yul\":7089:7107   */\n      0x64\n      add\n        /* \"contracts/MainBot.sol\":5076:5145  require(address(this).balance >= amountInWei, \"Insufficient balance\") */\n      tag_177\n        /* \"#utility.yul\":6769:7113   */\n      jump\n        /* \"contracts/MainBot.sol\":5076:5145  require(address(this).balance >= amountInWei, \"Insufficient balance\") */\n    tag_214:\n        /* \"contracts/MainBot.sol\":5163:5168  owner */\n      0x00\n      dup1\n      sload\n        /* \"contracts/MainBot.sol\":5155:5191  payable(owner).transfer(amountInWei) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MainBot.sol\":5163:5168  owner */\n      swap1\n      swap2\n      and\n      swap2\n        /* \"contracts/MainBot.sol\":5155:5191  payable(owner).transfer(amountInWei) */\n      dup4\n      iszero\n      0x08fc\n      mul\n      swap2\n        /* \"contracts/MainBot.sol\":5179:5190  amountInWei */\n      dup5\n      swap2\n        /* \"contracts/MainBot.sol\":5155:5191  payable(owner).transfer(amountInWei) */\n      dup2\n        /* \"contracts/MainBot.sol\":5163:5168  owner */\n      dup2\n        /* \"contracts/MainBot.sol\":5155:5191  payable(owner).transfer(amountInWei) */\n      dup2\n        /* \"contracts/MainBot.sol\":5179:5190  amountInWei */\n      dup6\n        /* \"contracts/MainBot.sol\":5163:5168  owner */\n      dup9\n        /* \"contracts/MainBot.sol\":5155:5191  payable(owner).transfer(amountInWei) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_218\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_218:\n      pop\n        /* \"contracts/MainBot.sol\":5013:5198  {... */\n      pop\n        /* \"contracts/MainBot.sol\":4948:5198  function withdrawInGwei(uint256 amountInGwei) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/MainBot.sol\":1315:1361  string public currentActivity = \"Initializing\" */\n    tag_108:\n      0x09\n      dup1\n      sload\n      tag_219\n      swap1\n      tag_220\n      jump\t// in\n    tag_219:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_221\n      swap1\n      tag_220\n      jump\t// in\n    tag_221:\n      dup1\n      iszero\n      tag_222\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_223\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_222)\n    tag_223:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_224:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_224\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_222:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/MainBot.sol\":3384:3749  function adjustTimeframe(uint256 selectedTimeframe) external onlyOwner {... */\n    tag_118:\n        /* \"contracts/MainBot.sol\":2021:2026  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/MainBot.sol\":2007:2017  msg.sender */\n      caller\n        /* \"contracts/MainBot.sol\":2007:2026  msg.sender == owner */\n      eq\n        /* \"contracts/MainBot.sol\":1999:2044  require(msg.sender == owner, \"Not the owner\") */\n      tag_226\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_177\n      swap1\n      tag_178\n      jump\t// in\n    tag_226:\n        /* \"contracts/MainBot.sol\":3675:3685  msg.sender */\n      caller\n        /* \"contracts/MainBot.sol\":3661:3742  TradeExecuted(msg.sender, \"Timeframe adjusted\", selectedTimeframe, 0, getPrice()) */\n      0x030fdcd4f0c28c5dbcbc3f59aa8e2260c7f58ac45be2a2dca652999af89c33e0\n        /* \"contracts/MainBot.sol\":3709:3726  selectedTimeframe */\n      dup3\n        /* \"contracts/MainBot.sol\":3728:3729  0 */\n      0x00\n        /* \"contracts/MainBot.sol\":3731:3741  getPrice() */\n      tag_232\n        /* \"contracts/MainBot.sol\":3731:3739  getPrice */\n      tag_185\n        /* \"contracts/MainBot.sol\":3731:3741  getPrice() */\n      jump\t// in\n    tag_232:\n        /* \"contracts/MainBot.sol\":3661:3742  TradeExecuted(msg.sender, \"Timeframe adjusted\", selectedTimeframe, 0, getPrice()) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":7797:7800   */\n      0x80\n        /* \"#utility.yul\":7779:7801   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":7838:7840   */\n      0x12\n        /* \"#utility.yul\":7817:7836   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":7810:7841   */\n      mstore\n      shl(0x72, 0x151a5b59599c985b594818591a9d5cdd1959)\n        /* \"#utility.yul\":7872:7875   */\n      0xa0\n        /* \"#utility.yul\":7857:7876   */\n      dup3\n      add\n        /* \"#utility.yul\":7850:7899   */\n      mstore\n        /* \"#utility.yul\":7966:7970   */\n      0x20\n        /* \"#utility.yul\":7951:7971   */\n      dup2\n      add\n        /* \"#utility.yul\":7944:7980   */\n      swap5\n      swap1\n      swap5\n      mstore\n        /* \"#utility.yul\":7996:8014   */\n      dup4\n      add\n        /* \"#utility.yul\":7989:8023   */\n      swap2\n      swap1\n      swap2\n      mstore\n      0x60\n        /* \"#utility.yul\":8039:8057   */\n      dup3\n      add\n        /* \"#utility.yul\":8032:8066   */\n      mstore\n        /* \"#utility.yul\":7931:7934   */\n      0xc0\n        /* \"#utility.yul\":7916:7935   */\n      add\n        /* \"contracts/MainBot.sol\":3661:3742  TradeExecuted(msg.sender, \"Timeframe adjusted\", selectedTimeframe, 0, getPrice()) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/MainBot.sol\":3384:3749  function adjustTimeframe(uint256 selectedTimeframe) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/MainBot.sol\":3755:3874  function checkPrice() external view returns (uint256) {... */\n    tag_125:\n        /* \"contracts/MainBot.sol\":3800:3807  uint256 */\n      0x00\n        /* \"contracts/MainBot.sol\":3819:3832  uint256 price */\n      dup1\n        /* \"contracts/MainBot.sol\":3835:3845  getPrice() */\n      tag_236\n        /* \"contracts/MainBot.sol\":3835:3843  getPrice */\n      tag_185\n        /* \"contracts/MainBot.sol\":3835:3845  getPrice() */\n      jump\t// in\n    tag_236:\n        /* \"contracts/MainBot.sol\":3819:3845  uint256 price = getPrice() */\n      swap3\n        /* \"contracts/MainBot.sol\":3755:3874  function checkPrice() external view returns (uint256) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MainBot.sol\":3103:3200  function setController(address controller) external onlyOwner {... */\n    tag_131:\n        /* \"contracts/MainBot.sol\":2021:2026  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/MainBot.sol\":2007:2017  msg.sender */\n      caller\n        /* \"contracts/MainBot.sol\":2007:2026  msg.sender == owner */\n      eq\n        /* \"contracts/MainBot.sol\":1999:2044  require(msg.sender == owner, \"Not the owner\") */\n      tag_238\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_177\n      swap1\n      tag_178\n      jump\t// in\n    tag_238:\n        /* \"contracts/MainBot.sol\":3175:3180  owner */\n      0x00\n        /* \"contracts/MainBot.sol\":3175:3193  owner = controller */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/MainBot.sol\":3103:3200  function setController(address controller) external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/MainBot.sol\":4050:4179  function convertAllToPOL() external onlyOwner {... */\n    tag_134:\n        /* \"contracts/MainBot.sol\":2021:2026  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/MainBot.sol\":2007:2017  msg.sender */\n      caller\n        /* \"contracts/MainBot.sol\":2007:2026  msg.sender == owner */\n      eq\n        /* \"contracts/MainBot.sol\":1999:2044  require(msg.sender == owner, \"Not the owner\") */\n      tag_242\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_177\n      swap1\n      tag_178\n      jump\t// in\n    tag_242:\n        /* \"contracts/MainBot.sol\":4125:4135  msg.sender */\n      caller\n        /* \"contracts/MainBot.sol\":4111:4172  TradeExecuted(msg.sender, \"convert to POL\", 0, 0, getPrice()) */\n      0x030fdcd4f0c28c5dbcbc3f59aa8e2260c7f58ac45be2a2dca652999af89c33e0\n        /* \"contracts/MainBot.sol\":4155:4156  0 */\n      0x00\n      dup1\n        /* \"contracts/MainBot.sol\":4161:4171  getPrice() */\n      tag_245\n        /* \"contracts/MainBot.sol\":4161:4169  getPrice */\n      tag_185\n        /* \"contracts/MainBot.sol\":4161:4171  getPrice() */\n      jump\t// in\n    tag_245:\n        /* \"contracts/MainBot.sol\":4111:4172  TradeExecuted(msg.sender, \"convert to POL\", 0, 0, getPrice()) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":8379:8382   */\n      0x80\n        /* \"#utility.yul\":8361:8383   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":8420:8422   */\n      0x0e\n        /* \"#utility.yul\":8399:8418   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":8392:8423   */\n      mstore\n      shl(0x92, 0x18dbdb9d995c9d081d1bc81413d3)\n        /* \"#utility.yul\":8454:8457   */\n      0xa0\n        /* \"#utility.yul\":8439:8458   */\n      dup3\n      add\n        /* \"#utility.yul\":8432:8477   */\n      mstore\n        /* \"#utility.yul\":8544:8548   */\n      0x20\n        /* \"#utility.yul\":8529:8549   */\n      dup2\n      add\n        /* \"#utility.yul\":8522:8558   */\n      swap5\n      swap1\n      swap5\n      mstore\n        /* \"#utility.yul\":8574:8592   */\n      dup4\n      add\n        /* \"#utility.yul\":8567:8601   */\n      swap2\n      swap1\n      swap2\n      mstore\n      0x60\n        /* \"#utility.yul\":8617:8635   */\n      dup3\n      add\n        /* \"#utility.yul\":8610:8644   */\n      mstore\n        /* \"#utility.yul\":8509:8512   */\n      0xc0\n        /* \"#utility.yul\":8494:8513   */\n      add\n        /* \"contracts/MainBot.sol\":4111:4172  TradeExecuted(msg.sender, \"convert to POL\", 0, 0, getPrice()) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/MainBot.sol\":4050:4179  function convertAllToPOL() external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/MainBot.sol\":7386:7626  function getPrice() internal view returns (uint256) {... */\n    tag_185:\n        /* \"contracts/MainBot.sol\":7504:7520  priceFeedAddress */\n      sload(0x0e)\n        /* \"contracts/MainBot.sol\":7550:7577  priceFeed.latestRoundData() */\n      0x40\n      dup1\n      mload\n      shl(0xe2, 0x3fabe5a3)\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"contracts/MainBot.sol\":7429:7436  uint256 */\n      0x00\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MainBot.sol\":7504:7520  priceFeedAddress */\n      and\n      swap2\n        /* \"contracts/MainBot.sol\":7429:7436  uint256 */\n      dup4\n      swap2\n        /* \"contracts/MainBot.sol\":7504:7520  priceFeedAddress */\n      dup4\n      swap2\n        /* \"contracts/MainBot.sol\":7550:7575  priceFeed.latestRoundData */\n      0xfeaf968c\n      swap2\n        /* \"contracts/MainBot.sol\":7550:7577  priceFeed.latestRoundData() */\n      0x04\n      dup1\n      dup4\n      add\n      swap3\n      0xa0\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"contracts/MainBot.sol\":7504:7520  priceFeedAddress */\n      dup7\n        /* \"contracts/MainBot.sol\":7550:7577  priceFeed.latestRoundData() */\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_250\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_250:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_251\n      swap2\n      swap1\n      tag_252\n      jump\t// in\n    tag_251:\n        /* \"contracts/MainBot.sol\":7531:7577  (, int price,,,) = priceFeed.latestRoundData() */\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"contracts/MainBot.sol\":7602:7607  price */\n      dup1\n        /* \"contracts/MainBot.sol\":7610:7618  10 ** 10 */\n      0x02540be400\n        /* \"contracts/MainBot.sol\":7602:7618  price * 10 ** 10 */\n      tag_253\n      swap2\n      swap1\n      tag_254\n      jump\t// in\n    tag_253:\n        /* \"contracts/MainBot.sol\":7587:7619  return uint256(price * 10 ** 10) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/MainBot.sol\":7386:7626  function getPrice() internal view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/MainBot.sol\":4665:4852  function calculateAmountOut(uint256 amountIn, uint160 sqrtPriceX96, uint256 liquidity) internal pure returns (uint256) {... */\n    tag_198:\n        /* \"contracts/MainBot.sol\":4775:4782  uint256 */\n      0x00\n        /* \"contracts/MainBot.sol\":4835:4844  liquidity */\n      dup2\n        /* \"contracts/MainBot.sol\":4809:4832  amountIn * sqrtPriceX96 */\n      tag_256\n      sub(shl(0xa0, 0x01), 0x01)\n      dup6\n      and\n        /* \"contracts/MainBot.sol\":4809:4817  amountIn */\n      dup7\n        /* \"contracts/MainBot.sol\":4809:4832  amountIn * sqrtPriceX96 */\n      tag_44\n      jump\t// in\n    tag_256:\n        /* \"contracts/MainBot.sol\":4809:4844  amountIn * sqrtPriceX96 / liquidity */\n      tag_257\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_257:\n        /* \"contracts/MainBot.sol\":4794:4845  return uint256(amountIn * sqrtPriceX96 / liquidity) */\n      swap5\n        /* \"contracts/MainBot.sol\":4665:4852  function calculateAmountOut(uint256 amountIn, uint160 sqrtPriceX96, uint256 liquidity) internal pure returns (uint256) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:141   */\n    tag_258:\n        /* \"#utility.yul\":75:85   */\n      0x4e487b71\n        /* \"#utility.yul\":70:73   */\n      0xe0\n        /* \"#utility.yul\":66:86   */\n      shl\n        /* \"#utility.yul\":63:64   */\n      0x00\n        /* \"#utility.yul\":56:87   */\n      mstore\n        /* \"#utility.yul\":106:110   */\n      0x11\n        /* \"#utility.yul\":103:104   */\n      0x04\n        /* \"#utility.yul\":96:111   */\n      mstore\n        /* \"#utility.yul\":130:134   */\n      0x24\n        /* \"#utility.yul\":127:128   */\n      0x00\n        /* \"#utility.yul\":120:135   */\n      revert\n        /* \"#utility.yul\":146:271   */\n    tag_42:\n        /* \"#utility.yul\":211:220   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":232:242   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":229:265   */\n      iszero\n      tag_236\n      jumpi\n        /* \"#utility.yul\":245:263   */\n      tag_236\n      tag_258\n      jump\t// in\n        /* \"#utility.yul\":276:444   */\n    tag_44:\n        /* \"#utility.yul\":349:358   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":380:389   */\n      dup2\n      iszero\n        /* \"#utility.yul\":397:412   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":391:413   */\n      dup5\n      eq\n        /* \"#utility.yul\":377:414   */\n      or\n        /* \"#utility.yul\":367:438   */\n      tag_236\n      jumpi\n        /* \"#utility.yul\":418:436   */\n      tag_236\n      tag_258\n      jump\t// in\n        /* \"#utility.yul\":449:666   */\n    tag_46:\n        /* \"#utility.yul\":489:490   */\n      0x00\n        /* \"#utility.yul\":515:516   */\n      dup3\n        /* \"#utility.yul\":505:637   */\n      tag_274\n      jumpi\n        /* \"#utility.yul\":559:569   */\n      0x4e487b71\n        /* \"#utility.yul\":554:557   */\n      0xe0\n        /* \"#utility.yul\":550:570   */\n      shl\n        /* \"#utility.yul\":547:548   */\n      0x00\n        /* \"#utility.yul\":540:571   */\n      mstore\n        /* \"#utility.yul\":594:598   */\n      0x12\n        /* \"#utility.yul\":591:592   */\n      0x04\n        /* \"#utility.yul\":584:599   */\n      mstore\n        /* \"#utility.yul\":622:626   */\n      0x24\n        /* \"#utility.yul\":619:620   */\n      0x00\n        /* \"#utility.yul\":612:627   */\n      revert\n        /* \"#utility.yul\":505:637   */\n    tag_274:\n      pop\n        /* \"#utility.yul\":651:660   */\n      div\n      swap1\n        /* \"#utility.yul\":449:666   */\n      jump\t// out\n        /* \"#utility.yul\":1061:1188   */\n    tag_259:\n        /* \"#utility.yul\":1122:1132   */\n      0x4e487b71\n        /* \"#utility.yul\":1117:1120   */\n      0xe0\n        /* \"#utility.yul\":1113:1133   */\n      shl\n        /* \"#utility.yul\":1110:1111   */\n      0x00\n        /* \"#utility.yul\":1103:1134   */\n      mstore\n        /* \"#utility.yul\":1153:1157   */\n      0x41\n        /* \"#utility.yul\":1150:1151   */\n      0x04\n        /* \"#utility.yul\":1143:1158   */\n      mstore\n        /* \"#utility.yul\":1177:1181   */\n      0x24\n        /* \"#utility.yul\":1174:1175   */\n      0x00\n        /* \"#utility.yul\":1167:1182   */\n      revert\n        /* \"#utility.yul\":1193:1912   */\n    tag_260:\n        /* \"#utility.yul\":1236:1241   */\n      0x00\n        /* \"#utility.yul\":1289:1292   */\n      dup3\n        /* \"#utility.yul\":1282:1286   */\n      0x1f\n        /* \"#utility.yul\":1274:1280   */\n      dup4\n        /* \"#utility.yul\":1270:1287   */\n      add\n        /* \"#utility.yul\":1266:1293   */\n      slt\n        /* \"#utility.yul\":1256:1311   */\n      tag_279\n      jumpi\n        /* \"#utility.yul\":1307:1308   */\n      0x00\n        /* \"#utility.yul\":1304:1305   */\n      dup1\n        /* \"#utility.yul\":1297:1309   */\n      revert\n        /* \"#utility.yul\":1256:1311   */\n    tag_279:\n        /* \"#utility.yul\":1343:1349   */\n      dup2\n        /* \"#utility.yul\":1330:1350   */\n      calldataload\n        /* \"#utility.yul\":1369:1387   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1406:1408   */\n      dup1\n        /* \"#utility.yul\":1402:1404   */\n      dup3\n        /* \"#utility.yul\":1399:1409   */\n      gt\n        /* \"#utility.yul\":1396:1432   */\n      iszero\n      tag_281\n      jumpi\n        /* \"#utility.yul\":1412:1430   */\n      tag_281\n      tag_259\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":1487:1489   */\n      0x40\n        /* \"#utility.yul\":1481:1490   */\n      mload\n        /* \"#utility.yul\":1455:1457   */\n      0x1f\n        /* \"#utility.yul\":1541:1554   */\n      dup4\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1537:1559   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":1561:1563   */\n      0x3f\n        /* \"#utility.yul\":1533:1564   */\n      add\n        /* \"#utility.yul\":1529:1569   */\n      and\n        /* \"#utility.yul\":1517:1570   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":1585:1603   */\n      dup3\n      dup3\n      gt\n        /* \"#utility.yul\":1605:1627   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":1582:1628   */\n      or\n        /* \"#utility.yul\":1579:1651   */\n      iszero\n      tag_283\n      jumpi\n        /* \"#utility.yul\":1631:1649   */\n      tag_283\n      tag_259\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":1671:1681   */\n      dup2\n        /* \"#utility.yul\":1667:1669   */\n      0x40\n        /* \"#utility.yul\":1660:1682   */\n      mstore\n        /* \"#utility.yul\":1706:1708   */\n      dup4\n        /* \"#utility.yul\":1698:1704   */\n      dup2\n        /* \"#utility.yul\":1691:1709   */\n      mstore\n        /* \"#utility.yul\":1752:1755   */\n      dup7\n        /* \"#utility.yul\":1745:1749   */\n      0x20\n        /* \"#utility.yul\":1740:1742   */\n      dup6\n        /* \"#utility.yul\":1732:1738   */\n      dup9\n        /* \"#utility.yul\":1728:1743   */\n      add\n        /* \"#utility.yul\":1724:1750   */\n      add\n        /* \"#utility.yul\":1721:1756   */\n      gt\n        /* \"#utility.yul\":1718:1773   */\n      iszero\n      tag_284\n      jumpi\n        /* \"#utility.yul\":1769:1770   */\n      0x00\n        /* \"#utility.yul\":1766:1767   */\n      dup1\n        /* \"#utility.yul\":1759:1771   */\n      revert\n        /* \"#utility.yul\":1718:1773   */\n    tag_284:\n        /* \"#utility.yul\":1833:1835   */\n      dup4\n        /* \"#utility.yul\":1826:1830   */\n      0x20\n        /* \"#utility.yul\":1818:1824   */\n      dup8\n        /* \"#utility.yul\":1814:1831   */\n      add\n        /* \"#utility.yul\":1807:1811   */\n      0x20\n        /* \"#utility.yul\":1799:1805   */\n      dup4\n        /* \"#utility.yul\":1795:1812   */\n      add\n        /* \"#utility.yul\":1782:1836   */\n      calldatacopy\n        /* \"#utility.yul\":1880:1881   */\n      0x00\n        /* \"#utility.yul\":1873:1877   */\n      0x20\n        /* \"#utility.yul\":1868:1870   */\n      dup6\n        /* \"#utility.yul\":1860:1866   */\n      dup4\n        /* \"#utility.yul\":1856:1871   */\n      add\n        /* \"#utility.yul\":1852:1878   */\n      add\n        /* \"#utility.yul\":1845:1882   */\n      mstore\n        /* \"#utility.yul\":1900:1906   */\n      dup1\n        /* \"#utility.yul\":1891:1906   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1193:1912   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1917:2307   */\n    tag_75:\n        /* \"#utility.yul\":1995:2001   */\n      0x00\n        /* \"#utility.yul\":2003:2009   */\n      dup1\n        /* \"#utility.yul\":2056:2058   */\n      0x40\n        /* \"#utility.yul\":2044:2053   */\n      dup4\n        /* \"#utility.yul\":2035:2042   */\n      dup6\n        /* \"#utility.yul\":2031:2054   */\n      sub\n        /* \"#utility.yul\":2027:2059   */\n      slt\n        /* \"#utility.yul\":2024:2076   */\n      iszero\n      tag_286\n      jumpi\n        /* \"#utility.yul\":2072:2073   */\n      0x00\n        /* \"#utility.yul\":2069:2070   */\n      dup1\n        /* \"#utility.yul\":2062:2074   */\n      revert\n        /* \"#utility.yul\":2024:2076   */\n    tag_286:\n        /* \"#utility.yul\":2112:2121   */\n      dup3\n        /* \"#utility.yul\":2099:2122   */\n      calldataload\n        /* \"#utility.yul\":2145:2163   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2137:2143   */\n      dup2\n        /* \"#utility.yul\":2134:2164   */\n      gt\n        /* \"#utility.yul\":2131:2181   */\n      iszero\n      tag_287\n      jumpi\n        /* \"#utility.yul\":2177:2178   */\n      0x00\n        /* \"#utility.yul\":2174:2175   */\n      dup1\n        /* \"#utility.yul\":2167:2179   */\n      revert\n        /* \"#utility.yul\":2131:2181   */\n    tag_287:\n        /* \"#utility.yul\":2200:2250   */\n      tag_288\n        /* \"#utility.yul\":2242:2249   */\n      dup6\n        /* \"#utility.yul\":2233:2239   */\n      dup3\n        /* \"#utility.yul\":2222:2231   */\n      dup7\n        /* \"#utility.yul\":2218:2240   */\n      add\n        /* \"#utility.yul\":2200:2250   */\n      tag_260\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":2190:2250   */\n      swap6\n        /* \"#utility.yul\":2297:2299   */\n      0x20\n        /* \"#utility.yul\":2282:2300   */\n      swap5\n      swap1\n      swap5\n      add\n        /* \"#utility.yul\":2269:2301   */\n      calldataload\n      swap5\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1917:2307   */\n      jump\t// out\n        /* \"#utility.yul\":2312:2443   */\n    tag_261:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2387:2418   */\n      dup2\n      and\n        /* \"#utility.yul\":2377:2419   */\n      dup2\n      eq\n        /* \"#utility.yul\":2367:2437   */\n      tag_208\n      jumpi\n        /* \"#utility.yul\":2433:2434   */\n      0x00\n        /* \"#utility.yul\":2430:2431   */\n      dup1\n        /* \"#utility.yul\":2423:2435   */\n      revert\n        /* \"#utility.yul\":2448:2763   */\n    tag_80:\n        /* \"#utility.yul\":2516:2522   */\n      0x00\n        /* \"#utility.yul\":2524:2530   */\n      dup1\n        /* \"#utility.yul\":2577:2579   */\n      0x40\n        /* \"#utility.yul\":2565:2574   */\n      dup4\n        /* \"#utility.yul\":2556:2563   */\n      dup6\n        /* \"#utility.yul\":2552:2575   */\n      sub\n        /* \"#utility.yul\":2548:2580   */\n      slt\n        /* \"#utility.yul\":2545:2597   */\n      iszero\n      tag_292\n      jumpi\n        /* \"#utility.yul\":2593:2594   */\n      0x00\n        /* \"#utility.yul\":2590:2591   */\n      dup1\n        /* \"#utility.yul\":2583:2595   */\n      revert\n        /* \"#utility.yul\":2545:2597   */\n    tag_292:\n        /* \"#utility.yul\":2629:2638   */\n      dup3\n        /* \"#utility.yul\":2616:2639   */\n      calldataload\n        /* \"#utility.yul\":2606:2639   */\n      swap2\n      pop\n        /* \"#utility.yul\":2689:2691   */\n      0x20\n        /* \"#utility.yul\":2678:2687   */\n      dup4\n        /* \"#utility.yul\":2674:2692   */\n      add\n        /* \"#utility.yul\":2661:2693   */\n      calldataload\n        /* \"#utility.yul\":2702:2733   */\n      tag_293\n        /* \"#utility.yul\":2727:2732   */\n      dup2\n        /* \"#utility.yul\":2702:2733   */\n      tag_261\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":2752:2757   */\n      dup1\n        /* \"#utility.yul\":2742:2757   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2448:2763   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2960:3140   */\n    tag_90:\n        /* \"#utility.yul\":3019:3025   */\n      0x00\n        /* \"#utility.yul\":3072:3074   */\n      0x20\n        /* \"#utility.yul\":3060:3069   */\n      dup3\n        /* \"#utility.yul\":3051:3058   */\n      dup5\n        /* \"#utility.yul\":3047:3070   */\n      sub\n        /* \"#utility.yul\":3043:3075   */\n      slt\n        /* \"#utility.yul\":3040:3092   */\n      iszero\n      tag_296\n      jumpi\n        /* \"#utility.yul\":3088:3089   */\n      0x00\n        /* \"#utility.yul\":3085:3086   */\n      dup1\n        /* \"#utility.yul\":3078:3090   */\n      revert\n        /* \"#utility.yul\":3040:3092   */\n    tag_296:\n      pop\n        /* \"#utility.yul\":3111:3134   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":2960:3140   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3145:3467   */\n    tag_99:\n        /* \"#utility.yul\":3214:3220   */\n      0x00\n        /* \"#utility.yul\":3267:3269   */\n      0x20\n        /* \"#utility.yul\":3255:3264   */\n      dup3\n        /* \"#utility.yul\":3246:3253   */\n      dup5\n        /* \"#utility.yul\":3242:3265   */\n      sub\n        /* \"#utility.yul\":3238:3270   */\n      slt\n        /* \"#utility.yul\":3235:3287   */\n      iszero\n      tag_298\n      jumpi\n        /* \"#utility.yul\":3283:3284   */\n      0x00\n        /* \"#utility.yul\":3280:3281   */\n      dup1\n        /* \"#utility.yul\":3273:3285   */\n      revert\n        /* \"#utility.yul\":3235:3287   */\n    tag_298:\n        /* \"#utility.yul\":3323:3332   */\n      dup2\n        /* \"#utility.yul\":3310:3333   */\n      calldataload\n        /* \"#utility.yul\":3356:3374   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3348:3354   */\n      dup2\n        /* \"#utility.yul\":3345:3375   */\n      gt\n        /* \"#utility.yul\":3342:3392   */\n      iszero\n      tag_299\n      jumpi\n        /* \"#utility.yul\":3388:3389   */\n      0x00\n        /* \"#utility.yul\":3385:3386   */\n      dup1\n        /* \"#utility.yul\":3378:3390   */\n      revert\n        /* \"#utility.yul\":3342:3392   */\n    tag_299:\n        /* \"#utility.yul\":3411:3461   */\n      tag_257\n        /* \"#utility.yul\":3453:3460   */\n      dup5\n        /* \"#utility.yul\":3444:3450   */\n      dup3\n        /* \"#utility.yul\":3433:3442   */\n      dup6\n        /* \"#utility.yul\":3429:3451   */\n      add\n        /* \"#utility.yul\":3411:3461   */\n      tag_260\n      jump\t// in\n        /* \"#utility.yul\":3472:3895   */\n    tag_262:\n        /* \"#utility.yul\":3514:3517   */\n      0x00\n        /* \"#utility.yul\":3552:3557   */\n      dup2\n        /* \"#utility.yul\":3546:3558   */\n      mload\n        /* \"#utility.yul\":3579:3585   */\n      dup1\n        /* \"#utility.yul\":3574:3577   */\n      dup5\n        /* \"#utility.yul\":3567:3586   */\n      mstore\n        /* \"#utility.yul\":3604:3605   */\n      0x00\n        /* \"#utility.yul\":3614:3776   */\n    tag_302:\n        /* \"#utility.yul\":3628:3634   */\n      dup2\n        /* \"#utility.yul\":3625:3626   */\n      dup2\n        /* \"#utility.yul\":3622:3635   */\n      lt\n        /* \"#utility.yul\":3614:3776   */\n      iszero\n      tag_304\n      jumpi\n        /* \"#utility.yul\":3690:3694   */\n      0x20\n        /* \"#utility.yul\":3746:3759   */\n      dup2\n      dup6\n      add\n        /* \"#utility.yul\":3742:3764   */\n      dup2\n      add\n        /* \"#utility.yul\":3736:3765   */\n      mload\n        /* \"#utility.yul\":3718:3729   */\n      dup7\n      dup4\n      add\n        /* \"#utility.yul\":3714:3734   */\n      dup3\n      add\n        /* \"#utility.yul\":3707:3766   */\n      mstore\n        /* \"#utility.yul\":3643:3655   */\n      add\n        /* \"#utility.yul\":3614:3776   */\n      jump(tag_302)\n    tag_304:\n        /* \"#utility.yul\":3618:3621   */\n      pop\n        /* \"#utility.yul\":3821:3822   */\n      0x00\n        /* \"#utility.yul\":3814:3818   */\n      0x20\n        /* \"#utility.yul\":3805:3811   */\n      dup3\n        /* \"#utility.yul\":3800:3803   */\n      dup7\n        /* \"#utility.yul\":3796:3812   */\n      add\n        /* \"#utility.yul\":3792:3819   */\n      add\n        /* \"#utility.yul\":3785:3823   */\n      mstore\n        /* \"#utility.yul\":3884:3888   */\n      0x20\n        /* \"#utility.yul\":3877:3879   */\n      0x1f\n        /* \"#utility.yul\":3873:3880   */\n      not\n        /* \"#utility.yul\":3868:3870   */\n      0x1f\n        /* \"#utility.yul\":3860:3866   */\n      dup4\n        /* \"#utility.yul\":3856:3871   */\n      add\n        /* \"#utility.yul\":3852:3881   */\n      and\n        /* \"#utility.yul\":3847:3850   */\n      dup6\n        /* \"#utility.yul\":3843:3882   */\n      add\n        /* \"#utility.yul\":3839:3889   */\n      add\n        /* \"#utility.yul\":3832:3889   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3472:3895   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3900:4120   */\n    tag_110:\n        /* \"#utility.yul\":4049:4051   */\n      0x20\n        /* \"#utility.yul\":4038:4047   */\n      dup2\n        /* \"#utility.yul\":4031:4052   */\n      mstore\n        /* \"#utility.yul\":4012:4016   */\n      0x00\n        /* \"#utility.yul\":4069:4114   */\n      tag_306\n        /* \"#utility.yul\":4110:4112   */\n      0x20\n        /* \"#utility.yul\":4099:4108   */\n      dup4\n        /* \"#utility.yul\":4095:4113   */\n      add\n        /* \"#utility.yul\":4087:4093   */\n      dup5\n        /* \"#utility.yul\":4069:4114   */\n      tag_262\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":4061:4114   */\n      swap4\n        /* \"#utility.yul\":3900:4120   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4125:4372   */\n    tag_130:\n        /* \"#utility.yul\":4184:4190   */\n      0x00\n        /* \"#utility.yul\":4237:4239   */\n      0x20\n        /* \"#utility.yul\":4225:4234   */\n      dup3\n        /* \"#utility.yul\":4216:4223   */\n      dup5\n        /* \"#utility.yul\":4212:4235   */\n      sub\n        /* \"#utility.yul\":4208:4240   */\n      slt\n        /* \"#utility.yul\":4205:4257   */\n      iszero\n      tag_308\n      jumpi\n        /* \"#utility.yul\":4253:4254   */\n      0x00\n        /* \"#utility.yul\":4250:4251   */\n      dup1\n        /* \"#utility.yul\":4243:4255   */\n      revert\n        /* \"#utility.yul\":4205:4257   */\n    tag_308:\n        /* \"#utility.yul\":4292:4301   */\n      dup2\n        /* \"#utility.yul\":4279:4302   */\n      calldataload\n        /* \"#utility.yul\":4311:4342   */\n      tag_306\n        /* \"#utility.yul\":4336:4341   */\n      dup2\n        /* \"#utility.yul\":4311:4342   */\n      tag_261\n      jump\t// in\n        /* \"#utility.yul\":4377:4714   */\n    tag_178:\n        /* \"#utility.yul\":4579:4581   */\n      0x20\n        /* \"#utility.yul\":4561:4582   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":4618:4620   */\n      0x0d\n        /* \"#utility.yul\":4598:4616   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":4591:4621   */\n      mstore\n      shl(0x99, 0x2737ba103a34329037bbb732b9)\n        /* \"#utility.yul\":4652:4654   */\n      0x40\n        /* \"#utility.yul\":4637:4655   */\n      dup3\n      add\n        /* \"#utility.yul\":4630:4673   */\n      mstore\n        /* \"#utility.yul\":4705:4707   */\n      0x60\n        /* \"#utility.yul\":4690:4708   */\n      add\n      swap1\n        /* \"#utility.yul\":4377:4714   */\n      jump\t// out\n        /* \"#utility.yul\":4719:5162   */\n    tag_187:\n        /* \"#utility.yul\":4960:4963   */\n      0x80\n        /* \"#utility.yul\":4949:4958   */\n      dup2\n        /* \"#utility.yul\":4942:4964   */\n      mstore\n        /* \"#utility.yul\":4923:4927   */\n      0x00\n        /* \"#utility.yul\":4981:5027   */\n      tag_312\n        /* \"#utility.yul\":5022:5025   */\n      0x80\n        /* \"#utility.yul\":5011:5020   */\n      dup4\n        /* \"#utility.yul\":5007:5026   */\n      add\n        /* \"#utility.yul\":4999:5005   */\n      dup8\n        /* \"#utility.yul\":4981:5027   */\n      tag_262\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":5058:5060   */\n      0x20\n        /* \"#utility.yul\":5043:5061   */\n      dup4\n      add\n        /* \"#utility.yul\":5036:5070   */\n      swap6\n      swap1\n      swap6\n      mstore\n      pop\n        /* \"#utility.yul\":5101:5103   */\n      0x40\n        /* \"#utility.yul\":5086:5104   */\n      dup2\n      add\n        /* \"#utility.yul\":5079:5113   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":5144:5146   */\n      0x60\n        /* \"#utility.yul\":5129:5147   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":5122:5156   */\n      mstore\n        /* \"#utility.yul\":4973:5027   */\n      swap2\n        /* \"#utility.yul\":4719:5162   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5167:5330   */\n    tag_263:\n        /* \"#utility.yul\":5245:5258   */\n      dup1\n      mload\n        /* \"#utility.yul\":5298:5304   */\n      0xffff\n        /* \"#utility.yul\":5287:5305   */\n      dup2\n      and\n        /* \"#utility.yul\":5277:5306   */\n      dup2\n      eq\n        /* \"#utility.yul\":5267:5324   */\n      tag_314\n      jumpi\n        /* \"#utility.yul\":5320:5321   */\n      0x00\n        /* \"#utility.yul\":5317:5318   */\n      dup1\n        /* \"#utility.yul\":5310:5322   */\n      revert\n        /* \"#utility.yul\":5267:5324   */\n    tag_314:\n        /* \"#utility.yul\":5167:5330   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5335:6321   */\n    tag_192:\n        /* \"#utility.yul\":5449:5455   */\n      0x00\n        /* \"#utility.yul\":5457:5463   */\n      dup1\n        /* \"#utility.yul\":5465:5471   */\n      0x00\n        /* \"#utility.yul\":5473:5479   */\n      dup1\n        /* \"#utility.yul\":5481:5487   */\n      0x00\n        /* \"#utility.yul\":5489:5495   */\n      dup1\n        /* \"#utility.yul\":5497:5503   */\n      0x00\n        /* \"#utility.yul\":5550:5553   */\n      0xe0\n        /* \"#utility.yul\":5538:5547   */\n      dup9\n        /* \"#utility.yul\":5529:5536   */\n      dup11\n        /* \"#utility.yul\":5525:5548   */\n      sub\n        /* \"#utility.yul\":5521:5554   */\n      slt\n        /* \"#utility.yul\":5518:5571   */\n      iszero\n      tag_316\n      jumpi\n        /* \"#utility.yul\":5567:5568   */\n      0x00\n        /* \"#utility.yul\":5564:5565   */\n      dup1\n        /* \"#utility.yul\":5557:5569   */\n      revert\n        /* \"#utility.yul\":5518:5571   */\n    tag_316:\n        /* \"#utility.yul\":5599:5608   */\n      dup8\n        /* \"#utility.yul\":5593:5609   */\n      mload\n        /* \"#utility.yul\":5618:5649   */\n      tag_317\n        /* \"#utility.yul\":5643:5648   */\n      dup2\n        /* \"#utility.yul\":5618:5649   */\n      tag_261\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":5668:5673   */\n      dup1\n        /* \"#utility.yul\":5658:5673   */\n      swap8\n      pop\n      pop\n        /* \"#utility.yul\":5718:5720   */\n      0x20\n        /* \"#utility.yul\":5707:5716   */\n      dup9\n        /* \"#utility.yul\":5703:5721   */\n      add\n        /* \"#utility.yul\":5697:5722   */\n      mload\n        /* \"#utility.yul\":5767:5774   */\n      dup1\n        /* \"#utility.yul\":5764:5765   */\n      0x02\n        /* \"#utility.yul\":5753:5775   */\n      signextend\n        /* \"#utility.yul\":5744:5751   */\n      dup2\n        /* \"#utility.yul\":5741:5776   */\n      eq\n        /* \"#utility.yul\":5731:5794   */\n      tag_318\n      jumpi\n        /* \"#utility.yul\":5790:5791   */\n      0x00\n        /* \"#utility.yul\":5787:5788   */\n      dup1\n        /* \"#utility.yul\":5780:5792   */\n      revert\n        /* \"#utility.yul\":5731:5794   */\n    tag_318:\n        /* \"#utility.yul\":5813:5820   */\n      swap6\n      pop\n        /* \"#utility.yul\":5839:5887   */\n      tag_319\n        /* \"#utility.yul\":5883:5885   */\n      0x40\n        /* \"#utility.yul\":5868:5886   */\n      dup10\n      add\n        /* \"#utility.yul\":5839:5887   */\n      tag_263\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":5829:5887   */\n      swap5\n      pop\n        /* \"#utility.yul\":5906:5954   */\n      tag_320\n        /* \"#utility.yul\":5950:5952   */\n      0x60\n        /* \"#utility.yul\":5939:5948   */\n      dup10\n        /* \"#utility.yul\":5935:5953   */\n      add\n        /* \"#utility.yul\":5906:5954   */\n      tag_263\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":5896:5954   */\n      swap4\n      pop\n        /* \"#utility.yul\":5973:6022   */\n      tag_321\n        /* \"#utility.yul\":6017:6020   */\n      0x80\n        /* \"#utility.yul\":6006:6015   */\n      dup10\n        /* \"#utility.yul\":6002:6021   */\n      add\n        /* \"#utility.yul\":5973:6022   */\n      tag_263\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":5963:6022   */\n      swap3\n      pop\n        /* \"#utility.yul\":6067:6070   */\n      0xa0\n        /* \"#utility.yul\":6056:6065   */\n      dup9\n        /* \"#utility.yul\":6052:6071   */\n      add\n        /* \"#utility.yul\":6046:6072   */\n      mload\n        /* \"#utility.yul\":6116:6120   */\n      0xff\n        /* \"#utility.yul\":6107:6114   */\n      dup2\n        /* \"#utility.yul\":6103:6121   */\n      and\n        /* \"#utility.yul\":6094:6101   */\n      dup2\n        /* \"#utility.yul\":6091:6122   */\n      eq\n        /* \"#utility.yul\":6081:6140   */\n      tag_322\n      jumpi\n        /* \"#utility.yul\":6136:6137   */\n      0x00\n        /* \"#utility.yul\":6133:6134   */\n      dup1\n        /* \"#utility.yul\":6126:6138   */\n      revert\n        /* \"#utility.yul\":6081:6140   */\n    tag_322:\n        /* \"#utility.yul\":6211:6214   */\n      0xc0\n        /* \"#utility.yul\":6196:6215   */\n      dup10\n      add\n        /* \"#utility.yul\":6190:6216   */\n      mload\n        /* \"#utility.yul\":6159:6166   */\n      swap1\n      swap3\n      pop\n        /* \"#utility.yul\":6254:6269   */\n      dup1\n      iszero\n        /* \"#utility.yul\":6247:6270   */\n      iszero\n        /* \"#utility.yul\":6235:6271   */\n      dup2\n      eq\n        /* \"#utility.yul\":6225:6289   */\n      tag_323\n      jumpi\n        /* \"#utility.yul\":6285:6286   */\n      0x00\n        /* \"#utility.yul\":6282:6283   */\n      dup1\n        /* \"#utility.yul\":6275:6287   */\n      revert\n        /* \"#utility.yul\":6225:6289   */\n    tag_323:\n        /* \"#utility.yul\":6308:6315   */\n      dup1\n        /* \"#utility.yul\":6298:6315   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":5335:6321   */\n      swap3\n      swap6\n      swap9\n      swap2\n      swap5\n      swap8\n      pop\n      swap3\n      swap6\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6326:6631   */\n    tag_196:\n        /* \"#utility.yul\":6396:6402   */\n      0x00\n        /* \"#utility.yul\":6449:6451   */\n      0x20\n        /* \"#utility.yul\":6437:6446   */\n      dup3\n        /* \"#utility.yul\":6428:6435   */\n      dup5\n        /* \"#utility.yul\":6424:6447   */\n      sub\n        /* \"#utility.yul\":6420:6452   */\n      slt\n        /* \"#utility.yul\":6417:6469   */\n      iszero\n      tag_325\n      jumpi\n        /* \"#utility.yul\":6465:6466   */\n      0x00\n        /* \"#utility.yul\":6462:6463   */\n      dup1\n        /* \"#utility.yul\":6455:6467   */\n      revert\n        /* \"#utility.yul\":6417:6469   */\n    tag_325:\n        /* \"#utility.yul\":6497:6506   */\n      dup2\n        /* \"#utility.yul\":6491:6507   */\n      mload\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"#utility.yul\":6540:6545   */\n      dup2\n        /* \"#utility.yul\":6536:6582   */\n      and\n        /* \"#utility.yul\":6529:6534   */\n      dup2\n        /* \"#utility.yul\":6526:6583   */\n      eq\n        /* \"#utility.yul\":6516:6601   */\n      tag_306\n      jumpi\n        /* \"#utility.yul\":6597:6598   */\n      0x00\n        /* \"#utility.yul\":6594:6595   */\n      dup1\n        /* \"#utility.yul\":6587:6599   */\n      revert\n        /* \"#utility.yul\":6636:6764   */\n    tag_202:\n        /* \"#utility.yul\":6703:6712   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":6724:6735   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":6721:6758   */\n      iszero\n      tag_236\n      jumpi\n        /* \"#utility.yul\":6738:6756   */\n      tag_236\n      tag_258\n      jump\t// in\n        /* \"#utility.yul\":7118:7498   */\n    tag_220:\n        /* \"#utility.yul\":7197:7198   */\n      0x01\n        /* \"#utility.yul\":7193:7205   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":7240:7252   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":7261:7322   */\n      tag_332\n      jumpi\n        /* \"#utility.yul\":7315:7319   */\n      0x7f\n        /* \"#utility.yul\":7307:7313   */\n      dup3\n        /* \"#utility.yul\":7303:7320   */\n      and\n        /* \"#utility.yul\":7293:7320   */\n      swap2\n      pop\n        /* \"#utility.yul\":7261:7322   */\n    tag_332:\n        /* \"#utility.yul\":7368:7370   */\n      0x20\n        /* \"#utility.yul\":7360:7366   */\n      dup3\n        /* \"#utility.yul\":7357:7371   */\n      lt\n        /* \"#utility.yul\":7337:7355   */\n      dup2\n        /* \"#utility.yul\":7334:7372   */\n      sub\n        /* \"#utility.yul\":7331:7492   */\n      tag_333\n      jumpi\n        /* \"#utility.yul\":7414:7424   */\n      0x4e487b71\n        /* \"#utility.yul\":7409:7412   */\n      0xe0\n        /* \"#utility.yul\":7405:7425   */\n      shl\n        /* \"#utility.yul\":7402:7403   */\n      0x00\n        /* \"#utility.yul\":7395:7426   */\n      mstore\n        /* \"#utility.yul\":7449:7453   */\n      0x22\n        /* \"#utility.yul\":7446:7447   */\n      0x04\n        /* \"#utility.yul\":7439:7454   */\n      mstore\n        /* \"#utility.yul\":7477:7481   */\n      0x24\n        /* \"#utility.yul\":7474:7475   */\n      0x00\n        /* \"#utility.yul\":7467:7482   */\n      revert\n        /* \"#utility.yul\":7331:7492   */\n    tag_333:\n      pop\n        /* \"#utility.yul\":7118:7498   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8655:8834   */\n    tag_264:\n        /* \"#utility.yul\":8733:8746   */\n      dup1\n      mload\n        /* \"#utility.yul\":8786:8808   */\n      0xffffffffffffffffffff\n        /* \"#utility.yul\":8775:8809   */\n      dup2\n      and\n        /* \"#utility.yul\":8765:8810   */\n      dup2\n      eq\n        /* \"#utility.yul\":8755:8828   */\n      tag_314\n      jumpi\n        /* \"#utility.yul\":8824:8825   */\n      0x00\n        /* \"#utility.yul\":8821:8822   */\n      dup1\n        /* \"#utility.yul\":8814:8826   */\n      revert\n        /* \"#utility.yul\":8839:9312   */\n    tag_252:\n        /* \"#utility.yul\":8942:8948   */\n      0x00\n        /* \"#utility.yul\":8950:8956   */\n      dup1\n        /* \"#utility.yul\":8958:8964   */\n      0x00\n        /* \"#utility.yul\":8966:8972   */\n      dup1\n        /* \"#utility.yul\":8974:8980   */\n      0x00\n        /* \"#utility.yul\":9027:9030   */\n      0xa0\n        /* \"#utility.yul\":9015:9024   */\n      dup7\n        /* \"#utility.yul\":9006:9013   */\n      dup9\n        /* \"#utility.yul\":9002:9025   */\n      sub\n        /* \"#utility.yul\":8998:9031   */\n      slt\n        /* \"#utility.yul\":8995:9048   */\n      iszero\n      tag_339\n      jumpi\n        /* \"#utility.yul\":9044:9045   */\n      0x00\n        /* \"#utility.yul\":9041:9042   */\n      dup1\n        /* \"#utility.yul\":9034:9046   */\n      revert\n        /* \"#utility.yul\":8995:9048   */\n    tag_339:\n        /* \"#utility.yul\":9067:9106   */\n      tag_340\n        /* \"#utility.yul\":9096:9105   */\n      dup7\n        /* \"#utility.yul\":9067:9106   */\n      tag_264\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":9057:9106   */\n      swap5\n      pop\n        /* \"#utility.yul\":9146:9148   */\n      0x20\n        /* \"#utility.yul\":9135:9144   */\n      dup7\n        /* \"#utility.yul\":9131:9149   */\n      add\n        /* \"#utility.yul\":9125:9150   */\n      mload\n        /* \"#utility.yul\":9115:9150   */\n      swap4\n      pop\n        /* \"#utility.yul\":9190:9192   */\n      0x40\n        /* \"#utility.yul\":9179:9188   */\n      dup7\n        /* \"#utility.yul\":9175:9193   */\n      add\n        /* \"#utility.yul\":9169:9194   */\n      mload\n        /* \"#utility.yul\":9159:9194   */\n      swap3\n      pop\n        /* \"#utility.yul\":9234:9236   */\n      0x60\n        /* \"#utility.yul\":9223:9232   */\n      dup7\n        /* \"#utility.yul\":9219:9237   */\n      add\n        /* \"#utility.yul\":9213:9238   */\n      mload\n        /* \"#utility.yul\":9203:9238   */\n      swap2\n      pop\n        /* \"#utility.yul\":9257:9306   */\n      tag_341\n        /* \"#utility.yul\":9301:9304   */\n      0x80\n        /* \"#utility.yul\":9290:9299   */\n      dup8\n        /* \"#utility.yul\":9286:9305   */\n      add\n        /* \"#utility.yul\":9257:9306   */\n      tag_264\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":9247:9306   */\n      swap1\n      pop\n        /* \"#utility.yul\":8839:9312   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9317:9554   */\n    tag_254:\n        /* \"#utility.yul\":9389:9398   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":9356:9363   */\n      0x00\n        /* \"#utility.yul\":9414:9423   */\n      dup3\n      slt\n      shl(0xff, 0x01)\n        /* \"#utility.yul\":9425:9443   */\n      dup5\n      eq\n        /* \"#utility.yul\":9410:9444   */\n      and\n        /* \"#utility.yul\":9407:9467   */\n      iszero\n      tag_344\n      jumpi\n        /* \"#utility.yul\":9447:9465   */\n      tag_344\n      tag_258\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":9520:9521   */\n      dup2\n        /* \"#utility.yul\":9511:9518   */\n      dup2\n        /* \"#utility.yul\":9506:9522   */\n      sdiv\n        /* \"#utility.yul\":9503:9504   */\n      dup4\n        /* \"#utility.yul\":9500:9523   */\n      eq\n        /* \"#utility.yul\":9496:9497   */\n      dup3\n        /* \"#utility.yul\":9489:9498   */\n      iszero\n        /* \"#utility.yul\":9486:9524   */\n      or\n        /* \"#utility.yul\":9476:9548   */\n      tag_236\n      jumpi\n        /* \"#utility.yul\":9528:9546   */\n      tag_236\n      tag_258\n      jump\t// in\n\n    auxdata: 0xa264697066735822122024c904bef833b67fb7e3222024adc23707813c21cd9bb6542bcd916274d4b3fd64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_591": {
									"entryPoint": null,
									"id": 591,
									"parameterSlots": 8,
									"returnSlots": 0
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 710,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_addresst_addresst_addresst_addresst_addresst_address_fromMemory": {
									"entryPoint": 738,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 8
								},
								"abi_encode_tuple_packed_t_stringliteral_594d562b07e5639baeda43f9427a7d73488025602cf4b19cc0e4cec02e1718f8__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 428,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 510,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 370,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 350,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3991:24",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:24",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:24",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:24",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:24",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:24",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:24"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:24",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:24",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:24"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:24",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:24",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:24"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "201:325:24",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "211:22:24",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "225:1:24",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "228:4:24"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "221:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "221:12:24"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:24"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "242:38:24",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "272:4:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "278:1:24",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "268:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "268:12:24"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "246:18:24",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "319:31:24",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "321:27:24",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "335:6:24"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "343:4:24",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "331:3:24"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "331:17:24"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "321:6:24"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "299:18:24"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "292:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "292:26:24"
															},
															"nodeType": "YulIf",
															"src": "289:61:24"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "409:111:24",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "430:1:24",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "437:3:24",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "442:10:24",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "433:3:24"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "433:20:24"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "423:6:24"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "423:31:24"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "423:31:24"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "474:1:24",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "477:4:24",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "467:6:24"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "467:15:24"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "467:15:24"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "502:1:24",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "505:4:24",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "495:6:24"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "495:15:24"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "495:15:24"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "365:18:24"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "388:6:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "396:2:24",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "385:2:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "385:14:24"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "362:2:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "362:38:24"
															},
															"nodeType": "YulIf",
															"src": "359:161:24"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "181:4:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "190:6:24",
														"type": ""
													}
												],
												"src": "146:380:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "587:65:24",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "604:1:24",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "607:3:24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "597:14:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "597:14:24"
														},
														{
															"nodeType": "YulAssignment",
															"src": "620:26:24",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "638:1:24",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "641:4:24",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "628:9:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "628:18:24"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "620:4:24"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "570:3:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "578:4:24",
														"type": ""
													}
												],
												"src": "531:121:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "738:464:24",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "771:425:24",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "785:11:24",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "795:1:24",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "789:2:24",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "816:2:24"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "820:5:24"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "809:6:24"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "809:17:24"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "809:17:24"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "839:31:24",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "861:2:24"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "865:4:24",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "851:9:24"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "851:19:24"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "843:4:24",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "883:57:24",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "906:4:24"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "916:1:24",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "923:10:24"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "935:2:24",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "919:3:24"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "919:19:24"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "912:3:24"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "912:27:24"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "902:3:24"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "902:38:24"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "887:11:24",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "977:23:24",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "979:19:24",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "994:4:24"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "979:11:24"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "959:10:24"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "971:4:24",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "956:2:24"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "956:20:24"
																		},
																		"nodeType": "YulIf",
																		"src": "953:47:24"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1013:41:24",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "1027:4:24"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1037:1:24",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "1044:3:24"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "1049:2:24",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1040:3:24"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1040:12:24"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "1033:3:24"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1033:20:24"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1023:3:24"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1023:31:24"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "1017:2:24",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1067:24:24",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "1080:11:24"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "1071:5:24",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "1165:21:24",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "1174:5:24"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "1181:2:24"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "1167:6:24"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1167:17:24"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "1167:17:24"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "1115:5:24"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "1122:2:24"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "1112:2:24"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1112:13:24"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "1126:26:24",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "1128:22:24",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "1141:5:24"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1148:1:24",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1137:3:24"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1137:13:24"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "1128:5:24"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "1108:3:24",
																			"statements": []
																		},
																		"src": "1104:82:24"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "754:3:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "759:2:24",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "751:2:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "751:11:24"
															},
															"nodeType": "YulIf",
															"src": "748:448:24"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "710:5:24",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "717:3:24",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "722:10:24",
														"type": ""
													}
												],
												"src": "657:545:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1292:81:24",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1302:65:24",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "1317:4:24"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1335:1:24",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "1338:3:24"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1331:3:24"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1331:11:24"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1348:1:24",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "1344:3:24"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1344:6:24"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "1327:3:24"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1327:24:24"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "1323:3:24"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1323:29:24"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1313:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1313:40:24"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1359:1:24",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "1362:3:24"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1355:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1355:11:24"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1310:2:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "1310:57:24"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "1302:4:24"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1269:4:24",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "1275:3:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "1283:4:24",
														"type": ""
													}
												],
												"src": "1207:166:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1474:1256:24",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1484:24:24",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "1504:3:24"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1498:5:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "1498:10:24"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "1488:6:24",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1551:22:24",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1553:16:24"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1553:18:24"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1553:18:24"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "1523:6:24"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1539:2:24",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1543:1:24",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "1535:3:24"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1535:10:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1547:1:24",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1531:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1531:18:24"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1520:2:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "1520:30:24"
															},
															"nodeType": "YulIf",
															"src": "1517:56:24"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "1626:4:24"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "1664:4:24"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "1658:5:24"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1658:11:24"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "1632:25:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1632:38:24"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "1672:6:24"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "1582:43:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "1582:97:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1582:97:24"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1688:18:24",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1705:1:24",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "1692:9:24",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1715:23:24",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1734:4:24",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "1719:11:24",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1747:24:24",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "1760:11:24"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "1747:9:24"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1817:656:24",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "1831:35:24",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "1850:6:24"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "1862:2:24",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "1858:3:24"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1858:7:24"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "1846:3:24"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1846:20:24"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "1835:7:24",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "1879:49:24",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "1923:4:24"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "1893:29:24"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1893:35:24"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "1883:6:24",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "1941:10:24",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1950:1:24",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "1945:1:24",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2028:172:24",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2053:6:24"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "2071:3:24"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "2076:9:24"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "2067:3:24"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "2067:19:24"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "2061:5:24"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2061:26:24"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "2046:6:24"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2046:42:24"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "2046:42:24"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "2105:24:24",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2119:6:24"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2127:1:24",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2115:3:24"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2115:14:24"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "2105:6:24"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "2146:40:24",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "2163:9:24"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "2174:11:24"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2159:3:24"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2159:27:24"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "2146:9:24"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1975:1:24"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "1978:7:24"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "1972:2:24"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1972:14:24"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "1987:28:24",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "1989:24:24",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "1998:1:24"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "2001:11:24"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "1994:3:24"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1994:19:24"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1989:1:24"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "1968:3:24",
																					"statements": []
																				},
																				"src": "1964:236:24"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2248:166:24",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "2266:43:24",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "2293:3:24"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "2298:9:24"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "2289:3:24"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2289:19:24"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "2283:5:24"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2283:26:24"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "2270:9:24",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2333:6:24"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "2345:9:24"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "2372:1:24",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "2375:6:24"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "2368:3:24"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "2368:14:24"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "2384:3:24",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "2364:3:24"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "2364:24:24"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "2394:1:24",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "2390:3:24"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "2390:6:24"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "2360:3:24"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "2360:37:24"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "2356:3:24"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "2356:42:24"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "2341:3:24"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2341:58:24"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "2326:6:24"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2326:74:24"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "2326:74:24"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "2219:7:24"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "2228:6:24"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "2216:2:24"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2216:19:24"
																				},
																				"nodeType": "YulIf",
																				"src": "2213:201:24"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "2434:4:24"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "2448:1:24",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "2451:6:24"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "2444:3:24"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "2444:14:24"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2460:1:24",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2440:3:24"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2440:22:24"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "2427:6:24"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2427:36:24"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2427:36:24"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "1810:663:24",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1815:1:24",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "2490:234:24",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "2504:14:24",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2517:1:24",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "2508:5:24",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2553:67:24",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "2571:35:24",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "2590:3:24"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "2595:9:24"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "2586:3:24"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2586:19:24"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "2580:5:24"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2580:26:24"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "2571:5:24"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "2534:6:24"
																				},
																				"nodeType": "YulIf",
																				"src": "2531:89:24"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "2640:4:24"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "2699:5:24"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "2706:6:24"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "2646:52:24"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2646:67:24"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "2633:6:24"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2633:81:24"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2633:81:24"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "2482:242:24",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "1790:6:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1798:2:24",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1787:2:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "1787:14:24"
															},
															"nodeType": "YulSwitch",
															"src": "1780:944:24"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "1459:4:24",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1465:3:24",
														"type": ""
													}
												],
												"src": "1378:1352:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2795:117:24",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2805:22:24",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2820:6:24"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2814:5:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "2814:13:24"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2805:5:24"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2890:16:24",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2899:1:24",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2902:1:24",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2892:6:24"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2892:12:24"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2892:12:24"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2849:5:24"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2860:5:24"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2875:3:24",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2880:1:24",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "2871:3:24"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2871:11:24"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2884:1:24",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "2867:3:24"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2867:19:24"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "2856:3:24"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2856:31:24"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2846:2:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2846:42:24"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2839:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "2839:50:24"
															},
															"nodeType": "YulIf",
															"src": "2836:70:24"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2774:6:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2785:5:24",
														"type": ""
													}
												],
												"src": "2735:177:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3117:608:24",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3164:16:24",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3173:1:24",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3176:1:24",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3166:6:24"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3166:12:24"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3166:12:24"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3138:7:24"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3147:9:24"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3134:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3134:23:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3159:3:24",
																		"type": "",
																		"value": "256"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3130:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "3130:33:24"
															},
															"nodeType": "YulIf",
															"src": "3127:53:24"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3189:50:24",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3229:9:24"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "3199:29:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "3199:40:24"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3189:6:24"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3248:59:24",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3292:9:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3303:2:24",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3288:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3288:18:24"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "3258:29:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "3258:49:24"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3248:6:24"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3316:59:24",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3360:9:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3371:2:24",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3356:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3356:18:24"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "3326:29:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "3326:49:24"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3316:6:24"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3384:59:24",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3428:9:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3439:2:24",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3424:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3424:18:24"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "3394:29:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "3394:49:24"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "3384:6:24"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3452:60:24",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3496:9:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3507:3:24",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3492:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3492:19:24"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "3462:29:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "3462:50:24"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "3452:6:24"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3521:60:24",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3565:9:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3576:3:24",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3561:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3561:19:24"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "3531:29:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "3531:50:24"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nodeType": "YulIdentifier",
																	"src": "3521:6:24"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3590:60:24",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3634:9:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3645:3:24",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3630:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3630:19:24"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "3600:29:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "3600:50:24"
															},
															"variableNames": [
																{
																	"name": "value6",
																	"nodeType": "YulIdentifier",
																	"src": "3590:6:24"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3659:60:24",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3703:9:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3714:3:24",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3699:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3699:19:24"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "3669:29:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "3669:50:24"
															},
															"variableNames": [
																{
																	"name": "value7",
																	"nodeType": "YulIdentifier",
																	"src": "3659:6:24"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_addresst_addresst_addresst_addresst_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3027:9:24",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3038:7:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3050:6:24",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3058:6:24",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3066:6:24",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3074:6:24",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "3082:6:24",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "3090:6:24",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "3098:6:24",
														"type": ""
													},
													{
														"name": "value7",
														"nodeType": "YulTypedName",
														"src": "3106:6:24",
														"type": ""
													}
												],
												"src": "2917:808:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3922:67:24",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3939:3:24"
																	},
																	{
																		"hexValue": "517569636b53776170",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3944:11:24",
																		"type": "",
																		"value": "QuickSwap"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3932:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "3932:24:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3932:24:24"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3965:18:24",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3976:3:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3981:1:24",
																		"type": "",
																		"value": "9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3972:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "3972:11:24"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3965:3:24"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_594d562b07e5639baeda43f9427a7d73488025602cf4b19cc0e4cec02e1718f8__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3906:3:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3914:3:24",
														"type": ""
													}
												],
												"src": "3730:259:24"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_addresst_addresst_addresst_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7\n    {\n        if slt(sub(dataEnd, headStart), 256) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n        value2 := abi_decode_address_fromMemory(add(headStart, 64))\n        value3 := abi_decode_address_fromMemory(add(headStart, 96))\n        value4 := abi_decode_address_fromMemory(add(headStart, 128))\n        value5 := abi_decode_address_fromMemory(add(headStart, 160))\n        value6 := abi_decode_address_fromMemory(add(headStart, 192))\n        value7 := abi_decode_address_fromMemory(add(headStart, 224))\n    }\n    function abi_encode_tuple_packed_t_stringliteral_594d562b07e5639baeda43f9427a7d73488025602cf4b19cc0e4cec02e1718f8__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    {\n        mstore(pos, \"QuickSwap\")\n        end := add(pos, 9)\n    }\n}",
									"id": 24,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x3 PUSH1 0x6 SSTORE PUSH1 0xA PUSH1 0x7 SSTORE PUSH1 0xC0 PUSH1 0x40 MSTORE PUSH1 0xC PUSH1 0x80 SWAP1 DUP2 MSTORE PUSH12 0x496E697469616C697A696E67 PUSH1 0xA0 SHL PUSH1 0xA0 MSTORE PUSH1 0x9 SWAP1 PUSH3 0x37 SWAP1 DUP3 PUSH3 0x1FE JUMP JUMPDEST POP CALLVALUE DUP1 ISZERO PUSH3 0x44 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1365 CODESIZE SUB DUP1 PUSH3 0x1365 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x67 SWAP2 PUSH3 0x2E2 JUMP JUMPDEST PUSH0 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0xA DUP1 SLOAD DUP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH1 0xB DUP1 SLOAD DUP4 AND DUP11 DUP4 AND OR SWAP1 SSTORE PUSH1 0xC DUP1 SLOAD DUP4 AND DUP10 DUP4 AND OR SWAP1 SSTORE PUSH1 0xD DUP1 SLOAD DUP4 AND DUP9 DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0xE DUP1 SLOAD DUP5 AND DUP9 DUP5 AND OR SWAP1 SSTORE PUSH1 0xF DUP1 SLOAD DUP5 AND DUP8 DUP5 AND OR SWAP1 SSTORE PUSH1 0x10 DUP1 SLOAD DUP5 AND DUP7 DUP5 AND OR SWAP1 SSTORE PUSH1 0x11 DUP1 SLOAD SWAP1 SWAP4 AND SWAP2 DUP5 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH9 0x517569636B5377617 PUSH1 0xBC SHL DUP2 MSTORE PUSH1 0x12 SWAP1 PUSH1 0x9 ADD SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP POP PUSH0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE POP POP PUSH1 0x6E PUSH1 0x4 SSTORE POP POP PUSH1 0x55 PUSH1 0x5 SSTORE POP POP TIMESTAMP PUSH1 0x8 SSTORE PUSH3 0x385 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x187 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x1A6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x1F9 JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x1D4 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x1F5 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1E0 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x21A JUMPI PUSH3 0x21A PUSH3 0x15E JUMP JUMPDEST PUSH3 0x232 DUP2 PUSH3 0x22B DUP5 SLOAD PUSH3 0x172 JUMP JUMPDEST DUP5 PUSH3 0x1AC JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x268 JUMPI PUSH0 DUP5 ISZERO PUSH3 0x250 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x1F5 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x298 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x277 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x2B6 JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x2DD JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH2 0x100 DUP10 DUP12 SUB SLT ISZERO PUSH3 0x2FB JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH3 0x306 DUP10 PUSH3 0x2C6 JUMP JUMPDEST SWAP8 POP PUSH3 0x316 PUSH1 0x20 DUP11 ADD PUSH3 0x2C6 JUMP JUMPDEST SWAP7 POP PUSH3 0x326 PUSH1 0x40 DUP11 ADD PUSH3 0x2C6 JUMP JUMPDEST SWAP6 POP PUSH3 0x336 PUSH1 0x60 DUP11 ADD PUSH3 0x2C6 JUMP JUMPDEST SWAP5 POP PUSH3 0x346 PUSH1 0x80 DUP11 ADD PUSH3 0x2C6 JUMP JUMPDEST SWAP4 POP PUSH3 0x356 PUSH1 0xA0 DUP11 ADD PUSH3 0x2C6 JUMP JUMPDEST SWAP3 POP PUSH3 0x366 PUSH1 0xC0 DUP11 ADD PUSH3 0x2C6 JUMP JUMPDEST SWAP2 POP PUSH3 0x376 PUSH1 0xE0 DUP11 ADD PUSH3 0x2C6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH2 0xFD2 DUP1 PUSH3 0x393 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1BD JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x869665E9 GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0xB3CE56A2 GT PUSH2 0x92 JUMPI DUP1 PUSH4 0xE0ABCA0B GT PUSH2 0x62 JUMPI DUP1 PUSH4 0xE0ABCA0B EQ PUSH2 0x52D JUMPI DUP1 PUSH4 0xE189EB42 EQ PUSH2 0x54C JUMPI DUP1 PUSH4 0xE5047B30 EQ PUSH2 0x56B JUMPI DUP1 PUSH4 0xF974821A EQ PUSH2 0x58A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB3CE56A2 EQ PUSH2 0x4CF JUMPI DUP1 PUSH4 0xB6658D07 EQ PUSH2 0x4E4 JUMPI DUP1 PUSH4 0xC0FC247F EQ PUSH2 0x503 JUMPI DUP1 PUSH4 0xE037F889 EQ PUSH2 0x518 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x92EEFE9B GT PUSH2 0xCD JUMPI DUP1 PUSH4 0x92EEFE9B EQ PUSH2 0x468 JUMPI DUP1 PUSH4 0x9D8EF1E1 EQ PUSH2 0x487 JUMPI DUP1 PUSH4 0xA30FB905 EQ PUSH2 0x49B JUMPI DUP1 PUSH4 0xA98AD46C EQ PUSH2 0x4B0 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x869665E9 EQ PUSH2 0x417 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x436 JUMPI DUP1 PUSH4 0x8FC3047D EQ PUSH2 0x454 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x41C0E1B5 GT PUSH2 0x15D JUMPI DUP1 PUSH4 0x5E7FFA67 GT PUSH2 0x138 JUMPI DUP1 PUSH4 0x5E7FFA67 EQ PUSH2 0x382 JUMPI DUP1 PUSH4 0x64AABB9E EQ PUSH2 0x3C2 JUMPI DUP1 PUSH4 0x6D546CDD EQ PUSH2 0x3D7 JUMPI DUP1 PUSH4 0x735DE9F7 EQ PUSH2 0x3F8 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x41C0E1B5 EQ PUSH2 0x330 JUMPI DUP1 PUSH4 0x457F3CB0 EQ PUSH2 0x344 JUMPI DUP1 PUSH4 0x4ADA218B EQ PUSH2 0x363 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1BF41362 GT PUSH2 0x198 JUMPI DUP1 PUSH4 0x1BF41362 EQ PUSH2 0x2AE JUMPI DUP1 PUSH4 0x238F9B7A EQ PUSH2 0x2C3 JUMPI DUP1 PUSH4 0x26C403ED EQ PUSH2 0x2E2 JUMPI DUP1 PUSH4 0x3FB47A3B EQ PUSH2 0x301 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x11EAC855 EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0x1458D9D8 EQ PUSH2 0x275 JUMPI DUP1 PUSH4 0x17700F01 EQ PUSH2 0x298 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x235 JUMPI CALLVALUE PUSH1 0x1 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1D3 SWAP2 SWAP1 PUSH2 0xB66 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x64 SWAP1 POP PUSH2 0x1E6 CALLVALUE PUSH1 0x46 PUSH2 0xB79 JUMP JUMPDEST PUSH2 0x1F0 SWAP2 SWAP1 PUSH2 0xB90 JUMP JUMPDEST PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x200 SWAP2 SWAP1 PUSH2 0xB66 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x64 SWAP1 POP PUSH2 0x213 CALLVALUE PUSH1 0x1E PUSH2 0xB79 JUMP JUMPDEST PUSH2 0x21D SWAP2 SWAP1 PUSH2 0xB90 JUMP JUMPDEST PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x22D SWAP2 SWAP1 PUSH2 0xB66 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x244 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xC SLOAD PUSH2 0x258 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x280 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28A PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x26C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AC PUSH2 0x59F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28A PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x11 SLOAD PUSH2 0x258 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2ED JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AC PUSH2 0x2FC CALLDATASIZE PUSH1 0x4 PUSH2 0xC4C JUMP JUMPDEST PUSH2 0x5DF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x320 PUSH2 0x31B CALLDATASIZE PUSH1 0x4 PUSH2 0xCA2 JUMP JUMPDEST PUSH2 0x651 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x26C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AC PUSH2 0x76C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AC PUSH2 0x35E CALLDATASIZE PUSH1 0x4 PUSH2 0xCD0 JUMP JUMPDEST PUSH2 0x7C1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH2 0x320 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x258 PUSH2 0x39C CALLDATASIZE PUSH1 0x4 PUSH2 0xCE7 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD DUP1 MLOAD PUSH1 0x12 DUP3 MSTORE SWAP3 DUP3 ADD SWAP2 SWAP1 SWAP4 ADD KECCAK256 SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28A PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3EB PUSH2 0x87D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26C SWAP2 SWAP1 PUSH2 0xD5C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x403 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xF SLOAD PUSH2 0x258 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x422 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AC PUSH2 0x431 CALLDATASIZE PUSH1 0x4 PUSH2 0xCD0 JUMP JUMPDEST PUSH2 0x909 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x441 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH2 0x258 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28A PUSH2 0x9A9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x473 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AC PUSH2 0x482 CALLDATASIZE PUSH1 0x4 PUSH2 0xD75 JUMP JUMPDEST PUSH2 0x9B9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x492 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AC PUSH2 0xA03 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28A PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xB SLOAD PUSH2 0x258 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28A PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4EF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xA SLOAD PUSH2 0x258 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28A PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x523 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28A PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x538 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xE SLOAD PUSH2 0x258 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x557 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xD SLOAD PUSH2 0x258 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x576 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x10 SLOAD PUSH2 0x258 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x595 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28A PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C8 SWAP1 PUSH2 0xD90 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x608 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C8 SWAP1 PUSH2 0xD90 JUMP JUMPDEST CALLER PUSH32 0x30FDCD4F0C28C5DBCBC3F59AA8E2260C7F58AC45BE2A2DCA652999AF89C33E0 DUP4 DUP4 PUSH0 PUSH2 0x635 PUSH2 0xA9E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x645 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xDB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP1 POP PUSH0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3850C7BD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xE0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x693 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6B7 SWAP2 SWAP1 PUSH2 0xDFB JUMP JUMPDEST POP POP POP POP POP POP SWAP1 POP PUSH0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1A686502 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6FC JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x720 SWAP2 SWAP1 PUSH2 0xE97 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP1 POP PUSH0 PUSH2 0x737 DUP8 DUP5 DUP5 PUSH2 0xB2B JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x64 PUSH2 0x747 DUP4 PUSH1 0x1 PUSH2 0xB79 JUMP JUMPDEST PUSH2 0x751 SWAP2 SWAP1 PUSH2 0xB90 JUMP JUMPDEST SWAP1 POP PUSH2 0x75D DUP2 DUP10 PUSH2 0xEBD JUMP JUMPDEST SWAP1 SWAP2 LT ISZERO SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x795 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C8 SWAP1 PUSH2 0xD90 JUMP JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 SELFBALANCE DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x7BE JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x7EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C8 SWAP1 PUSH2 0xD90 JUMP JUMPDEST PUSH0 PUSH2 0x7F9 DUP3 PUSH4 0x3B9ACA00 PUSH2 0xB79 JUMP JUMPDEST SWAP1 POP DUP1 SELFBALANCE LT ISZERO PUSH2 0x842 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742062616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5C8 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 DUP4 ISZERO PUSH2 0x8FC MUL SWAP2 DUP5 SWAP2 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x878 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH2 0x88A SWAP1 PUSH2 0xED0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8B6 SWAP1 PUSH2 0xED0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x901 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8D8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x901 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8E4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x932 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C8 SWAP1 PUSH2 0xD90 JUMP JUMPDEST CALLER PUSH32 0x30FDCD4F0C28C5DBCBC3F59AA8E2260C7F58AC45BE2A2DCA652999AF89C33E0 DUP3 PUSH0 PUSH2 0x95E PUSH2 0xA9E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP1 DUP3 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH18 0x151A5B59599C985B594818591A9D5CDD1959 PUSH1 0x72 SHL PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x9B3 PUSH2 0xA9E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x9E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C8 SWAP1 PUSH2 0xD90 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA2C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C8 SWAP1 PUSH2 0xD90 JUMP JUMPDEST CALLER PUSH32 0x30FDCD4F0C28C5DBCBC3F59AA8E2260C7F58AC45BE2A2DCA652999AF89C33E0 PUSH0 DUP1 PUSH2 0xA58 PUSH2 0xA9E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP1 DUP3 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH14 0x18DBDB9D995C9D081D1BC81413D3 PUSH1 0x92 SHL PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x3FABE5A3 PUSH1 0xE2 SHL DUP2 MSTORE SWAP1 MLOAD PUSH0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP4 SWAP2 DUP4 SWAP2 PUSH4 0xFEAF968C SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0xA0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAE9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB0D SWAP2 SWAP1 PUSH2 0xF21 JUMP JUMPDEST POP POP POP SWAP2 POP POP DUP1 PUSH5 0x2540BE400 PUSH2 0xB24 SWAP2 SWAP1 PUSH2 0xF6D JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 PUSH2 0xB40 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP7 PUSH2 0xB79 JUMP JUMPDEST PUSH2 0xB4A SWAP2 SWAP1 PUSH2 0xB90 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x9B3 JUMPI PUSH2 0x9B3 PUSH2 0xB52 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x9B3 JUMPI PUSH2 0x9B3 PUSH2 0xB52 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xBAA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xBD2 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xBED JUMPI PUSH2 0xBED PUSH2 0xBAF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xC15 JUMPI PUSH2 0xC15 PUSH2 0xBAF JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0xC2D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC5D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC73 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xC7F DUP6 DUP3 DUP7 ADD PUSH2 0xBC3 JUMP JUMPDEST SWAP6 PUSH1 0x20 SWAP5 SWAP1 SWAP5 ADD CALLDATALOAD SWAP5 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x7BE JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCB3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0xCC5 DUP2 PUSH2 0xC8E JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCE0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCF7 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD0D JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB4A DUP5 DUP3 DUP6 ADD PUSH2 0xBC3 JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xD3D JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xD21 JUMP JUMPDEST POP PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0xD6E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xD19 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD85 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xD6E DUP2 PUSH2 0xC8E JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xD SWAP1 DUP3 ADD MSTORE PUSH13 0x2737BA103A34329037BBB732B9 PUSH1 0x99 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x80 DUP2 MSTORE PUSH0 PUSH2 0xDC9 PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0xD19 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP6 SWAP1 SWAP6 MSTORE POP PUSH1 0x40 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP1 SWAP2 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0xDF6 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0xE11 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP8 MLOAD PUSH2 0xE1C DUP2 PUSH2 0xC8E JUMP JUMPDEST DUP1 SWAP8 POP POP PUSH1 0x20 DUP9 ADD MLOAD DUP1 PUSH1 0x2 SIGNEXTEND DUP2 EQ PUSH2 0xE33 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP6 POP PUSH2 0xE41 PUSH1 0x40 DUP10 ADD PUSH2 0xDE5 JUMP JUMPDEST SWAP5 POP PUSH2 0xE4F PUSH1 0x60 DUP10 ADD PUSH2 0xDE5 JUMP JUMPDEST SWAP4 POP PUSH2 0xE5D PUSH1 0x80 DUP10 ADD PUSH2 0xDE5 JUMP JUMPDEST SWAP3 POP PUSH1 0xA0 DUP9 ADD MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0xE72 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0xC0 DUP10 ADD MLOAD SWAP1 SWAP3 POP DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xE87 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEA7 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xD6E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x9B3 JUMPI PUSH2 0x9B3 PUSH2 0xB52 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xEE4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xF02 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xDF6 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xF35 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xF3E DUP7 PUSH2 0xF08 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP4 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x60 DUP7 ADD MLOAD SWAP2 POP PUSH2 0xF61 PUSH1 0x80 DUP8 ADD PUSH2 0xF08 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST DUP1 DUP3 MUL PUSH0 DUP3 SLT PUSH1 0x1 PUSH1 0xFF SHL DUP5 EQ AND ISZERO PUSH2 0xF88 JUMPI PUSH2 0xF88 PUSH2 0xB52 JUMP JUMPDEST DUP2 DUP2 SDIV DUP4 EQ DUP3 ISZERO OR PUSH2 0x9B3 JUMPI PUSH2 0x9B3 PUSH2 0xB52 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x24 0xC9 DIV 0xBE 0xF8 CALLER 0xB6 PUSH32 0xB7E3222024ADC23707813C21CD9BB6542BCD916274D4B3FD64736F6C63430008 EQ STOP CALLER ",
							"sourceMap": "1234:1:1:-:0;1199:36;;1275:2;1241:36;;1315:46;941:6687;1315:46;;941:6687;1315:46;;;-1:-1:-1;;;1315:46:1;;;;;;;;:::i;:::-;;2178:919;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2482:5;:18;;2490:10;-1:-1:-1;;;;;;2482:18:1;;;;;;;2510:8;:20;;;;-1:-1:-1;;;;;2510:20:1;;;;;;;;;;2540:9;:22;;;;;;;;;;2572:9;:22;;;;;;;;;;2604:15;:34;;;;;;;;;;;;;2648:16;:36;;;;;;;;;;2694:13;:30;;;;;;;;;;2734:22;:48;;;;;;;;;;2792:32;:68;;;;;;;;;;;;;;;2879:23;;-1:-1:-1;;;3932:24:24;;2879:10:1;;3981:1:24;3972:11;2879:23:1;;;;;;;;;;;;;:41;;-1:-1:-1;;;;;2879:41:1;;;;-1:-1:-1;;;;;;2879:41:1;;;;;;;;;-1:-1:-1;;2879:23:1;2930:22;;-1:-1:-1;;;;2930:22:1;;;-1:-1:-1;;2980:3:1;2962:15;:21;-1:-1:-1;;3023:2:1;3007:13;:18;-1:-1:-1;;3075:15:1;3061:11;:29;941:6687;;14:127:24;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:24;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;748:448;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:24;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:24;;;2580:26;2531:89;-1:-1:-1;;1335:1:24;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:24;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:24;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:24;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:24:o;2735:177::-;2814:13;;-1:-1:-1;;;;;2856:31:24;;2846:42;;2836:70;;2902:1;2899;2892:12;2836:70;2735:177;;;:::o;2917:808::-;3050:6;3058;3066;3074;3082;3090;3098;3106;3159:3;3147:9;3138:7;3134:23;3130:33;3127:53;;;3176:1;3173;3166:12;3127:53;3199:40;3229:9;3199:40;:::i;:::-;3189:50;;3258:49;3303:2;3292:9;3288:18;3258:49;:::i;:::-;3248:59;;3326:49;3371:2;3360:9;3356:18;3326:49;:::i;:::-;3316:59;;3394:49;3439:2;3428:9;3424:18;3394:49;:::i;:::-;3384:59;;3462:50;3507:3;3496:9;3492:19;3462:50;:::i;:::-;3452:60;;3531:50;3576:3;3565:9;3561:19;3531:50;:::i;:::-;3521:60;;3600:50;3645:3;3634:9;3630:19;3600:50;:::i;:::-;3590:60;;3669:50;3714:3;3703:9;3699:19;3669:50;:::i;:::-;3659:60;;2917:808;;;;;;;;;;;:::o;3730:259::-;941:6687:1;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_632": {
									"entryPoint": null,
									"id": 632,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@aaveLendingPoolAddressesProvider_460": {
									"entryPoint": null,
									"id": 460,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@adjustTimeframe_660": {
									"entryPoint": 2313,
									"id": 660,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@calculateAmountOut_785": {
									"entryPoint": 2859,
									"id": 785,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@checkLiquidity_764": {
									"entryPoint": 1617,
									"id": 764,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@checkPrice_673": {
									"entryPoint": 2473,
									"id": 673,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@convertAllToPOL_709": {
									"entryPoint": 2563,
									"id": 709,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@currentActivity_444": {
									"entryPoint": 2173,
									"id": 444,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@dexRouters_464": {
									"entryPoint": null,
									"id": 464,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@disableTrading_795": {
									"entryPoint": 1439,
									"id": 795,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@gasCostMultiplier_436": {
									"entryPoint": null,
									"id": 436,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getPrice_1246": {
									"entryPoint": 2718,
									"id": 1246,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@initialDeposit_425": {
									"entryPoint": null,
									"id": 425,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@initiateTrade_693": {
									"entryPoint": 1503,
									"id": 693,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@kill_847": {
									"entryPoint": 1900,
									"id": 847,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@lossThreshold_433": {
									"entryPoint": null,
									"id": 433,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@maticBalance_427": {
									"entryPoint": null,
									"id": 427,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@nextLogTime_441": {
									"entryPoint": null,
									"id": 441,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_421": {
									"entryPoint": null,
									"id": 421,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@polToken_446": {
									"entryPoint": null,
									"id": 446,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@priceFeedAddress_454": {
									"entryPoint": null,
									"id": 454,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@profitThreshold_431": {
									"entryPoint": null,
									"id": 431,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@quickSwapRouter_452": {
									"entryPoint": null,
									"id": 452,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setController_603": {
									"entryPoint": 2489,
									"id": 603,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stablecoinBalance_429": {
									"entryPoint": null,
									"id": 429,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tradingEnabled_423": {
									"entryPoint": null,
									"id": 423,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@trailingStopLoss_439": {
									"entryPoint": null,
									"id": 439,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@uniswapPositionManager_458": {
									"entryPoint": null,
									"id": 458,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@uniswapRouter_456": {
									"entryPoint": null,
									"id": 456,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@usdcToken_450": {
									"entryPoint": null,
									"id": 450,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@usdtToken_448": {
									"entryPoint": null,
									"id": 448,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdrawInGwei_828": {
									"entryPoint": 1985,
									"id": 828,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_string": {
									"entryPoint": 3011,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3445,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr": {
									"entryPoint": 3303,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_uint256": {
									"entryPoint": 3148,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint128_fromMemory": {
									"entryPoint": 3735,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint160t_int24t_uint16t_uint16t_uint16t_uint8t_bool_fromMemory": {
									"entryPoint": 3579,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 7
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3280,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_address": {
									"entryPoint": 3234,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory": {
									"entryPoint": 3873,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_uint16_fromMemory": {
									"entryPoint": 3557,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_uint80_fromMemory": {
									"entryPoint": 3848,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 3353,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3420,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr_t_uint256_t_rational_0_by_1_t_uint256__to_t_string_memory_ptr_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3511,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3472,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7638e8c8903c5fa61ebf97e2b2f70e2c3ee679b62e1042ef4e4240a60c0694d0_t_uint256_t_rational_0_by_1_t_uint256__to_t_string_memory_ptr_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f548031c271626835f64bb759a80cb1c7ee3cbb01af72f7702986b2084fa7f35_t_rational_0_by_1_t_rational_0_by_1_t_uint256__to_t_string_memory_ptr_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2918,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 2960,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_int256": {
									"entryPoint": 3949,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2937,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 3773,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 3792,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2898,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 2991,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 3214,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:9556:24",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:24",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:24",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:24",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:24",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:24",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:24"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:24",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:24",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:24"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:24",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:24",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:24"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "194:77:24",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "204:16:24",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "215:1:24"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "218:1:24"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "211:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "211:9:24"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "204:3:24"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "243:22:24",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "245:16:24"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "245:18:24"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "245:18:24"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "235:1:24"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "238:3:24"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "232:2:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:10:24"
															},
															"nodeType": "YulIf",
															"src": "229:36:24"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "177:1:24",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "180:1:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "186:3:24",
														"type": ""
													}
												],
												"src": "146:125:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "328:116:24",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "338:20:24",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "353:1:24"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "356:1:24"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "349:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "349:9:24"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "338:7:24"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "416:22:24",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "418:16:24"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "418:18:24"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "418:18:24"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "387:1:24"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "380:6:24"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "380:9:24"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "394:1:24"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "401:7:24"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "410:1:24"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "397:3:24"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "397:15:24"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "391:2:24"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "391:22:24"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "377:2:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "377:37:24"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "370:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "370:45:24"
															},
															"nodeType": "YulIf",
															"src": "367:71:24"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "307:1:24",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "310:1:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "316:7:24",
														"type": ""
													}
												],
												"src": "276:168:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "495:171:24",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "526:111:24",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "547:1:24",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "554:3:24",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "559:10:24",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "550:3:24"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "550:20:24"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "540:6:24"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "540:31:24"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "540:31:24"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "591:1:24",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "594:4:24",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "584:6:24"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "584:15:24"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "584:15:24"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "619:1:24",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "622:4:24",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "612:6:24"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "612:15:24"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "612:15:24"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "515:1:24"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "508:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "508:9:24"
															},
															"nodeType": "YulIf",
															"src": "505:132:24"
														},
														{
															"nodeType": "YulAssignment",
															"src": "646:14:24",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "655:1:24"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "658:1:24"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "651:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "651:9:24"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "646:1:24"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "480:1:24",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "483:1:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "489:1:24",
														"type": ""
													}
												],
												"src": "449:217:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "772:102:24",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "782:26:24",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "794:9:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "805:2:24",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "790:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "790:18:24"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "782:4:24"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "824:9:24"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "839:6:24"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "855:3:24",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "860:1:24",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "851:3:24"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "851:11:24"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "864:1:24",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "847:3:24"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "847:19:24"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "835:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "835:32:24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "817:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "817:51:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "817:51:24"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "741:9:24",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "752:6:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "763:4:24",
														"type": ""
													}
												],
												"src": "671:203:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "980:76:24",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "990:26:24",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1002:9:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1013:2:24",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "998:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "998:18:24"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "990:4:24"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1032:9:24"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1043:6:24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1025:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "1025:25:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1025:25:24"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "949:9:24",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "960:6:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "971:4:24",
														"type": ""
													}
												],
												"src": "879:177:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1093:95:24",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1110:1:24",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1117:3:24",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1122:10:24",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1103:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "1103:31:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1103:31:24"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1150:1:24",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1153:4:24",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1143:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "1143:15:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1143:15:24"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1174:1:24",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1177:4:24",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1167:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "1167:15:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1167:15:24"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1061:127:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1246:666:24",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1295:16:24",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1304:1:24",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1307:1:24",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1297:6:24"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1297:12:24"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1297:12:24"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1274:6:24"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1282:4:24",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1270:3:24"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1270:17:24"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "1289:3:24"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1266:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1266:27:24"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1259:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "1259:35:24"
															},
															"nodeType": "YulIf",
															"src": "1256:55:24"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1320:30:24",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1343:6:24"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1330:12:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "1330:20:24"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1324:2:24",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1359:28:24",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1369:18:24",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "1363:2:24",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1410:22:24",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1412:16:24"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1412:18:24"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1412:18:24"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1402:2:24"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1406:2:24"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1399:2:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "1399:10:24"
															},
															"nodeType": "YulIf",
															"src": "1396:36:24"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1441:17:24",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1455:2:24",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "1451:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "1451:7:24"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "1445:2:24",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1467:23:24",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1487:2:24",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1481:5:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "1481:9:24"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "1471:6:24",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1499:71:24",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1521:6:24"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "1545:2:24"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1549:4:24",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "1541:3:24"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1541:13:24"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "1556:2:24"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "1537:3:24"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1537:22:24"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1561:2:24",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1533:3:24"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1533:31:24"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "1566:2:24"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1529:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1529:40:24"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1517:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "1517:53:24"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "1503:10:24",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1629:22:24",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1631:16:24"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1631:18:24"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1631:18:24"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1588:10:24"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "1600:2:24"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1585:2:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1585:18:24"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1608:10:24"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1620:6:24"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1605:2:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1605:22:24"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1582:2:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "1582:46:24"
															},
															"nodeType": "YulIf",
															"src": "1579:72:24"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1667:2:24",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1671:10:24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1660:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "1660:22:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1660:22:24"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1698:6:24"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1706:2:24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1691:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "1691:18:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1691:18:24"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1757:16:24",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1766:1:24",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1769:1:24",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1759:6:24"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1759:12:24"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1759:12:24"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1732:6:24"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "1740:2:24"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1728:3:24"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1728:15:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1745:4:24",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1724:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1724:26:24"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1752:3:24"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1721:2:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "1721:35:24"
															},
															"nodeType": "YulIf",
															"src": "1718:55:24"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1799:6:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1807:4:24",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1795:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1795:17:24"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1818:6:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1826:4:24",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1814:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1814:17:24"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1833:2:24"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "1782:12:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "1782:54:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1782:54:24"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "1860:6:24"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "1868:2:24"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1856:3:24"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1856:15:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1873:4:24",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1852:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1852:26:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1880:1:24",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1845:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "1845:37:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1845:37:24"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1891:15:24",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1900:6:24"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1891:5:24"
																}
															]
														}
													]
												},
												"name": "abi_decode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1220:6:24",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1228:3:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1236:5:24",
														"type": ""
													}
												],
												"src": "1193:719:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2014:293:24",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2060:16:24",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2069:1:24",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2072:1:24",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2062:6:24"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2062:12:24"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2062:12:24"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2035:7:24"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2044:9:24"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2031:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2031:23:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2056:2:24",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2027:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "2027:32:24"
															},
															"nodeType": "YulIf",
															"src": "2024:52:24"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2085:37:24",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2112:9:24"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2099:12:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "2099:23:24"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "2089:6:24",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2165:16:24",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2174:1:24",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2177:1:24",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2167:6:24"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2167:12:24"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2167:12:24"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2137:6:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2145:18:24",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2134:2:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "2134:30:24"
															},
															"nodeType": "YulIf",
															"src": "2131:50:24"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2190:60:24",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2222:9:24"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2233:6:24"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2218:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2218:22:24"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2242:7:24"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nodeType": "YulIdentifier",
																	"src": "2200:17:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "2200:50:24"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2190:6:24"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2259:42:24",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2286:9:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2297:2:24",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2282:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2282:18:24"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2269:12:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "2269:32:24"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2259:6:24"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1972:9:24",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1983:7:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1995:6:24",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2003:6:24",
														"type": ""
													}
												],
												"src": "1917:390:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2357:86:24",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2421:16:24",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2430:1:24",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2433:1:24",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2423:6:24"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2423:12:24"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2423:12:24"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2380:5:24"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2391:5:24"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2406:3:24",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2411:1:24",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "2402:3:24"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2402:11:24"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2415:1:24",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "2398:3:24"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2398:19:24"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "2387:3:24"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2387:31:24"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2377:2:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2377:42:24"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2370:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "2370:50:24"
															},
															"nodeType": "YulIf",
															"src": "2367:70:24"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2346:5:24",
														"type": ""
													}
												],
												"src": "2312:131:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2535:228:24",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2581:16:24",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2590:1:24",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2593:1:24",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2583:6:24"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2583:12:24"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2583:12:24"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2556:7:24"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2565:9:24"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2552:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2552:23:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2577:2:24",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2548:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "2548:32:24"
															},
															"nodeType": "YulIf",
															"src": "2545:52:24"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2606:33:24",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2629:9:24"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2616:12:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "2616:23:24"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2606:6:24"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2648:45:24",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2678:9:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2689:2:24",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2674:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2674:18:24"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2661:12:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "2661:32:24"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2652:5:24",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2727:5:24"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "2702:24:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "2702:31:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2702:31:24"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2742:15:24",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2752:5:24"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2742:6:24"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2493:9:24",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2504:7:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2516:6:24",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2524:6:24",
														"type": ""
													}
												],
												"src": "2448:315:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2863:92:24",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2873:26:24",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2885:9:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2896:2:24",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2881:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "2881:18:24"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2873:4:24"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2915:9:24"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "2940:6:24"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2933:6:24"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2933:14:24"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2926:6:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2926:22:24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2908:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "2908:41:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2908:41:24"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2832:9:24",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2843:6:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2854:4:24",
														"type": ""
													}
												],
												"src": "2768:187:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3030:110:24",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3076:16:24",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3085:1:24",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3088:1:24",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3078:6:24"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3078:12:24"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3078:12:24"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3051:7:24"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3060:9:24"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3047:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3047:23:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3072:2:24",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3043:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "3043:32:24"
															},
															"nodeType": "YulIf",
															"src": "3040:52:24"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3101:33:24",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3124:9:24"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3111:12:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "3111:23:24"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3101:6:24"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2996:9:24",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3007:7:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3019:6:24",
														"type": ""
													}
												],
												"src": "2960:180:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3225:242:24",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3271:16:24",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3280:1:24",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3283:1:24",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3273:6:24"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3273:12:24"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3273:12:24"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3246:7:24"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3255:9:24"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3242:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3242:23:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3267:2:24",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3238:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "3238:32:24"
															},
															"nodeType": "YulIf",
															"src": "3235:52:24"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3296:37:24",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3323:9:24"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3310:12:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "3310:23:24"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "3300:6:24",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3376:16:24",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3385:1:24",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3388:1:24",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3378:6:24"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3378:12:24"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3378:12:24"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3348:6:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3356:18:24",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3345:2:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "3345:30:24"
															},
															"nodeType": "YulIf",
															"src": "3342:50:24"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3401:60:24",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3433:9:24"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3444:6:24"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3429:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3429:22:24"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3453:7:24"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nodeType": "YulIdentifier",
																	"src": "3411:17:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "3411:50:24"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3401:6:24"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3191:9:24",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3202:7:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3214:6:24",
														"type": ""
													}
												],
												"src": "3145:322:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3522:373:24",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3532:26:24",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3552:5:24"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3546:5:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "3546:12:24"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3536:6:24",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3574:3:24"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3579:6:24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3567:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "3567:19:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3567:19:24"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3595:10:24",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3604:1:24",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "3599:1:24",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3666:110:24",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "3680:14:24",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "3690:4:24",
																			"type": "",
																			"value": "0x20"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "3684:2:24",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "pos",
																									"nodeType": "YulIdentifier",
																									"src": "3722:3:24"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "3727:1:24"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3718:3:24"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3718:11:24"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "3731:2:24"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3714:3:24"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3714:20:24"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "3750:5:24"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "3757:1:24"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "3746:3:24"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "3746:13:24"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "3761:2:24"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3742:3:24"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3742:22:24"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "3736:5:24"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3736:29:24"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3707:6:24"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3707:59:24"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3707:59:24"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "3625:1:24"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3628:6:24"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3622:2:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "3622:13:24"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3636:21:24",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3638:17:24",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "3647:1:24"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3650:4:24",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3643:3:24"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3643:12:24"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "3638:1:24"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3618:3:24",
																"statements": []
															},
															"src": "3614:162:24"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "3800:3:24"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "3805:6:24"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3796:3:24"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3796:16:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3814:4:24",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3792:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3792:27:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3821:1:24",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3785:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "3785:38:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3785:38:24"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3832:57:24",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "3847:3:24"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "3860:6:24"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3868:2:24",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "3856:3:24"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3856:15:24"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3877:2:24",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "3873:3:24"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3873:7:24"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "3852:3:24"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3852:29:24"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3843:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3843:39:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3884:4:24",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3839:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "3839:50:24"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3832:3:24"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3499:5:24",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3506:3:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3514:3:24",
														"type": ""
													}
												],
												"src": "3472:423:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4021:99:24",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4038:9:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4049:2:24",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4031:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "4031:21:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4031:21:24"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4061:53:24",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4087:6:24"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4099:9:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4110:2:24",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4095:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4095:18:24"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "4069:17:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "4069:45:24"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4061:4:24"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3990:9:24",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4001:6:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4012:4:24",
														"type": ""
													}
												],
												"src": "3900:220:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4195:177:24",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4241:16:24",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4250:1:24",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4253:1:24",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4243:6:24"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4243:12:24"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4243:12:24"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4216:7:24"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4225:9:24"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4212:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4212:23:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4237:2:24",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4208:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "4208:32:24"
															},
															"nodeType": "YulIf",
															"src": "4205:52:24"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4266:36:24",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4292:9:24"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4279:12:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "4279:23:24"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "4270:5:24",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4336:5:24"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "4311:24:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "4311:31:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4311:31:24"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4351:15:24",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4361:5:24"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4351:6:24"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4161:9:24",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4172:7:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4184:6:24",
														"type": ""
													}
												],
												"src": "4125:247:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4551:163:24",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4568:9:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4579:2:24",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4561:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "4561:21:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4561:21:24"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4602:9:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4613:2:24",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4598:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4598:18:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4618:2:24",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4591:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "4591:30:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4591:30:24"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4641:9:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4652:2:24",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4637:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4637:18:24"
																	},
																	{
																		"hexValue": "4e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4657:15:24",
																		"type": "",
																		"value": "Not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4630:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "4630:43:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4630:43:24"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4682:26:24",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4694:9:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4705:2:24",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4690:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "4690:18:24"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4682:4:24"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4528:9:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4542:4:24",
														"type": ""
													}
												],
												"src": "4377:337:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4932:230:24",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4949:9:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4960:3:24",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4942:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "4942:22:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4942:22:24"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4973:54:24",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4999:6:24"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5011:9:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5022:3:24",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5007:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5007:19:24"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "4981:17:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "4981:46:24"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4973:4:24"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5047:9:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5058:2:24",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5043:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5043:18:24"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5063:6:24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5036:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "5036:34:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5036:34:24"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5090:9:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5101:2:24",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5086:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5086:18:24"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "5106:6:24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5079:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "5079:34:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5079:34:24"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5133:9:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5144:2:24",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5129:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5129:18:24"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "5149:6:24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5122:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "5122:34:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5122:34:24"
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr_t_uint256_t_rational_0_by_1_t_uint256__to_t_string_memory_ptr_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4877:9:24",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4888:6:24",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4896:6:24",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4904:6:24",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4912:6:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4923:4:24",
														"type": ""
													}
												],
												"src": "4719:443:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5226:104:24",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5236:22:24",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5251:6:24"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5245:5:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "5245:13:24"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "5236:5:24"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5308:16:24",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5317:1:24",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5320:1:24",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5310:6:24"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5310:12:24"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5310:12:24"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5280:5:24"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5291:5:24"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5298:6:24",
																						"type": "",
																						"value": "0xffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "5287:3:24"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5287:18:24"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5277:2:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5277:29:24"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5270:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "5270:37:24"
															},
															"nodeType": "YulIf",
															"src": "5267:57:24"
														}
													]
												},
												"name": "abi_decode_uint16_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5205:6:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5216:5:24",
														"type": ""
													}
												],
												"src": "5167:163:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5508:813:24",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5555:16:24",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5564:1:24",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5567:1:24",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5557:6:24"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5557:12:24"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5557:12:24"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5529:7:24"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5538:9:24"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5525:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5525:23:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5550:3:24",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5521:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "5521:33:24"
															},
															"nodeType": "YulIf",
															"src": "5518:53:24"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5580:29:24",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5599:9:24"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5593:5:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "5593:16:24"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "5584:5:24",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5643:5:24"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "5618:24:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "5618:31:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5618:31:24"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5658:15:24",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5668:5:24"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5658:6:24"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5682:40:24",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5707:9:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5718:2:24",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5703:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5703:18:24"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5697:5:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "5697:25:24"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "5686:7:24",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5778:16:24",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5787:1:24",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5790:1:24",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5780:6:24"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5780:12:24"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5780:12:24"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value_1",
																				"nodeType": "YulIdentifier",
																				"src": "5744:7:24"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5764:1:24",
																						"type": "",
																						"value": "2"
																					},
																					{
																						"name": "value_1",
																						"nodeType": "YulIdentifier",
																						"src": "5767:7:24"
																					}
																				],
																				"functionName": {
																					"name": "signextend",
																					"nodeType": "YulIdentifier",
																					"src": "5753:10:24"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5753:22:24"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5741:2:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5741:35:24"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5734:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "5734:43:24"
															},
															"nodeType": "YulIf",
															"src": "5731:63:24"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5803:17:24",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "5813:7:24"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "5803:6:24"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5829:58:24",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5872:9:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5883:2:24",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5868:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5868:18:24"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint16_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "5839:28:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "5839:48:24"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "5829:6:24"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5896:58:24",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5939:9:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5950:2:24",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5935:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5935:18:24"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint16_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "5906:28:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "5906:48:24"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "5896:6:24"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5963:59:24",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6006:9:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6017:3:24",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6002:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6002:19:24"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint16_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "5973:28:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "5973:49:24"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "5963:6:24"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6031:41:24",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6056:9:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6067:3:24",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6052:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6052:19:24"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6046:5:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "6046:26:24"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nodeType": "YulTypedName",
																	"src": "6035:7:24",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6124:16:24",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6133:1:24",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6136:1:24",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6126:6:24"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6126:12:24"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6126:12:24"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value_2",
																				"nodeType": "YulIdentifier",
																				"src": "6094:7:24"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value_2",
																						"nodeType": "YulIdentifier",
																						"src": "6107:7:24"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6116:4:24",
																						"type": "",
																						"value": "0xff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "6103:3:24"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6103:18:24"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6091:2:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6091:31:24"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6084:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "6084:39:24"
															},
															"nodeType": "YulIf",
															"src": "6081:59:24"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6149:17:24",
															"value": {
																"name": "value_2",
																"nodeType": "YulIdentifier",
																"src": "6159:7:24"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nodeType": "YulIdentifier",
																	"src": "6149:6:24"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6175:41:24",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6200:9:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6211:3:24",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6196:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6196:19:24"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6190:5:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "6190:26:24"
															},
															"variables": [
																{
																	"name": "value_3",
																	"nodeType": "YulTypedName",
																	"src": "6179:7:24",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6273:16:24",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6282:1:24",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6285:1:24",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6275:6:24"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6275:12:24"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6275:12:24"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value_3",
																				"nodeType": "YulIdentifier",
																				"src": "6238:7:24"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value_3",
																								"nodeType": "YulIdentifier",
																								"src": "6261:7:24"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "6254:6:24"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6254:15:24"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "6247:6:24"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6247:23:24"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6235:2:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6235:36:24"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6228:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "6228:44:24"
															},
															"nodeType": "YulIf",
															"src": "6225:64:24"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6298:17:24",
															"value": {
																"name": "value_3",
																"nodeType": "YulIdentifier",
																"src": "6308:7:24"
															},
															"variableNames": [
																{
																	"name": "value6",
																	"nodeType": "YulIdentifier",
																	"src": "6298:6:24"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint160t_int24t_uint16t_uint16t_uint16t_uint8t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5426:9:24",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5437:7:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5449:6:24",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5457:6:24",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5465:6:24",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "5473:6:24",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "5481:6:24",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "5489:6:24",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "5497:6:24",
														"type": ""
													}
												],
												"src": "5335:986:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6407:224:24",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6453:16:24",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6462:1:24",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6465:1:24",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6455:6:24"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6455:12:24"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6455:12:24"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6428:7:24"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6437:9:24"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6424:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6424:23:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6449:2:24",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6420:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "6420:32:24"
															},
															"nodeType": "YulIf",
															"src": "6417:52:24"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6478:29:24",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6497:9:24"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6491:5:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "6491:16:24"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "6482:5:24",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6585:16:24",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6594:1:24",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6597:1:24",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6587:6:24"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6587:12:24"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6587:12:24"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6529:5:24"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6540:5:24"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6547:34:24",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "6536:3:24"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6536:46:24"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6526:2:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6526:57:24"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6519:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "6519:65:24"
															},
															"nodeType": "YulIf",
															"src": "6516:85:24"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6610:15:24",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "6620:5:24"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6610:6:24"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint128_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6373:9:24",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6384:7:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6396:6:24",
														"type": ""
													}
												],
												"src": "6326:305:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6685:79:24",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6695:17:24",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6707:1:24"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6710:1:24"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "6703:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "6703:9:24"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "6695:4:24"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6736:22:24",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6738:16:24"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6738:18:24"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6738:18:24"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "6727:4:24"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6733:1:24"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6724:2:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "6724:11:24"
															},
															"nodeType": "YulIf",
															"src": "6721:37:24"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6667:1:24",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6670:1:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "6676:4:24",
														"type": ""
													}
												],
												"src": "6636:128:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6943:170:24",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6960:9:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6971:2:24",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6953:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "6953:21:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6953:21:24"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6994:9:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7005:2:24",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6990:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6990:18:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7010:2:24",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6983:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "6983:30:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6983:30:24"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7033:9:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7044:2:24",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7029:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7029:18:24"
																	},
																	{
																		"hexValue": "496e73756666696369656e742062616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7049:22:24",
																		"type": "",
																		"value": "Insufficient balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7022:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "7022:50:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7022:50:24"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7081:26:24",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7093:9:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7104:2:24",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7089:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "7089:18:24"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7081:4:24"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6920:9:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6934:4:24",
														"type": ""
													}
												],
												"src": "6769:344:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7173:325:24",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7183:22:24",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7197:1:24",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7200:4:24"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7193:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "7193:12:24"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "7183:6:24"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7214:38:24",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7244:4:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7250:1:24",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "7240:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "7240:12:24"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "7218:18:24",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7291:31:24",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "7293:27:24",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "7307:6:24"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7315:4:24",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "7303:3:24"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7303:17:24"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7293:6:24"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "7271:18:24"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7264:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "7264:26:24"
															},
															"nodeType": "YulIf",
															"src": "7261:61:24"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7381:111:24",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7402:1:24",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7409:3:24",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7414:10:24",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "7405:3:24"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7405:20:24"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7395:6:24"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7395:31:24"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7395:31:24"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7446:1:24",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7449:4:24",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7439:6:24"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7439:15:24"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7439:15:24"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7474:1:24",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7477:4:24",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7467:6:24"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7467:15:24"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7467:15:24"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "7337:18:24"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7360:6:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7368:2:24",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "7357:2:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7357:14:24"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "7334:2:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "7334:38:24"
															},
															"nodeType": "YulIf",
															"src": "7331:161:24"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "7153:4:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7162:6:24",
														"type": ""
													}
												],
												"src": "7118:380:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7769:303:24",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7786:9:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7797:3:24",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7779:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "7779:22:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7779:22:24"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7821:9:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7832:3:24",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7817:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7817:19:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7838:2:24",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7810:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "7810:31:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7810:31:24"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7861:9:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7872:3:24",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7857:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7857:19:24"
																	},
																	{
																		"hexValue": "54696d656672616d652061646a7573746564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7878:20:24",
																		"type": "",
																		"value": "Timeframe adjusted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7850:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "7850:49:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7850:49:24"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7908:27:24",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7920:9:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7931:3:24",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7916:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "7916:19:24"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7908:4:24"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7955:9:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7966:4:24",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7951:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7951:20:24"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7973:6:24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7944:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "7944:36:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7944:36:24"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8000:9:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8011:2:24",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7996:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7996:18:24"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8016:6:24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7989:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "7989:34:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7989:34:24"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8043:9:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8054:2:24",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8039:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8039:18:24"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "8059:6:24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8032:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "8032:34:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8032:34:24"
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7638e8c8903c5fa61ebf97e2b2f70e2c3ee679b62e1042ef4e4240a60c0694d0_t_uint256_t_rational_0_by_1_t_uint256__to_t_string_memory_ptr_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7722:9:24",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7733:6:24",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7741:6:24",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7749:6:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7760:4:24",
														"type": ""
													}
												],
												"src": "7503:569:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8351:299:24",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8368:9:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8379:3:24",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8361:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "8361:22:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8361:22:24"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8403:9:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8414:3:24",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8399:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8399:19:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8420:2:24",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8392:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "8392:31:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8392:31:24"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8443:9:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8454:3:24",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8439:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8439:19:24"
																	},
																	{
																		"hexValue": "636f6e7665727420746f20504f4c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8460:16:24",
																		"type": "",
																		"value": "convert to POL"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8432:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "8432:45:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8432:45:24"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8486:27:24",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8498:9:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8509:3:24",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8494:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "8494:19:24"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8486:4:24"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8533:9:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8544:4:24",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8529:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8529:20:24"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8551:6:24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8522:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "8522:36:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8522:36:24"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8578:9:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8589:2:24",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8574:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8574:18:24"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8594:6:24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8567:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "8567:34:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8567:34:24"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8621:9:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8632:2:24",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8617:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8617:18:24"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "8637:6:24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8610:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "8610:34:24"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8610:34:24"
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f548031c271626835f64bb759a80cb1c7ee3cbb01af72f7702986b2084fa7f35_t_rational_0_by_1_t_rational_0_by_1_t_uint256__to_t_string_memory_ptr_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8304:9:24",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8315:6:24",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8323:6:24",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8331:6:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8342:4:24",
														"type": ""
													}
												],
												"src": "8077:573:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8714:120:24",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8724:22:24",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8739:6:24"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8733:5:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "8733:13:24"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "8724:5:24"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8812:16:24",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8821:1:24",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8824:1:24",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8814:6:24"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8814:12:24"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8814:12:24"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8768:5:24"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "8779:5:24"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8786:22:24",
																						"type": "",
																						"value": "0xffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "8775:3:24"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8775:34:24"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "8765:2:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8765:45:24"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8758:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "8758:53:24"
															},
															"nodeType": "YulIf",
															"src": "8755:73:24"
														}
													]
												},
												"name": "abi_decode_uint80_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "8693:6:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8704:5:24",
														"type": ""
													}
												],
												"src": "8655:179:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8985:327:24",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9032:16:24",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9041:1:24",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9044:1:24",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9034:6:24"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9034:12:24"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9034:12:24"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9006:7:24"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9015:9:24"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9002:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9002:23:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9027:3:24",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8998:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "8998:33:24"
															},
															"nodeType": "YulIf",
															"src": "8995:53:24"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9057:49:24",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9096:9:24"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint80_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "9067:28:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "9067:39:24"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "9057:6:24"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9115:35:24",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9135:9:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9146:2:24",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9131:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9131:18:24"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9125:5:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "9125:25:24"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "9115:6:24"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9159:35:24",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9179:9:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9190:2:24",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9175:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9175:18:24"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9169:5:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "9169:25:24"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "9159:6:24"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9203:35:24",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9223:9:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9234:2:24",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9219:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9219:18:24"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9213:5:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "9213:25:24"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "9203:6:24"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9247:59:24",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9290:9:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9301:3:24",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9286:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9286:19:24"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint80_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "9257:28:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "9257:49:24"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "9247:6:24"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8919:9:24",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8930:7:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8942:6:24",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8950:6:24",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8958:6:24",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "8966:6:24",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "8974:6:24",
														"type": ""
													}
												],
												"src": "8839:473:24"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9368:186:24",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9378:20:24",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9393:1:24"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9396:1:24"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "9389:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "9389:9:24"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "9378:7:24"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9445:22:24",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9447:16:24"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9447:18:24"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9447:18:24"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "9418:1:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9421:1:24",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "9414:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9414:9:24"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "9428:1:24"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9435:3:24",
																						"type": "",
																						"value": "255"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9440:1:24",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "9431:3:24"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9431:11:24"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "9425:2:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9425:18:24"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "9410:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "9410:34:24"
															},
															"nodeType": "YulIf",
															"src": "9407:60:24"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9526:22:24",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9528:16:24"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9528:18:24"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9528:18:24"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "9496:1:24"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "9489:6:24"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9489:9:24"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "9503:1:24"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "9511:7:24"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "9520:1:24"
																							}
																						],
																						"functionName": {
																							"name": "sdiv",
																							"nodeType": "YulIdentifier",
																							"src": "9506:4:24"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9506:16:24"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "9500:2:24"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9500:23:24"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "9486:2:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9486:38:24"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9479:6:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "9479:46:24"
															},
															"nodeType": "YulIf",
															"src": "9476:72:24"
														}
													]
												},
												"name": "checked_mul_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9347:1:24",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9350:1:24",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "9356:7:24",
														"type": ""
													}
												],
												"src": "9317:237:24"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 13)\n        mstore(add(headStart, 64), \"Not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_uint256_t_rational_0_by_1_t_uint256__to_t_string_memory_ptr_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 128)\n        tail := abi_encode_string(value0, add(headStart, 128))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_decode_uint16_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint160t_int24t_uint16t_uint16t_uint16t_uint8t_bool_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := mload(add(headStart, 32))\n        if iszero(eq(value_1, signextend(2, value_1))) { revert(0, 0) }\n        value1 := value_1\n        value2 := abi_decode_uint16_fromMemory(add(headStart, 64))\n        value3 := abi_decode_uint16_fromMemory(add(headStart, 96))\n        value4 := abi_decode_uint16_fromMemory(add(headStart, 128))\n        let value_2 := mload(add(headStart, 160))\n        if iszero(eq(value_2, and(value_2, 0xff))) { revert(0, 0) }\n        value5 := value_2\n        let value_3 := mload(add(headStart, 192))\n        if iszero(eq(value_3, iszero(iszero(value_3)))) { revert(0, 0) }\n        value6 := value_3\n    }\n    function abi_decode_tuple_t_uint128_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n        value0 := value\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Insufficient balance\")\n        tail := add(headStart, 96)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_7638e8c8903c5fa61ebf97e2b2f70e2c3ee679b62e1042ef4e4240a60c0694d0_t_uint256_t_rational_0_by_1_t_uint256__to_t_string_memory_ptr_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 128)\n        mstore(add(headStart, 128), 18)\n        mstore(add(headStart, 160), \"Timeframe adjusted\")\n        tail := add(headStart, 192)\n        mstore(add(headStart, 0x20), value0)\n        mstore(add(headStart, 64), value1)\n        mstore(add(headStart, 96), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_f548031c271626835f64bb759a80cb1c7ee3cbb01af72f7702986b2084fa7f35_t_rational_0_by_1_t_rational_0_by_1_t_uint256__to_t_string_memory_ptr_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 128)\n        mstore(add(headStart, 128), 14)\n        mstore(add(headStart, 160), \"convert to POL\")\n        tail := add(headStart, 192)\n        mstore(add(headStart, 0x20), value0)\n        mstore(add(headStart, 64), value1)\n        mstore(add(headStart, 96), value2)\n    }\n    function abi_decode_uint80_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_uint80_fromMemory(headStart)\n        value1 := mload(add(headStart, 32))\n        value2 := mload(add(headStart, 64))\n        value3 := mload(add(headStart, 96))\n        value4 := abi_decode_uint80_fromMemory(add(headStart, 128))\n    }\n    function checked_mul_t_int256(x, y) -> product\n    {\n        product := mul(x, y)\n        if and(slt(x, 0), eq(y, shl(255, 1))) { panic_error_0x11() }\n        if iszero(or(iszero(x), eq(y, sdiv(product, x)))) { panic_error_0x11() }\n    }\n}",
									"id": 24,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1BD JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x869665E9 GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0xB3CE56A2 GT PUSH2 0x92 JUMPI DUP1 PUSH4 0xE0ABCA0B GT PUSH2 0x62 JUMPI DUP1 PUSH4 0xE0ABCA0B EQ PUSH2 0x52D JUMPI DUP1 PUSH4 0xE189EB42 EQ PUSH2 0x54C JUMPI DUP1 PUSH4 0xE5047B30 EQ PUSH2 0x56B JUMPI DUP1 PUSH4 0xF974821A EQ PUSH2 0x58A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB3CE56A2 EQ PUSH2 0x4CF JUMPI DUP1 PUSH4 0xB6658D07 EQ PUSH2 0x4E4 JUMPI DUP1 PUSH4 0xC0FC247F EQ PUSH2 0x503 JUMPI DUP1 PUSH4 0xE037F889 EQ PUSH2 0x518 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x92EEFE9B GT PUSH2 0xCD JUMPI DUP1 PUSH4 0x92EEFE9B EQ PUSH2 0x468 JUMPI DUP1 PUSH4 0x9D8EF1E1 EQ PUSH2 0x487 JUMPI DUP1 PUSH4 0xA30FB905 EQ PUSH2 0x49B JUMPI DUP1 PUSH4 0xA98AD46C EQ PUSH2 0x4B0 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x869665E9 EQ PUSH2 0x417 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x436 JUMPI DUP1 PUSH4 0x8FC3047D EQ PUSH2 0x454 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x41C0E1B5 GT PUSH2 0x15D JUMPI DUP1 PUSH4 0x5E7FFA67 GT PUSH2 0x138 JUMPI DUP1 PUSH4 0x5E7FFA67 EQ PUSH2 0x382 JUMPI DUP1 PUSH4 0x64AABB9E EQ PUSH2 0x3C2 JUMPI DUP1 PUSH4 0x6D546CDD EQ PUSH2 0x3D7 JUMPI DUP1 PUSH4 0x735DE9F7 EQ PUSH2 0x3F8 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x41C0E1B5 EQ PUSH2 0x330 JUMPI DUP1 PUSH4 0x457F3CB0 EQ PUSH2 0x344 JUMPI DUP1 PUSH4 0x4ADA218B EQ PUSH2 0x363 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1BF41362 GT PUSH2 0x198 JUMPI DUP1 PUSH4 0x1BF41362 EQ PUSH2 0x2AE JUMPI DUP1 PUSH4 0x238F9B7A EQ PUSH2 0x2C3 JUMPI DUP1 PUSH4 0x26C403ED EQ PUSH2 0x2E2 JUMPI DUP1 PUSH4 0x3FB47A3B EQ PUSH2 0x301 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x11EAC855 EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0x1458D9D8 EQ PUSH2 0x275 JUMPI DUP1 PUSH4 0x17700F01 EQ PUSH2 0x298 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x235 JUMPI CALLVALUE PUSH1 0x1 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1D3 SWAP2 SWAP1 PUSH2 0xB66 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x64 SWAP1 POP PUSH2 0x1E6 CALLVALUE PUSH1 0x46 PUSH2 0xB79 JUMP JUMPDEST PUSH2 0x1F0 SWAP2 SWAP1 PUSH2 0xB90 JUMP JUMPDEST PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x200 SWAP2 SWAP1 PUSH2 0xB66 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x64 SWAP1 POP PUSH2 0x213 CALLVALUE PUSH1 0x1E PUSH2 0xB79 JUMP JUMPDEST PUSH2 0x21D SWAP2 SWAP1 PUSH2 0xB90 JUMP JUMPDEST PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x22D SWAP2 SWAP1 PUSH2 0xB66 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x244 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xC SLOAD PUSH2 0x258 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x280 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28A PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x26C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AC PUSH2 0x59F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28A PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x11 SLOAD PUSH2 0x258 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2ED JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AC PUSH2 0x2FC CALLDATASIZE PUSH1 0x4 PUSH2 0xC4C JUMP JUMPDEST PUSH2 0x5DF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x320 PUSH2 0x31B CALLDATASIZE PUSH1 0x4 PUSH2 0xCA2 JUMP JUMPDEST PUSH2 0x651 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x26C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AC PUSH2 0x76C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AC PUSH2 0x35E CALLDATASIZE PUSH1 0x4 PUSH2 0xCD0 JUMP JUMPDEST PUSH2 0x7C1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH2 0x320 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x258 PUSH2 0x39C CALLDATASIZE PUSH1 0x4 PUSH2 0xCE7 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD DUP1 MLOAD PUSH1 0x12 DUP3 MSTORE SWAP3 DUP3 ADD SWAP2 SWAP1 SWAP4 ADD KECCAK256 SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28A PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3EB PUSH2 0x87D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26C SWAP2 SWAP1 PUSH2 0xD5C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x403 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xF SLOAD PUSH2 0x258 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x422 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AC PUSH2 0x431 CALLDATASIZE PUSH1 0x4 PUSH2 0xCD0 JUMP JUMPDEST PUSH2 0x909 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x441 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH2 0x258 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28A PUSH2 0x9A9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x473 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AC PUSH2 0x482 CALLDATASIZE PUSH1 0x4 PUSH2 0xD75 JUMP JUMPDEST PUSH2 0x9B9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x492 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AC PUSH2 0xA03 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28A PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xB SLOAD PUSH2 0x258 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28A PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4EF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xA SLOAD PUSH2 0x258 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28A PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x523 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28A PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x538 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xE SLOAD PUSH2 0x258 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x557 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xD SLOAD PUSH2 0x258 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x576 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x10 SLOAD PUSH2 0x258 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x595 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28A PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C8 SWAP1 PUSH2 0xD90 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x608 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C8 SWAP1 PUSH2 0xD90 JUMP JUMPDEST CALLER PUSH32 0x30FDCD4F0C28C5DBCBC3F59AA8E2260C7F58AC45BE2A2DCA652999AF89C33E0 DUP4 DUP4 PUSH0 PUSH2 0x635 PUSH2 0xA9E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x645 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xDB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP1 POP PUSH0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3850C7BD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xE0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x693 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6B7 SWAP2 SWAP1 PUSH2 0xDFB JUMP JUMPDEST POP POP POP POP POP POP SWAP1 POP PUSH0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1A686502 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6FC JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x720 SWAP2 SWAP1 PUSH2 0xE97 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP1 POP PUSH0 PUSH2 0x737 DUP8 DUP5 DUP5 PUSH2 0xB2B JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x64 PUSH2 0x747 DUP4 PUSH1 0x1 PUSH2 0xB79 JUMP JUMPDEST PUSH2 0x751 SWAP2 SWAP1 PUSH2 0xB90 JUMP JUMPDEST SWAP1 POP PUSH2 0x75D DUP2 DUP10 PUSH2 0xEBD JUMP JUMPDEST SWAP1 SWAP2 LT ISZERO SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x795 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C8 SWAP1 PUSH2 0xD90 JUMP JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 SELFBALANCE DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x7BE JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x7EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C8 SWAP1 PUSH2 0xD90 JUMP JUMPDEST PUSH0 PUSH2 0x7F9 DUP3 PUSH4 0x3B9ACA00 PUSH2 0xB79 JUMP JUMPDEST SWAP1 POP DUP1 SELFBALANCE LT ISZERO PUSH2 0x842 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742062616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5C8 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 DUP4 ISZERO PUSH2 0x8FC MUL SWAP2 DUP5 SWAP2 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x878 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH2 0x88A SWAP1 PUSH2 0xED0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8B6 SWAP1 PUSH2 0xED0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x901 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8D8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x901 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8E4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x932 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C8 SWAP1 PUSH2 0xD90 JUMP JUMPDEST CALLER PUSH32 0x30FDCD4F0C28C5DBCBC3F59AA8E2260C7F58AC45BE2A2DCA652999AF89C33E0 DUP3 PUSH0 PUSH2 0x95E PUSH2 0xA9E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP1 DUP3 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH18 0x151A5B59599C985B594818591A9D5CDD1959 PUSH1 0x72 SHL PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x9B3 PUSH2 0xA9E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x9E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C8 SWAP1 PUSH2 0xD90 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA2C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C8 SWAP1 PUSH2 0xD90 JUMP JUMPDEST CALLER PUSH32 0x30FDCD4F0C28C5DBCBC3F59AA8E2260C7F58AC45BE2A2DCA652999AF89C33E0 PUSH0 DUP1 PUSH2 0xA58 PUSH2 0xA9E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP1 DUP3 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH14 0x18DBDB9D995C9D081D1BC81413D3 PUSH1 0x92 SHL PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x3FABE5A3 PUSH1 0xE2 SHL DUP2 MSTORE SWAP1 MLOAD PUSH0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP4 SWAP2 DUP4 SWAP2 PUSH4 0xFEAF968C SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0xA0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAE9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB0D SWAP2 SWAP1 PUSH2 0xF21 JUMP JUMPDEST POP POP POP SWAP2 POP POP DUP1 PUSH5 0x2540BE400 PUSH2 0xB24 SWAP2 SWAP1 PUSH2 0xF6D JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 PUSH2 0xB40 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP7 PUSH2 0xB79 JUMP JUMPDEST PUSH2 0xB4A SWAP2 SWAP1 PUSH2 0xB90 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x9B3 JUMPI PUSH2 0x9B3 PUSH2 0xB52 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x9B3 JUMPI PUSH2 0x9B3 PUSH2 0xB52 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xBAA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xBD2 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xBED JUMPI PUSH2 0xBED PUSH2 0xBAF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xC15 JUMPI PUSH2 0xC15 PUSH2 0xBAF JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0xC2D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC5D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC73 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xC7F DUP6 DUP3 DUP7 ADD PUSH2 0xBC3 JUMP JUMPDEST SWAP6 PUSH1 0x20 SWAP5 SWAP1 SWAP5 ADD CALLDATALOAD SWAP5 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x7BE JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCB3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0xCC5 DUP2 PUSH2 0xC8E JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCE0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCF7 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD0D JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB4A DUP5 DUP3 DUP6 ADD PUSH2 0xBC3 JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xD3D JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xD21 JUMP JUMPDEST POP PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0xD6E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xD19 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD85 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xD6E DUP2 PUSH2 0xC8E JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xD SWAP1 DUP3 ADD MSTORE PUSH13 0x2737BA103A34329037BBB732B9 PUSH1 0x99 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x80 DUP2 MSTORE PUSH0 PUSH2 0xDC9 PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0xD19 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP6 SWAP1 SWAP6 MSTORE POP PUSH1 0x40 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP1 SWAP2 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0xDF6 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0xE11 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP8 MLOAD PUSH2 0xE1C DUP2 PUSH2 0xC8E JUMP JUMPDEST DUP1 SWAP8 POP POP PUSH1 0x20 DUP9 ADD MLOAD DUP1 PUSH1 0x2 SIGNEXTEND DUP2 EQ PUSH2 0xE33 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP6 POP PUSH2 0xE41 PUSH1 0x40 DUP10 ADD PUSH2 0xDE5 JUMP JUMPDEST SWAP5 POP PUSH2 0xE4F PUSH1 0x60 DUP10 ADD PUSH2 0xDE5 JUMP JUMPDEST SWAP4 POP PUSH2 0xE5D PUSH1 0x80 DUP10 ADD PUSH2 0xDE5 JUMP JUMPDEST SWAP3 POP PUSH1 0xA0 DUP9 ADD MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0xE72 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0xC0 DUP10 ADD MLOAD SWAP1 SWAP3 POP DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xE87 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEA7 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xD6E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x9B3 JUMPI PUSH2 0x9B3 PUSH2 0xB52 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xEE4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xF02 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xDF6 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xF35 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xF3E DUP7 PUSH2 0xF08 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP4 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x60 DUP7 ADD MLOAD SWAP2 POP PUSH2 0xF61 PUSH1 0x80 DUP8 ADD PUSH2 0xF08 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST DUP1 DUP3 MUL PUSH0 DUP3 SLT PUSH1 0x1 PUSH1 0xFF SHL DUP5 EQ AND ISZERO PUSH2 0xF88 JUMPI PUSH2 0xF88 PUSH2 0xB52 JUMP JUMPDEST DUP2 DUP2 SDIV DUP4 EQ DUP3 ISZERO OR PUSH2 0x9B3 JUMPI PUSH2 0x9B3 PUSH2 0xB52 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x24 0xC9 DIV 0xBE 0xF8 CALLER 0xB6 PUSH32 0xB7E3222024ADC23707813C21CD9BB6542BCD916274D4B3FD64736F6C63430008 EQ STOP CALLER ",
							"sourceMap": "941:6687:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3261:9;3243:14;;:27;;;;;;;:::i;:::-;;;;-1:-1:-1;3315:3:1;;-1:-1:-1;3297:14:1;:9;3309:2;3297:14;:::i;:::-;3296:22;;;;:::i;:::-;3280:12;;:38;;;;;;;:::i;:::-;;;;-1:-1:-1;3368:3:1;;-1:-1:-1;3350:14:1;:9;3362:2;3350:14;:::i;:::-;3349:22;;;;:::i;:::-;3328:17;;:43;;;;;;;:::i;:::-;;;;;;;;941:6687;;;;1427:24;;;;;;;;;;-1:-1:-1;1427:24:1;;;;-1:-1:-1;;;;;1427:24:1;;;;;;-1:-1:-1;;;;;835:32:24;;;817:51;;805:2;790:18;1427:24:1;;;;;;;;1058:27;;;;;;;;;;;;;;;;;;;1025:25:24;;;1013:2;998:18;1058:27:1;879:177:24;4858:84:1;;;;;;;;;;;;;:::i;:::-;;1283:26;;;;;;;;;;;;;;;;1607:47;;;;;;;;;;-1:-1:-1;1607:47:1;;;;-1:-1:-1;;;;;1607:47:1;;;3880:164;;;;;;;;;;-1:-1:-1;3880:164:1;;;;;:::i;:::-;;:::i;4185:474::-;;;;;;;;;;-1:-1:-1;4185:474:1;;;;;:::i;:::-;;:::i;:::-;;;2933:14:24;;2926:22;2908:41;;2896:2;2881:18;4185:474:1;2768:187:24;5204:103:1;;;;;;;;;;;;;:::i;4948:250::-;;;;;;;;;;-1:-1:-1;4948:250:1;;;;;:::i;:::-;;:::i;991:26::-;;;;;;;;;;-1:-1:-1;991:26:1;;;;-1:-1:-1;;;991:26:1;;;;;;1661:44;;;;;;;;;;-1:-1:-1;1661:44:1;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1661:44:1;;;1091:32;;;;;;;;;;;;;;;;1315:46;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;1530:28::-;;;;;;;;;;-1:-1:-1;1530:28:1;;;;-1:-1:-1;;;;;1530:28:1;;;3384:365;;;;;;;;;;-1:-1:-1;3384:365:1;;;;;:::i;:::-;;:::i;964:20::-;;;;;;;;;;-1:-1:-1;964:20:1;;;;-1:-1:-1;;;;;964:20:1;;;3755:119;;;;;;;;;;;;;:::i;3103:97::-;;;;;;;;;;-1:-1:-1;3103:97:1;;;;;:::i;:::-;;:::i;4050:129::-;;;;;;;;;;;;;:::i;1199:36::-;;;;;;;;;;;;;;;;1397:24;;;;;;;;;;-1:-1:-1;1397:24:1;;;;-1:-1:-1;;;;;1397:24:1;;;1241:36;;;;;;;;;;;;;;;;1368:23;;;;;;;;;;-1:-1:-1;1368:23:1;;;;-1:-1:-1;;;;;1368:23:1;;;1165:28;;;;;;;;;;;;;;;;1023:29;;;;;;;;;;;;;;;;1493:31;;;;;;;;;;-1:-1:-1;1493:31:1;;;;-1:-1:-1;;;;;1493:31:1;;;1457:30;;;;;;;;;;-1:-1:-1;1457:30:1;;;;-1:-1:-1;;;;;1457:30:1;;;1564:37;;;;;;;;;;-1:-1:-1;1564:37:1;;;;-1:-1:-1;;;;;1564:37:1;;;1129:30;;;;;;;;;;;;;;;;4858:84;2021:5;;-1:-1:-1;;;;;2021:5:1;2007:10;:19;1999:45;;;;-1:-1:-1;;;1999:45:1;;;;;;;:::i;:::-;;;;;;;;;4930:5:::1;4913:22:::0;;-1:-1:-1;;;;4913:22:1::1;::::0;;4858:84::o;3880:164::-;2021:5;;-1:-1:-1;;;;;2021:5:1;2007:10;:19;1999:45;;;;-1:-1:-1;;;1999:45:1;;;;;;;:::i;:::-;3992:10:::1;3978:59;4004:9:::0;4015:6;4023:1:::1;4026:10;:8;:10::i;:::-;3978:59;;;;;;;;;:::i;:::-;;;;;;;;3880:164:::0;;:::o;4185:474::-;4269:24;4305:19;4342:11;4305:49;;4365:20;4395:4;-1:-1:-1;;;;;4395:10:1;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4364:43;;;;;;;;4417:17;4437:4;-1:-1:-1;;;;;4437:14:1;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4417:36:1;;;4463:17;4483:53;4502:8;4512:12;4526:9;4483:18;:53::i;:::-;4463:73;-1:-1:-1;4546:16:1;4583:3;4566:13;4463:73;4578:1;4566:13;:::i;:::-;4565:21;;;;:::i;:::-;4546:40;-1:-1:-1;4632:19:1;4546:40;4632:8;:19;:::i;:::-;4619:32;;;;;4185:474;-1:-1:-1;;;;;;;4185:474:1:o;5204:103::-;2021:5;;-1:-1:-1;;;;;2021:5:1;2007:10;:19;1999:45;;;;-1:-1:-1;;;1999:45:1;;;;;;;:::i;:::-;5249:51:::1;::::0;5257:10:::1;::::0;5278:21:::1;5249:51:::0;::::1;;;::::0;::::1;::::0;;;5278:21;5257:10;5249:51;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;5204:103::o:0;4948:250::-;2021:5;;-1:-1:-1;;;;;2021:5:1;2007:10;:19;1999:45;;;;-1:-1:-1;;;1999:45:1;;;;;;;:::i;:::-;5023:19:::1;5045:21;:12:::0;5060:6:::1;5045:21;:::i;:::-;5023:43;;5109:11;5084:21;:36;;5076:69;;;::::0;-1:-1:-1;;;5076:69:1;;6971:2:24;5076:69:1::1;::::0;::::1;6953:21:24::0;7010:2;6990:18;;;6983:30;-1:-1:-1;;;7029:18:24;;;7022:50;7089:18;;5076:69:1::1;6769:344:24::0;5076:69:1::1;5163:5;::::0;;5155:36:::1;::::0;-1:-1:-1;;;;;5163:5:1;;::::1;::::0;5155:36;::::1;;;::::0;5179:11;;5155:36;5163:5;5155:36;5179:11;5163:5;5155:36;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;5013:185;4948:250:::0;:::o;1315:46::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3384:365::-;2021:5;;-1:-1:-1;;;;;2021:5:1;2007:10;:19;1999:45;;;;-1:-1:-1;;;1999:45:1;;;;;;;:::i;:::-;3675:10:::1;3661:81;3709:17:::0;3728:1:::1;3731:10;:8;:10::i;:::-;3661:81;::::0;;7797:3:24;7779:22;;;7838:2;7817:19;;;7810:31;-1:-1:-1;;;7872:3:24;7857:19;;7850:49;7966:4;7951:20;;7944:36;;;;7996:18;;7989:34;;;;-1:-1:-1;8039:18:24;;8032:34;7931:3;7916:19;3661:81:1::1;;;;;;;3384:365:::0;:::o;3755:119::-;3800:7;3819:13;3835:10;:8;:10::i;:::-;3819:26;3755:119;-1:-1:-1;;3755:119:1:o;3103:97::-;2021:5;;-1:-1:-1;;;;;2021:5:1;2007:10;:19;1999:45;;;;-1:-1:-1;;;1999:45:1;;;;;;;:::i;:::-;3175:5:::1;:18:::0;;-1:-1:-1;;;;;;3175:18:1::1;-1:-1:-1::0;;;;;3175:18:1;;;::::1;::::0;;;::::1;::::0;;3103:97::o;4050:129::-;2021:5;;-1:-1:-1;;;;;2021:5:1;2007:10;:19;1999:45;;;;-1:-1:-1;;;1999:45:1;;;;;;;:::i;:::-;4125:10:::1;4111:61;4155:1;::::0;4161:10:::1;:8;:10::i;:::-;4111:61;::::0;;8379:3:24;8361:22;;;8420:2;8399:19;;;8392:31;-1:-1:-1;;;8454:3:24;8439:19;;8432:45;8544:4;8529:20;;8522:36;;;;8574:18;;8567:34;;;;-1:-1:-1;8617:18:24;;8610:34;8509:3;8494:19;4111:61:1::1;;;;;;;4050:129::o:0;7386:240::-;7504:16;;7550:27;;;-1:-1:-1;;;7550:27:1;;;;7429:7;;-1:-1:-1;;;;;7504:16:1;;7429:7;;7504:16;;7550:25;;:27;;;;;;;;;;;;;;7504:16;7550:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7531:46;;;;;;7602:5;7610:8;7602:16;;;;:::i;:::-;7587:32;;;;7386:240;:::o;4665:187::-;4775:7;4835:9;4809:23;-1:-1:-1;;;;;4809:23:1;;:8;:23;:::i;:::-;:35;;;;:::i;:::-;4794:51;4665:187;-1:-1:-1;;;;4665:187:1:o;14:127:24:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:125;211:9;;;232:10;;;229:36;;;245:18;;:::i;276:168::-;349:9;;;380;;397:15;;;391:22;;377:37;367:71;;418:18;;:::i;449:217::-;489:1;515;505:132;;559:10;554:3;550:20;547:1;540:31;594:4;591:1;584:15;622:4;619:1;612:15;505:132;-1:-1:-1;651:9:24;;449:217::o;1061:127::-;1122:10;1117:3;1113:20;1110:1;1103:31;1153:4;1150:1;1143:15;1177:4;1174:1;1167:15;1193:719;1236:5;1289:3;1282:4;1274:6;1270:17;1266:27;1256:55;;1307:1;1304;1297:12;1256:55;1343:6;1330:20;1369:18;1406:2;1402;1399:10;1396:36;;;1412:18;;:::i;:::-;1487:2;1481:9;1455:2;1541:13;;-1:-1:-1;;1537:22:24;;;1561:2;1533:31;1529:40;1517:53;;;1585:18;;;1605:22;;;1582:46;1579:72;;;1631:18;;:::i;:::-;1671:10;1667:2;1660:22;1706:2;1698:6;1691:18;1752:3;1745:4;1740:2;1732:6;1728:15;1724:26;1721:35;1718:55;;;1769:1;1766;1759:12;1718:55;1833:2;1826:4;1818:6;1814:17;1807:4;1799:6;1795:17;1782:54;1880:1;1873:4;1868:2;1860:6;1856:15;1852:26;1845:37;1900:6;1891:15;;;;;;1193:719;;;;:::o;1917:390::-;1995:6;2003;2056:2;2044:9;2035:7;2031:23;2027:32;2024:52;;;2072:1;2069;2062:12;2024:52;2112:9;2099:23;2145:18;2137:6;2134:30;2131:50;;;2177:1;2174;2167:12;2131:50;2200;2242:7;2233:6;2222:9;2218:22;2200:50;:::i;:::-;2190:60;2297:2;2282:18;;;;2269:32;;-1:-1:-1;;;;1917:390:24:o;2312:131::-;-1:-1:-1;;;;;2387:31:24;;2377:42;;2367:70;;2433:1;2430;2423:12;2448:315;2516:6;2524;2577:2;2565:9;2556:7;2552:23;2548:32;2545:52;;;2593:1;2590;2583:12;2545:52;2629:9;2616:23;2606:33;;2689:2;2678:9;2674:18;2661:32;2702:31;2727:5;2702:31;:::i;:::-;2752:5;2742:15;;;2448:315;;;;;:::o;2960:180::-;3019:6;3072:2;3060:9;3051:7;3047:23;3043:32;3040:52;;;3088:1;3085;3078:12;3040:52;-1:-1:-1;3111:23:24;;2960:180;-1:-1:-1;2960:180:24:o;3145:322::-;3214:6;3267:2;3255:9;3246:7;3242:23;3238:32;3235:52;;;3283:1;3280;3273:12;3235:52;3323:9;3310:23;3356:18;3348:6;3345:30;3342:50;;;3388:1;3385;3378:12;3342:50;3411;3453:7;3444:6;3433:9;3429:22;3411:50;:::i;3472:423::-;3514:3;3552:5;3546:12;3579:6;3574:3;3567:19;3604:1;3614:162;3628:6;3625:1;3622:13;3614:162;;;3690:4;3746:13;;;3742:22;;3736:29;3718:11;;;3714:20;;3707:59;3643:12;3614:162;;;3618:3;3821:1;3814:4;3805:6;3800:3;3796:16;3792:27;3785:38;3884:4;3877:2;3873:7;3868:2;3860:6;3856:15;3852:29;3847:3;3843:39;3839:50;3832:57;;;3472:423;;;;:::o;3900:220::-;4049:2;4038:9;4031:21;4012:4;4069:45;4110:2;4099:9;4095:18;4087:6;4069:45;:::i;:::-;4061:53;3900:220;-1:-1:-1;;;3900:220:24:o;4125:247::-;4184:6;4237:2;4225:9;4216:7;4212:23;4208:32;4205:52;;;4253:1;4250;4243:12;4205:52;4292:9;4279:23;4311:31;4336:5;4311:31;:::i;4377:337::-;4579:2;4561:21;;;4618:2;4598:18;;;4591:30;-1:-1:-1;;;4652:2:24;4637:18;;4630:43;4705:2;4690:18;;4377:337::o;4719:443::-;4960:3;4949:9;4942:22;4923:4;4981:46;5022:3;5011:9;5007:19;4999:6;4981:46;:::i;:::-;5058:2;5043:18;;5036:34;;;;-1:-1:-1;5101:2:24;5086:18;;5079:34;;;;5144:2;5129:18;;;5122:34;4973:54;4719:443;-1:-1:-1;4719:443:24:o;5167:163::-;5245:13;;5298:6;5287:18;;5277:29;;5267:57;;5320:1;5317;5310:12;5267:57;5167:163;;;:::o;5335:986::-;5449:6;5457;5465;5473;5481;5489;5497;5550:3;5538:9;5529:7;5525:23;5521:33;5518:53;;;5567:1;5564;5557:12;5518:53;5599:9;5593:16;5618:31;5643:5;5618:31;:::i;:::-;5668:5;5658:15;;;5718:2;5707:9;5703:18;5697:25;5767:7;5764:1;5753:22;5744:7;5741:35;5731:63;;5790:1;5787;5780:12;5731:63;5813:7;-1:-1:-1;5839:48:24;5883:2;5868:18;;5839:48;:::i;:::-;5829:58;;5906:48;5950:2;5939:9;5935:18;5906:48;:::i;:::-;5896:58;;5973:49;6017:3;6006:9;6002:19;5973:49;:::i;:::-;5963:59;;6067:3;6056:9;6052:19;6046:26;6116:4;6107:7;6103:18;6094:7;6091:31;6081:59;;6136:1;6133;6126:12;6081:59;6211:3;6196:19;;6190:26;6159:7;;-1:-1:-1;6254:15:24;;6247:23;6235:36;;6225:64;;6285:1;6282;6275:12;6225:64;6308:7;6298:17;;;5335:986;;;;;;;;;;:::o;6326:305::-;6396:6;6449:2;6437:9;6428:7;6424:23;6420:32;6417:52;;;6465:1;6462;6455:12;6417:52;6497:9;6491:16;-1:-1:-1;;;;;6540:5:24;6536:46;6529:5;6526:57;6516:85;;6597:1;6594;6587:12;6636:128;6703:9;;;6724:11;;;6721:37;;;6738:18;;:::i;7118:380::-;7197:1;7193:12;;;;7240;;;7261:61;;7315:4;7307:6;7303:17;7293:27;;7261:61;7368:2;7360:6;7357:14;7337:18;7334:38;7331:161;;7414:10;7409:3;7405:20;7402:1;7395:31;7449:4;7446:1;7439:15;7477:4;7474:1;7467:15;7331:161;;7118:380;;;:::o;8655:179::-;8733:13;;8786:22;8775:34;;8765:45;;8755:73;;8824:1;8821;8814:12;8839:473;8942:6;8950;8958;8966;8974;9027:3;9015:9;9006:7;9002:23;8998:33;8995:53;;;9044:1;9041;9034:12;8995:53;9067:39;9096:9;9067:39;:::i;:::-;9057:49;;9146:2;9135:9;9131:18;9125:25;9115:35;;9190:2;9179:9;9175:18;9169:25;9159:35;;9234:2;9223:9;9219:18;9213:25;9203:35;;9257:49;9301:3;9290:9;9286:19;9257:49;:::i;:::-;9247:59;;8839:473;;;;;;;;:::o;9317:237::-;9389:9;;;9356:7;9414:9;;-1:-1:-1;;;9425:18:24;;9410:34;9407:60;;;9447:18;;:::i;:::-;9520:1;9511:7;9506:16;9503:1;9500:23;9496:1;9489:9;9486:38;9476:72;;9528:18;;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "810000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"aaveLendingPoolAddressesProvider()": "2393",
								"adjustTimeframe(uint256)": "infinite",
								"checkLiquidity(uint256,address)": "infinite",
								"checkPrice()": "infinite",
								"convertAllToPOL()": "infinite",
								"currentActivity()": "infinite",
								"dexRouters(string)": "infinite",
								"disableTrading()": "26596",
								"gasCostMultiplier()": "2383",
								"initialDeposit()": "2405",
								"initiateTrade(string,uint256)": "infinite",
								"kill()": "infinite",
								"lossThreshold()": "2383",
								"maticBalance()": "2363",
								"nextLogTime()": "2340",
								"owner()": "2392",
								"polToken()": "2392",
								"priceFeedAddress()": "2369",
								"profitThreshold()": "2404",
								"quickSwapRouter()": "2391",
								"setController(address)": "26746",
								"stablecoinBalance()": "2361",
								"tradingEnabled()": "2415",
								"trailingStopLoss()": "2339",
								"uniswapPositionManager()": "2413",
								"uniswapRouter()": "2436",
								"usdcToken()": "2372",
								"usdtToken()": "2436",
								"withdrawInGwei(uint256)": "infinite"
							},
							"internal": {
								"calculateAmountOut(uint256,uint160,uint256)": "196",
								"calculateEMA(uint256[] memory,uint256)": "infinite",
								"calculateFibonacci(uint256,uint256)": "infinite",
								"calculateMACD(uint256[] memory)": "infinite",
								"calculateRSI(uint256[] memory)": "infinite",
								"getPrice()": "infinite",
								"logCurrentActivity()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1234,
									"end": 1235,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1199,
									"end": 1235,
									"name": "PUSH",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1199,
									"end": 1235,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1275,
									"end": 1277,
									"name": "PUSH",
									"source": 1,
									"value": "A"
								},
								{
									"begin": 1241,
									"end": 1277,
									"name": "PUSH",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1241,
									"end": 1277,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1315,
									"end": 1361,
									"name": "PUSH",
									"source": 1,
									"value": "C0"
								},
								{
									"begin": 941,
									"end": 7628,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1315,
									"end": 1361,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1315,
									"end": 1361,
									"name": "PUSH",
									"source": 1,
									"value": "C"
								},
								{
									"begin": 941,
									"end": 7628,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 1315,
									"end": 1361,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1315,
									"end": 1361,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1315,
									"end": 1361,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "496E697469616C697A696E67"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1315,
									"end": 1361,
									"name": "PUSH",
									"source": 1,
									"value": "A0"
								},
								{
									"begin": 1315,
									"end": 1361,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1315,
									"end": 1361,
									"name": "PUSH",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1315,
									"end": 1361,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1315,
									"end": 1361,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1315,
									"end": 1361,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1315,
									"end": 1361,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1315,
									"end": 1361,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1315,
									"end": 1361,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1315,
									"end": 1361,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1315,
									"end": 1361,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1315,
									"end": 1361,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2178,
									"end": 3097,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 2178,
									"end": 3097,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2178,
									"end": 3097,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2178,
									"end": 3097,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2178,
									"end": 3097,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2178,
									"end": 3097,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2178,
									"end": 3097,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2178,
									"end": 3097,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 2178,
									"end": 3097,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2178,
									"end": 3097,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2178,
									"end": 3097,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2178,
									"end": 3097,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2178,
									"end": 3097,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2178,
									"end": 3097,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 2178,
									"end": 3097,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 2178,
									"end": 3097,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 2178,
									"end": 3097,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2178,
									"end": 3097,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 2178,
									"end": 3097,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2178,
									"end": 3097,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 2178,
									"end": 3097,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2178,
									"end": 3097,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2178,
									"end": 3097,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2178,
									"end": 3097,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2178,
									"end": 3097,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2178,
									"end": 3097,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2178,
									"end": 3097,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 2178,
									"end": 3097,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2178,
									"end": 3097,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 2178,
									"end": 3097,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2178,
									"end": 3097,
									"name": "tag",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 2178,
									"end": 3097,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2482,
									"end": 2487,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2482,
									"end": 2500,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2482,
									"end": 2500,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 2490,
									"end": 2500,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2482,
									"end": 2500,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2482,
									"end": 2500,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2482,
									"end": 2500,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2482,
									"end": 2500,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2482,
									"end": 2500,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2482,
									"end": 2500,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2482,
									"end": 2500,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2510,
									"end": 2518,
									"name": "PUSH",
									"source": 1,
									"value": "A"
								},
								{
									"begin": 2510,
									"end": 2530,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2510,
									"end": 2530,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 2510,
									"end": 2530,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2510,
									"end": 2530,
									"name": "AND",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2510,
									"end": 2530,
									"name": "DUP12",
									"source": 1
								},
								{
									"begin": 2510,
									"end": 2530,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2510,
									"end": 2530,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2510,
									"end": 2530,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2510,
									"end": 2530,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2510,
									"end": 2530,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2510,
									"end": 2530,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2510,
									"end": 2530,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2510,
									"end": 2530,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2510,
									"end": 2530,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2540,
									"end": 2549,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 2540,
									"end": 2562,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2540,
									"end": 2562,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 2540,
									"end": 2562,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2540,
									"end": 2562,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2540,
									"end": 2562,
									"name": "DUP11",
									"source": 1
								},
								{
									"begin": 2540,
									"end": 2562,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2540,
									"end": 2562,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2540,
									"end": 2562,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2540,
									"end": 2562,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2540,
									"end": 2562,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2572,
									"end": 2581,
									"name": "PUSH",
									"source": 1,
									"value": "C"
								},
								{
									"begin": 2572,
									"end": 2594,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2572,
									"end": 2594,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 2572,
									"end": 2594,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2572,
									"end": 2594,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2572,
									"end": 2594,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 2572,
									"end": 2594,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2572,
									"end": 2594,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2572,
									"end": 2594,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2572,
									"end": 2594,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2572,
									"end": 2594,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2604,
									"end": 2619,
									"name": "PUSH",
									"source": 1,
									"value": "D"
								},
								{
									"begin": 2604,
									"end": 2638,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2604,
									"end": 2638,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 2604,
									"end": 2638,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2604,
									"end": 2638,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2604,
									"end": 2638,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 2604,
									"end": 2638,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2604,
									"end": 2638,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2604,
									"end": 2638,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2604,
									"end": 2638,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2604,
									"end": 2638,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2604,
									"end": 2638,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2604,
									"end": 2638,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2604,
									"end": 2638,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2648,
									"end": 2664,
									"name": "PUSH",
									"source": 1,
									"value": "E"
								},
								{
									"begin": 2648,
									"end": 2684,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2648,
									"end": 2684,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 2648,
									"end": 2684,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2648,
									"end": 2684,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2648,
									"end": 2684,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 2648,
									"end": 2684,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2648,
									"end": 2684,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2648,
									"end": 2684,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2648,
									"end": 2684,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2648,
									"end": 2684,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2694,
									"end": 2707,
									"name": "PUSH",
									"source": 1,
									"value": "F"
								},
								{
									"begin": 2694,
									"end": 2724,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2694,
									"end": 2724,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 2694,
									"end": 2724,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2694,
									"end": 2724,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2694,
									"end": 2724,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 2694,
									"end": 2724,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2694,
									"end": 2724,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2694,
									"end": 2724,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2694,
									"end": 2724,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2694,
									"end": 2724,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2734,
									"end": 2756,
									"name": "PUSH",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 2734,
									"end": 2782,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2734,
									"end": 2782,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 2734,
									"end": 2782,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2734,
									"end": 2782,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2734,
									"end": 2782,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2734,
									"end": 2782,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2734,
									"end": 2782,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2734,
									"end": 2782,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2734,
									"end": 2782,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2734,
									"end": 2782,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2792,
									"end": 2824,
									"name": "PUSH",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 2792,
									"end": 2860,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2792,
									"end": 2860,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 2792,
									"end": 2860,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2792,
									"end": 2860,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 2792,
									"end": 2860,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2792,
									"end": 2860,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2792,
									"end": 2860,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2792,
									"end": 2860,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2792,
									"end": 2860,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2792,
									"end": 2860,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2792,
									"end": 2860,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2792,
									"end": 2860,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2792,
									"end": 2860,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2792,
									"end": 2860,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2792,
									"end": 2860,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2879,
									"end": 2902,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2879,
									"end": 2902,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "517569636B5377617"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "BC"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3932,
									"end": 3956,
									"name": "DUP2",
									"source": 24
								},
								{
									"begin": 3932,
									"end": 3956,
									"name": "MSTORE",
									"source": 24
								},
								{
									"begin": 2879,
									"end": 2889,
									"name": "PUSH",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 2879,
									"end": 2889,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3981,
									"end": 3982,
									"name": "PUSH",
									"source": 24,
									"value": "9"
								},
								{
									"begin": 3972,
									"end": 3983,
									"name": "ADD",
									"source": 24
								},
								{
									"begin": 2879,
									"end": 2902,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2879,
									"end": 2902,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2879,
									"end": 2902,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2879,
									"end": 2902,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2879,
									"end": 2902,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2879,
									"end": 2902,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2879,
									"end": 2902,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2879,
									"end": 2902,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2879,
									"end": 2902,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 2879,
									"end": 2902,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2879,
									"end": 2902,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2879,
									"end": 2902,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2879,
									"end": 2902,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 2879,
									"end": 2920,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2879,
									"end": 2920,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2879,
									"end": 2920,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2879,
									"end": 2920,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2879,
									"end": 2920,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2879,
									"end": 2920,
									"name": "AND",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2879,
									"end": 2920,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2879,
									"end": 2920,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2879,
									"end": 2920,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2879,
									"end": 2920,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2879,
									"end": 2920,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2879,
									"end": 2920,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2879,
									"end": 2920,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2879,
									"end": 2920,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2879,
									"end": 2920,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2879,
									"end": 2902,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2930,
									"end": 2952,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2930,
									"end": 2952,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2930,
									"end": 2952,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2930,
									"end": 2952,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2930,
									"end": 2952,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2980,
									"end": 2983,
									"name": "PUSH",
									"source": 1,
									"value": "6E"
								},
								{
									"begin": 2962,
									"end": 2977,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 2962,
									"end": 2983,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3023,
									"end": 3025,
									"name": "PUSH",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 3007,
									"end": 3020,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 3007,
									"end": 3025,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3075,
									"end": 3090,
									"name": "TIMESTAMP",
									"source": 1
								},
								{
									"begin": 3061,
									"end": 3072,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 3061,
									"end": 3090,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 941,
									"end": 7628,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 941,
									"end": 7628,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 24,
									"value": "11"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 24
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 24,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 24,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 24
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 24,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 24
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 24,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 24,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 24
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 24,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 24,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 24
								},
								{
									"begin": 146,
									"end": 526,
									"name": "tag",
									"source": 24,
									"value": "12"
								},
								{
									"begin": 146,
									"end": 526,
									"name": "JUMPDEST",
									"source": 24
								},
								{
									"begin": 225,
									"end": 226,
									"name": "PUSH",
									"source": 24,
									"value": "1"
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 24
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 24
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SHR",
									"source": 24
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SWAP1",
									"source": 24
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP3",
									"source": 24
								},
								{
									"begin": 268,
									"end": 280,
									"name": "AND",
									"source": 24
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP1",
									"source": 24
								},
								{
									"begin": 289,
									"end": 350,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "20"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPI",
									"source": 24
								},
								{
									"begin": 343,
									"end": 347,
									"name": "PUSH",
									"source": 24,
									"value": "7F"
								},
								{
									"begin": 335,
									"end": 341,
									"name": "DUP3",
									"source": 24
								},
								{
									"begin": 331,
									"end": 348,
									"name": "AND",
									"source": 24
								},
								{
									"begin": 321,
									"end": 348,
									"name": "SWAP2",
									"source": 24
								},
								{
									"begin": 321,
									"end": 348,
									"name": "POP",
									"source": 24
								},
								{
									"begin": 289,
									"end": 350,
									"name": "tag",
									"source": 24,
									"value": "20"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPDEST",
									"source": 24
								},
								{
									"begin": 396,
									"end": 398,
									"name": "PUSH",
									"source": 24,
									"value": "20"
								},
								{
									"begin": 388,
									"end": 394,
									"name": "DUP3",
									"source": 24
								},
								{
									"begin": 385,
									"end": 399,
									"name": "LT",
									"source": 24
								},
								{
									"begin": 365,
									"end": 383,
									"name": "DUP2",
									"source": 24
								},
								{
									"begin": 362,
									"end": 400,
									"name": "SUB",
									"source": 24
								},
								{
									"begin": 359,
									"end": 520,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "21"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPI",
									"source": 24
								},
								{
									"begin": 442,
									"end": 452,
									"name": "PUSH",
									"source": 24,
									"value": "4E487B71"
								},
								{
									"begin": 437,
									"end": 440,
									"name": "PUSH",
									"source": 24,
									"value": "E0"
								},
								{
									"begin": 433,
									"end": 453,
									"name": "SHL",
									"source": 24
								},
								{
									"begin": 430,
									"end": 431,
									"name": "PUSH",
									"source": 24,
									"value": "0"
								},
								{
									"begin": 423,
									"end": 454,
									"name": "MSTORE",
									"source": 24
								},
								{
									"begin": 477,
									"end": 481,
									"name": "PUSH",
									"source": 24,
									"value": "22"
								},
								{
									"begin": 474,
									"end": 475,
									"name": "PUSH",
									"source": 24,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 482,
									"name": "MSTORE",
									"source": 24
								},
								{
									"begin": 505,
									"end": 509,
									"name": "PUSH",
									"source": 24,
									"value": "24"
								},
								{
									"begin": 502,
									"end": 503,
									"name": "PUSH",
									"source": 24,
									"value": "0"
								},
								{
									"begin": 495,
									"end": 510,
									"name": "REVERT",
									"source": 24
								},
								{
									"begin": 359,
									"end": 520,
									"name": "tag",
									"source": 24,
									"value": "21"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPDEST",
									"source": 24
								},
								{
									"begin": 359,
									"end": 520,
									"name": "POP",
									"source": 24
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP2",
									"source": 24
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP1",
									"source": 24
								},
								{
									"begin": 146,
									"end": 526,
									"name": "POP",
									"source": 24
								},
								{
									"begin": 146,
									"end": 526,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 24
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "tag",
									"source": 24,
									"value": "14"
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "JUMPDEST",
									"source": 24
								},
								{
									"begin": 759,
									"end": 761,
									"name": "PUSH",
									"source": 24,
									"value": "1F"
								},
								{
									"begin": 754,
									"end": 757,
									"name": "DUP3",
									"source": 24
								},
								{
									"begin": 751,
									"end": 762,
									"name": "GT",
									"source": 24
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "ISZERO",
									"source": 24
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "24"
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "JUMPI",
									"source": 24
								},
								{
									"begin": 795,
									"end": 796,
									"name": "PUSH",
									"source": 24,
									"value": "0"
								},
								{
									"begin": 820,
									"end": 825,
									"name": "DUP2",
									"source": 24
								},
								{
									"begin": 816,
									"end": 818,
									"name": "DUP2",
									"source": 24
								},
								{
									"begin": 809,
									"end": 826,
									"name": "MSTORE",
									"source": 24
								},
								{
									"begin": 865,
									"end": 869,
									"name": "PUSH",
									"source": 24,
									"value": "20"
								},
								{
									"begin": 861,
									"end": 863,
									"name": "DUP2",
									"source": 24
								},
								{
									"begin": 851,
									"end": 870,
									"name": "KECCAK256",
									"source": 24
								},
								{
									"begin": 935,
									"end": 937,
									"name": "PUSH",
									"source": 24,
									"value": "1F"
								},
								{
									"begin": 923,
									"end": 933,
									"name": "DUP6",
									"source": 24
								},
								{
									"begin": 919,
									"end": 938,
									"name": "ADD",
									"source": 24
								},
								{
									"begin": 916,
									"end": 917,
									"name": "PUSH",
									"source": 24,
									"value": "5"
								},
								{
									"begin": 912,
									"end": 939,
									"name": "SHR",
									"source": 24
								},
								{
									"begin": 906,
									"end": 910,
									"name": "DUP2",
									"source": 24
								},
								{
									"begin": 902,
									"end": 940,
									"name": "ADD",
									"source": 24
								},
								{
									"begin": 971,
									"end": 975,
									"name": "PUSH",
									"source": 24,
									"value": "20"
								},
								{
									"begin": 959,
									"end": 969,
									"name": "DUP7",
									"source": 24
								},
								{
									"begin": 956,
									"end": 976,
									"name": "LT",
									"source": 24
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "ISZERO",
									"source": 24
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "25"
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "JUMPI",
									"source": 24
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 994,
									"end": 998,
									"name": "DUP1",
									"source": 24
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "tag",
									"source": 24,
									"value": "25"
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "JUMPDEST",
									"source": 24
								},
								{
									"begin": 1049,
									"end": 1051,
									"name": "PUSH",
									"source": 24,
									"value": "1F"
								},
								{
									"begin": 1044,
									"end": 1047,
									"name": "DUP6",
									"source": 24
								},
								{
									"begin": 1040,
									"end": 1052,
									"name": "ADD",
									"source": 24
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "PUSH",
									"source": 24,
									"value": "5"
								},
								{
									"begin": 1033,
									"end": 1053,
									"name": "SHR",
									"source": 24
								},
								{
									"begin": 1027,
									"end": 1031,
									"name": "DUP3",
									"source": 24
								},
								{
									"begin": 1023,
									"end": 1054,
									"name": "ADD",
									"source": 24
								},
								{
									"begin": 1013,
									"end": 1054,
									"name": "SWAP2",
									"source": 24
								},
								{
									"begin": 1013,
									"end": 1054,
									"name": "POP",
									"source": 24
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "tag",
									"source": 24,
									"value": "26"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMPDEST",
									"source": 24
								},
								{
									"begin": 1122,
									"end": 1124,
									"name": "DUP2",
									"source": 24
								},
								{
									"begin": 1115,
									"end": 1120,
									"name": "DUP2",
									"source": 24
								},
								{
									"begin": 1112,
									"end": 1125,
									"name": "LT",
									"source": 24
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "ISZERO",
									"source": 24
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "28"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMPI",
									"source": 24
								},
								{
									"begin": 1167,
									"end": 1184,
									"name": "DUP3",
									"source": 24
								},
								{
									"begin": 1167,
									"end": 1184,
									"name": "DUP2",
									"source": 24
								},
								{
									"begin": 1167,
									"end": 1184,
									"name": "SSTORE",
									"source": 24
								},
								{
									"begin": 1148,
									"end": 1149,
									"name": "PUSH",
									"source": 24,
									"value": "1"
								},
								{
									"begin": 1137,
									"end": 1150,
									"name": "ADD",
									"source": 24
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "26"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMP",
									"source": 24
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "tag",
									"source": 24,
									"value": "28"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMPDEST",
									"source": 24
								},
								{
									"begin": 1108,
									"end": 1111,
									"name": "POP",
									"source": 24
								},
								{
									"begin": 1108,
									"end": 1111,
									"name": "POP",
									"source": 24
								},
								{
									"begin": 1108,
									"end": 1111,
									"name": "POP",
									"source": 24
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "tag",
									"source": 24,
									"value": "24"
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 24
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "POP",
									"source": 24
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "POP",
									"source": 24
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "POP",
									"source": 24
								},
								{
									"begin": 657,
									"end": 1202,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 24
								},
								{
									"begin": 1378,
									"end": 2730,
									"name": "tag",
									"source": 24,
									"value": "2"
								},
								{
									"begin": 1378,
									"end": 2730,
									"name": "JUMPDEST",
									"source": 24
								},
								{
									"begin": 1498,
									"end": 1508,
									"name": "DUP2",
									"source": 24
								},
								{
									"begin": 1498,
									"end": 1508,
									"name": "MLOAD",
									"source": 24
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1520,
									"end": 1550,
									"name": "DUP2",
									"source": 24
								},
								{
									"begin": 1520,
									"end": 1550,
									"name": "GT",
									"source": 24
								},
								{
									"begin": 1517,
									"end": 1573,
									"name": "ISZERO",
									"source": 24
								},
								{
									"begin": 1517,
									"end": 1573,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "32"
								},
								{
									"begin": 1517,
									"end": 1573,
									"name": "JUMPI",
									"source": 24
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "32"
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "11"
								},
								{
									"begin": 1553,
									"end": 1571,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 24
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "tag",
									"source": 24,
									"value": "32"
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "JUMPDEST",
									"source": 24
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "33"
								},
								{
									"begin": 1672,
									"end": 1678,
									"name": "DUP2",
									"source": 24
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "34"
								},
								{
									"begin": 1664,
									"end": 1668,
									"name": "DUP5",
									"source": 24
								},
								{
									"begin": 1658,
									"end": 1669,
									"name": "SLOAD",
									"source": 24
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "12"
								},
								{
									"begin": 1632,
									"end": 1670,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 24
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "tag",
									"source": 24,
									"value": "34"
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "JUMPDEST",
									"source": 24
								},
								{
									"begin": 1626,
									"end": 1630,
									"name": "DUP5",
									"source": 24
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "14"
								},
								{
									"begin": 1582,
									"end": 1679,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 24
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "tag",
									"source": 24,
									"value": "33"
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "JUMPDEST",
									"source": 24
								},
								{
									"begin": 1734,
									"end": 1738,
									"name": "PUSH",
									"source": 24,
									"value": "20"
								},
								{
									"begin": 1734,
									"end": 1738,
									"name": "DUP1",
									"source": 24
								},
								{
									"begin": 1798,
									"end": 1800,
									"name": "PUSH",
									"source": 24,
									"value": "1F"
								},
								{
									"begin": 1787,
									"end": 1801,
									"name": "DUP4",
									"source": 24
								},
								{
									"begin": 1787,
									"end": 1801,
									"name": "GT",
									"source": 24
								},
								{
									"begin": 1815,
									"end": 1816,
									"name": "PUSH",
									"source": 24,
									"value": "1"
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "DUP2",
									"source": 24
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "EQ",
									"source": 24
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "36"
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "JUMPI",
									"source": 24
								},
								{
									"begin": 2517,
									"end": 2518,
									"name": "PUSH",
									"source": 24,
									"value": "0"
								},
								{
									"begin": 2534,
									"end": 2540,
									"name": "DUP5",
									"source": 24
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "ISZERO",
									"source": 24
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "37"
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "JUMPI",
									"source": 24
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2586,
									"end": 2605,
									"name": "DUP6",
									"source": 24
								},
								{
									"begin": 2586,
									"end": 2605,
									"name": "DUP4",
									"source": 24
								},
								{
									"begin": 2586,
									"end": 2605,
									"name": "ADD",
									"source": 24
								},
								{
									"begin": 2580,
									"end": 2606,
									"name": "MLOAD",
									"source": 24
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "tag",
									"source": 24,
									"value": "37"
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 24
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1335,
									"end": 1336,
									"name": "PUSH",
									"source": 24,
									"value": "3"
								},
								{
									"begin": 1331,
									"end": 1342,
									"name": "DUP7",
									"source": 24
								},
								{
									"begin": 1331,
									"end": 1342,
									"name": "SWAP1",
									"source": 24
								},
								{
									"begin": 1331,
									"end": 1342,
									"name": "SHL",
									"source": 24
								},
								{
									"begin": 1327,
									"end": 1351,
									"name": "SHR",
									"source": 24
								},
								{
									"begin": 1323,
									"end": 1352,
									"name": "NOT",
									"source": 24
								},
								{
									"begin": 1313,
									"end": 1353,
									"name": "AND",
									"source": 24
								},
								{
									"begin": 1359,
									"end": 1360,
									"name": "PUSH",
									"source": 24,
									"value": "1"
								},
								{
									"begin": 1355,
									"end": 1366,
									"name": "DUP6",
									"source": 24
								},
								{
									"begin": 1355,
									"end": 1366,
									"name": "SWAP1",
									"source": 24
								},
								{
									"begin": 1355,
									"end": 1366,
									"name": "SHL",
									"source": 24
								},
								{
									"begin": 1310,
									"end": 1367,
									"name": "OR",
									"source": 24
								},
								{
									"begin": 2633,
									"end": 2714,
									"name": "DUP6",
									"source": 24
								},
								{
									"begin": 2633,
									"end": 2714,
									"name": "SSTORE",
									"source": 24
								},
								{
									"begin": 1780,
									"end": 2724,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "28"
								},
								{
									"begin": 1780,
									"end": 2724,
									"name": "JUMP",
									"source": 24
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "tag",
									"source": 24,
									"value": "36"
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "JUMPDEST",
									"source": 24
								},
								{
									"begin": 604,
									"end": 605,
									"name": "PUSH",
									"source": 24,
									"value": "0"
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP6",
									"source": 24
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP2",
									"source": 24
								},
								{
									"begin": 597,
									"end": 611,
									"name": "MSTORE",
									"source": 24
								},
								{
									"begin": 641,
									"end": 645,
									"name": "PUSH",
									"source": 24,
									"value": "20"
								},
								{
									"begin": 628,
									"end": 646,
									"name": "DUP2",
									"source": 24
								},
								{
									"begin": 628,
									"end": 646,
									"name": "KECCAK256",
									"source": 24
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1846,
									"end": 1866,
									"name": "DUP7",
									"source": 24
								},
								{
									"begin": 1846,
									"end": 1866,
									"name": "AND",
									"source": 24
								},
								{
									"begin": 1846,
									"end": 1866,
									"name": "SWAP2",
									"source": 24
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "tag",
									"source": 24,
									"value": "40"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMPDEST",
									"source": 24
								},
								{
									"begin": 1978,
									"end": 1985,
									"name": "DUP3",
									"source": 24
								},
								{
									"begin": 1975,
									"end": 1976,
									"name": "DUP2",
									"source": 24
								},
								{
									"begin": 1972,
									"end": 1986,
									"name": "LT",
									"source": 24
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "ISZERO",
									"source": 24
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "42"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMPI",
									"source": 24
								},
								{
									"begin": 2067,
									"end": 2086,
									"name": "DUP9",
									"source": 24
								},
								{
									"begin": 2067,
									"end": 2086,
									"name": "DUP7",
									"source": 24
								},
								{
									"begin": 2067,
									"end": 2086,
									"name": "ADD",
									"source": 24
								},
								{
									"begin": 2061,
									"end": 2087,
									"name": "MLOAD",
									"source": 24
								},
								{
									"begin": 2046,
									"end": 2088,
									"name": "DUP3",
									"source": 24
								},
								{
									"begin": 2046,
									"end": 2088,
									"name": "SSTORE",
									"source": 24
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "SWAP5",
									"source": 24
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "DUP5",
									"source": 24
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "ADD",
									"source": 24
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "SWAP5",
									"source": 24
								},
								{
									"begin": 2127,
									"end": 2128,
									"name": "PUSH",
									"source": 24,
									"value": "1"
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "SWAP1",
									"source": 24
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "SWAP2",
									"source": 24
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "ADD",
									"source": 24
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "SWAP1",
									"source": 24
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "DUP5",
									"source": 24
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "ADD",
									"source": 24
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "40"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMP",
									"source": 24
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "tag",
									"source": 24,
									"value": "42"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMPDEST",
									"source": 24
								},
								{
									"begin": 1968,
									"end": 1971,
									"name": "POP",
									"source": 24
								},
								{
									"begin": 2228,
									"end": 2234,
									"name": "DUP6",
									"source": 24
								},
								{
									"begin": 2219,
									"end": 2226,
									"name": "DUP3",
									"source": 24
								},
								{
									"begin": 2216,
									"end": 2235,
									"name": "LT",
									"source": 24
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "ISZERO",
									"source": 24
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "43"
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "JUMPI",
									"source": 24
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "DUP8",
									"source": 24
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "DUP6",
									"source": 24
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "ADD",
									"source": 24
								},
								{
									"begin": 2283,
									"end": 2309,
									"name": "MLOAD",
									"source": 24
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2372,
									"end": 2373,
									"name": "PUSH",
									"source": 24,
									"value": "3"
								},
								{
									"begin": 2368,
									"end": 2382,
									"name": "DUP9",
									"source": 24
								},
								{
									"begin": 2368,
									"end": 2382,
									"name": "SWAP1",
									"source": 24
								},
								{
									"begin": 2368,
									"end": 2382,
									"name": "SHL",
									"source": 24
								},
								{
									"begin": 2384,
									"end": 2387,
									"name": "PUSH",
									"source": 24,
									"value": "F8"
								},
								{
									"begin": 2364,
									"end": 2388,
									"name": "AND",
									"source": 24
								},
								{
									"begin": 2360,
									"end": 2397,
									"name": "SHR",
									"source": 24
								},
								{
									"begin": 2356,
									"end": 2398,
									"name": "NOT",
									"source": 24
								},
								{
									"begin": 2341,
									"end": 2399,
									"name": "AND",
									"source": 24
								},
								{
									"begin": 2326,
									"end": 2400,
									"name": "DUP2",
									"source": 24
								},
								{
									"begin": 2326,
									"end": 2400,
									"name": "SSTORE",
									"source": 24
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "tag",
									"source": 24,
									"value": "43"
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "JUMPDEST",
									"source": 24
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2460,
									"end": 2461,
									"name": "PUSH",
									"source": 24,
									"value": "1"
								},
								{
									"begin": 2444,
									"end": 2458,
									"name": "SWAP1",
									"source": 24
								},
								{
									"begin": 2444,
									"end": 2458,
									"name": "DUP2",
									"source": 24
								},
								{
									"begin": 2444,
									"end": 2458,
									"name": "SHL",
									"source": 24
								},
								{
									"begin": 2440,
									"end": 2462,
									"name": "ADD",
									"source": 24
								},
								{
									"begin": 2427,
									"end": 2463,
									"name": "SWAP1",
									"source": 24
								},
								{
									"begin": 2427,
									"end": 2463,
									"name": "SSTORE",
									"source": 24
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1378,
									"end": 2730,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 24
								},
								{
									"begin": 2735,
									"end": 2912,
									"name": "tag",
									"source": 24,
									"value": "16"
								},
								{
									"begin": 2735,
									"end": 2912,
									"name": "JUMPDEST",
									"source": 24
								},
								{
									"begin": 2814,
									"end": 2827,
									"name": "DUP1",
									"source": 24
								},
								{
									"begin": 2814,
									"end": 2827,
									"name": "MLOAD",
									"source": 24
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2856,
									"end": 2887,
									"name": "DUP2",
									"source": 24
								},
								{
									"begin": 2856,
									"end": 2887,
									"name": "AND",
									"source": 24
								},
								{
									"begin": 2846,
									"end": 2888,
									"name": "DUP2",
									"source": 24
								},
								{
									"begin": 2846,
									"end": 2888,
									"name": "EQ",
									"source": 24
								},
								{
									"begin": 2836,
									"end": 2906,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "45"
								},
								{
									"begin": 2836,
									"end": 2906,
									"name": "JUMPI",
									"source": 24
								},
								{
									"begin": 2902,
									"end": 2903,
									"name": "PUSH",
									"source": 24,
									"value": "0"
								},
								{
									"begin": 2899,
									"end": 2900,
									"name": "DUP1",
									"source": 24
								},
								{
									"begin": 2892,
									"end": 2904,
									"name": "REVERT",
									"source": 24
								},
								{
									"begin": 2836,
									"end": 2906,
									"name": "tag",
									"source": 24,
									"value": "45"
								},
								{
									"begin": 2836,
									"end": 2906,
									"name": "JUMPDEST",
									"source": 24
								},
								{
									"begin": 2735,
									"end": 2912,
									"name": "SWAP2",
									"source": 24
								},
								{
									"begin": 2735,
									"end": 2912,
									"name": "SWAP1",
									"source": 24
								},
								{
									"begin": 2735,
									"end": 2912,
									"name": "POP",
									"source": 24
								},
								{
									"begin": 2735,
									"end": 2912,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 24
								},
								{
									"begin": 2917,
									"end": 3725,
									"name": "tag",
									"source": 24,
									"value": "5"
								},
								{
									"begin": 2917,
									"end": 3725,
									"name": "JUMPDEST",
									"source": 24
								},
								{
									"begin": 3050,
									"end": 3056,
									"name": "PUSH",
									"source": 24,
									"value": "0"
								},
								{
									"begin": 3058,
									"end": 3064,
									"name": "DUP1",
									"source": 24
								},
								{
									"begin": 3066,
									"end": 3072,
									"name": "PUSH",
									"source": 24,
									"value": "0"
								},
								{
									"begin": 3074,
									"end": 3080,
									"name": "DUP1",
									"source": 24
								},
								{
									"begin": 3082,
									"end": 3088,
									"name": "PUSH",
									"source": 24,
									"value": "0"
								},
								{
									"begin": 3090,
									"end": 3096,
									"name": "DUP1",
									"source": 24
								},
								{
									"begin": 3098,
									"end": 3104,
									"name": "PUSH",
									"source": 24,
									"value": "0"
								},
								{
									"begin": 3106,
									"end": 3112,
									"name": "DUP1",
									"source": 24
								},
								{
									"begin": 3159,
									"end": 3162,
									"name": "PUSH",
									"source": 24,
									"value": "100"
								},
								{
									"begin": 3147,
									"end": 3156,
									"name": "DUP10",
									"source": 24
								},
								{
									"begin": 3138,
									"end": 3145,
									"name": "DUP12",
									"source": 24
								},
								{
									"begin": 3134,
									"end": 3157,
									"name": "SUB",
									"source": 24
								},
								{
									"begin": 3130,
									"end": 3163,
									"name": "SLT",
									"source": 24
								},
								{
									"begin": 3127,
									"end": 3180,
									"name": "ISZERO",
									"source": 24
								},
								{
									"begin": 3127,
									"end": 3180,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "47"
								},
								{
									"begin": 3127,
									"end": 3180,
									"name": "JUMPI",
									"source": 24
								},
								{
									"begin": 3176,
									"end": 3177,
									"name": "PUSH",
									"source": 24,
									"value": "0"
								},
								{
									"begin": 3173,
									"end": 3174,
									"name": "DUP1",
									"source": 24
								},
								{
									"begin": 3166,
									"end": 3178,
									"name": "REVERT",
									"source": 24
								},
								{
									"begin": 3127,
									"end": 3180,
									"name": "tag",
									"source": 24,
									"value": "47"
								},
								{
									"begin": 3127,
									"end": 3180,
									"name": "JUMPDEST",
									"source": 24
								},
								{
									"begin": 3199,
									"end": 3239,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "48"
								},
								{
									"begin": 3229,
									"end": 3238,
									"name": "DUP10",
									"source": 24
								},
								{
									"begin": 3199,
									"end": 3239,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "16"
								},
								{
									"begin": 3199,
									"end": 3239,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 24
								},
								{
									"begin": 3199,
									"end": 3239,
									"name": "tag",
									"source": 24,
									"value": "48"
								},
								{
									"begin": 3199,
									"end": 3239,
									"name": "JUMPDEST",
									"source": 24
								},
								{
									"begin": 3189,
									"end": 3239,
									"name": "SWAP8",
									"source": 24
								},
								{
									"begin": 3189,
									"end": 3239,
									"name": "POP",
									"source": 24
								},
								{
									"begin": 3258,
									"end": 3307,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "49"
								},
								{
									"begin": 3303,
									"end": 3305,
									"name": "PUSH",
									"source": 24,
									"value": "20"
								},
								{
									"begin": 3292,
									"end": 3301,
									"name": "DUP11",
									"source": 24
								},
								{
									"begin": 3288,
									"end": 3306,
									"name": "ADD",
									"source": 24
								},
								{
									"begin": 3258,
									"end": 3307,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "16"
								},
								{
									"begin": 3258,
									"end": 3307,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 24
								},
								{
									"begin": 3258,
									"end": 3307,
									"name": "tag",
									"source": 24,
									"value": "49"
								},
								{
									"begin": 3258,
									"end": 3307,
									"name": "JUMPDEST",
									"source": 24
								},
								{
									"begin": 3248,
									"end": 3307,
									"name": "SWAP7",
									"source": 24
								},
								{
									"begin": 3248,
									"end": 3307,
									"name": "POP",
									"source": 24
								},
								{
									"begin": 3326,
									"end": 3375,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "50"
								},
								{
									"begin": 3371,
									"end": 3373,
									"name": "PUSH",
									"source": 24,
									"value": "40"
								},
								{
									"begin": 3360,
									"end": 3369,
									"name": "DUP11",
									"source": 24
								},
								{
									"begin": 3356,
									"end": 3374,
									"name": "ADD",
									"source": 24
								},
								{
									"begin": 3326,
									"end": 3375,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "16"
								},
								{
									"begin": 3326,
									"end": 3375,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 24
								},
								{
									"begin": 3326,
									"end": 3375,
									"name": "tag",
									"source": 24,
									"value": "50"
								},
								{
									"begin": 3326,
									"end": 3375,
									"name": "JUMPDEST",
									"source": 24
								},
								{
									"begin": 3316,
									"end": 3375,
									"name": "SWAP6",
									"source": 24
								},
								{
									"begin": 3316,
									"end": 3375,
									"name": "POP",
									"source": 24
								},
								{
									"begin": 3394,
									"end": 3443,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "51"
								},
								{
									"begin": 3439,
									"end": 3441,
									"name": "PUSH",
									"source": 24,
									"value": "60"
								},
								{
									"begin": 3428,
									"end": 3437,
									"name": "DUP11",
									"source": 24
								},
								{
									"begin": 3424,
									"end": 3442,
									"name": "ADD",
									"source": 24
								},
								{
									"begin": 3394,
									"end": 3443,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "16"
								},
								{
									"begin": 3394,
									"end": 3443,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 24
								},
								{
									"begin": 3394,
									"end": 3443,
									"name": "tag",
									"source": 24,
									"value": "51"
								},
								{
									"begin": 3394,
									"end": 3443,
									"name": "JUMPDEST",
									"source": 24
								},
								{
									"begin": 3384,
									"end": 3443,
									"name": "SWAP5",
									"source": 24
								},
								{
									"begin": 3384,
									"end": 3443,
									"name": "POP",
									"source": 24
								},
								{
									"begin": 3462,
									"end": 3512,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "52"
								},
								{
									"begin": 3507,
									"end": 3510,
									"name": "PUSH",
									"source": 24,
									"value": "80"
								},
								{
									"begin": 3496,
									"end": 3505,
									"name": "DUP11",
									"source": 24
								},
								{
									"begin": 3492,
									"end": 3511,
									"name": "ADD",
									"source": 24
								},
								{
									"begin": 3462,
									"end": 3512,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "16"
								},
								{
									"begin": 3462,
									"end": 3512,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 24
								},
								{
									"begin": 3462,
									"end": 3512,
									"name": "tag",
									"source": 24,
									"value": "52"
								},
								{
									"begin": 3462,
									"end": 3512,
									"name": "JUMPDEST",
									"source": 24
								},
								{
									"begin": 3452,
									"end": 3512,
									"name": "SWAP4",
									"source": 24
								},
								{
									"begin": 3452,
									"end": 3512,
									"name": "POP",
									"source": 24
								},
								{
									"begin": 3531,
									"end": 3581,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "53"
								},
								{
									"begin": 3576,
									"end": 3579,
									"name": "PUSH",
									"source": 24,
									"value": "A0"
								},
								{
									"begin": 3565,
									"end": 3574,
									"name": "DUP11",
									"source": 24
								},
								{
									"begin": 3561,
									"end": 3580,
									"name": "ADD",
									"source": 24
								},
								{
									"begin": 3531,
									"end": 3581,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "16"
								},
								{
									"begin": 3531,
									"end": 3581,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 24
								},
								{
									"begin": 3531,
									"end": 3581,
									"name": "tag",
									"source": 24,
									"value": "53"
								},
								{
									"begin": 3531,
									"end": 3581,
									"name": "JUMPDEST",
									"source": 24
								},
								{
									"begin": 3521,
									"end": 3581,
									"name": "SWAP3",
									"source": 24
								},
								{
									"begin": 3521,
									"end": 3581,
									"name": "POP",
									"source": 24
								},
								{
									"begin": 3600,
									"end": 3650,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "54"
								},
								{
									"begin": 3645,
									"end": 3648,
									"name": "PUSH",
									"source": 24,
									"value": "C0"
								},
								{
									"begin": 3634,
									"end": 3643,
									"name": "DUP11",
									"source": 24
								},
								{
									"begin": 3630,
									"end": 3649,
									"name": "ADD",
									"source": 24
								},
								{
									"begin": 3600,
									"end": 3650,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "16"
								},
								{
									"begin": 3600,
									"end": 3650,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 24
								},
								{
									"begin": 3600,
									"end": 3650,
									"name": "tag",
									"source": 24,
									"value": "54"
								},
								{
									"begin": 3600,
									"end": 3650,
									"name": "JUMPDEST",
									"source": 24
								},
								{
									"begin": 3590,
									"end": 3650,
									"name": "SWAP2",
									"source": 24
								},
								{
									"begin": 3590,
									"end": 3650,
									"name": "POP",
									"source": 24
								},
								{
									"begin": 3669,
									"end": 3719,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "55"
								},
								{
									"begin": 3714,
									"end": 3717,
									"name": "PUSH",
									"source": 24,
									"value": "E0"
								},
								{
									"begin": 3703,
									"end": 3712,
									"name": "DUP11",
									"source": 24
								},
								{
									"begin": 3699,
									"end": 3718,
									"name": "ADD",
									"source": 24
								},
								{
									"begin": 3669,
									"end": 3719,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "16"
								},
								{
									"begin": 3669,
									"end": 3719,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 24
								},
								{
									"begin": 3669,
									"end": 3719,
									"name": "tag",
									"source": 24,
									"value": "55"
								},
								{
									"begin": 3669,
									"end": 3719,
									"name": "JUMPDEST",
									"source": 24
								},
								{
									"begin": 3659,
									"end": 3719,
									"name": "SWAP1",
									"source": 24
								},
								{
									"begin": 3659,
									"end": 3719,
									"name": "POP",
									"source": 24
								},
								{
									"begin": 2917,
									"end": 3725,
									"name": "SWAP3",
									"source": 24
								},
								{
									"begin": 2917,
									"end": 3725,
									"name": "SWAP6",
									"source": 24
								},
								{
									"begin": 2917,
									"end": 3725,
									"name": "SWAP9",
									"source": 24
								},
								{
									"begin": 2917,
									"end": 3725,
									"name": "POP",
									"source": 24
								},
								{
									"begin": 2917,
									"end": 3725,
									"name": "SWAP3",
									"source": 24
								},
								{
									"begin": 2917,
									"end": 3725,
									"name": "SWAP6",
									"source": 24
								},
								{
									"begin": 2917,
									"end": 3725,
									"name": "SWAP9",
									"source": 24
								},
								{
									"begin": 2917,
									"end": 3725,
									"name": "SWAP1",
									"source": 24
								},
								{
									"begin": 2917,
									"end": 3725,
									"name": "SWAP4",
									"source": 24
								},
								{
									"begin": 2917,
									"end": 3725,
									"name": "SWAP7",
									"source": 24
								},
								{
									"begin": 2917,
									"end": 3725,
									"name": "POP",
									"source": 24
								},
								{
									"begin": 2917,
									"end": 3725,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 24
								},
								{
									"begin": 3730,
									"end": 3989,
									"name": "tag",
									"source": 24,
									"value": "17"
								},
								{
									"begin": 3730,
									"end": 3989,
									"name": "JUMPDEST",
									"source": 24
								},
								{
									"begin": 941,
									"end": 7628,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 941,
									"end": 7628,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 941,
									"end": 7628,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 941,
									"end": 7628,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 941,
									"end": 7628,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 941,
									"end": 7628,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 941,
									"end": 7628,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122024c904bef833b67fb7e3222024adc23707813c21cd9bb6542bcd916274d4b3fd64736f6c63430008140033",
									".code": [
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH",
											"source": 1,
											"value": "869665E9"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH",
											"source": 1,
											"value": "B3CE56A2"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH",
											"source": 1,
											"value": "E0ABCA0B"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH",
											"source": 1,
											"value": "E0ABCA0B"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH",
											"source": 1,
											"value": "E189EB42"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH",
											"source": 1,
											"value": "E5047B30"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH",
											"source": 1,
											"value": "F974821A"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH",
											"source": 1,
											"value": "B3CE56A2"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH",
											"source": 1,
											"value": "B6658D07"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH",
											"source": 1,
											"value": "C0FC247F"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH",
											"source": 1,
											"value": "E037F889"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH",
											"source": 1,
											"value": "92EEFE9B"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH",
											"source": 1,
											"value": "92EEFE9B"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH",
											"source": 1,
											"value": "9D8EF1E1"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH",
											"source": 1,
											"value": "A30FB905"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH",
											"source": 1,
											"value": "A98AD46C"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH",
											"source": 1,
											"value": "869665E9"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH",
											"source": 1,
											"value": "8DA5CB5B"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH",
											"source": 1,
											"value": "8FC3047D"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH",
											"source": 1,
											"value": "41C0E1B5"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH",
											"source": 1,
											"value": "5E7FFA67"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH",
											"source": 1,
											"value": "5E7FFA67"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH",
											"source": 1,
											"value": "64AABB9E"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH",
											"source": 1,
											"value": "6D546CDD"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH",
											"source": 1,
											"value": "735DE9F7"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH",
											"source": 1,
											"value": "41C0E1B5"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH",
											"source": 1,
											"value": "457F3CB0"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH",
											"source": 1,
											"value": "4ADA218B"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH",
											"source": 1,
											"value": "1BF41362"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH",
											"source": 1,
											"value": "1BF41362"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH",
											"source": 1,
											"value": "238F9B7A"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH",
											"source": 1,
											"value": "26C403ED"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH",
											"source": 1,
											"value": "3FB47A3B"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH",
											"source": 1,
											"value": "11EAC855"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH",
											"source": 1,
											"value": "1458D9D8"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH",
											"source": 1,
											"value": "17700F01"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3261,
											"end": 3270,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 3243,
											"end": 3257,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3243,
											"end": 3257,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3243,
											"end": 3270,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3243,
											"end": 3270,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3243,
											"end": 3270,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3243,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 3243,
											"end": 3270,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3243,
											"end": 3270,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3243,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 3243,
											"end": 3270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3243,
											"end": 3270,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 3243,
											"end": 3270,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3243,
											"end": 3270,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3243,
											"end": 3270,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3243,
											"end": 3270,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3315,
											"end": 3318,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3315,
											"end": 3318,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3297,
											"end": 3311,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3297,
											"end": 3306,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 3309,
											"end": 3311,
											"name": "PUSH",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3297,
											"end": 3311,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3297,
											"end": 3311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3297,
											"end": 3311,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3297,
											"end": 3311,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3318,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3296,
											"end": 3318,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3318,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3318,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3296,
											"end": 3318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3318,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3296,
											"end": 3318,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3280,
											"end": 3292,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3280,
											"end": 3292,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3280,
											"end": 3318,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3280,
											"end": 3318,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3280,
											"end": 3318,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3280,
											"end": 3318,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 3280,
											"end": 3318,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3280,
											"end": 3318,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3280,
											"end": 3318,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 3280,
											"end": 3318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3280,
											"end": 3318,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 3280,
											"end": 3318,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3280,
											"end": 3318,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3280,
											"end": 3318,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3280,
											"end": 3318,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3368,
											"end": 3371,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3368,
											"end": 3371,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3350,
											"end": 3364,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 3350,
											"end": 3359,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 3362,
											"end": 3364,
											"name": "PUSH",
											"source": 1,
											"value": "1E"
										},
										{
											"begin": 3350,
											"end": 3364,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3350,
											"end": 3364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3350,
											"end": 3364,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 3350,
											"end": 3364,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3349,
											"end": 3371,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 3349,
											"end": 3371,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3349,
											"end": 3371,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3349,
											"end": 3371,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3349,
											"end": 3371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3349,
											"end": 3371,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 3349,
											"end": 3371,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3328,
											"end": 3345,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 3328,
											"end": 3345,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3328,
											"end": 3371,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3328,
											"end": 3371,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3328,
											"end": 3371,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3328,
											"end": 3371,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 3328,
											"end": 3371,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3328,
											"end": 3371,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3328,
											"end": 3371,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 3328,
											"end": 3371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3328,
											"end": 3371,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 3328,
											"end": 3371,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3328,
											"end": 3371,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3328,
											"end": 3371,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3328,
											"end": 3371,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3328,
											"end": 3371,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3328,
											"end": 3371,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3328,
											"end": 3371,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3328,
											"end": 3371,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 941,
											"end": 7628,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1451,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1427,
											"end": 1451,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1451,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1451,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1451,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1427,
											"end": 1451,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1451,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1451,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1451,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1451,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1427,
											"end": 1451,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1427,
											"end": 1451,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 1427,
											"end": 1451,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1427,
											"end": 1451,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1427,
											"end": 1451,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1451,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1451,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1451,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1427,
											"end": 1451,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1451,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1427,
											"end": 1451,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 835,
											"end": 867,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 835,
											"end": 867,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 835,
											"end": 867,
											"name": "AND",
											"source": 24
										},
										{
											"begin": 817,
											"end": 868,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 817,
											"end": 868,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 805,
											"end": 807,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 790,
											"end": 808,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 1427,
											"end": 1451,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1427,
											"end": 1451,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1451,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1427,
											"end": 1451,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1451,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1451,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1451,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1451,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1451,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1058,
											"end": 1085,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1058,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1058,
											"end": 1085,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1058,
											"end": 1085,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1058,
											"end": 1085,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1058,
											"end": 1085,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1058,
											"end": 1085,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1058,
											"end": 1085,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1058,
											"end": 1085,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1058,
											"end": 1085,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1058,
											"end": 1085,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1058,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1058,
											"end": 1085,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1058,
											"end": 1085,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1058,
											"end": 1085,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1058,
											"end": 1085,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1058,
											"end": 1085,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1058,
											"end": 1085,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1058,
											"end": 1085,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1058,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1058,
											"end": 1085,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1058,
											"end": 1085,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1050,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 1025,
											"end": 1050,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 1025,
											"end": 1050,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 1013,
											"end": 1015,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 998,
											"end": 1016,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 1058,
											"end": 1085,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 879,
											"end": 1056,
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 4858,
											"end": 4942,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 4858,
											"end": 4942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4858,
											"end": 4942,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 4858,
											"end": 4942,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4858,
											"end": 4942,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4858,
											"end": 4942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 4858,
											"end": 4942,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4858,
											"end": 4942,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4858,
											"end": 4942,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4858,
											"end": 4942,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4858,
											"end": 4942,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 4858,
											"end": 4942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4858,
											"end": 4942,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4858,
											"end": 4942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 4858,
											"end": 4942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 4858,
											"end": 4942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4858,
											"end": 4942,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 4858,
											"end": 4942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4858,
											"end": 4942,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1309,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1283,
											"end": 1309,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1309,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1309,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1309,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1309,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1283,
											"end": 1309,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1309,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1283,
											"end": 1309,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1309,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1309,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1283,
											"end": 1309,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1309,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1309,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1283,
											"end": 1309,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1283,
											"end": 1309,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1309,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1309,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1607,
											"end": 1654,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1607,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1607,
											"end": 1654,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1607,
											"end": 1654,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1607,
											"end": 1654,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1607,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1607,
											"end": 1654,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1607,
											"end": 1654,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1607,
											"end": 1654,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1607,
											"end": 1654,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1607,
											"end": 1654,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1607,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1607,
											"end": 1654,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1607,
											"end": 1654,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1607,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1607,
											"end": 1654,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1607,
											"end": 1654,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1607,
											"end": 1654,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1607,
											"end": 1654,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3880,
											"end": 4044,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 3880,
											"end": 4044,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3880,
											"end": 4044,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 3880,
											"end": 4044,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3880,
											"end": 4044,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3880,
											"end": 4044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 3880,
											"end": 4044,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3880,
											"end": 4044,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3880,
											"end": 4044,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3880,
											"end": 4044,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3880,
											"end": 4044,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 3880,
											"end": 4044,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3880,
											"end": 4044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 3880,
											"end": 4044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 3880,
											"end": 4044,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3880,
											"end": 4044,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3880,
											"end": 4044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 3880,
											"end": 4044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3880,
											"end": 4044,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 3880,
											"end": 4044,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3880,
											"end": 4044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 3880,
											"end": 4044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4185,
											"end": 4659,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 4185,
											"end": 4659,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4185,
											"end": 4659,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 4185,
											"end": 4659,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4185,
											"end": 4659,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4185,
											"end": 4659,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 4185,
											"end": 4659,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4185,
											"end": 4659,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4185,
											"end": 4659,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4185,
											"end": 4659,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4185,
											"end": 4659,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 4185,
											"end": 4659,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4185,
											"end": 4659,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 4185,
											"end": 4659,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 4185,
											"end": 4659,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4185,
											"end": 4659,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4185,
											"end": 4659,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 4185,
											"end": 4659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4185,
											"end": 4659,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 4185,
											"end": 4659,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4185,
											"end": 4659,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 4185,
											"end": 4659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4185,
											"end": 4659,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 4185,
											"end": 4659,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4185,
											"end": 4659,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4185,
											"end": 4659,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 2947,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 2933,
											"end": 2947,
											"name": "ISZERO",
											"source": 24
										},
										{
											"begin": 2926,
											"end": 2948,
											"name": "ISZERO",
											"source": 24
										},
										{
											"begin": 2908,
											"end": 2949,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 2908,
											"end": 2949,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 2896,
											"end": 2898,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 2881,
											"end": 2899,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 4185,
											"end": 4659,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2768,
											"end": 2955,
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 5204,
											"end": 5307,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 5204,
											"end": 5307,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5204,
											"end": 5307,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 5204,
											"end": 5307,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5204,
											"end": 5307,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5204,
											"end": 5307,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5204,
											"end": 5307,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5204,
											"end": 5307,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5204,
											"end": 5307,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5204,
											"end": 5307,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5204,
											"end": 5307,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5204,
											"end": 5307,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5204,
											"end": 5307,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5204,
											"end": 5307,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 5204,
											"end": 5307,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 5204,
											"end": 5307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4948,
											"end": 5198,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 4948,
											"end": 5198,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4948,
											"end": 5198,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 4948,
											"end": 5198,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4948,
											"end": 5198,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4948,
											"end": 5198,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 4948,
											"end": 5198,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4948,
											"end": 5198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4948,
											"end": 5198,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4948,
											"end": 5198,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4948,
											"end": 5198,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 4948,
											"end": 5198,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4948,
											"end": 5198,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 4948,
											"end": 5198,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 4948,
											"end": 5198,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4948,
											"end": 5198,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4948,
											"end": 5198,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 4948,
											"end": 5198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4948,
											"end": 5198,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 4948,
											"end": 5198,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4948,
											"end": 5198,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 4948,
											"end": 5198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 991,
											"end": 1017,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 991,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 991,
											"end": 1017,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 991,
											"end": 1017,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 991,
											"end": 1017,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 991,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 991,
											"end": 1017,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 991,
											"end": 1017,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 991,
											"end": 1017,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 991,
											"end": 1017,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 991,
											"end": 1017,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 991,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 991,
											"end": 1017,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 991,
											"end": 1017,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 991,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 991,
											"end": 1017,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 991,
											"end": 1017,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 991,
											"end": 1017,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 991,
											"end": 1017,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 991,
											"end": 1017,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 991,
											"end": 1017,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 991,
											"end": 1017,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1661,
											"end": 1705,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1661,
											"end": 1705,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1661,
											"end": 1705,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1661,
											"end": 1705,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1661,
											"end": 1705,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1661,
											"end": 1705,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 1661,
											"end": 1705,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1661,
											"end": 1705,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1661,
											"end": 1705,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1661,
											"end": 1705,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1661,
											"end": 1705,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 1661,
											"end": 1705,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1661,
											"end": 1705,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1661,
											"end": 1705,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 1661,
											"end": 1705,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1661,
											"end": 1705,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1661,
											"end": 1705,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 1661,
											"end": 1705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1661,
											"end": 1705,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 1661,
											"end": 1705,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1661,
											"end": 1705,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1661,
											"end": 1705,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1661,
											"end": 1705,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1661,
											"end": 1705,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1661,
											"end": 1705,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1661,
											"end": 1705,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1661,
											"end": 1705,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1661,
											"end": 1705,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1661,
											"end": 1705,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1661,
											"end": 1705,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1661,
											"end": 1705,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1661,
											"end": 1705,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1661,
											"end": 1705,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1661,
											"end": 1705,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1661,
											"end": 1705,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1661,
											"end": 1705,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1661,
											"end": 1705,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1661,
											"end": 1705,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1661,
											"end": 1705,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1661,
											"end": 1705,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1661,
											"end": 1705,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1661,
											"end": 1705,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1661,
											"end": 1705,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1661,
											"end": 1705,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1661,
											"end": 1705,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1661,
											"end": 1705,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1661,
											"end": 1705,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1123,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1091,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1123,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1123,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1123,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 1091,
											"end": 1123,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1123,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1091,
											"end": 1123,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1123,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1123,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 1091,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1123,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1091,
											"end": 1123,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1091,
											"end": 1123,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1123,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1123,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 1315,
											"end": 1361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 1315,
											"end": 1361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1530,
											"end": 1558,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1530,
											"end": 1558,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1530,
											"end": 1558,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1530,
											"end": 1558,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1530,
											"end": 1558,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1530,
											"end": 1558,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 1530,
											"end": 1558,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1530,
											"end": 1558,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1530,
											"end": 1558,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1530,
											"end": 1558,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1530,
											"end": 1558,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 1530,
											"end": 1558,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1530,
											"end": 1558,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 1530,
											"end": 1558,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1530,
											"end": 1558,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1530,
											"end": 1558,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1530,
											"end": 1558,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1530,
											"end": 1558,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1530,
											"end": 1558,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3384,
											"end": 3749,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 3384,
											"end": 3749,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3384,
											"end": 3749,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 3384,
											"end": 3749,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3384,
											"end": 3749,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3384,
											"end": 3749,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 3384,
											"end": 3749,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3384,
											"end": 3749,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3384,
											"end": 3749,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3384,
											"end": 3749,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3384,
											"end": 3749,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 3384,
											"end": 3749,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3384,
											"end": 3749,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 3384,
											"end": 3749,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 3384,
											"end": 3749,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3384,
											"end": 3749,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3384,
											"end": 3749,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 3384,
											"end": 3749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3384,
											"end": 3749,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 3384,
											"end": 3749,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3384,
											"end": 3749,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 3384,
											"end": 3749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 964,
											"end": 984,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 964,
											"end": 984,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 964,
											"end": 984,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 964,
											"end": 984,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 964,
											"end": 984,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 964,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 964,
											"end": 984,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 964,
											"end": 984,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 964,
											"end": 984,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 964,
											"end": 984,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 964,
											"end": 984,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 964,
											"end": 984,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 964,
											"end": 984,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 964,
											"end": 984,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 964,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 964,
											"end": 984,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 964,
											"end": 984,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 964,
											"end": 984,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 964,
											"end": 984,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3755,
											"end": 3874,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 3755,
											"end": 3874,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3755,
											"end": 3874,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 3755,
											"end": 3874,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3755,
											"end": 3874,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3755,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 3755,
											"end": 3874,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3755,
											"end": 3874,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3755,
											"end": 3874,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3755,
											"end": 3874,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3755,
											"end": 3874,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 3755,
											"end": 3874,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3755,
											"end": 3874,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3755,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 3755,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 3755,
											"end": 3874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3103,
											"end": 3200,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3103,
											"end": 3200,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3103,
											"end": 3200,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 3103,
											"end": 3200,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3103,
											"end": 3200,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3103,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 3103,
											"end": 3200,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3103,
											"end": 3200,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3103,
											"end": 3200,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3103,
											"end": 3200,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3103,
											"end": 3200,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 3103,
											"end": 3200,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3103,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 3103,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 3103,
											"end": 3200,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3103,
											"end": 3200,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3103,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 3103,
											"end": 3200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3103,
											"end": 3200,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 3103,
											"end": 3200,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3103,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 3103,
											"end": 3200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4050,
											"end": 4179,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 4050,
											"end": 4179,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4050,
											"end": 4179,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 4050,
											"end": 4179,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4050,
											"end": 4179,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4050,
											"end": 4179,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 4050,
											"end": 4179,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4050,
											"end": 4179,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4050,
											"end": 4179,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4050,
											"end": 4179,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4050,
											"end": 4179,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 4050,
											"end": 4179,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4050,
											"end": 4179,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4050,
											"end": 4179,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 4050,
											"end": 4179,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 4050,
											"end": 4179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1199,
											"end": 1235,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1199,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1199,
											"end": 1235,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1199,
											"end": 1235,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1199,
											"end": 1235,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1199,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 1199,
											"end": 1235,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1199,
											"end": 1235,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1199,
											"end": 1235,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1199,
											"end": 1235,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1199,
											"end": 1235,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 1199,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1199,
											"end": 1235,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1199,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1199,
											"end": 1235,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1199,
											"end": 1235,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1199,
											"end": 1235,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1199,
											"end": 1235,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1397,
											"end": 1421,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1397,
											"end": 1421,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1397,
											"end": 1421,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1397,
											"end": 1421,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1397,
											"end": 1421,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1397,
											"end": 1421,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 1397,
											"end": 1421,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1397,
											"end": 1421,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1397,
											"end": 1421,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1397,
											"end": 1421,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1397,
											"end": 1421,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 1397,
											"end": 1421,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1397,
											"end": 1421,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 1397,
											"end": 1421,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1397,
											"end": 1421,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1397,
											"end": 1421,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1397,
											"end": 1421,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1397,
											"end": 1421,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1397,
											"end": 1421,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1241,
											"end": 1277,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1241,
											"end": 1277,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1241,
											"end": 1277,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1241,
											"end": 1277,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1241,
											"end": 1277,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1241,
											"end": 1277,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 1241,
											"end": 1277,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1241,
											"end": 1277,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 1277,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1241,
											"end": 1277,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1241,
											"end": 1277,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 1241,
											"end": 1277,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1241,
											"end": 1277,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1241,
											"end": 1277,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1241,
											"end": 1277,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1241,
											"end": 1277,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1241,
											"end": 1277,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1241,
											"end": 1277,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1368,
											"end": 1391,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1368,
											"end": 1391,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1368,
											"end": 1391,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1368,
											"end": 1391,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1368,
											"end": 1391,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1368,
											"end": 1391,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 1368,
											"end": 1391,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1368,
											"end": 1391,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1368,
											"end": 1391,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1368,
											"end": 1391,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1368,
											"end": 1391,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 1368,
											"end": 1391,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1368,
											"end": 1391,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 1368,
											"end": 1391,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1368,
											"end": 1391,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1368,
											"end": 1391,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1368,
											"end": 1391,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1368,
											"end": 1391,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1368,
											"end": 1391,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1165,
											"end": 1193,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1165,
											"end": 1193,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1165,
											"end": 1193,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1165,
											"end": 1193,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1165,
											"end": 1193,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1165,
											"end": 1193,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 1165,
											"end": 1193,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1165,
											"end": 1193,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1165,
											"end": 1193,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1165,
											"end": 1193,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1165,
											"end": 1193,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 1165,
											"end": 1193,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1165,
											"end": 1193,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1165,
											"end": 1193,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1165,
											"end": 1193,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1165,
											"end": 1193,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1165,
											"end": 1193,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1165,
											"end": 1193,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1052,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1023,
											"end": 1052,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1052,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1052,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1052,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1052,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 1023,
											"end": 1052,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1052,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1023,
											"end": 1052,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1052,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1052,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 1023,
											"end": 1052,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1052,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1052,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1023,
											"end": 1052,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1023,
											"end": 1052,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1052,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1052,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1493,
											"end": 1524,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1493,
											"end": 1524,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1493,
											"end": 1524,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1493,
											"end": 1524,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1493,
											"end": 1524,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1493,
											"end": 1524,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 1493,
											"end": 1524,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1493,
											"end": 1524,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1493,
											"end": 1524,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1493,
											"end": 1524,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1493,
											"end": 1524,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 1493,
											"end": 1524,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1493,
											"end": 1524,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 1493,
											"end": 1524,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1493,
											"end": 1524,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1493,
											"end": 1524,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1493,
											"end": 1524,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1493,
											"end": 1524,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1493,
											"end": 1524,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1457,
											"end": 1487,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1457,
											"end": 1487,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1457,
											"end": 1487,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1457,
											"end": 1487,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1457,
											"end": 1487,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1457,
											"end": 1487,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 1457,
											"end": 1487,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1457,
											"end": 1487,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1457,
											"end": 1487,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1457,
											"end": 1487,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1457,
											"end": 1487,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 1457,
											"end": 1487,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1457,
											"end": 1487,
											"name": "PUSH",
											"source": 1,
											"value": "D"
										},
										{
											"begin": 1457,
											"end": 1487,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1457,
											"end": 1487,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1457,
											"end": 1487,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1457,
											"end": 1487,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1457,
											"end": 1487,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1457,
											"end": 1487,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1564,
											"end": 1601,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1564,
											"end": 1601,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1564,
											"end": 1601,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1564,
											"end": 1601,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1564,
											"end": 1601,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1564,
											"end": 1601,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 1564,
											"end": 1601,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1564,
											"end": 1601,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1564,
											"end": 1601,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1564,
											"end": 1601,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1564,
											"end": 1601,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 1564,
											"end": 1601,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1564,
											"end": 1601,
											"name": "PUSH",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1564,
											"end": 1601,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1564,
											"end": 1601,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1564,
											"end": 1601,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1564,
											"end": 1601,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1564,
											"end": 1601,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1564,
											"end": 1601,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1129,
											"end": 1159,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1129,
											"end": 1159,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1129,
											"end": 1159,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1129,
											"end": 1159,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1129,
											"end": 1159,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1129,
											"end": 1159,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 1129,
											"end": 1159,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1129,
											"end": 1159,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1129,
											"end": 1159,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1129,
											"end": 1159,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1129,
											"end": 1159,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 1129,
											"end": 1159,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1129,
											"end": 1159,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1129,
											"end": 1159,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1129,
											"end": 1159,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1129,
											"end": 1159,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1129,
											"end": 1159,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1129,
											"end": 1159,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4858,
											"end": 4942,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 4858,
											"end": 4942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2021,
											"end": 2026,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2026,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2021,
											"end": 2026,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2007,
											"end": 2017,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 2007,
											"end": 2026,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 1999,
											"end": 2044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "tag",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "tag",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4930,
											"end": 4935,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4913,
											"end": 4935,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4913,
											"end": 4935,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4913,
											"end": 4935,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4913,
											"end": 4935,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4913,
											"end": 4935,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4858,
											"end": 4942,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3880,
											"end": 4044,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 3880,
											"end": 4044,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2021,
											"end": 2026,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2026,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2021,
											"end": 2026,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2007,
											"end": 2017,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 2007,
											"end": 2026,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 1999,
											"end": 2044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "tag",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3992,
											"end": 4002,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 3978,
											"end": 4037,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "30FDCD4F0C28C5DBCBC3F59AA8E2260C7F58AC45BE2A2DCA652999AF89C33E0"
										},
										{
											"begin": 4004,
											"end": 4013,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4015,
											"end": 4021,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4023,
											"end": 4024,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4026,
											"end": 4036,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 4026,
											"end": 4034,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 4026,
											"end": 4036,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4026,
											"end": 4036,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 4026,
											"end": 4036,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3978,
											"end": 4037,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3978,
											"end": 4037,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3978,
											"end": 4037,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 3978,
											"end": 4037,
											"modifierDepth": 1,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 3978,
											"end": 4037,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3978,
											"end": 4037,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3978,
											"end": 4037,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3978,
											"end": 4037,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3978,
											"end": 4037,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 3978,
											"end": 4037,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3978,
											"end": 4037,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 3978,
											"end": 4037,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3978,
											"end": 4037,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3978,
											"end": 4037,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3978,
											"end": 4037,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3978,
											"end": 4037,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3978,
											"end": 4037,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3978,
											"end": 4037,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3978,
											"end": 4037,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 1
										},
										{
											"begin": 3880,
											"end": 4044,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3880,
											"end": 4044,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3880,
											"end": 4044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4185,
											"end": 4659,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 4185,
											"end": 4659,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4269,
											"end": 4293,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4305,
											"end": 4324,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4342,
											"end": 4353,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4305,
											"end": 4354,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4305,
											"end": 4354,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4365,
											"end": 4385,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4395,
											"end": 4399,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4395,
											"end": 4405,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4395,
											"end": 4405,
											"name": "PUSH",
											"source": 1,
											"value": "3850C7BD"
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "tag",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 4395,
											"end": 4407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "tag",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4364,
											"end": 4407,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4364,
											"end": 4407,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4364,
											"end": 4407,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4364,
											"end": 4407,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4364,
											"end": 4407,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4364,
											"end": 4407,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4364,
											"end": 4407,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4364,
											"end": 4407,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4417,
											"end": 4434,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4437,
											"end": 4441,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4437,
											"end": 4451,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4437,
											"end": 4451,
											"name": "PUSH",
											"source": 1,
											"value": "1A686502"
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "tag",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 4437,
											"end": 4453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "tag",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4417,
											"end": 4453,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4417,
											"end": 4453,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4417,
											"end": 4453,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4463,
											"end": 4480,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4483,
											"end": 4536,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 4502,
											"end": 4510,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4512,
											"end": 4524,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4526,
											"end": 4535,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4483,
											"end": 4501,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 4483,
											"end": 4536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4483,
											"end": 4536,
											"name": "tag",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 4483,
											"end": 4536,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4463,
											"end": 4536,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4546,
											"end": 4562,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4583,
											"end": 4586,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4566,
											"end": 4579,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 4463,
											"end": 4536,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4578,
											"end": 4579,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4566,
											"end": 4579,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4566,
											"end": 4579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4566,
											"end": 4579,
											"name": "tag",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 4566,
											"end": 4579,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4565,
											"end": 4586,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 4565,
											"end": 4586,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4565,
											"end": 4586,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4565,
											"end": 4586,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 4565,
											"end": 4586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4565,
											"end": 4586,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 4565,
											"end": 4586,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4546,
											"end": 4586,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4632,
											"end": 4651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 4546,
											"end": 4586,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4632,
											"end": 4640,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 4632,
											"end": 4651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 4632,
											"end": 4651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4632,
											"end": 4651,
											"name": "tag",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 4632,
											"end": 4651,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4619,
											"end": 4651,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4619,
											"end": 4651,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4619,
											"end": 4651,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4619,
											"end": 4651,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4619,
											"end": 4651,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 4185,
											"end": 4659,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4185,
											"end": 4659,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5204,
											"end": 5307,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 5204,
											"end": 5307,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2021,
											"end": 2026,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2026,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2021,
											"end": 2026,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2007,
											"end": 2017,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 2007,
											"end": 2026,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 1999,
											"end": 2044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "tag",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5249,
											"end": 5300,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5249,
											"end": 5300,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5257,
											"end": 5267,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 5257,
											"end": 5267,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5278,
											"end": 5299,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 1
										},
										{
											"begin": 5249,
											"end": 5300,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5249,
											"end": 5300,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5249,
											"end": 5300,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "8FC"
										},
										{
											"begin": 5249,
											"end": 5300,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5249,
											"end": 5300,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5249,
											"end": 5300,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5249,
											"end": 5300,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5249,
											"end": 5300,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5249,
											"end": 5300,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5278,
											"end": 5299,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5257,
											"end": 5267,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5249,
											"end": 5300,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5249,
											"end": 5300,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 5249,
											"end": 5300,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5249,
											"end": 5300,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5249,
											"end": 5300,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5249,
											"end": 5300,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5249,
											"end": 5300,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5249,
											"end": 5300,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5249,
											"end": 5300,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5249,
											"end": 5300,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5249,
											"end": 5300,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 5249,
											"end": 5300,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5249,
											"end": 5300,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 5249,
											"end": 5300,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5249,
											"end": 5300,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5249,
											"end": 5300,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 5249,
											"end": 5300,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 5249,
											"end": 5300,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5249,
											"end": 5300,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5249,
											"end": 5300,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 5249,
											"end": 5300,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5249,
											"end": 5300,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5204,
											"end": 5307,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4948,
											"end": 5198,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 4948,
											"end": 5198,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2021,
											"end": 2026,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2026,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2021,
											"end": 2026,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2007,
											"end": 2017,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 2007,
											"end": 2026,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 1999,
											"end": 2044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "tag",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5023,
											"end": 5042,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5045,
											"end": 5066,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 5045,
											"end": 5057,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5060,
											"end": 5066,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "3B9ACA00"
										},
										{
											"begin": 5045,
											"end": 5066,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5045,
											"end": 5066,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5045,
											"end": 5066,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 5045,
											"end": 5066,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5023,
											"end": 5066,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5023,
											"end": 5066,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5109,
											"end": 5120,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5084,
											"end": 5105,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 1
										},
										{
											"begin": 5084,
											"end": 5120,
											"modifierDepth": 1,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5084,
											"end": 5120,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5076,
											"end": 5145,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 5076,
											"end": 5145,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5076,
											"end": 5145,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5076,
											"end": 5145,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5076,
											"end": 5145,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5076,
											"end": 5145,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6971,
											"end": 6973,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 5076,
											"end": 5145,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5076,
											"end": 5145,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5076,
											"end": 5145,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6953,
											"end": 6974,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 7010,
											"end": 7012,
											"name": "PUSH",
											"source": 24,
											"value": "14"
										},
										{
											"begin": 6990,
											"end": 7008,
											"name": "PUSH",
											"source": 24,
											"value": "24"
										},
										{
											"begin": 6990,
											"end": 7008,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 6990,
											"end": 7008,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 6983,
											"end": 7013,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E73756666696369656E742062616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7029,
											"end": 7047,
											"name": "PUSH",
											"source": 24,
											"value": "44"
										},
										{
											"begin": 7029,
											"end": 7047,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 7029,
											"end": 7047,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 7022,
											"end": 7072,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 7089,
											"end": 7107,
											"name": "PUSH",
											"source": 24,
											"value": "64"
										},
										{
											"begin": 7089,
											"end": 7107,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 5076,
											"end": 5145,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 6769,
											"end": 7113,
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 5076,
											"end": 5145,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 5076,
											"end": 5145,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5163,
											"end": 5168,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5163,
											"end": 5168,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5163,
											"end": 5168,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5155,
											"end": 5191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5155,
											"end": 5191,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5163,
											"end": 5168,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5163,
											"end": 5168,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5163,
											"end": 5168,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5163,
											"end": 5168,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5155,
											"end": 5191,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5155,
											"end": 5191,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5155,
											"end": 5191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "8FC"
										},
										{
											"begin": 5155,
											"end": 5191,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5155,
											"end": 5191,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5179,
											"end": 5190,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5179,
											"end": 5190,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5155,
											"end": 5191,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5163,
											"end": 5168,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5155,
											"end": 5191,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5179,
											"end": 5190,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5163,
											"end": 5168,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5155,
											"end": 5191,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5155,
											"end": 5191,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 5155,
											"end": 5191,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5155,
											"end": 5191,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5155,
											"end": 5191,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5155,
											"end": 5191,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5155,
											"end": 5191,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5155,
											"end": 5191,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5155,
											"end": 5191,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5155,
											"end": 5191,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5155,
											"end": 5191,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 5155,
											"end": 5191,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5155,
											"end": 5191,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 5155,
											"end": 5191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5155,
											"end": 5191,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5155,
											"end": 5191,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 5155,
											"end": 5191,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 5155,
											"end": 5191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5155,
											"end": 5191,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5155,
											"end": 5191,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 5155,
											"end": 5191,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5155,
											"end": 5191,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5198,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4948,
											"end": 5198,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4948,
											"end": 5198,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 1315,
											"end": 1361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "tag",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 1315,
											"end": 1361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "tag",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "tag",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "tag",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "tag",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3384,
											"end": 3749,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 3384,
											"end": 3749,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2021,
											"end": 2026,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2026,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2021,
											"end": 2026,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2007,
											"end": 2017,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 2007,
											"end": 2026,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 1999,
											"end": 2044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "tag",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3675,
											"end": 3685,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 3661,
											"end": 3742,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "30FDCD4F0C28C5DBCBC3F59AA8E2260C7F58AC45BE2A2DCA652999AF89C33E0"
										},
										{
											"begin": 3709,
											"end": 3726,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3728,
											"end": 3729,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3731,
											"end": 3741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 3731,
											"end": 3739,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 3731,
											"end": 3741,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3731,
											"end": 3741,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 3731,
											"end": 3741,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3661,
											"end": 3742,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3661,
											"end": 3742,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3661,
											"end": 3742,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7797,
											"end": 7800,
											"name": "PUSH",
											"source": 24,
											"value": "80"
										},
										{
											"begin": 7779,
											"end": 7801,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 7779,
											"end": 7801,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 7779,
											"end": 7801,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 7838,
											"end": 7840,
											"name": "PUSH",
											"source": 24,
											"value": "12"
										},
										{
											"begin": 7817,
											"end": 7836,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 7817,
											"end": 7836,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 7817,
											"end": 7836,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 7810,
											"end": 7841,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "151A5B59599C985B594818591A9D5CDD1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7872,
											"end": 7875,
											"name": "PUSH",
											"source": 24,
											"value": "A0"
										},
										{
											"begin": 7857,
											"end": 7876,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 7857,
											"end": 7876,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 7850,
											"end": 7899,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 7966,
											"end": 7970,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 7951,
											"end": 7971,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 7951,
											"end": 7971,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 7944,
											"end": 7980,
											"name": "SWAP5",
											"source": 24
										},
										{
											"begin": 7944,
											"end": 7980,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 7944,
											"end": 7980,
											"name": "SWAP5",
											"source": 24
										},
										{
											"begin": 7944,
											"end": 7980,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 7996,
											"end": 8014,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 7996,
											"end": 8014,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 7989,
											"end": 8023,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 7989,
											"end": 8023,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 7989,
											"end": 8023,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 7989,
											"end": 8023,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 8039,
											"end": 8057,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 8039,
											"end": 8057,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 8032,
											"end": 8066,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 7931,
											"end": 7934,
											"name": "PUSH",
											"source": 24,
											"value": "C0"
										},
										{
											"begin": 7916,
											"end": 7935,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 3661,
											"end": 3742,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3661,
											"end": 3742,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3661,
											"end": 3742,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3661,
											"end": 3742,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3661,
											"end": 3742,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3661,
											"end": 3742,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3661,
											"end": 3742,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 1
										},
										{
											"begin": 3384,
											"end": 3749,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3384,
											"end": 3749,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3755,
											"end": 3874,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 3755,
											"end": 3874,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3800,
											"end": 3807,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3819,
											"end": 3832,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3835,
											"end": 3845,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 3835,
											"end": 3843,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 3835,
											"end": 3845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3835,
											"end": 3845,
											"name": "tag",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 3835,
											"end": 3845,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3819,
											"end": 3845,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3755,
											"end": 3874,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3755,
											"end": 3874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3103,
											"end": 3200,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 3103,
											"end": 3200,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2021,
											"end": 2026,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2026,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2021,
											"end": 2026,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2007,
											"end": 2017,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 2007,
											"end": 2026,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 1999,
											"end": 2044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "tag",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3175,
											"end": 3180,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3175,
											"end": 3193,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3175,
											"end": 3193,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3175,
											"end": 3193,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3175,
											"end": 3193,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3175,
											"end": 3193,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3175,
											"end": 3193,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3175,
											"end": 3193,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3175,
											"end": 3193,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3175,
											"end": 3193,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3175,
											"end": 3193,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3175,
											"end": 3193,
											"modifierDepth": 1,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3175,
											"end": 3193,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3175,
											"end": 3193,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3103,
											"end": 3200,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4050,
											"end": 4179,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 4050,
											"end": 4179,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2021,
											"end": 2026,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2026,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2021,
											"end": 2026,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2007,
											"end": 2017,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 2007,
											"end": 2026,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 1999,
											"end": 2044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "tag",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 1999,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4125,
											"end": 4135,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 4111,
											"end": 4172,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "30FDCD4F0C28C5DBCBC3F59AA8E2260C7F58AC45BE2A2DCA652999AF89C33E0"
										},
										{
											"begin": 4155,
											"end": 4156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4155,
											"end": 4156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4161,
											"end": 4171,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 4161,
											"end": 4169,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 4161,
											"end": 4171,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4161,
											"end": 4171,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 4161,
											"end": 4171,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4111,
											"end": 4172,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4111,
											"end": 4172,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4111,
											"end": 4172,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8379,
											"end": 8382,
											"name": "PUSH",
											"source": 24,
											"value": "80"
										},
										{
											"begin": 8361,
											"end": 8383,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 8361,
											"end": 8383,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 8361,
											"end": 8383,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 8420,
											"end": 8422,
											"name": "PUSH",
											"source": 24,
											"value": "E"
										},
										{
											"begin": 8399,
											"end": 8418,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 8399,
											"end": 8418,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 8399,
											"end": 8418,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 8392,
											"end": 8423,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "18DBDB9D995C9D081D1BC81413D3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8454,
											"end": 8457,
											"name": "PUSH",
											"source": 24,
											"value": "A0"
										},
										{
											"begin": 8439,
											"end": 8458,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 8439,
											"end": 8458,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 8432,
											"end": 8477,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 8544,
											"end": 8548,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 8529,
											"end": 8549,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 8529,
											"end": 8549,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 8522,
											"end": 8558,
											"name": "SWAP5",
											"source": 24
										},
										{
											"begin": 8522,
											"end": 8558,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 8522,
											"end": 8558,
											"name": "SWAP5",
											"source": 24
										},
										{
											"begin": 8522,
											"end": 8558,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 8574,
											"end": 8592,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 8574,
											"end": 8592,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 8567,
											"end": 8601,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 8567,
											"end": 8601,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 8567,
											"end": 8601,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 8567,
											"end": 8601,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 8617,
											"end": 8635,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 8617,
											"end": 8635,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 8610,
											"end": 8644,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 8509,
											"end": 8512,
											"name": "PUSH",
											"source": 24,
											"value": "C0"
										},
										{
											"begin": 8494,
											"end": 8513,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 4111,
											"end": 4172,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4111,
											"end": 4172,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4111,
											"end": 4172,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4111,
											"end": 4172,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4111,
											"end": 4172,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4111,
											"end": 4172,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4111,
											"end": 4172,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 1
										},
										{
											"begin": 4050,
											"end": 4179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7386,
											"end": 7626,
											"name": "tag",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 7386,
											"end": 7626,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7504,
											"end": 7520,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 7504,
											"end": 7520,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3FABE5A3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7429,
											"end": 7436,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7429,
											"end": 7436,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7504,
											"end": 7520,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7504,
											"end": 7520,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7429,
											"end": 7436,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7429,
											"end": 7436,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7504,
											"end": 7520,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7504,
											"end": 7520,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7550,
											"end": 7575,
											"name": "PUSH",
											"source": 1,
											"value": "FEAF968C"
										},
										{
											"begin": 7550,
											"end": 7575,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7504,
											"end": 7520,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "tag",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 7550,
											"end": 7577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "tag",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 7550,
											"end": 7577,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7531,
											"end": 7577,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7531,
											"end": 7577,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7531,
											"end": 7577,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7531,
											"end": 7577,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7531,
											"end": 7577,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7531,
											"end": 7577,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7602,
											"end": 7607,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7610,
											"end": 7618,
											"name": "PUSH",
											"source": 1,
											"value": "2540BE400"
										},
										{
											"begin": 7602,
											"end": 7618,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 7602,
											"end": 7618,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7602,
											"end": 7618,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7602,
											"end": 7618,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 7602,
											"end": 7618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7602,
											"end": 7618,
											"name": "tag",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 7602,
											"end": 7618,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7587,
											"end": 7619,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7587,
											"end": 7619,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7587,
											"end": 7619,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7587,
											"end": 7619,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7386,
											"end": 7626,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7386,
											"end": 7626,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4665,
											"end": 4852,
											"name": "tag",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 4665,
											"end": 4852,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4775,
											"end": 4782,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4835,
											"end": 4844,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4809,
											"end": 4832,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "256"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4809,
											"end": 4832,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4809,
											"end": 4832,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4809,
											"end": 4817,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4809,
											"end": 4832,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4809,
											"end": 4832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4809,
											"end": 4832,
											"name": "tag",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 4809,
											"end": 4832,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4809,
											"end": 4844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 4809,
											"end": 4844,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4809,
											"end": 4844,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4809,
											"end": 4844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 4809,
											"end": 4844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4809,
											"end": 4844,
											"name": "tag",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 4809,
											"end": 4844,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4794,
											"end": 4845,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4665,
											"end": 4852,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4665,
											"end": 4852,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 141,
											"name": "tag",
											"source": 24,
											"value": "258"
										},
										{
											"begin": 14,
											"end": 141,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 75,
											"end": 85,
											"name": "PUSH",
											"source": 24,
											"value": "4E487B71"
										},
										{
											"begin": 70,
											"end": 73,
											"name": "PUSH",
											"source": 24,
											"value": "E0"
										},
										{
											"begin": 66,
											"end": 86,
											"name": "SHL",
											"source": 24
										},
										{
											"begin": 63,
											"end": 64,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 56,
											"end": 87,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 106,
											"end": 110,
											"name": "PUSH",
											"source": 24,
											"value": "11"
										},
										{
											"begin": 103,
											"end": 104,
											"name": "PUSH",
											"source": 24,
											"value": "4"
										},
										{
											"begin": 96,
											"end": 111,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 130,
											"end": 134,
											"name": "PUSH",
											"source": 24,
											"value": "24"
										},
										{
											"begin": 127,
											"end": 128,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 120,
											"end": 135,
											"name": "REVERT",
											"source": 24
										},
										{
											"begin": 146,
											"end": 271,
											"name": "tag",
											"source": 24,
											"value": "42"
										},
										{
											"begin": 146,
											"end": 271,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 211,
											"end": 220,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 211,
											"end": 220,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 211,
											"end": 220,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 232,
											"end": 242,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 232,
											"end": 242,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 232,
											"end": 242,
											"name": "GT",
											"source": 24
										},
										{
											"begin": 229,
											"end": 265,
											"name": "ISZERO",
											"source": 24
										},
										{
											"begin": 229,
											"end": 265,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "236"
										},
										{
											"begin": 229,
											"end": 265,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 245,
											"end": 263,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "236"
										},
										{
											"begin": 245,
											"end": 263,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "258"
										},
										{
											"begin": 245,
											"end": 263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 276,
											"end": 444,
											"name": "tag",
											"source": 24,
											"value": "44"
										},
										{
											"begin": 276,
											"end": 444,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 349,
											"end": 358,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 349,
											"end": 358,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 349,
											"end": 358,
											"name": "MUL",
											"source": 24
										},
										{
											"begin": 380,
											"end": 389,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 380,
											"end": 389,
											"name": "ISZERO",
											"source": 24
										},
										{
											"begin": 397,
											"end": 412,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 397,
											"end": 412,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 397,
											"end": 412,
											"name": "DIV",
											"source": 24
										},
										{
											"begin": 391,
											"end": 413,
											"name": "DUP5",
											"source": 24
										},
										{
											"begin": 391,
											"end": 413,
											"name": "EQ",
											"source": 24
										},
										{
											"begin": 377,
											"end": 414,
											"name": "OR",
											"source": 24
										},
										{
											"begin": 367,
											"end": 438,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "236"
										},
										{
											"begin": 367,
											"end": 438,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 418,
											"end": 436,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "236"
										},
										{
											"begin": 418,
											"end": 436,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "258"
										},
										{
											"begin": 418,
											"end": 436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 449,
											"end": 666,
											"name": "tag",
											"source": 24,
											"value": "46"
										},
										{
											"begin": 449,
											"end": 666,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 489,
											"end": 490,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 515,
											"end": 516,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 505,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "274"
										},
										{
											"begin": 505,
											"end": 637,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 559,
											"end": 569,
											"name": "PUSH",
											"source": 24,
											"value": "4E487B71"
										},
										{
											"begin": 554,
											"end": 557,
											"name": "PUSH",
											"source": 24,
											"value": "E0"
										},
										{
											"begin": 550,
											"end": 570,
											"name": "SHL",
											"source": 24
										},
										{
											"begin": 547,
											"end": 548,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 540,
											"end": 571,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 594,
											"end": 598,
											"name": "PUSH",
											"source": 24,
											"value": "12"
										},
										{
											"begin": 591,
											"end": 592,
											"name": "PUSH",
											"source": 24,
											"value": "4"
										},
										{
											"begin": 584,
											"end": 599,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 622,
											"end": 626,
											"name": "PUSH",
											"source": 24,
											"value": "24"
										},
										{
											"begin": 619,
											"end": 620,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 612,
											"end": 627,
											"name": "REVERT",
											"source": 24
										},
										{
											"begin": 505,
											"end": 637,
											"name": "tag",
											"source": 24,
											"value": "274"
										},
										{
											"begin": 505,
											"end": 637,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 651,
											"end": 660,
											"name": "DIV",
											"source": 24
										},
										{
											"begin": 651,
											"end": 660,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 449,
											"end": 666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 1061,
											"end": 1188,
											"name": "tag",
											"source": 24,
											"value": "259"
										},
										{
											"begin": 1061,
											"end": 1188,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 1122,
											"end": 1132,
											"name": "PUSH",
											"source": 24,
											"value": "4E487B71"
										},
										{
											"begin": 1117,
											"end": 1120,
											"name": "PUSH",
											"source": 24,
											"value": "E0"
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SHL",
											"source": 24
										},
										{
											"begin": 1110,
											"end": 1111,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 1103,
											"end": 1134,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 1153,
											"end": 1157,
											"name": "PUSH",
											"source": 24,
											"value": "41"
										},
										{
											"begin": 1150,
											"end": 1151,
											"name": "PUSH",
											"source": 24,
											"value": "4"
										},
										{
											"begin": 1143,
											"end": 1158,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 1177,
											"end": 1181,
											"name": "PUSH",
											"source": 24,
											"value": "24"
										},
										{
											"begin": 1174,
											"end": 1175,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 1167,
											"end": 1182,
											"name": "REVERT",
											"source": 24
										},
										{
											"begin": 1193,
											"end": 1912,
											"name": "tag",
											"source": 24,
											"value": "260"
										},
										{
											"begin": 1193,
											"end": 1912,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 1236,
											"end": 1241,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 1289,
											"end": 1292,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 1282,
											"end": 1286,
											"name": "PUSH",
											"source": 24,
											"value": "1F"
										},
										{
											"begin": 1274,
											"end": 1280,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 1270,
											"end": 1287,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 1266,
											"end": 1293,
											"name": "SLT",
											"source": 24
										},
										{
											"begin": 1256,
											"end": 1311,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "279"
										},
										{
											"begin": 1256,
											"end": 1311,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 1307,
											"end": 1308,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 1304,
											"end": 1305,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 1297,
											"end": 1309,
											"name": "REVERT",
											"source": 24
										},
										{
											"begin": 1256,
											"end": 1311,
											"name": "tag",
											"source": 24,
											"value": "279"
										},
										{
											"begin": 1256,
											"end": 1311,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 1343,
											"end": 1349,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 1330,
											"end": 1350,
											"name": "CALLDATALOAD",
											"source": 24
										},
										{
											"begin": 1369,
											"end": 1387,
											"name": "PUSH",
											"source": 24,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1406,
											"end": 1408,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 1402,
											"end": 1404,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 1399,
											"end": 1409,
											"name": "GT",
											"source": 24
										},
										{
											"begin": 1396,
											"end": 1432,
											"name": "ISZERO",
											"source": 24
										},
										{
											"begin": 1396,
											"end": 1432,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "281"
										},
										{
											"begin": 1396,
											"end": 1432,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "281"
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "259"
										},
										{
											"begin": 1412,
											"end": 1430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "tag",
											"source": 24,
											"value": "281"
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 1487,
											"end": 1489,
											"name": "PUSH",
											"source": 24,
											"value": "40"
										},
										{
											"begin": 1481,
											"end": 1490,
											"name": "MLOAD",
											"source": 24
										},
										{
											"begin": 1455,
											"end": 1457,
											"name": "PUSH",
											"source": 24,
											"value": "1F"
										},
										{
											"begin": 1541,
											"end": 1554,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 1541,
											"end": 1554,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1537,
											"end": 1559,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 1537,
											"end": 1559,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 1537,
											"end": 1559,
											"name": "AND",
											"source": 24
										},
										{
											"begin": 1561,
											"end": 1563,
											"name": "PUSH",
											"source": 24,
											"value": "3F"
										},
										{
											"begin": 1533,
											"end": 1564,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 1529,
											"end": 1569,
											"name": "AND",
											"source": 24
										},
										{
											"begin": 1517,
											"end": 1570,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 1517,
											"end": 1570,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 1517,
											"end": 1570,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 1585,
											"end": 1603,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 1585,
											"end": 1603,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 1585,
											"end": 1603,
											"name": "GT",
											"source": 24
										},
										{
											"begin": 1605,
											"end": 1627,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 1605,
											"end": 1627,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 1605,
											"end": 1627,
											"name": "LT",
											"source": 24
										},
										{
											"begin": 1582,
											"end": 1628,
											"name": "OR",
											"source": 24
										},
										{
											"begin": 1579,
											"end": 1651,
											"name": "ISZERO",
											"source": 24
										},
										{
											"begin": 1579,
											"end": 1651,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "283"
										},
										{
											"begin": 1579,
											"end": 1651,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 1631,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "283"
										},
										{
											"begin": 1631,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "259"
										},
										{
											"begin": 1631,
											"end": 1649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 1631,
											"end": 1649,
											"name": "tag",
											"source": 24,
											"value": "283"
										},
										{
											"begin": 1631,
											"end": 1649,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 1671,
											"end": 1681,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 1667,
											"end": 1669,
											"name": "PUSH",
											"source": 24,
											"value": "40"
										},
										{
											"begin": 1660,
											"end": 1682,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 1706,
											"end": 1708,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 1698,
											"end": 1704,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 1691,
											"end": 1709,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 1752,
											"end": 1755,
											"name": "DUP7",
											"source": 24
										},
										{
											"begin": 1745,
											"end": 1749,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 1740,
											"end": 1742,
											"name": "DUP6",
											"source": 24
										},
										{
											"begin": 1732,
											"end": 1738,
											"name": "DUP9",
											"source": 24
										},
										{
											"begin": 1728,
											"end": 1743,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 1724,
											"end": 1750,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 1721,
											"end": 1756,
											"name": "GT",
											"source": 24
										},
										{
											"begin": 1718,
											"end": 1773,
											"name": "ISZERO",
											"source": 24
										},
										{
											"begin": 1718,
											"end": 1773,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "284"
										},
										{
											"begin": 1718,
											"end": 1773,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 1769,
											"end": 1770,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 1766,
											"end": 1767,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 1759,
											"end": 1771,
											"name": "REVERT",
											"source": 24
										},
										{
											"begin": 1718,
											"end": 1773,
											"name": "tag",
											"source": 24,
											"value": "284"
										},
										{
											"begin": 1718,
											"end": 1773,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 1833,
											"end": 1835,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 1826,
											"end": 1830,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 1818,
											"end": 1824,
											"name": "DUP8",
											"source": 24
										},
										{
											"begin": 1814,
											"end": 1831,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 1807,
											"end": 1811,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 1799,
											"end": 1805,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 1795,
											"end": 1812,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 1782,
											"end": 1836,
											"name": "CALLDATACOPY",
											"source": 24
										},
										{
											"begin": 1880,
											"end": 1881,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 1873,
											"end": 1877,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 1868,
											"end": 1870,
											"name": "DUP6",
											"source": 24
										},
										{
											"begin": 1860,
											"end": 1866,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 1856,
											"end": 1871,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 1852,
											"end": 1878,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 1845,
											"end": 1882,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 1900,
											"end": 1906,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 1891,
											"end": 1906,
											"name": "SWAP5",
											"source": 24
										},
										{
											"begin": 1891,
											"end": 1906,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 1891,
											"end": 1906,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 1891,
											"end": 1906,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 1891,
											"end": 1906,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 1891,
											"end": 1906,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 1193,
											"end": 1912,
											"name": "SWAP3",
											"source": 24
										},
										{
											"begin": 1193,
											"end": 1912,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 1193,
											"end": 1912,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 1193,
											"end": 1912,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 1193,
											"end": 1912,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 1917,
											"end": 2307,
											"name": "tag",
											"source": 24,
											"value": "75"
										},
										{
											"begin": 1917,
											"end": 2307,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 1995,
											"end": 2001,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 2003,
											"end": 2009,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 2056,
											"end": 2058,
											"name": "PUSH",
											"source": 24,
											"value": "40"
										},
										{
											"begin": 2044,
											"end": 2053,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 2035,
											"end": 2042,
											"name": "DUP6",
											"source": 24
										},
										{
											"begin": 2031,
											"end": 2054,
											"name": "SUB",
											"source": 24
										},
										{
											"begin": 2027,
											"end": 2059,
											"name": "SLT",
											"source": 24
										},
										{
											"begin": 2024,
											"end": 2076,
											"name": "ISZERO",
											"source": 24
										},
										{
											"begin": 2024,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "286"
										},
										{
											"begin": 2024,
											"end": 2076,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 2072,
											"end": 2073,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 2069,
											"end": 2070,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 2062,
											"end": 2074,
											"name": "REVERT",
											"source": 24
										},
										{
											"begin": 2024,
											"end": 2076,
											"name": "tag",
											"source": 24,
											"value": "286"
										},
										{
											"begin": 2024,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 2112,
											"end": 2121,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 2099,
											"end": 2122,
											"name": "CALLDATALOAD",
											"source": 24
										},
										{
											"begin": 2145,
											"end": 2163,
											"name": "PUSH",
											"source": 24,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2137,
											"end": 2143,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 2134,
											"end": 2164,
											"name": "GT",
											"source": 24
										},
										{
											"begin": 2131,
											"end": 2181,
											"name": "ISZERO",
											"source": 24
										},
										{
											"begin": 2131,
											"end": 2181,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "287"
										},
										{
											"begin": 2131,
											"end": 2181,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 2177,
											"end": 2178,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 2174,
											"end": 2175,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 2167,
											"end": 2179,
											"name": "REVERT",
											"source": 24
										},
										{
											"begin": 2131,
											"end": 2181,
											"name": "tag",
											"source": 24,
											"value": "287"
										},
										{
											"begin": 2131,
											"end": 2181,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 2200,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "288"
										},
										{
											"begin": 2242,
											"end": 2249,
											"name": "DUP6",
											"source": 24
										},
										{
											"begin": 2233,
											"end": 2239,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 2222,
											"end": 2231,
											"name": "DUP7",
											"source": 24
										},
										{
											"begin": 2218,
											"end": 2240,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 2200,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "260"
										},
										{
											"begin": 2200,
											"end": 2250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 2200,
											"end": 2250,
											"name": "tag",
											"source": 24,
											"value": "288"
										},
										{
											"begin": 2200,
											"end": 2250,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 2190,
											"end": 2250,
											"name": "SWAP6",
											"source": 24
										},
										{
											"begin": 2297,
											"end": 2299,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 2282,
											"end": 2300,
											"name": "SWAP5",
											"source": 24
										},
										{
											"begin": 2282,
											"end": 2300,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 2282,
											"end": 2300,
											"name": "SWAP5",
											"source": 24
										},
										{
											"begin": 2282,
											"end": 2300,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 2269,
											"end": 2301,
											"name": "CALLDATALOAD",
											"source": 24
										},
										{
											"begin": 2269,
											"end": 2301,
											"name": "SWAP5",
											"source": 24
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1917,
											"end": 2307,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 2312,
											"end": 2443,
											"name": "tag",
											"source": 24,
											"value": "261"
										},
										{
											"begin": 2312,
											"end": 2443,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2387,
											"end": 2418,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 2387,
											"end": 2418,
											"name": "AND",
											"source": 24
										},
										{
											"begin": 2377,
											"end": 2419,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 2377,
											"end": 2419,
											"name": "EQ",
											"source": 24
										},
										{
											"begin": 2367,
											"end": 2437,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "208"
										},
										{
											"begin": 2367,
											"end": 2437,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 2433,
											"end": 2434,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 2430,
											"end": 2431,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 2423,
											"end": 2435,
											"name": "REVERT",
											"source": 24
										},
										{
											"begin": 2448,
											"end": 2763,
											"name": "tag",
											"source": 24,
											"value": "80"
										},
										{
											"begin": 2448,
											"end": 2763,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 2516,
											"end": 2522,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 2524,
											"end": 2530,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 2577,
											"end": 2579,
											"name": "PUSH",
											"source": 24,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2574,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 2556,
											"end": 2563,
											"name": "DUP6",
											"source": 24
										},
										{
											"begin": 2552,
											"end": 2575,
											"name": "SUB",
											"source": 24
										},
										{
											"begin": 2548,
											"end": 2580,
											"name": "SLT",
											"source": 24
										},
										{
											"begin": 2545,
											"end": 2597,
											"name": "ISZERO",
											"source": 24
										},
										{
											"begin": 2545,
											"end": 2597,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "292"
										},
										{
											"begin": 2545,
											"end": 2597,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 2593,
											"end": 2594,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 2590,
											"end": 2591,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 2583,
											"end": 2595,
											"name": "REVERT",
											"source": 24
										},
										{
											"begin": 2545,
											"end": 2597,
											"name": "tag",
											"source": 24,
											"value": "292"
										},
										{
											"begin": 2545,
											"end": 2597,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 2629,
											"end": 2638,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 2616,
											"end": 2639,
											"name": "CALLDATALOAD",
											"source": 24
										},
										{
											"begin": 2606,
											"end": 2639,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 2606,
											"end": 2639,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 2689,
											"end": 2691,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 2678,
											"end": 2687,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 2674,
											"end": 2692,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 2661,
											"end": 2693,
											"name": "CALLDATALOAD",
											"source": 24
										},
										{
											"begin": 2702,
											"end": 2733,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "293"
										},
										{
											"begin": 2727,
											"end": 2732,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 2702,
											"end": 2733,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "261"
										},
										{
											"begin": 2702,
											"end": 2733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 2702,
											"end": 2733,
											"name": "tag",
											"source": 24,
											"value": "293"
										},
										{
											"begin": 2702,
											"end": 2733,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 2752,
											"end": 2757,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 2742,
											"end": 2757,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 2742,
											"end": 2757,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 2742,
											"end": 2757,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 2448,
											"end": 2763,
											"name": "SWAP3",
											"source": 24
										},
										{
											"begin": 2448,
											"end": 2763,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 2448,
											"end": 2763,
											"name": "SWAP3",
											"source": 24
										},
										{
											"begin": 2448,
											"end": 2763,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 2448,
											"end": 2763,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 2448,
											"end": 2763,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 2960,
											"end": 3140,
											"name": "tag",
											"source": 24,
											"value": "90"
										},
										{
											"begin": 2960,
											"end": 3140,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 3019,
											"end": 3025,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 3072,
											"end": 3074,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 3060,
											"end": 3069,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 3051,
											"end": 3058,
											"name": "DUP5",
											"source": 24
										},
										{
											"begin": 3047,
											"end": 3070,
											"name": "SUB",
											"source": 24
										},
										{
											"begin": 3043,
											"end": 3075,
											"name": "SLT",
											"source": 24
										},
										{
											"begin": 3040,
											"end": 3092,
											"name": "ISZERO",
											"source": 24
										},
										{
											"begin": 3040,
											"end": 3092,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "296"
										},
										{
											"begin": 3040,
											"end": 3092,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 3088,
											"end": 3089,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 3085,
											"end": 3086,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 3078,
											"end": 3090,
											"name": "REVERT",
											"source": 24
										},
										{
											"begin": 3040,
											"end": 3092,
											"name": "tag",
											"source": 24,
											"value": "296"
										},
										{
											"begin": 3040,
											"end": 3092,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3111,
											"end": 3134,
											"name": "CALLDATALOAD",
											"source": 24
										},
										{
											"begin": 3111,
											"end": 3134,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 2960,
											"end": 3140,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2960,
											"end": 3140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 3145,
											"end": 3467,
											"name": "tag",
											"source": 24,
											"value": "99"
										},
										{
											"begin": 3145,
											"end": 3467,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 3214,
											"end": 3220,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 3267,
											"end": 3269,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 3255,
											"end": 3264,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 3246,
											"end": 3253,
											"name": "DUP5",
											"source": 24
										},
										{
											"begin": 3242,
											"end": 3265,
											"name": "SUB",
											"source": 24
										},
										{
											"begin": 3238,
											"end": 3270,
											"name": "SLT",
											"source": 24
										},
										{
											"begin": 3235,
											"end": 3287,
											"name": "ISZERO",
											"source": 24
										},
										{
											"begin": 3235,
											"end": 3287,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "298"
										},
										{
											"begin": 3235,
											"end": 3287,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 3283,
											"end": 3284,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 3280,
											"end": 3281,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 3273,
											"end": 3285,
											"name": "REVERT",
											"source": 24
										},
										{
											"begin": 3235,
											"end": 3287,
											"name": "tag",
											"source": 24,
											"value": "298"
										},
										{
											"begin": 3235,
											"end": 3287,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 3323,
											"end": 3332,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 3310,
											"end": 3333,
											"name": "CALLDATALOAD",
											"source": 24
										},
										{
											"begin": 3356,
											"end": 3374,
											"name": "PUSH",
											"source": 24,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3348,
											"end": 3354,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 3345,
											"end": 3375,
											"name": "GT",
											"source": 24
										},
										{
											"begin": 3342,
											"end": 3392,
											"name": "ISZERO",
											"source": 24
										},
										{
											"begin": 3342,
											"end": 3392,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "299"
										},
										{
											"begin": 3342,
											"end": 3392,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 3388,
											"end": 3389,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 3385,
											"end": 3386,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 3378,
											"end": 3390,
											"name": "REVERT",
											"source": 24
										},
										{
											"begin": 3342,
											"end": 3392,
											"name": "tag",
											"source": 24,
											"value": "299"
										},
										{
											"begin": 3342,
											"end": 3392,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 3411,
											"end": 3461,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "257"
										},
										{
											"begin": 3453,
											"end": 3460,
											"name": "DUP5",
											"source": 24
										},
										{
											"begin": 3444,
											"end": 3450,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 3433,
											"end": 3442,
											"name": "DUP6",
											"source": 24
										},
										{
											"begin": 3429,
											"end": 3451,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 3411,
											"end": 3461,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "260"
										},
										{
											"begin": 3411,
											"end": 3461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 3472,
											"end": 3895,
											"name": "tag",
											"source": 24,
											"value": "262"
										},
										{
											"begin": 3472,
											"end": 3895,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 3514,
											"end": 3517,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 3552,
											"end": 3557,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 3546,
											"end": 3558,
											"name": "MLOAD",
											"source": 24
										},
										{
											"begin": 3579,
											"end": 3585,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 3574,
											"end": 3577,
											"name": "DUP5",
											"source": 24
										},
										{
											"begin": 3567,
											"end": 3586,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 3604,
											"end": 3605,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 3614,
											"end": 3776,
											"name": "tag",
											"source": 24,
											"value": "302"
										},
										{
											"begin": 3614,
											"end": 3776,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 3628,
											"end": 3634,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 3625,
											"end": 3626,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 3622,
											"end": 3635,
											"name": "LT",
											"source": 24
										},
										{
											"begin": 3614,
											"end": 3776,
											"name": "ISZERO",
											"source": 24
										},
										{
											"begin": 3614,
											"end": 3776,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "304"
										},
										{
											"begin": 3614,
											"end": 3776,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 3690,
											"end": 3694,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 3746,
											"end": 3759,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 3746,
											"end": 3759,
											"name": "DUP6",
											"source": 24
										},
										{
											"begin": 3746,
											"end": 3759,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 3742,
											"end": 3764,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 3742,
											"end": 3764,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 3736,
											"end": 3765,
											"name": "MLOAD",
											"source": 24
										},
										{
											"begin": 3718,
											"end": 3729,
											"name": "DUP7",
											"source": 24
										},
										{
											"begin": 3718,
											"end": 3729,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 3718,
											"end": 3729,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 3714,
											"end": 3734,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 3714,
											"end": 3734,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 3707,
											"end": 3766,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 3643,
											"end": 3655,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 3614,
											"end": 3776,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "302"
										},
										{
											"begin": 3614,
											"end": 3776,
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 3614,
											"end": 3776,
											"name": "tag",
											"source": 24,
											"value": "304"
										},
										{
											"begin": 3614,
											"end": 3776,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 3618,
											"end": 3621,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 3821,
											"end": 3822,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 3814,
											"end": 3818,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 3805,
											"end": 3811,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 3800,
											"end": 3803,
											"name": "DUP7",
											"source": 24
										},
										{
											"begin": 3796,
											"end": 3812,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 3792,
											"end": 3819,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 3785,
											"end": 3823,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 3884,
											"end": 3888,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 3877,
											"end": 3879,
											"name": "PUSH",
											"source": 24,
											"value": "1F"
										},
										{
											"begin": 3873,
											"end": 3880,
											"name": "NOT",
											"source": 24
										},
										{
											"begin": 3868,
											"end": 3870,
											"name": "PUSH",
											"source": 24,
											"value": "1F"
										},
										{
											"begin": 3860,
											"end": 3866,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 3856,
											"end": 3871,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 3852,
											"end": 3881,
											"name": "AND",
											"source": 24
										},
										{
											"begin": 3847,
											"end": 3850,
											"name": "DUP6",
											"source": 24
										},
										{
											"begin": 3843,
											"end": 3882,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 3839,
											"end": 3889,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 3832,
											"end": 3889,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 3832,
											"end": 3889,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 3832,
											"end": 3889,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 3472,
											"end": 3895,
											"name": "SWAP3",
											"source": 24
										},
										{
											"begin": 3472,
											"end": 3895,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 3472,
											"end": 3895,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 3472,
											"end": 3895,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 3472,
											"end": 3895,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 3900,
											"end": 4120,
											"name": "tag",
											"source": 24,
											"value": "110"
										},
										{
											"begin": 3900,
											"end": 4120,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 4049,
											"end": 4051,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 4038,
											"end": 4047,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 4031,
											"end": 4052,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 4012,
											"end": 4016,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 4069,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "306"
										},
										{
											"begin": 4110,
											"end": 4112,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 4099,
											"end": 4108,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 4095,
											"end": 4113,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 4087,
											"end": 4093,
											"name": "DUP5",
											"source": 24
										},
										{
											"begin": 4069,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "262"
										},
										{
											"begin": 4069,
											"end": 4114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 4069,
											"end": 4114,
											"name": "tag",
											"source": 24,
											"value": "306"
										},
										{
											"begin": 4069,
											"end": 4114,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 4061,
											"end": 4114,
											"name": "SWAP4",
											"source": 24
										},
										{
											"begin": 3900,
											"end": 4120,
											"name": "SWAP3",
											"source": 24
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3900,
											"end": 4120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 4125,
											"end": 4372,
											"name": "tag",
											"source": 24,
											"value": "130"
										},
										{
											"begin": 4125,
											"end": 4372,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 4184,
											"end": 4190,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 4237,
											"end": 4239,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 4225,
											"end": 4234,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 4216,
											"end": 4223,
											"name": "DUP5",
											"source": 24
										},
										{
											"begin": 4212,
											"end": 4235,
											"name": "SUB",
											"source": 24
										},
										{
											"begin": 4208,
											"end": 4240,
											"name": "SLT",
											"source": 24
										},
										{
											"begin": 4205,
											"end": 4257,
											"name": "ISZERO",
											"source": 24
										},
										{
											"begin": 4205,
											"end": 4257,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "308"
										},
										{
											"begin": 4205,
											"end": 4257,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 4253,
											"end": 4254,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 4250,
											"end": 4251,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 4243,
											"end": 4255,
											"name": "REVERT",
											"source": 24
										},
										{
											"begin": 4205,
											"end": 4257,
											"name": "tag",
											"source": 24,
											"value": "308"
										},
										{
											"begin": 4205,
											"end": 4257,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 4292,
											"end": 4301,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 4279,
											"end": 4302,
											"name": "CALLDATALOAD",
											"source": 24
										},
										{
											"begin": 4311,
											"end": 4342,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "306"
										},
										{
											"begin": 4336,
											"end": 4341,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 4311,
											"end": 4342,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "261"
										},
										{
											"begin": 4311,
											"end": 4342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 4377,
											"end": 4714,
											"name": "tag",
											"source": 24,
											"value": "178"
										},
										{
											"begin": 4377,
											"end": 4714,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 4579,
											"end": 4581,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 4561,
											"end": 4582,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 4561,
											"end": 4582,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 4561,
											"end": 4582,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 4618,
											"end": 4620,
											"name": "PUSH",
											"source": 24,
											"value": "D"
										},
										{
											"begin": 4598,
											"end": 4616,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 4598,
											"end": 4616,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 4598,
											"end": 4616,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 4591,
											"end": 4621,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2737BA103A34329037BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "99"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4652,
											"end": 4654,
											"name": "PUSH",
											"source": 24,
											"value": "40"
										},
										{
											"begin": 4637,
											"end": 4655,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 4637,
											"end": 4655,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 4630,
											"end": 4673,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 4705,
											"end": 4707,
											"name": "PUSH",
											"source": 24,
											"value": "60"
										},
										{
											"begin": 4690,
											"end": 4708,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 4690,
											"end": 4708,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 4377,
											"end": 4714,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 4719,
											"end": 5162,
											"name": "tag",
											"source": 24,
											"value": "187"
										},
										{
											"begin": 4719,
											"end": 5162,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 4960,
											"end": 4963,
											"name": "PUSH",
											"source": 24,
											"value": "80"
										},
										{
											"begin": 4949,
											"end": 4958,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 4942,
											"end": 4964,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 4923,
											"end": 4927,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 4981,
											"end": 5027,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "312"
										},
										{
											"begin": 5022,
											"end": 5025,
											"name": "PUSH",
											"source": 24,
											"value": "80"
										},
										{
											"begin": 5011,
											"end": 5020,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 5007,
											"end": 5026,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 4999,
											"end": 5005,
											"name": "DUP8",
											"source": 24
										},
										{
											"begin": 4981,
											"end": 5027,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "262"
										},
										{
											"begin": 4981,
											"end": 5027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 4981,
											"end": 5027,
											"name": "tag",
											"source": 24,
											"value": "312"
										},
										{
											"begin": 4981,
											"end": 5027,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 5058,
											"end": 5060,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 5043,
											"end": 5061,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 5043,
											"end": 5061,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 5036,
											"end": 5070,
											"name": "SWAP6",
											"source": 24
										},
										{
											"begin": 5036,
											"end": 5070,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 5036,
											"end": 5070,
											"name": "SWAP6",
											"source": 24
										},
										{
											"begin": 5036,
											"end": 5070,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5101,
											"end": 5103,
											"name": "PUSH",
											"source": 24,
											"value": "40"
										},
										{
											"begin": 5086,
											"end": 5104,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 5086,
											"end": 5104,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 5079,
											"end": 5113,
											"name": "SWAP3",
											"source": 24
										},
										{
											"begin": 5079,
											"end": 5113,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 5079,
											"end": 5113,
											"name": "SWAP3",
											"source": 24
										},
										{
											"begin": 5079,
											"end": 5113,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 5144,
											"end": 5146,
											"name": "PUSH",
											"source": 24,
											"value": "60"
										},
										{
											"begin": 5129,
											"end": 5147,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 5129,
											"end": 5147,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 5129,
											"end": 5147,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 5122,
											"end": 5156,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 4973,
											"end": 5027,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 4719,
											"end": 5162,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4719,
											"end": 5162,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 5167,
											"end": 5330,
											"name": "tag",
											"source": 24,
											"value": "263"
										},
										{
											"begin": 5167,
											"end": 5330,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 5245,
											"end": 5258,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 5245,
											"end": 5258,
											"name": "MLOAD",
											"source": 24
										},
										{
											"begin": 5298,
											"end": 5304,
											"name": "PUSH",
											"source": 24,
											"value": "FFFF"
										},
										{
											"begin": 5287,
											"end": 5305,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 5287,
											"end": 5305,
											"name": "AND",
											"source": 24
										},
										{
											"begin": 5277,
											"end": 5306,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 5277,
											"end": 5306,
											"name": "EQ",
											"source": 24
										},
										{
											"begin": 5267,
											"end": 5324,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "314"
										},
										{
											"begin": 5267,
											"end": 5324,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 5320,
											"end": 5321,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 5317,
											"end": 5318,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 5310,
											"end": 5322,
											"name": "REVERT",
											"source": 24
										},
										{
											"begin": 5267,
											"end": 5324,
											"name": "tag",
											"source": 24,
											"value": "314"
										},
										{
											"begin": 5267,
											"end": 5324,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 5167,
											"end": 5330,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 5167,
											"end": 5330,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 5167,
											"end": 5330,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 5167,
											"end": 5330,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 5335,
											"end": 6321,
											"name": "tag",
											"source": 24,
											"value": "192"
										},
										{
											"begin": 5335,
											"end": 6321,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 5449,
											"end": 5455,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 5457,
											"end": 5463,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 5465,
											"end": 5471,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 5473,
											"end": 5479,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 5481,
											"end": 5487,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 5489,
											"end": 5495,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 5497,
											"end": 5503,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 5550,
											"end": 5553,
											"name": "PUSH",
											"source": 24,
											"value": "E0"
										},
										{
											"begin": 5538,
											"end": 5547,
											"name": "DUP9",
											"source": 24
										},
										{
											"begin": 5529,
											"end": 5536,
											"name": "DUP11",
											"source": 24
										},
										{
											"begin": 5525,
											"end": 5548,
											"name": "SUB",
											"source": 24
										},
										{
											"begin": 5521,
											"end": 5554,
											"name": "SLT",
											"source": 24
										},
										{
											"begin": 5518,
											"end": 5571,
											"name": "ISZERO",
											"source": 24
										},
										{
											"begin": 5518,
											"end": 5571,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "316"
										},
										{
											"begin": 5518,
											"end": 5571,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 5567,
											"end": 5568,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 5564,
											"end": 5565,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 5557,
											"end": 5569,
											"name": "REVERT",
											"source": 24
										},
										{
											"begin": 5518,
											"end": 5571,
											"name": "tag",
											"source": 24,
											"value": "316"
										},
										{
											"begin": 5518,
											"end": 5571,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 5599,
											"end": 5608,
											"name": "DUP8",
											"source": 24
										},
										{
											"begin": 5593,
											"end": 5609,
											"name": "MLOAD",
											"source": 24
										},
										{
											"begin": 5618,
											"end": 5649,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "317"
										},
										{
											"begin": 5643,
											"end": 5648,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 5618,
											"end": 5649,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "261"
										},
										{
											"begin": 5618,
											"end": 5649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 5618,
											"end": 5649,
											"name": "tag",
											"source": 24,
											"value": "317"
										},
										{
											"begin": 5618,
											"end": 5649,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 5668,
											"end": 5673,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 5658,
											"end": 5673,
											"name": "SWAP8",
											"source": 24
										},
										{
											"begin": 5658,
											"end": 5673,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 5658,
											"end": 5673,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 5718,
											"end": 5720,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 5707,
											"end": 5716,
											"name": "DUP9",
											"source": 24
										},
										{
											"begin": 5703,
											"end": 5721,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 5697,
											"end": 5722,
											"name": "MLOAD",
											"source": 24
										},
										{
											"begin": 5767,
											"end": 5774,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 5764,
											"end": 5765,
											"name": "PUSH",
											"source": 24,
											"value": "2"
										},
										{
											"begin": 5753,
											"end": 5775,
											"name": "SIGNEXTEND",
											"source": 24
										},
										{
											"begin": 5744,
											"end": 5751,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 5741,
											"end": 5776,
											"name": "EQ",
											"source": 24
										},
										{
											"begin": 5731,
											"end": 5794,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "318"
										},
										{
											"begin": 5731,
											"end": 5794,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 5790,
											"end": 5791,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 5787,
											"end": 5788,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 5780,
											"end": 5792,
											"name": "REVERT",
											"source": 24
										},
										{
											"begin": 5731,
											"end": 5794,
											"name": "tag",
											"source": 24,
											"value": "318"
										},
										{
											"begin": 5731,
											"end": 5794,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 5813,
											"end": 5820,
											"name": "SWAP6",
											"source": 24
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5839,
											"end": 5887,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "319"
										},
										{
											"begin": 5883,
											"end": 5885,
											"name": "PUSH",
											"source": 24,
											"value": "40"
										},
										{
											"begin": 5868,
											"end": 5886,
											"name": "DUP10",
											"source": 24
										},
										{
											"begin": 5868,
											"end": 5886,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 5839,
											"end": 5887,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "263"
										},
										{
											"begin": 5839,
											"end": 5887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 5839,
											"end": 5887,
											"name": "tag",
											"source": 24,
											"value": "319"
										},
										{
											"begin": 5839,
											"end": 5887,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 5829,
											"end": 5887,
											"name": "SWAP5",
											"source": 24
										},
										{
											"begin": 5829,
											"end": 5887,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 5906,
											"end": 5954,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "320"
										},
										{
											"begin": 5950,
											"end": 5952,
											"name": "PUSH",
											"source": 24,
											"value": "60"
										},
										{
											"begin": 5939,
											"end": 5948,
											"name": "DUP10",
											"source": 24
										},
										{
											"begin": 5935,
											"end": 5953,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 5906,
											"end": 5954,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "263"
										},
										{
											"begin": 5906,
											"end": 5954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 5906,
											"end": 5954,
											"name": "tag",
											"source": 24,
											"value": "320"
										},
										{
											"begin": 5906,
											"end": 5954,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 5896,
											"end": 5954,
											"name": "SWAP4",
											"source": 24
										},
										{
											"begin": 5896,
											"end": 5954,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 5973,
											"end": 6022,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "321"
										},
										{
											"begin": 6017,
											"end": 6020,
											"name": "PUSH",
											"source": 24,
											"value": "80"
										},
										{
											"begin": 6006,
											"end": 6015,
											"name": "DUP10",
											"source": 24
										},
										{
											"begin": 6002,
											"end": 6021,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 5973,
											"end": 6022,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "263"
										},
										{
											"begin": 5973,
											"end": 6022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 5973,
											"end": 6022,
											"name": "tag",
											"source": 24,
											"value": "321"
										},
										{
											"begin": 5973,
											"end": 6022,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 5963,
											"end": 6022,
											"name": "SWAP3",
											"source": 24
										},
										{
											"begin": 5963,
											"end": 6022,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 6067,
											"end": 6070,
											"name": "PUSH",
											"source": 24,
											"value": "A0"
										},
										{
											"begin": 6056,
											"end": 6065,
											"name": "DUP9",
											"source": 24
										},
										{
											"begin": 6052,
											"end": 6071,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 6046,
											"end": 6072,
											"name": "MLOAD",
											"source": 24
										},
										{
											"begin": 6116,
											"end": 6120,
											"name": "PUSH",
											"source": 24,
											"value": "FF"
										},
										{
											"begin": 6107,
											"end": 6114,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 6103,
											"end": 6121,
											"name": "AND",
											"source": 24
										},
										{
											"begin": 6094,
											"end": 6101,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 6091,
											"end": 6122,
											"name": "EQ",
											"source": 24
										},
										{
											"begin": 6081,
											"end": 6140,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "322"
										},
										{
											"begin": 6081,
											"end": 6140,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 6136,
											"end": 6137,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 6133,
											"end": 6134,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 6126,
											"end": 6138,
											"name": "REVERT",
											"source": 24
										},
										{
											"begin": 6081,
											"end": 6140,
											"name": "tag",
											"source": 24,
											"value": "322"
										},
										{
											"begin": 6081,
											"end": 6140,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 6211,
											"end": 6214,
											"name": "PUSH",
											"source": 24,
											"value": "C0"
										},
										{
											"begin": 6196,
											"end": 6215,
											"name": "DUP10",
											"source": 24
										},
										{
											"begin": 6196,
											"end": 6215,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 6190,
											"end": 6216,
											"name": "MLOAD",
											"source": 24
										},
										{
											"begin": 6159,
											"end": 6166,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 6159,
											"end": 6166,
											"name": "SWAP3",
											"source": 24
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6254,
											"end": 6269,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 6254,
											"end": 6269,
											"name": "ISZERO",
											"source": 24
										},
										{
											"begin": 6247,
											"end": 6270,
											"name": "ISZERO",
											"source": 24
										},
										{
											"begin": 6235,
											"end": 6271,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 6235,
											"end": 6271,
											"name": "EQ",
											"source": 24
										},
										{
											"begin": 6225,
											"end": 6289,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "323"
										},
										{
											"begin": 6225,
											"end": 6289,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 6285,
											"end": 6286,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 6282,
											"end": 6283,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 6275,
											"end": 6287,
											"name": "REVERT",
											"source": 24
										},
										{
											"begin": 6225,
											"end": 6289,
											"name": "tag",
											"source": 24,
											"value": "323"
										},
										{
											"begin": 6225,
											"end": 6289,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 6308,
											"end": 6315,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 6298,
											"end": 6315,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 6298,
											"end": 6315,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 6298,
											"end": 6315,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 5335,
											"end": 6321,
											"name": "SWAP3",
											"source": 24
										},
										{
											"begin": 5335,
											"end": 6321,
											"name": "SWAP6",
											"source": 24
										},
										{
											"begin": 5335,
											"end": 6321,
											"name": "SWAP9",
											"source": 24
										},
										{
											"begin": 5335,
											"end": 6321,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 5335,
											"end": 6321,
											"name": "SWAP5",
											"source": 24
										},
										{
											"begin": 5335,
											"end": 6321,
											"name": "SWAP8",
											"source": 24
										},
										{
											"begin": 5335,
											"end": 6321,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 5335,
											"end": 6321,
											"name": "SWAP3",
											"source": 24
										},
										{
											"begin": 5335,
											"end": 6321,
											"name": "SWAP6",
											"source": 24
										},
										{
											"begin": 5335,
											"end": 6321,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 5335,
											"end": 6321,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 6326,
											"end": 6631,
											"name": "tag",
											"source": 24,
											"value": "196"
										},
										{
											"begin": 6326,
											"end": 6631,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 6396,
											"end": 6402,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 6449,
											"end": 6451,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 6437,
											"end": 6446,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 6428,
											"end": 6435,
											"name": "DUP5",
											"source": 24
										},
										{
											"begin": 6424,
											"end": 6447,
											"name": "SUB",
											"source": 24
										},
										{
											"begin": 6420,
											"end": 6452,
											"name": "SLT",
											"source": 24
										},
										{
											"begin": 6417,
											"end": 6469,
											"name": "ISZERO",
											"source": 24
										},
										{
											"begin": 6417,
											"end": 6469,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "325"
										},
										{
											"begin": 6417,
											"end": 6469,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 6465,
											"end": 6466,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 6462,
											"end": 6463,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 6455,
											"end": 6467,
											"name": "REVERT",
											"source": 24
										},
										{
											"begin": 6417,
											"end": 6469,
											"name": "tag",
											"source": 24,
											"value": "325"
										},
										{
											"begin": 6417,
											"end": 6469,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 6497,
											"end": 6506,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 6491,
											"end": 6507,
											"name": "MLOAD",
											"source": 24
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6540,
											"end": 6545,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 6536,
											"end": 6582,
											"name": "AND",
											"source": 24
										},
										{
											"begin": 6529,
											"end": 6534,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 6526,
											"end": 6583,
											"name": "EQ",
											"source": 24
										},
										{
											"begin": 6516,
											"end": 6601,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "306"
										},
										{
											"begin": 6516,
											"end": 6601,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 6597,
											"end": 6598,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 6594,
											"end": 6595,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 6587,
											"end": 6599,
											"name": "REVERT",
											"source": 24
										},
										{
											"begin": 6636,
											"end": 6764,
											"name": "tag",
											"source": 24,
											"value": "202"
										},
										{
											"begin": 6636,
											"end": 6764,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 6703,
											"end": 6712,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 6703,
											"end": 6712,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 6703,
											"end": 6712,
											"name": "SUB",
											"source": 24
										},
										{
											"begin": 6724,
											"end": 6735,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 6724,
											"end": 6735,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 6724,
											"end": 6735,
											"name": "GT",
											"source": 24
										},
										{
											"begin": 6721,
											"end": 6758,
											"name": "ISZERO",
											"source": 24
										},
										{
											"begin": 6721,
											"end": 6758,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "236"
										},
										{
											"begin": 6721,
											"end": 6758,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 6738,
											"end": 6756,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "236"
										},
										{
											"begin": 6738,
											"end": 6756,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "258"
										},
										{
											"begin": 6738,
											"end": 6756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 7118,
											"end": 7498,
											"name": "tag",
											"source": 24,
											"value": "220"
										},
										{
											"begin": 7118,
											"end": 7498,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 7197,
											"end": 7198,
											"name": "PUSH",
											"source": 24,
											"value": "1"
										},
										{
											"begin": 7193,
											"end": 7205,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 7193,
											"end": 7205,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 7193,
											"end": 7205,
											"name": "SHR",
											"source": 24
										},
										{
											"begin": 7193,
											"end": 7205,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 7240,
											"end": 7252,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 7240,
											"end": 7252,
											"name": "AND",
											"source": 24
										},
										{
											"begin": 7240,
											"end": 7252,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 7261,
											"end": 7322,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "332"
										},
										{
											"begin": 7261,
											"end": 7322,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 7315,
											"end": 7319,
											"name": "PUSH",
											"source": 24,
											"value": "7F"
										},
										{
											"begin": 7307,
											"end": 7313,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 7303,
											"end": 7320,
											"name": "AND",
											"source": 24
										},
										{
											"begin": 7293,
											"end": 7320,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 7293,
											"end": 7320,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 7261,
											"end": 7322,
											"name": "tag",
											"source": 24,
											"value": "332"
										},
										{
											"begin": 7261,
											"end": 7322,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 7368,
											"end": 7370,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 7360,
											"end": 7366,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 7357,
											"end": 7371,
											"name": "LT",
											"source": 24
										},
										{
											"begin": 7337,
											"end": 7355,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 7334,
											"end": 7372,
											"name": "SUB",
											"source": 24
										},
										{
											"begin": 7331,
											"end": 7492,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "333"
										},
										{
											"begin": 7331,
											"end": 7492,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 7414,
											"end": 7424,
											"name": "PUSH",
											"source": 24,
											"value": "4E487B71"
										},
										{
											"begin": 7409,
											"end": 7412,
											"name": "PUSH",
											"source": 24,
											"value": "E0"
										},
										{
											"begin": 7405,
											"end": 7425,
											"name": "SHL",
											"source": 24
										},
										{
											"begin": 7402,
											"end": 7403,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 7395,
											"end": 7426,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 7449,
											"end": 7453,
											"name": "PUSH",
											"source": 24,
											"value": "22"
										},
										{
											"begin": 7446,
											"end": 7447,
											"name": "PUSH",
											"source": 24,
											"value": "4"
										},
										{
											"begin": 7439,
											"end": 7454,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 7477,
											"end": 7481,
											"name": "PUSH",
											"source": 24,
											"value": "24"
										},
										{
											"begin": 7474,
											"end": 7475,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 7467,
											"end": 7482,
											"name": "REVERT",
											"source": 24
										},
										{
											"begin": 7331,
											"end": 7492,
											"name": "tag",
											"source": 24,
											"value": "333"
										},
										{
											"begin": 7331,
											"end": 7492,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 7331,
											"end": 7492,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 7118,
											"end": 7498,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 7118,
											"end": 7498,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 7118,
											"end": 7498,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 7118,
											"end": 7498,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 8655,
											"end": 8834,
											"name": "tag",
											"source": 24,
											"value": "264"
										},
										{
											"begin": 8655,
											"end": 8834,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 8733,
											"end": 8746,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 8733,
											"end": 8746,
											"name": "MLOAD",
											"source": 24
										},
										{
											"begin": 8786,
											"end": 8808,
											"name": "PUSH",
											"source": 24,
											"value": "FFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8775,
											"end": 8809,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 8775,
											"end": 8809,
											"name": "AND",
											"source": 24
										},
										{
											"begin": 8765,
											"end": 8810,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 8765,
											"end": 8810,
											"name": "EQ",
											"source": 24
										},
										{
											"begin": 8755,
											"end": 8828,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "314"
										},
										{
											"begin": 8755,
											"end": 8828,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 8824,
											"end": 8825,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 8821,
											"end": 8822,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 8814,
											"end": 8826,
											"name": "REVERT",
											"source": 24
										},
										{
											"begin": 8839,
											"end": 9312,
											"name": "tag",
											"source": 24,
											"value": "252"
										},
										{
											"begin": 8839,
											"end": 9312,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 8942,
											"end": 8948,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 8950,
											"end": 8956,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 8958,
											"end": 8964,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 8966,
											"end": 8972,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 8974,
											"end": 8980,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 9027,
											"end": 9030,
											"name": "PUSH",
											"source": 24,
											"value": "A0"
										},
										{
											"begin": 9015,
											"end": 9024,
											"name": "DUP7",
											"source": 24
										},
										{
											"begin": 9006,
											"end": 9013,
											"name": "DUP9",
											"source": 24
										},
										{
											"begin": 9002,
											"end": 9025,
											"name": "SUB",
											"source": 24
										},
										{
											"begin": 8998,
											"end": 9031,
											"name": "SLT",
											"source": 24
										},
										{
											"begin": 8995,
											"end": 9048,
											"name": "ISZERO",
											"source": 24
										},
										{
											"begin": 8995,
											"end": 9048,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "339"
										},
										{
											"begin": 8995,
											"end": 9048,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 9044,
											"end": 9045,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 9041,
											"end": 9042,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 9034,
											"end": 9046,
											"name": "REVERT",
											"source": 24
										},
										{
											"begin": 8995,
											"end": 9048,
											"name": "tag",
											"source": 24,
											"value": "339"
										},
										{
											"begin": 8995,
											"end": 9048,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 9067,
											"end": 9106,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "340"
										},
										{
											"begin": 9096,
											"end": 9105,
											"name": "DUP7",
											"source": 24
										},
										{
											"begin": 9067,
											"end": 9106,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "264"
										},
										{
											"begin": 9067,
											"end": 9106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 9067,
											"end": 9106,
											"name": "tag",
											"source": 24,
											"value": "340"
										},
										{
											"begin": 9067,
											"end": 9106,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 9057,
											"end": 9106,
											"name": "SWAP5",
											"source": 24
										},
										{
											"begin": 9057,
											"end": 9106,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 9146,
											"end": 9148,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 9135,
											"end": 9144,
											"name": "DUP7",
											"source": 24
										},
										{
											"begin": 9131,
											"end": 9149,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 9125,
											"end": 9150,
											"name": "MLOAD",
											"source": 24
										},
										{
											"begin": 9115,
											"end": 9150,
											"name": "SWAP4",
											"source": 24
										},
										{
											"begin": 9115,
											"end": 9150,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 9190,
											"end": 9192,
											"name": "PUSH",
											"source": 24,
											"value": "40"
										},
										{
											"begin": 9179,
											"end": 9188,
											"name": "DUP7",
											"source": 24
										},
										{
											"begin": 9175,
											"end": 9193,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 9169,
											"end": 9194,
											"name": "MLOAD",
											"source": 24
										},
										{
											"begin": 9159,
											"end": 9194,
											"name": "SWAP3",
											"source": 24
										},
										{
											"begin": 9159,
											"end": 9194,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 9234,
											"end": 9236,
											"name": "PUSH",
											"source": 24,
											"value": "60"
										},
										{
											"begin": 9223,
											"end": 9232,
											"name": "DUP7",
											"source": 24
										},
										{
											"begin": 9219,
											"end": 9237,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 9213,
											"end": 9238,
											"name": "MLOAD",
											"source": 24
										},
										{
											"begin": 9203,
											"end": 9238,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 9203,
											"end": 9238,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 9257,
											"end": 9306,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "341"
										},
										{
											"begin": 9301,
											"end": 9304,
											"name": "PUSH",
											"source": 24,
											"value": "80"
										},
										{
											"begin": 9290,
											"end": 9299,
											"name": "DUP8",
											"source": 24
										},
										{
											"begin": 9286,
											"end": 9305,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 9257,
											"end": 9306,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "264"
										},
										{
											"begin": 9257,
											"end": 9306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 9257,
											"end": 9306,
											"name": "tag",
											"source": 24,
											"value": "341"
										},
										{
											"begin": 9257,
											"end": 9306,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 9247,
											"end": 9306,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 9247,
											"end": 9306,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 8839,
											"end": 9312,
											"name": "SWAP3",
											"source": 24
										},
										{
											"begin": 8839,
											"end": 9312,
											"name": "SWAP6",
											"source": 24
										},
										{
											"begin": 8839,
											"end": 9312,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 8839,
											"end": 9312,
											"name": "SWAP3",
											"source": 24
										},
										{
											"begin": 8839,
											"end": 9312,
											"name": "SWAP6",
											"source": 24
										},
										{
											"begin": 8839,
											"end": 9312,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 8839,
											"end": 9312,
											"name": "SWAP4",
											"source": 24
										},
										{
											"begin": 8839,
											"end": 9312,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 8839,
											"end": 9312,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 9317,
											"end": 9554,
											"name": "tag",
											"source": 24,
											"value": "254"
										},
										{
											"begin": 9317,
											"end": 9554,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 9389,
											"end": 9398,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 9389,
											"end": 9398,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 9389,
											"end": 9398,
											"name": "MUL",
											"source": 24
										},
										{
											"begin": 9356,
											"end": 9363,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 9414,
											"end": 9423,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 9414,
											"end": 9423,
											"name": "SLT",
											"source": 24
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9425,
											"end": 9443,
											"name": "DUP5",
											"source": 24
										},
										{
											"begin": 9425,
											"end": 9443,
											"name": "EQ",
											"source": 24
										},
										{
											"begin": 9410,
											"end": 9444,
											"name": "AND",
											"source": 24
										},
										{
											"begin": 9407,
											"end": 9467,
											"name": "ISZERO",
											"source": 24
										},
										{
											"begin": 9407,
											"end": 9467,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "344"
										},
										{
											"begin": 9407,
											"end": 9467,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 9447,
											"end": 9465,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "344"
										},
										{
											"begin": 9447,
											"end": 9465,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "258"
										},
										{
											"begin": 9447,
											"end": 9465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 9447,
											"end": 9465,
											"name": "tag",
											"source": 24,
											"value": "344"
										},
										{
											"begin": 9447,
											"end": 9465,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 9520,
											"end": 9521,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 9511,
											"end": 9518,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 9506,
											"end": 9522,
											"name": "SDIV",
											"source": 24
										},
										{
											"begin": 9503,
											"end": 9504,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 9500,
											"end": 9523,
											"name": "EQ",
											"source": 24
										},
										{
											"begin": 9496,
											"end": 9497,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 9489,
											"end": 9498,
											"name": "ISZERO",
											"source": 24
										},
										{
											"begin": 9486,
											"end": 9524,
											"name": "OR",
											"source": 24
										},
										{
											"begin": 9476,
											"end": 9548,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "236"
										},
										{
											"begin": 9476,
											"end": 9548,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 9528,
											"end": 9546,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "236"
										},
										{
											"begin": 9528,
											"end": 9546,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "258"
										},
										{
											"begin": 9528,
											"end": 9546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										}
									]
								}
							},
							"sourceList": [
								"contracts/Controller.sol",
								"contracts/MainBot.sol",
								"contracts/aave/protocol-v2/contracts/interfaces/DataTypes.sol",
								"contracts/aave/protocol-v2/contracts/interfaces/ILendingPool.sol",
								"contracts/aave/protocol-v2/contracts/interfaces/ILendingPoolAddressesProvider.sol",
								"contracts/chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol",
								"contracts/openzeppelin/contracts/token/ERC721/IERC721.sol",
								"contracts/openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol",
								"contracts/openzeppelin/contracts/token/ERC721/IERC721Metadata.sol",
								"contracts/openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/uniswap/v3-periphery/contracts/interfaces/IERC721Permit.sol",
								"contracts/uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol",
								"contracts/uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol",
								"contracts/uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol",
								"contracts/uniswap/v3-periphery/contracts/interfaces/IPoolInitializer.sol",
								"contracts/uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
								"contracts/uniswap/v3-periphery/contracts/interfaces/IUniswapV3Pool.sol",
								"contracts/uniswap/v3-periphery/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
								"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
								"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
								"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
								"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
								"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
								"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolState.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"aaveLendingPoolAddressesProvider()": "238f9b7a",
							"adjustTimeframe(uint256)": "869665e9",
							"checkLiquidity(uint256,address)": "3fb47a3b",
							"checkPrice()": "8fc3047d",
							"convertAllToPOL()": "9d8ef1e1",
							"currentActivity()": "6d546cdd",
							"dexRouters(string)": "5e7ffa67",
							"disableTrading()": "17700f01",
							"gasCostMultiplier()": "a30fb905",
							"initialDeposit()": "e037f889",
							"initiateTrade(string,uint256)": "26c403ed",
							"kill()": "41c0e1b5",
							"lossThreshold()": "c0fc247f",
							"maticBalance()": "1458d9d8",
							"nextLogTime()": "1bf41362",
							"owner()": "8da5cb5b",
							"polToken()": "b6658d07",
							"priceFeedAddress()": "e0abca0b",
							"profitThreshold()": "f974821a",
							"quickSwapRouter()": "e189eb42",
							"setController(address)": "92eefe9b",
							"stablecoinBalance()": "64aabb9e",
							"tradingEnabled()": "4ada218b",
							"trailingStopLoss()": "b3ce56a2",
							"uniswapPositionManager()": "e5047b30",
							"uniswapRouter()": "735de9f7",
							"usdcToken()": "11eac855",
							"usdtToken()": "a98ad46c",
							"withdrawInGwei(uint256)": "457f3cb0"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_polToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_usdtToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_usdcToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_quickSwapRouter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_priceFeedAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_uniswapRouter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_uniswapPositionManager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_aaveLendingPoolAddressesProvider\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"activity\",\"type\":\"string\"}],\"name\":\"CurrentActivity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"currentBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"}],\"name\":\"StopLossTriggered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"TestEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"tradeType\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"TradeExecuted\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"aaveLendingPoolAddressesProvider\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"selectedTimeframe\",\"type\":\"uint256\"}],\"name\":\"adjustTimeframe\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"}],\"name\":\"checkLiquidity\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"sufficientLiquidity\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"convertAllToPOL\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentActivity\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"dexRouters\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disableTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gasCostMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tradeType\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"initiateTrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lossThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maticBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextLogTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"polToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeedAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"profitThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quickSwapRouter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stablecoinBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tradingEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trailingStopLoss\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapPositionManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapRouter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdcToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdtToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountInGwei\",\"type\":\"uint256\"}],\"name\":\"withdrawInGwei\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MainBot.sol\":\"MainBot\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MainBot.sol\":{\"keccak256\":\"0x56eac8493c21c7d33dee50c4cf271f22d8956d11c5c11e4246256ae2d5b4330b\",\"license\":\"MITs\",\"urls\":[\"bzz-raw://42088ce0a38c5bd89f60629db180c1e24ccd28b1ef15b33629fa075e3cbfad47\",\"dweb:/ipfs/QmbbcVx6DmRDiYNyKCqrJzebyc8mEe452PCC2wQhW1Haxu\"]},\"contracts/aave/protocol-v2/contracts/interfaces/DataTypes.sol\":{\"keccak256\":\"0x81caed3fbb24bd8721c85094546ee31f033209a1dc5b8aa4d8ce094388666cb4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4ab7c3612816908da41df1a0f62bde806a9fe088198dcd7b70f6a8f31c7d131\",\"dweb:/ipfs/QmRNtcEwyFdiJmbJ1oyDiDZ3foyrHchCMo1MYjAXYR7zdd\"]},\"contracts/aave/protocol-v2/contracts/interfaces/ILendingPool.sol\":{\"keccak256\":\"0xbcbeb7a9a1bc100bae12891df6265691103d76f71e7eed72902d2024f05f654b\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://898ea64e297442bb3bc7c7215786ae6453dce7900200f836041ff9ed7867f4e0\",\"dweb:/ipfs/QmTuSyHSYg7PNo6eRDe1ATJZ2UxDxwFJUshJRnT22co19a\"]},\"contracts/aave/protocol-v2/contracts/interfaces/ILendingPoolAddressesProvider.sol\":{\"keccak256\":\"0x219d7db359e51dfd51b0a454dc284c44671b6ce6543b7f383ef0aec4534c7ea0\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://f09e938d9d6edadd398245b27e15eb0df96f20dd5104f523a10cfe4a9329ba92\",\"dweb:/ipfs/QmNhjFNzjeKkqUNe9SJnxiuH8wAQYVp9MX6mAGBzeESpyz\"]},\"contracts/chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x257a8d28fa83d3d942547c8e129ef465e4b5f3f31171e7be4739a4c98da6b4f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d39e11b1dc7b9b8ccdabbc9be442ab7cda4a81c748f57e316dcb1bcb4a28bf9\",\"dweb:/ipfs/QmaG6vz6W6iEUBsbHSBob5mdcitYxWjoygxREHpsJHfWrS\"]},\"contracts/openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x3c504de1aed405d34ff26733c7b6edc9fd9fd4f9aac504f541a4238dd50bf1d2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e373cc851a65ef3f01bb825f59c3c9cdb1969adab8ec871dd1f197423f6b9ed\",\"dweb:/ipfs/QmWNM3TyZgfxTKJsfqk7ZJk7DmZr29iab3f8T4c1itiynm\"]},\"contracts/openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol\":{\"keccak256\":\"0x49ae5d944b6f25701d67ef1d76cbce766f062bf1958a34b13543f539d7882850\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://851181789f63ce009fa30ddabd8ef159d90733216d5d1f2f9e13d16688f67489\",\"dweb:/ipfs/QmdT4okvCWQC1eSYNFfyqjUkJBAiWbSZMwAazzEuizBJSb\"]},\"contracts/openzeppelin/contracts/token/ERC721/IERC721Metadata.sol\":{\"keccak256\":\"0xfd743e54fb2a27413f703a389d1d78b003d957eaebbcfa15051d89793cf5136a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07683e02a762080a63f5ccec780488e5b87f79ded66d4c1e27f5cd62c1b5f8cb\",\"dweb:/ipfs/QmNtAngsTxV2c2XAKrqAo7PUUpXz1J69LNzwkEun4QTX7w\"]},\"contracts/openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x1e96fdc714c1d5e754ad716c7cb4ac8daa28856879f2d40bb428720adac47b69\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1725af76c335db636686b0b8f36dfdcfa15d40993509ed80c6e579dfd3e1c2f3\",\"dweb:/ipfs/QmcT6Bp635CWdmxQnv84bicV4eaD46cY1ywZNgriSusJXw\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/IERC721Permit.sol\":{\"keccak256\":\"0x9915ccd225c6840a809606b1a929404b0299bff8d7cbb6bc8439c5dfd74046d2\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f0cdf83091593d05e85f50c1c40cf17c8c1eb6aeaac87cb9f8c91e8e31cf162c\",\"dweb:/ipfs/QmZxxuzCfsPLnARKERZj2fvy2mEvyQWJd9uDWpFwj4UkJa\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol\":{\"keccak256\":\"0x631739110217293c69ff6fc6ca4499fcabe8774fb17de93a5546dabe6e207034\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://9f61686e40280404bb22e20c5c380ed8dd4467c8c5c164762566233146cc2e26\",\"dweb:/ipfs/QmbA6qoN6NJvnj3vTRFA5ozNLdnWqtK5iJjqzcR1NS3qJk\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol\":{\"keccak256\":\"0x7affcfeb5127c0925a71d6a65345e117c33537523aeca7bc98085ead8452519d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e16b291294210e71cb0f20cd0afe62ae2dc6878d627f5ccc19c4dc9cd80aec3f\",\"dweb:/ipfs/QmQGitSyBr26nour81BZmpmDMyJpvZRqHQZvnCD1Acb127\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol\":{\"keccak256\":\"0xb547e10f1e69bed03621a62b73a503e260643066c6b4054867a4d1fef47eb274\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f9a90f58f5fd5fb42f7811f4094113b532f307b14a73764c91f977590747f407\",\"dweb:/ipfs/QmSeNH2mfiDMKf3Q6V2sqtNxx1s72JNuA1VVxRM9HoMqYp\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/IPoolInitializer.sol\":{\"keccak256\":\"0x9d7695e8d94c22cc5fcced602017aabb988de89981ea7bee29ea629d5328a862\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://61b50933026ee1017db2a6273af8cedc3238c95dca58880db0918dbdbb2f064f\",\"dweb:/ipfs/QmUebR26pqG25d18aBELKz8aFFKkmHa8PxntzXTA7o9Ldu\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0xfa925dc6086cfc426967d6b47a651ade9bb30a747359c0d006912c59d88b5c4a\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ec22f5863805d4afbf740bbba06c07fe4572ba993e4936a234222c61b3d1dd6e\",\"dweb:/ipfs/QmNyC92QbbjjG5V67GNfiXbSN6Ehi7637uFQXkWwKXR3s6\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5\",\"dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0xe75caaf5ab5dad796a807a0db3ce9d5aeeadf3cc062aaa17f701134bbd085f53\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://21ae8e8c7af183532964bc81889b695801f868d903af91d18d02a77d793e14fb\",\"dweb:/ipfs/QmfDr8ugPEdbxtTCs6fut61Euf3adBvS2aNyFyC5CFAFGy\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 421,
								"contract": "contracts/MainBot.sol:MainBot",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 423,
								"contract": "contracts/MainBot.sol:MainBot",
								"label": "tradingEnabled",
								"offset": 20,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 425,
								"contract": "contracts/MainBot.sol:MainBot",
								"label": "initialDeposit",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 427,
								"contract": "contracts/MainBot.sol:MainBot",
								"label": "maticBalance",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 429,
								"contract": "contracts/MainBot.sol:MainBot",
								"label": "stablecoinBalance",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 431,
								"contract": "contracts/MainBot.sol:MainBot",
								"label": "profitThreshold",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 433,
								"contract": "contracts/MainBot.sol:MainBot",
								"label": "lossThreshold",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 436,
								"contract": "contracts/MainBot.sol:MainBot",
								"label": "gasCostMultiplier",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 439,
								"contract": "contracts/MainBot.sol:MainBot",
								"label": "trailingStopLoss",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 441,
								"contract": "contracts/MainBot.sol:MainBot",
								"label": "nextLogTime",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 444,
								"contract": "contracts/MainBot.sol:MainBot",
								"label": "currentActivity",
								"offset": 0,
								"slot": "9",
								"type": "t_string_storage"
							},
							{
								"astId": 446,
								"contract": "contracts/MainBot.sol:MainBot",
								"label": "polToken",
								"offset": 0,
								"slot": "10",
								"type": "t_address"
							},
							{
								"astId": 448,
								"contract": "contracts/MainBot.sol:MainBot",
								"label": "usdtToken",
								"offset": 0,
								"slot": "11",
								"type": "t_address"
							},
							{
								"astId": 450,
								"contract": "contracts/MainBot.sol:MainBot",
								"label": "usdcToken",
								"offset": 0,
								"slot": "12",
								"type": "t_address"
							},
							{
								"astId": 452,
								"contract": "contracts/MainBot.sol:MainBot",
								"label": "quickSwapRouter",
								"offset": 0,
								"slot": "13",
								"type": "t_address"
							},
							{
								"astId": 454,
								"contract": "contracts/MainBot.sol:MainBot",
								"label": "priceFeedAddress",
								"offset": 0,
								"slot": "14",
								"type": "t_address"
							},
							{
								"astId": 456,
								"contract": "contracts/MainBot.sol:MainBot",
								"label": "uniswapRouter",
								"offset": 0,
								"slot": "15",
								"type": "t_address"
							},
							{
								"astId": 458,
								"contract": "contracts/MainBot.sol:MainBot",
								"label": "uniswapPositionManager",
								"offset": 0,
								"slot": "16",
								"type": "t_address"
							},
							{
								"astId": 460,
								"contract": "contracts/MainBot.sol:MainBot",
								"label": "aaveLendingPoolAddressesProvider",
								"offset": 0,
								"slot": "17",
								"type": "t_address"
							},
							{
								"astId": 464,
								"contract": "contracts/MainBot.sol:MainBot",
								"label": "dexRouters",
								"offset": 0,
								"slot": "18",
								"type": "t_mapping(t_string_memory_ptr,t_address)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_string_memory_ptr,t_address)": {
								"encoding": "mapping",
								"key": "t_string_memory_ptr",
								"label": "mapping(string => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_memory_ptr": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/aave/protocol-v2/contracts/interfaces/DataTypes.sol": {
				"DataTypes": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/aave/protocol-v2/contracts/interfaces/DataTypes.sol\":57:982  library DataTypes {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/aave/protocol-v2/contracts/interfaces/DataTypes.sol\":57:982  library DataTypes {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220507fbf323eb80a8454b04a555a11168e44a78dd761367a505bcfc6221800258e64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220507fbf323eb80a8454b04a555a11168e44a78dd761367a505bcfc6221800258e64736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 POP PUSH32 0xBF323EB80A8454B04A555A11168E44A78DD761367A505BCFC6221800258E6473 PUSH16 0x6C634300081400330000000000000000 ",
							"sourceMap": "57:925:2:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;57:925:2;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220507fbf323eb80a8454b04a555a11168e44a78dd761367a505bcfc6221800258e64736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 POP PUSH32 0xBF323EB80A8454B04A555A11168E44A78DD761367A505BCFC6221800258E6473 PUSH16 0x6C634300081400330000000000000000 ",
							"sourceMap": "57:925:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 57,
									"end": 982,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 982,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 982,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 57,
									"end": 982,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 57,
									"end": 982,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 57,
									"end": 982,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 57,
									"end": 982,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 57,
									"end": 982,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 57,
									"end": 982,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 57,
									"end": 982,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 982,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 57,
									"end": 982,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 57,
									"end": 982,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 57,
									"end": 982,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 57,
									"end": 982,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 57,
									"end": 982,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 982,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 57,
									"end": 982,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 982,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 57,
									"end": 982,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 57,
									"end": 982,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 57,
									"end": 982,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 982,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 57,
									"end": 982,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 57,
									"end": 982,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 57,
									"end": 982,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 57,
									"end": 982,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 982,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 57,
									"end": 982,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 57,
									"end": 982,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 57,
									"end": 982,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 57,
									"end": 982,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 57,
									"end": 982,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 57,
									"end": 982,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220507fbf323eb80a8454b04a555a11168e44a78dd761367a505bcfc6221800258e64736f6c63430008140033",
									".code": [
										{
											"begin": 57,
											"end": 982,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 57,
											"end": 982,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 57,
											"end": 982,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 57,
											"end": 982,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 57,
											"end": 982,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 57,
											"end": 982,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 57,
											"end": 982,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 982,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 57,
											"end": 982,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"contracts/Controller.sol",
								"contracts/MainBot.sol",
								"contracts/aave/protocol-v2/contracts/interfaces/DataTypes.sol",
								"contracts/aave/protocol-v2/contracts/interfaces/ILendingPool.sol",
								"contracts/aave/protocol-v2/contracts/interfaces/ILendingPoolAddressesProvider.sol",
								"contracts/chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol",
								"contracts/openzeppelin/contracts/token/ERC721/IERC721.sol",
								"contracts/openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol",
								"contracts/openzeppelin/contracts/token/ERC721/IERC721Metadata.sol",
								"contracts/openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/uniswap/v3-periphery/contracts/interfaces/IERC721Permit.sol",
								"contracts/uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol",
								"contracts/uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol",
								"contracts/uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol",
								"contracts/uniswap/v3-periphery/contracts/interfaces/IPoolInitializer.sol",
								"contracts/uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
								"contracts/uniswap/v3-periphery/contracts/interfaces/IUniswapV3Pool.sol",
								"contracts/uniswap/v3-periphery/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
								"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
								"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
								"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
								"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
								"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
								"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolState.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/aave/protocol-v2/contracts/interfaces/DataTypes.sol\":\"DataTypes\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/aave/protocol-v2/contracts/interfaces/DataTypes.sol\":{\"keccak256\":\"0x81caed3fbb24bd8721c85094546ee31f033209a1dc5b8aa4d8ce094388666cb4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4ab7c3612816908da41df1a0f62bde806a9fe088198dcd7b70f6a8f31c7d131\",\"dweb:/ipfs/QmRNtcEwyFdiJmbJ1oyDiDZ3foyrHchCMo1MYjAXYR7zdd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/aave/protocol-v2/contracts/interfaces/ILendingPool.sol": {
				"ILendingPool": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "onBehalfOf",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "borrowRateMode",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "borrowRate",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint16",
									"name": "referral",
									"type": "uint16"
								}
							],
							"name": "Borrow",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "onBehalfOf",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint16",
									"name": "referral",
									"type": "uint16"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "target",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "initiator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "premium",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "referralCode",
									"type": "uint16"
								}
							],
							"name": "FlashLoan",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "collateralAsset",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "debtAsset",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "debtToCover",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "liquidatedCollateralAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "liquidator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "receiveAToken",
									"type": "bool"
								}
							],
							"name": "LiquidationCall",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "RebalanceStableBorrowRate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "repayer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Repay",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "liquidityRate",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "stableBorrowRate",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "variableBorrowRate",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "liquidityIndex",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "variableBorrowIndex",
									"type": "uint256"
								}
							],
							"name": "ReserveDataUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "ReserveUsedAsCollateralDisabled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "ReserveUsedAsCollateralEnabled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "rateMode",
									"type": "uint256"
								}
							],
							"name": "Swap",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "interestRateMode",
									"type": "uint256"
								},
								{
									"internalType": "uint16",
									"name": "referralCode",
									"type": "uint16"
								},
								{
									"internalType": "address",
									"name": "onBehalfOf",
									"type": "address"
								}
							],
							"name": "borrow",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "onBehalfOf",
									"type": "address"
								},
								{
									"internalType": "uint16",
									"name": "referralCode",
									"type": "uint16"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "balanceFromAfter",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "balanceToBefore",
									"type": "uint256"
								}
							],
							"name": "finalizeTransfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiverAddress",
									"type": "address"
								},
								{
									"internalType": "address[]",
									"name": "assets",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "modes",
									"type": "uint256[]"
								},
								{
									"internalType": "address",
									"name": "onBehalfOf",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "params",
									"type": "bytes"
								},
								{
									"internalType": "uint16",
									"name": "referralCode",
									"type": "uint16"
								}
							],
							"name": "flashLoan",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getAddressesProvider",
							"outputs": [
								{
									"internalType": "contract ILendingPoolAddressesProvider",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								}
							],
							"name": "getConfiguration",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "data",
											"type": "uint256"
										}
									],
									"internalType": "struct DataTypes.ReserveConfigurationMap",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								}
							],
							"name": "getReserveData",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "totalLiquidity",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "availableLiquidity",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "totalStableDebt",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "totalVariableDebt",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "liquidityRate",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "variableBorrowRate",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "stableBorrowRate",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "averageStableBorrowRate",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "liquidityIndex",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "variableBorrowIndex",
											"type": "uint256"
										},
										{
											"internalType": "uint40",
											"name": "lastUpdateTimestamp",
											"type": "uint40"
										}
									],
									"internalType": "struct DataTypes.ReserveData",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								}
							],
							"name": "getReserveNormalizedIncome",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								}
							],
							"name": "getReserveNormalizedVariableDebt",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getReservesList",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getUserAccountData",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "totalCollateralETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalDebtETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "availableBorrowsETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "currentLiquidationThreshold",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "ltv",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "healthFactor",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getUserConfiguration",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "data",
											"type": "uint256"
										}
									],
									"internalType": "struct DataTypes.UserConfigurationMap",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "aTokenAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "stableDebtAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "variableDebtAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "interestRateStrategyAddress",
									"type": "address"
								}
							],
							"name": "initReserve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collateralAsset",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "debtAsset",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "debtToCover",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "receiveAToken",
									"type": "bool"
								}
							],
							"name": "liquidationCall",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "rebalanceStableBorrowRate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rateMode",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "onBehalfOf",
									"type": "address"
								}
							],
							"name": "repay",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "configuration",
									"type": "uint256"
								}
							],
							"name": "setConfiguration",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "val",
									"type": "bool"
								}
							],
							"name": "setPause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "rateStrategyAddress",
									"type": "address"
								}
							],
							"name": "setReserveInterestRateStrategyAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "useAsCollateral",
									"type": "bool"
								}
							],
							"name": "setUserUseReserveAsCollateral",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "rateMode",
									"type": "uint256"
								}
							],
							"name": "swapBorrowRateMode",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "withdraw",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Borrow(address,address,address,uint256,uint256,uint256,uint16)": {
								"details": "Emitted on borrow() and flashLoan() when debt needs to be opened",
								"params": {
									"amount": "The amount borrowed out",
									"borrowRate": "The numeric rate at which the user has borrowed",
									"borrowRateMode": "The rate mode: 1 for Stable, 2 for Variable",
									"onBehalfOf": "The address that will be getting the debt",
									"referral": "The referral code used*",
									"reserve": "The address of the underlying asset being borrowed",
									"user": "The address of the user initiating the borrow(), receiving the funds on borrow() or just initiator of the transaction on flashLoan()"
								}
							},
							"Deposit(address,address,address,uint256,uint16)": {
								"details": "Emitted on deposit()",
								"params": {
									"amount": "The amount deposited",
									"onBehalfOf": "The beneficiary of the deposit, receiving the aTokens",
									"referral": "The referral code used*",
									"reserve": "The address of the underlying asset of the reserve",
									"user": "The address initiating the deposit"
								}
							},
							"FlashLoan(address,address,address,uint256,uint256,uint16)": {
								"details": "Emitted on flashLoan()",
								"params": {
									"amount": "The amount flash borrowed",
									"asset": "The address of the asset being flash borrowed",
									"initiator": "The address initiating the flash loan",
									"premium": "The fee flash borrowed",
									"referralCode": "The referral code used*",
									"target": "The address of the flash loan receiver contract"
								}
							},
							"LiquidationCall(address,address,address,uint256,uint256,address,bool)": {
								"details": "Emitted when a borrower is liquidated. This event is emitted by the LendingPool via LendingPoolCollateral manager using a DELEGATECALL This allows to have the events in the generated ABI for LendingPool.",
								"params": {
									"collateralAsset": "The address of the underlying asset used as collateral, to receive as result of the liquidation",
									"debtAsset": "The address of the underlying borrowed asset to be repaid with the liquidation",
									"debtToCover": "The debt amount of borrowed `asset` the liquidator wants to cover",
									"liquidatedCollateralAmount": "The amount of collateral received by the liiquidator",
									"liquidator": "The address of the liquidator",
									"receiveAToken": "`true` if the liquidators wants to receive the collateral aTokens, `false` if he wants to receive the underlying collateral asset directly*",
									"user": "The address of the borrower getting liquidated"
								}
							},
							"Paused()": {
								"details": "Emitted when the pause is triggered."
							},
							"RebalanceStableBorrowRate(address,address)": {
								"details": "Emitted on rebalanceStableBorrowRate()",
								"params": {
									"reserve": "The address of the underlying asset of the reserve",
									"user": "The address of the user for which the rebalance has been executed*"
								}
							},
							"Repay(address,address,address,uint256)": {
								"details": "Emitted on repay()",
								"params": {
									"amount": "The amount repaid*",
									"repayer": "The address of the user initiating the repay(), providing the funds",
									"reserve": "The address of the underlying asset of the reserve",
									"user": "The beneficiary of the repayment, getting his debt reduced"
								}
							},
							"ReserveDataUpdated(address,uint256,uint256,uint256,uint256,uint256)": {
								"details": "Emitted when the state of a reserve is updated. NOTE: This event is actually declared in the ReserveLogic library and emitted in the updateInterestRates() function. Since the function is internal, the event will actually be fired by the LendingPool contract. The event is therefore replicated here so it gets added to the LendingPool ABI",
								"params": {
									"liquidityIndex": "The new liquidity index",
									"liquidityRate": "The new liquidity rate",
									"reserve": "The address of the underlying asset of the reserve",
									"stableBorrowRate": "The new stable borrow rate",
									"variableBorrowIndex": "The new variable borrow index*",
									"variableBorrowRate": "The new variable borrow rate"
								}
							},
							"ReserveUsedAsCollateralDisabled(address,address)": {
								"details": "Emitted on setUserUseReserveAsCollateral()",
								"params": {
									"reserve": "The address of the underlying asset of the reserve",
									"user": "The address of the user enabling the usage as collateral*"
								}
							},
							"ReserveUsedAsCollateralEnabled(address,address)": {
								"details": "Emitted on setUserUseReserveAsCollateral()",
								"params": {
									"reserve": "The address of the underlying asset of the reserve",
									"user": "The address of the user enabling the usage as collateral*"
								}
							},
							"Swap(address,address,uint256)": {
								"details": "Emitted on swapBorrowRateMode()",
								"params": {
									"rateMode": "The rate mode that the user wants to swap to*",
									"reserve": "The address of the underlying asset of the reserve",
									"user": "The address of the user swapping his rate mode"
								}
							},
							"Unpaused()": {
								"details": "Emitted when the pause is lifted."
							},
							"Withdraw(address,address,address,uint256)": {
								"details": "Emitted on withdraw()",
								"params": {
									"amount": "The amount to be withdrawn*",
									"reserve": "The address of the underlyng asset being withdrawn",
									"to": "Address that will receive the underlying",
									"user": "The address initiating the withdrawal, owner of aTokens"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"borrow(address,uint256,uint256,uint16,address)": {
								"details": "Allows users to borrow a specific `amount` of the reserve underlying asset, provided that the borrower already deposited enough collateral, or he was given enough allowance by a credit delegator on the corresponding debt token (StableDebtToken or VariableDebtToken) - E.g. User borrows 100 USDC passing as `onBehalfOf` his own address, receiving the 100 USDC in his wallet   and 100 stable/variable debt tokens, depending on the `interestRateMode`",
								"params": {
									"amount": "The amount to be borrowed",
									"asset": "The address of the underlying asset to borrow",
									"interestRateMode": "The interest rate mode at which the user wants to borrow: 1 for Stable, 2 for Variable",
									"onBehalfOf": "Address of the user who will receive the debt. Should be the address of the borrower itself calling the function if he wants to borrow against his own collateral, or the address of the credit delegator if he has been given credit delegation allowance*",
									"referralCode": "Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man"
								}
							},
							"deposit(address,uint256,address,uint16)": {
								"details": "Deposits an `amount` of underlying asset into the reserve, receiving in return overlying aTokens. - E.g. User deposits 100 USDC and gets in return 100 aUSDC",
								"params": {
									"amount": "The amount to be deposited",
									"asset": "The address of the underlying asset to deposit",
									"onBehalfOf": "The address that will receive the aTokens, same as msg.sender if the user   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens   is a different wallet",
									"referralCode": "Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man*"
								}
							},
							"flashLoan(address,address[],uint256[],uint256[],address,bytes,uint16)": {
								"details": "Allows smartcontracts to access the liquidity of the pool within one transaction, as long as the amount taken plus a fee is returned. IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept into consideration. For further details please visit https://developers.aave.com",
								"params": {
									"amounts": "The amounts amounts being flash-borrowed",
									"assets": "The addresses of the assets being flash-borrowed",
									"modes": "Types of the debt to open if the flash loan is not returned:   0 -> Don't open any debt, just revert if funds can't be transferred from the receiver   1 -> Open debt at stable rate for the value of the amount flash-borrowed to the `onBehalfOf` address   2 -> Open debt at variable rate for the value of the amount flash-borrowed to the `onBehalfOf` address",
									"onBehalfOf": "The address  that will receive the debt in the case of using on `modes` 1 or 2",
									"params": "Variadic packed params to pass to the receiver as extra information",
									"receiverAddress": "The address of the contract receiving the funds, implementing the IFlashLoanReceiver interface",
									"referralCode": "Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man*"
								}
							},
							"getConfiguration(address)": {
								"details": "Returns the configuration of the reserve",
								"params": {
									"asset": "The address of the underlying asset of the reserve"
								},
								"returns": {
									"_0": "The configuration of the reserve*"
								}
							},
							"getReserveData(address)": {
								"details": "Returns the state and configuration of the reserve",
								"params": {
									"asset": "The address of the underlying asset of the reserve"
								},
								"returns": {
									"_0": "The state of the reserve*"
								}
							},
							"getReserveNormalizedIncome(address)": {
								"details": "Returns the normalized income normalized income of the reserve",
								"params": {
									"asset": "The address of the underlying asset of the reserve"
								},
								"returns": {
									"_0": "The reserve's normalized income"
								}
							},
							"getReserveNormalizedVariableDebt(address)": {
								"details": "Returns the normalized variable debt per unit of asset",
								"params": {
									"asset": "The address of the underlying asset of the reserve"
								},
								"returns": {
									"_0": "The reserve normalized variable debt"
								}
							},
							"getUserAccountData(address)": {
								"details": "Returns the user account data across all the reserves",
								"params": {
									"user": "The address of the user"
								},
								"returns": {
									"availableBorrowsETH": "the borrowing power left of the user",
									"currentLiquidationThreshold": "the liquidation threshold of the user",
									"healthFactor": "the current health factor of the user*",
									"ltv": "the loan to value of the user",
									"totalCollateralETH": "the total collateral in ETH of the user",
									"totalDebtETH": "the total debt in ETH of the user"
								}
							},
							"getUserConfiguration(address)": {
								"details": "Returns the configuration of the user across all the reserves",
								"params": {
									"user": "The user address"
								},
								"returns": {
									"_0": "The configuration of the user*"
								}
							},
							"liquidationCall(address,address,address,uint256,bool)": {
								"details": "Function to liquidate a non-healthy position collateral-wise, with Health Factor below 1 - The caller (liquidator) covers `debtToCover` amount of debt of the user getting liquidated, and receives   a proportionally amount of the `collateralAsset` plus a bonus to cover market risk",
								"params": {
									"collateralAsset": "The address of the underlying asset used as collateral, to receive as result of the liquidation",
									"debtAsset": "The address of the underlying borrowed asset to be repaid with the liquidation",
									"debtToCover": "The debt amount of borrowed `asset` the liquidator wants to cover",
									"receiveAToken": "`true` if the liquidators wants to receive the collateral aTokens, `false` if he wants to receive the underlying collateral asset directly*",
									"user": "The address of the borrower getting liquidated"
								}
							},
							"rebalanceStableBorrowRate(address,address)": {
								"details": "Rebalances the stable interest rate of a user to the current stable rate defined on the reserve. - Users can be rebalanced if the following conditions are satisfied:     1. Usage ratio is above 95%     2. the current deposit APY is below REBALANCE_UP_THRESHOLD * maxVariableBorrowRate, which means that too much has been        borrowed at a stable rate and depositors are not earning enough",
								"params": {
									"asset": "The address of the underlying asset borrowed",
									"user": "The address of the user to be rebalanced*"
								}
							},
							"repay(address,uint256,uint256,address)": {
								"params": {
									"amount": "The amount to repay - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`",
									"asset": "The address of the borrowed underlying asset previously borrowed",
									"onBehalfOf": "Address of the user who will get his debt reduced/removed. Should be the address of the user calling the function if he wants to reduce/remove his own debt, or the address of any other other borrower whose debt should be removed",
									"rateMode": "The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable"
								},
								"returns": {
									"_0": "The final amount repaid*"
								}
							},
							"setUserUseReserveAsCollateral(address,bool)": {
								"details": "Allows depositors to enable/disable a specific deposited asset as collateral",
								"params": {
									"asset": "The address of the underlying asset deposited",
									"useAsCollateral": "`true` if the user wants to use the deposit as collateral, `false` otherwise*"
								}
							},
							"swapBorrowRateMode(address,uint256)": {
								"details": "Allows a borrower to swap his debt between stable and variable mode, or viceversa",
								"params": {
									"asset": "The address of the underlying asset borrowed",
									"rateMode": "The rate mode that the user wants to swap to*"
								}
							},
							"withdraw(address,uint256,address)": {
								"details": "Withdraws an `amount` of underlying asset from the reserve, burning the equivalent aTokens owned E.g. User has 100 aUSDC, calls withdraw() and receives 100 USDC, burning the 100 aUSDC",
								"params": {
									"amount": "The underlying amount to be withdrawn   - Send the value type(uint256).max in order to withdraw the whole aToken balance",
									"asset": "The address of the underlying asset to withdraw",
									"to": "Address that will receive the underlying, same as msg.sender if the user   wants to receive it on his own wallet, or a different address if the beneficiary is a   different wallet"
								},
								"returns": {
									"_0": "The final amount withdrawn*"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"borrow(address,uint256,uint256,uint16,address)": "a415bcad",
							"deposit(address,uint256,address,uint16)": "e8eda9df",
							"finalizeTransfer(address,address,address,uint256,uint256,uint256)": "d5ed3933",
							"flashLoan(address,address[],uint256[],uint256[],address,bytes,uint16)": "ab9c4b5d",
							"getAddressesProvider()": "fe65acfe",
							"getConfiguration(address)": "c44b11f7",
							"getReserveData(address)": "35ea6a75",
							"getReserveNormalizedIncome(address)": "d15e0053",
							"getReserveNormalizedVariableDebt(address)": "386497fd",
							"getReservesList()": "d1946dbc",
							"getUserAccountData(address)": "bf92857c",
							"getUserConfiguration(address)": "4417a583",
							"initReserve(address,address,address,address,address)": "7a708e92",
							"liquidationCall(address,address,address,uint256,bool)": "00a718a9",
							"paused()": "5c975abb",
							"rebalanceStableBorrowRate(address,address)": "cd112382",
							"repay(address,uint256,uint256,address)": "573ade81",
							"setConfiguration(address,uint256)": "b8d29276",
							"setPause(bool)": "bedb86fb",
							"setReserveInterestRateStrategyAddress(address,address)": "1d2118f9",
							"setUserUseReserveAsCollateral(address,bool)": "5a3b74b9",
							"swapBorrowRateMode(address,uint256)": "94ba89a2",
							"withdraw(address,uint256,address)": "69328dec"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"borrowRateMode\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"borrowRate\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"referral\",\"type\":\"uint16\"}],\"name\":\"Borrow\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"referral\",\"type\":\"uint16\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"initiator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"premium\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"FlashLoan\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"collateralAsset\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"debtAsset\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"debtToCover\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidatedCollateralAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"receiveAToken\",\"type\":\"bool\"}],\"name\":\"LiquidationCall\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"RebalanceStableBorrowRate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"repayer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Repay\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidityRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stableBorrowRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"variableBorrowRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidityIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"variableBorrowIndex\",\"type\":\"uint256\"}],\"name\":\"ReserveDataUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"ReserveUsedAsCollateralDisabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"ReserveUsedAsCollateralEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rateMode\",\"type\":\"uint256\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestRateMode\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"}],\"name\":\"borrow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balanceFromAfter\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balanceToBefore\",\"type\":\"uint256\"}],\"name\":\"finalizeTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverAddress\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"modes\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"flashLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddressesProvider\",\"outputs\":[{\"internalType\":\"contract ILendingPoolAddressesProvider\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getConfiguration\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"data\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.ReserveConfigurationMap\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getReserveData\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"totalLiquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"availableLiquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalStableDebt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalVariableDebt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidityRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"variableBorrowRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stableBorrowRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"averageStableBorrowRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidityIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"variableBorrowIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint40\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint40\"}],\"internalType\":\"struct DataTypes.ReserveData\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getReserveNormalizedIncome\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getReserveNormalizedVariableDebt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReservesList\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserAccountData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalCollateralETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalDebtETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"availableBorrowsETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentLiquidationThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ltv\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"healthFactor\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserConfiguration\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"data\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.UserConfigurationMap\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"aTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"stableDebtAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"variableDebtAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"interestRateStrategyAddress\",\"type\":\"address\"}],\"name\":\"initReserve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collateralAsset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"debtAsset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"debtToCover\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"receiveAToken\",\"type\":\"bool\"}],\"name\":\"liquidationCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"rebalanceStableBorrowRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateMode\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"}],\"name\":\"repay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"configuration\",\"type\":\"uint256\"}],\"name\":\"setConfiguration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"val\",\"type\":\"bool\"}],\"name\":\"setPause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"rateStrategyAddress\",\"type\":\"address\"}],\"name\":\"setReserveInterestRateStrategyAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useAsCollateral\",\"type\":\"bool\"}],\"name\":\"setUserUseReserveAsCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rateMode\",\"type\":\"uint256\"}],\"name\":\"swapBorrowRateMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Borrow(address,address,address,uint256,uint256,uint256,uint16)\":{\"details\":\"Emitted on borrow() and flashLoan() when debt needs to be opened\",\"params\":{\"amount\":\"The amount borrowed out\",\"borrowRate\":\"The numeric rate at which the user has borrowed\",\"borrowRateMode\":\"The rate mode: 1 for Stable, 2 for Variable\",\"onBehalfOf\":\"The address that will be getting the debt\",\"referral\":\"The referral code used*\",\"reserve\":\"The address of the underlying asset being borrowed\",\"user\":\"The address of the user initiating the borrow(), receiving the funds on borrow() or just initiator of the transaction on flashLoan()\"}},\"Deposit(address,address,address,uint256,uint16)\":{\"details\":\"Emitted on deposit()\",\"params\":{\"amount\":\"The amount deposited\",\"onBehalfOf\":\"The beneficiary of the deposit, receiving the aTokens\",\"referral\":\"The referral code used*\",\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address initiating the deposit\"}},\"FlashLoan(address,address,address,uint256,uint256,uint16)\":{\"details\":\"Emitted on flashLoan()\",\"params\":{\"amount\":\"The amount flash borrowed\",\"asset\":\"The address of the asset being flash borrowed\",\"initiator\":\"The address initiating the flash loan\",\"premium\":\"The fee flash borrowed\",\"referralCode\":\"The referral code used*\",\"target\":\"The address of the flash loan receiver contract\"}},\"LiquidationCall(address,address,address,uint256,uint256,address,bool)\":{\"details\":\"Emitted when a borrower is liquidated. This event is emitted by the LendingPool via LendingPoolCollateral manager using a DELEGATECALL This allows to have the events in the generated ABI for LendingPool.\",\"params\":{\"collateralAsset\":\"The address of the underlying asset used as collateral, to receive as result of the liquidation\",\"debtAsset\":\"The address of the underlying borrowed asset to be repaid with the liquidation\",\"debtToCover\":\"The debt amount of borrowed `asset` the liquidator wants to cover\",\"liquidatedCollateralAmount\":\"The amount of collateral received by the liiquidator\",\"liquidator\":\"The address of the liquidator\",\"receiveAToken\":\"`true` if the liquidators wants to receive the collateral aTokens, `false` if he wants to receive the underlying collateral asset directly*\",\"user\":\"The address of the borrower getting liquidated\"}},\"Paused()\":{\"details\":\"Emitted when the pause is triggered.\"},\"RebalanceStableBorrowRate(address,address)\":{\"details\":\"Emitted on rebalanceStableBorrowRate()\",\"params\":{\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address of the user for which the rebalance has been executed*\"}},\"Repay(address,address,address,uint256)\":{\"details\":\"Emitted on repay()\",\"params\":{\"amount\":\"The amount repaid*\",\"repayer\":\"The address of the user initiating the repay(), providing the funds\",\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The beneficiary of the repayment, getting his debt reduced\"}},\"ReserveDataUpdated(address,uint256,uint256,uint256,uint256,uint256)\":{\"details\":\"Emitted when the state of a reserve is updated. NOTE: This event is actually declared in the ReserveLogic library and emitted in the updateInterestRates() function. Since the function is internal, the event will actually be fired by the LendingPool contract. The event is therefore replicated here so it gets added to the LendingPool ABI\",\"params\":{\"liquidityIndex\":\"The new liquidity index\",\"liquidityRate\":\"The new liquidity rate\",\"reserve\":\"The address of the underlying asset of the reserve\",\"stableBorrowRate\":\"The new stable borrow rate\",\"variableBorrowIndex\":\"The new variable borrow index*\",\"variableBorrowRate\":\"The new variable borrow rate\"}},\"ReserveUsedAsCollateralDisabled(address,address)\":{\"details\":\"Emitted on setUserUseReserveAsCollateral()\",\"params\":{\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address of the user enabling the usage as collateral*\"}},\"ReserveUsedAsCollateralEnabled(address,address)\":{\"details\":\"Emitted on setUserUseReserveAsCollateral()\",\"params\":{\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address of the user enabling the usage as collateral*\"}},\"Swap(address,address,uint256)\":{\"details\":\"Emitted on swapBorrowRateMode()\",\"params\":{\"rateMode\":\"The rate mode that the user wants to swap to*\",\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address of the user swapping his rate mode\"}},\"Unpaused()\":{\"details\":\"Emitted when the pause is lifted.\"},\"Withdraw(address,address,address,uint256)\":{\"details\":\"Emitted on withdraw()\",\"params\":{\"amount\":\"The amount to be withdrawn*\",\"reserve\":\"The address of the underlyng asset being withdrawn\",\"to\":\"Address that will receive the underlying\",\"user\":\"The address initiating the withdrawal, owner of aTokens\"}}},\"kind\":\"dev\",\"methods\":{\"borrow(address,uint256,uint256,uint16,address)\":{\"details\":\"Allows users to borrow a specific `amount` of the reserve underlying asset, provided that the borrower already deposited enough collateral, or he was given enough allowance by a credit delegator on the corresponding debt token (StableDebtToken or VariableDebtToken) - E.g. User borrows 100 USDC passing as `onBehalfOf` his own address, receiving the 100 USDC in his wallet   and 100 stable/variable debt tokens, depending on the `interestRateMode`\",\"params\":{\"amount\":\"The amount to be borrowed\",\"asset\":\"The address of the underlying asset to borrow\",\"interestRateMode\":\"The interest rate mode at which the user wants to borrow: 1 for Stable, 2 for Variable\",\"onBehalfOf\":\"Address of the user who will receive the debt. Should be the address of the borrower itself calling the function if he wants to borrow against his own collateral, or the address of the credit delegator if he has been given credit delegation allowance*\",\"referralCode\":\"Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man\"}},\"deposit(address,uint256,address,uint16)\":{\"details\":\"Deposits an `amount` of underlying asset into the reserve, receiving in return overlying aTokens. - E.g. User deposits 100 USDC and gets in return 100 aUSDC\",\"params\":{\"amount\":\"The amount to be deposited\",\"asset\":\"The address of the underlying asset to deposit\",\"onBehalfOf\":\"The address that will receive the aTokens, same as msg.sender if the user   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens   is a different wallet\",\"referralCode\":\"Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man*\"}},\"flashLoan(address,address[],uint256[],uint256[],address,bytes,uint16)\":{\"details\":\"Allows smartcontracts to access the liquidity of the pool within one transaction, as long as the amount taken plus a fee is returned. IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept into consideration. For further details please visit https://developers.aave.com\",\"params\":{\"amounts\":\"The amounts amounts being flash-borrowed\",\"assets\":\"The addresses of the assets being flash-borrowed\",\"modes\":\"Types of the debt to open if the flash loan is not returned:   0 -> Don't open any debt, just revert if funds can't be transferred from the receiver   1 -> Open debt at stable rate for the value of the amount flash-borrowed to the `onBehalfOf` address   2 -> Open debt at variable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\",\"onBehalfOf\":\"The address  that will receive the debt in the case of using on `modes` 1 or 2\",\"params\":\"Variadic packed params to pass to the receiver as extra information\",\"receiverAddress\":\"The address of the contract receiving the funds, implementing the IFlashLoanReceiver interface\",\"referralCode\":\"Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man*\"}},\"getConfiguration(address)\":{\"details\":\"Returns the configuration of the reserve\",\"params\":{\"asset\":\"The address of the underlying asset of the reserve\"},\"returns\":{\"_0\":\"The configuration of the reserve*\"}},\"getReserveData(address)\":{\"details\":\"Returns the state and configuration of the reserve\",\"params\":{\"asset\":\"The address of the underlying asset of the reserve\"},\"returns\":{\"_0\":\"The state of the reserve*\"}},\"getReserveNormalizedIncome(address)\":{\"details\":\"Returns the normalized income normalized income of the reserve\",\"params\":{\"asset\":\"The address of the underlying asset of the reserve\"},\"returns\":{\"_0\":\"The reserve's normalized income\"}},\"getReserveNormalizedVariableDebt(address)\":{\"details\":\"Returns the normalized variable debt per unit of asset\",\"params\":{\"asset\":\"The address of the underlying asset of the reserve\"},\"returns\":{\"_0\":\"The reserve normalized variable debt\"}},\"getUserAccountData(address)\":{\"details\":\"Returns the user account data across all the reserves\",\"params\":{\"user\":\"The address of the user\"},\"returns\":{\"availableBorrowsETH\":\"the borrowing power left of the user\",\"currentLiquidationThreshold\":\"the liquidation threshold of the user\",\"healthFactor\":\"the current health factor of the user*\",\"ltv\":\"the loan to value of the user\",\"totalCollateralETH\":\"the total collateral in ETH of the user\",\"totalDebtETH\":\"the total debt in ETH of the user\"}},\"getUserConfiguration(address)\":{\"details\":\"Returns the configuration of the user across all the reserves\",\"params\":{\"user\":\"The user address\"},\"returns\":{\"_0\":\"The configuration of the user*\"}},\"liquidationCall(address,address,address,uint256,bool)\":{\"details\":\"Function to liquidate a non-healthy position collateral-wise, with Health Factor below 1 - The caller (liquidator) covers `debtToCover` amount of debt of the user getting liquidated, and receives   a proportionally amount of the `collateralAsset` plus a bonus to cover market risk\",\"params\":{\"collateralAsset\":\"The address of the underlying asset used as collateral, to receive as result of the liquidation\",\"debtAsset\":\"The address of the underlying borrowed asset to be repaid with the liquidation\",\"debtToCover\":\"The debt amount of borrowed `asset` the liquidator wants to cover\",\"receiveAToken\":\"`true` if the liquidators wants to receive the collateral aTokens, `false` if he wants to receive the underlying collateral asset directly*\",\"user\":\"The address of the borrower getting liquidated\"}},\"rebalanceStableBorrowRate(address,address)\":{\"details\":\"Rebalances the stable interest rate of a user to the current stable rate defined on the reserve. - Users can be rebalanced if the following conditions are satisfied:     1. Usage ratio is above 95%     2. the current deposit APY is below REBALANCE_UP_THRESHOLD * maxVariableBorrowRate, which means that too much has been        borrowed at a stable rate and depositors are not earning enough\",\"params\":{\"asset\":\"The address of the underlying asset borrowed\",\"user\":\"The address of the user to be rebalanced*\"}},\"repay(address,uint256,uint256,address)\":{\"params\":{\"amount\":\"The amount to repay - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\",\"asset\":\"The address of the borrowed underlying asset previously borrowed\",\"onBehalfOf\":\"Address of the user who will get his debt reduced/removed. Should be the address of the user calling the function if he wants to reduce/remove his own debt, or the address of any other other borrower whose debt should be removed\",\"rateMode\":\"The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\"},\"returns\":{\"_0\":\"The final amount repaid*\"}},\"setUserUseReserveAsCollateral(address,bool)\":{\"details\":\"Allows depositors to enable/disable a specific deposited asset as collateral\",\"params\":{\"asset\":\"The address of the underlying asset deposited\",\"useAsCollateral\":\"`true` if the user wants to use the deposit as collateral, `false` otherwise*\"}},\"swapBorrowRateMode(address,uint256)\":{\"details\":\"Allows a borrower to swap his debt between stable and variable mode, or viceversa\",\"params\":{\"asset\":\"The address of the underlying asset borrowed\",\"rateMode\":\"The rate mode that the user wants to swap to*\"}},\"withdraw(address,uint256,address)\":{\"details\":\"Withdraws an `amount` of underlying asset from the reserve, burning the equivalent aTokens owned E.g. User has 100 aUSDC, calls withdraw() and receives 100 USDC, burning the 100 aUSDC\",\"params\":{\"amount\":\"The underlying amount to be withdrawn   - Send the value type(uint256).max in order to withdraw the whole aToken balance\",\"asset\":\"The address of the underlying asset to withdraw\",\"to\":\"Address that will receive the underlying, same as msg.sender if the user   wants to receive it on his own wallet, or a different address if the beneficiary is a   different wallet\"},\"returns\":{\"_0\":\"The final amount withdrawn*\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"repay(address,uint256,uint256,address)\":{\"notice\":\"Repays a borrowed `amount` on a specific reserve, burning the equivalent debt tokens owned - E.g. User repays 100 USDC, burning 100 variable/stable debt tokens of the `onBehalfOf` address\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/aave/protocol-v2/contracts/interfaces/ILendingPool.sol\":\"ILendingPool\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/aave/protocol-v2/contracts/interfaces/DataTypes.sol\":{\"keccak256\":\"0x81caed3fbb24bd8721c85094546ee31f033209a1dc5b8aa4d8ce094388666cb4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4ab7c3612816908da41df1a0f62bde806a9fe088198dcd7b70f6a8f31c7d131\",\"dweb:/ipfs/QmRNtcEwyFdiJmbJ1oyDiDZ3foyrHchCMo1MYjAXYR7zdd\"]},\"contracts/aave/protocol-v2/contracts/interfaces/ILendingPool.sol\":{\"keccak256\":\"0xbcbeb7a9a1bc100bae12891df6265691103d76f71e7eed72902d2024f05f654b\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://898ea64e297442bb3bc7c7215786ae6453dce7900200f836041ff9ed7867f4e0\",\"dweb:/ipfs/QmTuSyHSYg7PNo6eRDe1ATJZ2UxDxwFJUshJRnT22co19a\"]},\"contracts/aave/protocol-v2/contracts/interfaces/ILendingPoolAddressesProvider.sol\":{\"keccak256\":\"0x219d7db359e51dfd51b0a454dc284c44671b6ce6543b7f383ef0aec4534c7ea0\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://f09e938d9d6edadd398245b27e15eb0df96f20dd5104f523a10cfe4a9329ba92\",\"dweb:/ipfs/QmNhjFNzjeKkqUNe9SJnxiuH8wAQYVp9MX6mAGBzeESpyz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"repay(address,uint256,uint256,address)": {
								"notice": "Repays a borrowed `amount` on a specific reserve, burning the equivalent debt tokens owned - E.g. User repays 100 USDC, burning 100 variable/stable debt tokens of the `onBehalfOf` address"
							}
						},
						"version": 1
					}
				}
			},
			"contracts/aave/protocol-v2/contracts/interfaces/ILendingPoolAddressesProvider.sol": {
				"ILendingPoolAddressesProvider": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "hasProxy",
									"type": "bool"
								}
							],
							"name": "AddressSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "ConfigurationAdminUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "EmergencyAdminUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "LendingPoolCollateralManagerUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "LendingPoolConfiguratorUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "LendingPoolUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "LendingRateOracleUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "newMarketId",
									"type": "string"
								}
							],
							"name": "MarketIdSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "PriceOracleUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "ProxyCreated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								}
							],
							"name": "getAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getEmergencyAdmin",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getLendingPool",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getLendingPoolCollateralManager",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getLendingPoolConfigurator",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getLendingRateOracle",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getMarketId",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPoolAdmin",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPriceOracle",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "setAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "impl",
									"type": "address"
								}
							],
							"name": "setAddressAsProxy",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								}
							],
							"name": "setEmergencyAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "manager",
									"type": "address"
								}
							],
							"name": "setLendingPoolCollateralManager",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "configurator",
									"type": "address"
								}
							],
							"name": "setLendingPoolConfiguratorImpl",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "setLendingPoolImpl",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "lendingRateOracle",
									"type": "address"
								}
							],
							"name": "setLendingRateOracle",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "marketId",
									"type": "string"
								}
							],
							"name": "setMarketId",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								}
							],
							"name": "setPoolAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "priceOracle",
									"type": "address"
								}
							],
							"name": "setPriceOracle",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Aave*",
						"details": "Main registry of addresses part of or connected to the protocol, including permissioned roles - Acting also as factory of proxies and admin of those, so with right to change its implementations - Owned by the Aave Governance",
						"kind": "dev",
						"methods": {},
						"title": "LendingPoolAddressesProvider contract",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getAddress(bytes32)": "21f8a721",
							"getEmergencyAdmin()": "ddcaa9ea",
							"getLendingPool()": "0261bf8b",
							"getLendingPoolCollateralManager()": "712d9171",
							"getLendingPoolConfigurator()": "85c858b1",
							"getLendingRateOracle()": "3618abba",
							"getMarketId()": "568ef470",
							"getPoolAdmin()": "aecda378",
							"getPriceOracle()": "fca513a8",
							"setAddress(bytes32,address)": "ca446dd9",
							"setAddressAsProxy(bytes32,address)": "5dcc528c",
							"setEmergencyAdmin(address)": "35da3394",
							"setLendingPoolCollateralManager(address)": "398e5553",
							"setLendingPoolConfiguratorImpl(address)": "c12542df",
							"setLendingPoolImpl(address)": "5aef021f",
							"setLendingRateOracle(address)": "820d1274",
							"setMarketId(string)": "f67b1847",
							"setPoolAdmin(address)": "283d62ad",
							"setPriceOracle(address)": "530e784f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"hasProxy\",\"type\":\"bool\"}],\"name\":\"AddressSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"ConfigurationAdminUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"EmergencyAdminUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"LendingPoolCollateralManagerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"LendingPoolConfiguratorUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"LendingPoolUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"LendingRateOracleUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newMarketId\",\"type\":\"string\"}],\"name\":\"MarketIdSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"PriceOracleUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"ProxyCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"getAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEmergencyAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLendingPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLendingPoolCollateralManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLendingPoolConfigurator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLendingRateOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMarketId\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"setAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"impl\",\"type\":\"address\"}],\"name\":\"setAddressAsProxy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"setEmergencyAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"}],\"name\":\"setLendingPoolCollateralManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"configurator\",\"type\":\"address\"}],\"name\":\"setLendingPoolConfiguratorImpl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"setLendingPoolImpl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lendingRateOracle\",\"type\":\"address\"}],\"name\":\"setLendingRateOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"marketId\",\"type\":\"string\"}],\"name\":\"setMarketId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"setPoolAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceOracle\",\"type\":\"address\"}],\"name\":\"setPriceOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Aave*\",\"details\":\"Main registry of addresses part of or connected to the protocol, including permissioned roles - Acting also as factory of proxies and admin of those, so with right to change its implementations - Owned by the Aave Governance\",\"kind\":\"dev\",\"methods\":{},\"title\":\"LendingPoolAddressesProvider contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/aave/protocol-v2/contracts/interfaces/ILendingPoolAddressesProvider.sol\":\"ILendingPoolAddressesProvider\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/aave/protocol-v2/contracts/interfaces/ILendingPoolAddressesProvider.sol\":{\"keccak256\":\"0x219d7db359e51dfd51b0a454dc284c44671b6ce6543b7f383ef0aec4534c7ea0\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://f09e938d9d6edadd398245b27e15eb0df96f20dd5104f523a10cfe4a9329ba92\",\"dweb:/ipfs/QmNhjFNzjeKkqUNe9SJnxiuH8wAQYVp9MX6mAGBzeESpyz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol": {
				"AggregatorV3Interface": {
					"abi": [
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "description",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint80",
									"name": "_roundId",
									"type": "uint80"
								}
							],
							"name": "getRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"decimals()": "313ce567",
							"description()": "7284e416",
							"getRoundData(uint80)": "9a6fc8f5",
							"latestRoundData()": "feaf968c",
							"version()": "54fd4d50"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x257a8d28fa83d3d942547c8e129ef465e4b5f3f31171e7be4739a4c98da6b4f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d39e11b1dc7b9b8ccdabbc9be442ab7cda4a81c748f57e316dcb1bcb4a28bf9\",\"dweb:/ipfs/QmaG6vz6W6iEUBsbHSBob5mdcitYxWjoygxREHpsJHfWrS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC-721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x3c504de1aed405d34ff26733c7b6edc9fd9fd4f9aac504f541a4238dd50bf1d2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e373cc851a65ef3f01bb825f59c3c9cdb1969adab8ec871dd1f197423f6b9ed\",\"dweb:/ipfs/QmWNM3TyZgfxTKJsfqk7ZJk7DmZr29iab3f8T4c1itiynm\"]},\"contracts/openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x1e96fdc714c1d5e754ad716c7cb4ac8daa28856879f2d40bb428720adac47b69\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1725af76c335db636686b0b8f36dfdcfa15d40993509ed80c6e579dfd3e1c2f3\",\"dweb:/ipfs/QmcT6Bp635CWdmxQnv84bicV4eaD46cY1ywZNgriSusJXw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol": {
				"IERC721Enumerable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenOfOwnerByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"tokenByIndex(uint256)": {
								"details": "Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens."
							},
							"tokenOfOwnerByIndex(address,uint256)": {
								"details": "Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
							},
							"totalSupply()": {
								"details": "Returns the total amount of tokens stored by the contract."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional enumeration extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"tokenByIndex(uint256)": "4f6ccce7",
							"tokenOfOwnerByIndex(address,uint256)": "2f745c59",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"tokenByIndex(uint256)\":{\"details\":\"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional enumeration extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol\":\"IERC721Enumerable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x3c504de1aed405d34ff26733c7b6edc9fd9fd4f9aac504f541a4238dd50bf1d2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e373cc851a65ef3f01bb825f59c3c9cdb1969adab8ec871dd1f197423f6b9ed\",\"dweb:/ipfs/QmWNM3TyZgfxTKJsfqk7ZJk7DmZr29iab3f8T4c1itiynm\"]},\"contracts/openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol\":{\"keccak256\":\"0x49ae5d944b6f25701d67ef1d76cbce766f062bf1958a34b13543f539d7882850\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://851181789f63ce009fa30ddabd8ef159d90733216d5d1f2f9e13d16688f67489\",\"dweb:/ipfs/QmdT4okvCWQC1eSYNFfyqjUkJBAiWbSZMwAazzEuizBJSb\"]},\"contracts/openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x1e96fdc714c1d5e754ad716c7cb4ac8daa28856879f2d40bb428720adac47b69\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1725af76c335db636686b0b8f36dfdcfa15d40993509ed80c6e579dfd3e1c2f3\",\"dweb:/ipfs/QmcT6Bp635CWdmxQnv84bicV4eaD46cY1ywZNgriSusJXw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/openzeppelin/contracts/token/ERC721/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/openzeppelin/contracts/token/ERC721/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x3c504de1aed405d34ff26733c7b6edc9fd9fd4f9aac504f541a4238dd50bf1d2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e373cc851a65ef3f01bb825f59c3c9cdb1969adab8ec871dd1f197423f6b9ed\",\"dweb:/ipfs/QmWNM3TyZgfxTKJsfqk7ZJk7DmZr29iab3f8T4c1itiynm\"]},\"contracts/openzeppelin/contracts/token/ERC721/IERC721Metadata.sol\":{\"keccak256\":\"0xfd743e54fb2a27413f703a389d1d78b003d957eaebbcfa15051d89793cf5136a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07683e02a762080a63f5ccec780488e5b87f79ded66d4c1e27f5cd62c1b5f8cb\",\"dweb:/ipfs/QmNtAngsTxV2c2XAKrqAo7PUUpXz1J69LNzwkEun4QTX7w\"]},\"contracts/openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x1e96fdc714c1d5e754ad716c7cb4ac8daa28856879f2d40bb428720adac47b69\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1725af76c335db636686b0b8f36dfdcfa15d40993509ed80c6e579dfd3e1c2f3\",\"dweb:/ipfs/QmcT6Bp635CWdmxQnv84bicV4eaD46cY1ywZNgriSusJXw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x1e96fdc714c1d5e754ad716c7cb4ac8daa28856879f2d40bb428720adac47b69\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1725af76c335db636686b0b8f36dfdcfa15d40993509ed80c6e579dfd3e1c2f3\",\"dweb:/ipfs/QmcT6Bp635CWdmxQnv84bicV4eaD46cY1ywZNgriSusJXw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/IERC721Permit.sol": {
				"IERC721Permit": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"returns": {
									"_0": "The domain seperator used in encoding of permit signature"
								}
							},
							"PERMIT_TYPEHASH()": {
								"returns": {
									"_0": "The typehash for the permit"
								}
							},
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"permit(address,uint256,uint256,uint8,bytes32,bytes32)": {
								"params": {
									"deadline": "The deadline timestamp by which the call must be mined for the approve to work",
									"r": "Must produce valid secp256k1 signature from the holder along with `v` and `s`",
									"s": "Must produce valid secp256k1 signature from the holder along with `r` and `v`",
									"spender": "The account that is being approved",
									"tokenId": "The ID of the token that is being approved for spending",
									"v": "Must produce valid secp256k1 signature from the holder along with `r` and `s`"
								}
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC721 with permit",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"PERMIT_TYPEHASH()": "30adf81f",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"permit(address,uint256,uint256,uint8,bytes32,bytes32)": "7ac2ff7b",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"returns\":{\"_0\":\"The domain seperator used in encoding of permit signature\"}},\"PERMIT_TYPEHASH()\":{\"returns\":{\"_0\":\"The typehash for the permit\"}},\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"permit(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"params\":{\"deadline\":\"The deadline timestamp by which the call must be mined for the approve to work\",\"r\":\"Must produce valid secp256k1 signature from the holder along with `v` and `s`\",\"s\":\"Must produce valid secp256k1 signature from the holder along with `r` and `v`\",\"spender\":\"The account that is being approved\",\"tokenId\":\"The ID of the token that is being approved for spending\",\"v\":\"Must produce valid secp256k1 signature from the holder along with `r` and `s`\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC721 with permit\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"notice\":\"The domain separator used in the permit signature\"},\"PERMIT_TYPEHASH()\":{\"notice\":\"The permit typehash used in the permit signature\"},\"permit(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Approve of a specific token ID for spending by spender via signature\"}},\"notice\":\"Extension to ERC721 that includes a permit function for signature based approvals\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/uniswap/v3-periphery/contracts/interfaces/IERC721Permit.sol\":\"IERC721Permit\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x3c504de1aed405d34ff26733c7b6edc9fd9fd4f9aac504f541a4238dd50bf1d2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e373cc851a65ef3f01bb825f59c3c9cdb1969adab8ec871dd1f197423f6b9ed\",\"dweb:/ipfs/QmWNM3TyZgfxTKJsfqk7ZJk7DmZr29iab3f8T4c1itiynm\"]},\"contracts/openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x1e96fdc714c1d5e754ad716c7cb4ac8daa28856879f2d40bb428720adac47b69\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1725af76c335db636686b0b8f36dfdcfa15d40993509ed80c6e579dfd3e1c2f3\",\"dweb:/ipfs/QmcT6Bp635CWdmxQnv84bicV4eaD46cY1ywZNgriSusJXw\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/IERC721Permit.sol\":{\"keccak256\":\"0x9915ccd225c6840a809606b1a929404b0299bff8d7cbb6bc8439c5dfd74046d2\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f0cdf83091593d05e85f50c1c40cf17c8c1eb6aeaac87cb9f8c91e8e31cf162c\",\"dweb:/ipfs/QmZxxuzCfsPLnARKERZj2fvy2mEvyQWJd9uDWpFwj4UkJa\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"notice": "The domain separator used in the permit signature"
							},
							"PERMIT_TYPEHASH()": {
								"notice": "The permit typehash used in the permit signature"
							},
							"permit(address,uint256,uint256,uint8,bytes32,bytes32)": {
								"notice": "Approve of a specific token ID for spending by spender via signature"
							}
						},
						"notice": "Extension to ERC721 that includes a permit function for signature based approvals",
						"version": 1
					}
				}
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol": {
				"INonfungiblePositionManager": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Collect",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "DecreaseLiquidity",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "IncreaseLiquidity",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "WETH9",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint128",
											"name": "amount0Max",
											"type": "uint128"
										},
										{
											"internalType": "uint128",
											"name": "amount1Max",
											"type": "uint128"
										}
									],
									"internalType": "struct INonfungiblePositionManager.CollectParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "collect",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								}
							],
							"name": "createAndInitializePoolIfNecessary",
							"outputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint128",
											"name": "liquidity",
											"type": "uint128"
										},
										{
											"internalType": "uint256",
											"name": "amount0Min",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount1Min",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										}
									],
									"internalType": "struct INonfungiblePositionManager.DecreaseLiquidityParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "decreaseLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount0Desired",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount1Desired",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount0Min",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount1Min",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										}
									],
									"internalType": "struct INonfungiblePositionManager.IncreaseLiquidityParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "increaseLiquidity",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "token0",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "token1",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "int24",
											"name": "tickLower",
											"type": "int24"
										},
										{
											"internalType": "int24",
											"name": "tickUpper",
											"type": "int24"
										},
										{
											"internalType": "uint256",
											"name": "amount0Desired",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount1Desired",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount0Min",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount1Min",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										}
									],
									"internalType": "struct INonfungiblePositionManager.MintParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "positions",
							"outputs": [
								{
									"internalType": "uint96",
									"name": "nonce",
									"type": "uint96"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside0LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside1LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "refundETH",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountMinimum",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "sweepToken",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenOfOwnerByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountMinimum",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "unwrapWETH9",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Collect(uint256,address,uint256,uint256)": {
								"details": "The amounts reported may not be exactly equivalent to the amounts transferred, due to rounding behavior",
								"params": {
									"amount0": "The amount of token0 owed to the position that was collected",
									"amount1": "The amount of token1 owed to the position that was collected",
									"recipient": "The address of the account that received the collected tokens",
									"tokenId": "The ID of the token for which underlying tokens were collected"
								}
							},
							"DecreaseLiquidity(uint256,uint128,uint256,uint256)": {
								"params": {
									"amount0": "The amount of token0 that was accounted for the decrease in liquidity",
									"amount1": "The amount of token1 that was accounted for the decrease in liquidity",
									"liquidity": "The amount by which liquidity for the NFT position was decreased",
									"tokenId": "The ID of the token for which liquidity was decreased"
								}
							},
							"IncreaseLiquidity(uint256,uint128,uint256,uint256)": {
								"details": "Also emitted when a token is minted",
								"params": {
									"amount0": "The amount of token0 that was paid for the increase in liquidity",
									"amount1": "The amount of token1 that was paid for the increase in liquidity",
									"liquidity": "The amount by which liquidity for the NFT position was increased",
									"tokenId": "The ID of the token for which liquidity was increased"
								}
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"returns": {
									"_0": "The domain seperator used in encoding of permit signature"
								}
							},
							"PERMIT_TYPEHASH()": {
								"returns": {
									"_0": "The typehash for the permit"
								}
							},
							"WETH9()": {
								"returns": {
									"_0": "Returns the address of WETH9"
								}
							},
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"burn(uint256)": {
								"params": {
									"tokenId": "The ID of the token that is being burned"
								}
							},
							"collect((uint256,address,uint128,uint128))": {
								"params": {
									"params": "tokenId The ID of the NFT for which tokens are being collected, recipient The account that should receive the tokens, amount0Max The maximum amount of token0 to collect, amount1Max The maximum amount of token1 to collect"
								},
								"returns": {
									"amount0": "The amount of fees collected in token0",
									"amount1": "The amount of fees collected in token1"
								}
							},
							"createAndInitializePoolIfNecessary(address,address,uint24,uint160)": {
								"details": "This method can be bundled with others via IMulticall for the first action (e.g. mint) performed against a pool",
								"params": {
									"fee": "The fee amount of the v3 pool for the specified token pair",
									"sqrtPriceX96": "The initial square root price of the pool as a Q64.96 value",
									"token0": "The contract address of token0 of the pool",
									"token1": "The contract address of token1 of the pool"
								},
								"returns": {
									"pool": "Returns the pool address based on the pair of tokens and fee, will return the newly created pool address if necessary"
								}
							},
							"decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))": {
								"params": {
									"params": "tokenId The ID of the token for which liquidity is being decreased, amount The amount by which liquidity will be decreased, amount0Min The minimum amount of token0 that should be accounted for the burned liquidity, amount1Min The minimum amount of token1 that should be accounted for the burned liquidity, deadline The time by which the transaction must be included to effect the change"
								},
								"returns": {
									"amount0": "The amount of token0 accounted to the position's tokens owed",
									"amount1": "The amount of token1 accounted to the position's tokens owed"
								}
							},
							"factory()": {
								"returns": {
									"_0": "Returns the address of the Uniswap V3 factory"
								}
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))": {
								"params": {
									"params": "tokenId The ID of the token for which liquidity is being increased, amount0Desired The desired amount of token0 to be spent, amount1Desired The desired amount of token1 to be spent, amount0Min The minimum amount of token0 to spend, which serves as a slippage check, amount1Min The minimum amount of token1 to spend, which serves as a slippage check, deadline The time by which the transaction must be included to effect the change"
								},
								"returns": {
									"amount0": "The amount of token0 to acheive resulting liquidity",
									"amount1": "The amount of token1 to acheive resulting liquidity",
									"liquidity": "The new liquidity amount as a result of the increase"
								}
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"mint((address,address,uint24,int24,int24,uint256,uint256,uint256,uint256,address,uint256))": {
								"details": "Call this when the pool does exist and is initialized. Note that if the pool is created but not initialized a method does not exist, i.e. the pool is assumed to be initialized.",
								"params": {
									"params": "The params necessary to mint a position, encoded as `MintParams` in calldata"
								},
								"returns": {
									"amount0": "The amount of token0",
									"amount1": "The amount of token1",
									"liquidity": "The amount of liquidity for this position",
									"tokenId": "The ID of the token that represents the minted position"
								}
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"permit(address,uint256,uint256,uint8,bytes32,bytes32)": {
								"params": {
									"deadline": "The deadline timestamp by which the call must be mined for the approve to work",
									"r": "Must produce valid secp256k1 signature from the holder along with `v` and `s`",
									"s": "Must produce valid secp256k1 signature from the holder along with `r` and `v`",
									"spender": "The account that is being approved",
									"tokenId": "The ID of the token that is being approved for spending",
									"v": "Must produce valid secp256k1 signature from the holder along with `r` and `s`"
								}
							},
							"positions(uint256)": {
								"details": "Throws if the token ID is not valid.",
								"params": {
									"tokenId": "The ID of the token that represents the position"
								},
								"returns": {
									"fee": "The fee associated with the pool",
									"feeGrowthInside0LastX128": "The fee growth of token0 as of the last action on the individual position",
									"feeGrowthInside1LastX128": "The fee growth of token1 as of the last action on the individual position",
									"liquidity": "The liquidity of the position",
									"nonce": "The nonce for permits",
									"operator": "The address that is approved for spending",
									"tickLower": "The lower end of the tick range for the position",
									"tickUpper": "The higher end of the tick range for the position",
									"token0": "The address of the token0 for a specific pool",
									"token1": "The address of the token1 for a specific pool",
									"tokensOwed0": "The uncollected amount of token0 owed to the position as of the last computation",
									"tokensOwed1": "The uncollected amount of token1 owed to the position as of the last computation"
								}
							},
							"refundETH()": {
								"details": "Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps that use ether for the input amount"
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"sweepToken(address,uint256,address)": {
								"details": "The amountMinimum parameter prevents malicious contracts from stealing the token from users",
								"params": {
									"amountMinimum": "The minimum amount of token required for a transfer",
									"recipient": "The destination address of the token",
									"token": "The contract address of the token which will be transferred to `recipient`"
								}
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenByIndex(uint256)": {
								"details": "Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens."
							},
							"tokenOfOwnerByIndex(address,uint256)": {
								"details": "Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"totalSupply()": {
								"details": "Returns the total amount of tokens stored by the contract."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							},
							"unwrapWETH9(uint256,address)": {
								"details": "The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.",
								"params": {
									"amountMinimum": "The minimum amount of WETH9 to unwrap",
									"recipient": "The address receiving ETH"
								}
							}
						},
						"title": "Non-fungible token for positions",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"PERMIT_TYPEHASH()": "30adf81f",
							"WETH9()": "4aa4a4fc",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"collect((uint256,address,uint128,uint128))": "fc6f7865",
							"createAndInitializePoolIfNecessary(address,address,uint24,uint160)": "13ead562",
							"decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))": "0c49ccbe",
							"factory()": "c45a0155",
							"getApproved(uint256)": "081812fc",
							"increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))": "219f5d17",
							"isApprovedForAll(address,address)": "e985e9c5",
							"mint((address,address,uint24,int24,int24,uint256,uint256,uint256,uint256,address,uint256))": "88316456",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"permit(address,uint256,uint256,uint8,bytes32,bytes32)": "7ac2ff7b",
							"positions(uint256)": "99fbab88",
							"refundETH()": "12210e8a",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"sweepToken(address,uint256,address)": "df2ab5bb",
							"symbol()": "95d89b41",
							"tokenByIndex(uint256)": "4f6ccce7",
							"tokenOfOwnerByIndex(address,uint256)": "2f745c59",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd",
							"unwrapWETH9(uint256,address)": "49404b7c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"DecreaseLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"IncreaseLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WETH9\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Max\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Max\",\"type\":\"uint128\"}],\"internalType\":\"struct INonfungiblePositionManager.CollectParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"createAndInitializePoolIfNecessary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"amount0Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct INonfungiblePositionManager.DecreaseLiquidityParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"decreaseLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount0Desired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Desired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount0Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct INonfungiblePositionManager.IncreaseLiquidityParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"increaseLiquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint256\",\"name\":\"amount0Desired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Desired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount0Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Min\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct INonfungiblePositionManager.MintParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"nonce\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"refundETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"sweepToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"unwrapWETH9\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Collect(uint256,address,uint256,uint256)\":{\"details\":\"The amounts reported may not be exactly equivalent to the amounts transferred, due to rounding behavior\",\"params\":{\"amount0\":\"The amount of token0 owed to the position that was collected\",\"amount1\":\"The amount of token1 owed to the position that was collected\",\"recipient\":\"The address of the account that received the collected tokens\",\"tokenId\":\"The ID of the token for which underlying tokens were collected\"}},\"DecreaseLiquidity(uint256,uint128,uint256,uint256)\":{\"params\":{\"amount0\":\"The amount of token0 that was accounted for the decrease in liquidity\",\"amount1\":\"The amount of token1 that was accounted for the decrease in liquidity\",\"liquidity\":\"The amount by which liquidity for the NFT position was decreased\",\"tokenId\":\"The ID of the token for which liquidity was decreased\"}},\"IncreaseLiquidity(uint256,uint128,uint256,uint256)\":{\"details\":\"Also emitted when a token is minted\",\"params\":{\"amount0\":\"The amount of token0 that was paid for the increase in liquidity\",\"amount1\":\"The amount of token1 that was paid for the increase in liquidity\",\"liquidity\":\"The amount by which liquidity for the NFT position was increased\",\"tokenId\":\"The ID of the token for which liquidity was increased\"}},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"returns\":{\"_0\":\"The domain seperator used in encoding of permit signature\"}},\"PERMIT_TYPEHASH()\":{\"returns\":{\"_0\":\"The typehash for the permit\"}},\"WETH9()\":{\"returns\":{\"_0\":\"Returns the address of WETH9\"}},\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"burn(uint256)\":{\"params\":{\"tokenId\":\"The ID of the token that is being burned\"}},\"collect((uint256,address,uint128,uint128))\":{\"params\":{\"params\":\"tokenId The ID of the NFT for which tokens are being collected, recipient The account that should receive the tokens, amount0Max The maximum amount of token0 to collect, amount1Max The maximum amount of token1 to collect\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"createAndInitializePoolIfNecessary(address,address,uint24,uint160)\":{\"details\":\"This method can be bundled with others via IMulticall for the first action (e.g. mint) performed against a pool\",\"params\":{\"fee\":\"The fee amount of the v3 pool for the specified token pair\",\"sqrtPriceX96\":\"The initial square root price of the pool as a Q64.96 value\",\"token0\":\"The contract address of token0 of the pool\",\"token1\":\"The contract address of token1 of the pool\"},\"returns\":{\"pool\":\"Returns the pool address based on the pair of tokens and fee, will return the newly created pool address if necessary\"}},\"decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))\":{\"params\":{\"params\":\"tokenId The ID of the token for which liquidity is being decreased, amount The amount by which liquidity will be decreased, amount0Min The minimum amount of token0 that should be accounted for the burned liquidity, amount1Min The minimum amount of token1 that should be accounted for the burned liquidity, deadline The time by which the transaction must be included to effect the change\"},\"returns\":{\"amount0\":\"The amount of token0 accounted to the position's tokens owed\",\"amount1\":\"The amount of token1 accounted to the position's tokens owed\"}},\"factory()\":{\"returns\":{\"_0\":\"Returns the address of the Uniswap V3 factory\"}},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))\":{\"params\":{\"params\":\"tokenId The ID of the token for which liquidity is being increased, amount0Desired The desired amount of token0 to be spent, amount1Desired The desired amount of token1 to be spent, amount0Min The minimum amount of token0 to spend, which serves as a slippage check, amount1Min The minimum amount of token1 to spend, which serves as a slippage check, deadline The time by which the transaction must be included to effect the change\"},\"returns\":{\"amount0\":\"The amount of token0 to acheive resulting liquidity\",\"amount1\":\"The amount of token1 to acheive resulting liquidity\",\"liquidity\":\"The new liquidity amount as a result of the increase\"}},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"mint((address,address,uint24,int24,int24,uint256,uint256,uint256,uint256,address,uint256))\":{\"details\":\"Call this when the pool does exist and is initialized. Note that if the pool is created but not initialized a method does not exist, i.e. the pool is assumed to be initialized.\",\"params\":{\"params\":\"The params necessary to mint a position, encoded as `MintParams` in calldata\"},\"returns\":{\"amount0\":\"The amount of token0\",\"amount1\":\"The amount of token1\",\"liquidity\":\"The amount of liquidity for this position\",\"tokenId\":\"The ID of the token that represents the minted position\"}},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"permit(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"params\":{\"deadline\":\"The deadline timestamp by which the call must be mined for the approve to work\",\"r\":\"Must produce valid secp256k1 signature from the holder along with `v` and `s`\",\"s\":\"Must produce valid secp256k1 signature from the holder along with `r` and `v`\",\"spender\":\"The account that is being approved\",\"tokenId\":\"The ID of the token that is being approved for spending\",\"v\":\"Must produce valid secp256k1 signature from the holder along with `r` and `s`\"}},\"positions(uint256)\":{\"details\":\"Throws if the token ID is not valid.\",\"params\":{\"tokenId\":\"The ID of the token that represents the position\"},\"returns\":{\"fee\":\"The fee associated with the pool\",\"feeGrowthInside0LastX128\":\"The fee growth of token0 as of the last action on the individual position\",\"feeGrowthInside1LastX128\":\"The fee growth of token1 as of the last action on the individual position\",\"liquidity\":\"The liquidity of the position\",\"nonce\":\"The nonce for permits\",\"operator\":\"The address that is approved for spending\",\"tickLower\":\"The lower end of the tick range for the position\",\"tickUpper\":\"The higher end of the tick range for the position\",\"token0\":\"The address of the token0 for a specific pool\",\"token1\":\"The address of the token1 for a specific pool\",\"tokensOwed0\":\"The uncollected amount of token0 owed to the position as of the last computation\",\"tokensOwed1\":\"The uncollected amount of token1 owed to the position as of the last computation\"}},\"refundETH()\":{\"details\":\"Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps that use ether for the input amount\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"sweepToken(address,uint256,address)\":{\"details\":\"The amountMinimum parameter prevents malicious contracts from stealing the token from users\",\"params\":{\"amountMinimum\":\"The minimum amount of token required for a transfer\",\"recipient\":\"The destination address of the token\",\"token\":\"The contract address of the token which will be transferred to `recipient`\"}},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenByIndex(uint256)\":{\"details\":\"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"},\"unwrapWETH9(uint256,address)\":{\"details\":\"The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.\",\"params\":{\"amountMinimum\":\"The minimum amount of WETH9 to unwrap\",\"recipient\":\"The address receiving ETH\"}}},\"title\":\"Non-fungible token for positions\",\"version\":1},\"userdoc\":{\"events\":{\"Collect(uint256,address,uint256,uint256)\":{\"notice\":\"Emitted when tokens are collected for a position NFT\"},\"DecreaseLiquidity(uint256,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is decreased for a position NFT\"},\"IncreaseLiquidity(uint256,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is increased for a position NFT\"}},\"kind\":\"user\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"notice\":\"The domain separator used in the permit signature\"},\"PERMIT_TYPEHASH()\":{\"notice\":\"The permit typehash used in the permit signature\"},\"burn(uint256)\":{\"notice\":\"Burns a token ID, which deletes it from the NFT contract. The token must have 0 liquidity and all tokens must be collected first.\"},\"collect((uint256,address,uint128,uint128))\":{\"notice\":\"Collects up to a maximum amount of fees owed to a specific position to the recipient\"},\"createAndInitializePoolIfNecessary(address,address,uint24,uint160)\":{\"notice\":\"Creates a new pool if it does not exist, then initializes if not initialized\"},\"decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))\":{\"notice\":\"Decreases the amount of liquidity in a position and accounts it to the position\"},\"increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))\":{\"notice\":\"Increases the amount of liquidity in a position, with tokens paid by the `msg.sender`\"},\"mint((address,address,uint24,int24,int24,uint256,uint256,uint256,uint256,address,uint256))\":{\"notice\":\"Creates a new position wrapped in a NFT\"},\"permit(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Approve of a specific token ID for spending by spender via signature\"},\"positions(uint256)\":{\"notice\":\"Returns the position information associated with a given token ID.\"},\"refundETH()\":{\"notice\":\"Refunds any ETH balance held by this contract to the `msg.sender`\"},\"sweepToken(address,uint256,address)\":{\"notice\":\"Transfers the full amount of a token held by this contract to recipient\"},\"unwrapWETH9(uint256,address)\":{\"notice\":\"Unwraps the contract's WETH9 balance and sends it to recipient as ETH.\"}},\"notice\":\"Wraps Uniswap V3 positions in a non-fungible token interface which allows for them to be transferred and authorized.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol\":\"INonfungiblePositionManager\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x3c504de1aed405d34ff26733c7b6edc9fd9fd4f9aac504f541a4238dd50bf1d2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e373cc851a65ef3f01bb825f59c3c9cdb1969adab8ec871dd1f197423f6b9ed\",\"dweb:/ipfs/QmWNM3TyZgfxTKJsfqk7ZJk7DmZr29iab3f8T4c1itiynm\"]},\"contracts/openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol\":{\"keccak256\":\"0x49ae5d944b6f25701d67ef1d76cbce766f062bf1958a34b13543f539d7882850\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://851181789f63ce009fa30ddabd8ef159d90733216d5d1f2f9e13d16688f67489\",\"dweb:/ipfs/QmdT4okvCWQC1eSYNFfyqjUkJBAiWbSZMwAazzEuizBJSb\"]},\"contracts/openzeppelin/contracts/token/ERC721/IERC721Metadata.sol\":{\"keccak256\":\"0xfd743e54fb2a27413f703a389d1d78b003d957eaebbcfa15051d89793cf5136a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07683e02a762080a63f5ccec780488e5b87f79ded66d4c1e27f5cd62c1b5f8cb\",\"dweb:/ipfs/QmNtAngsTxV2c2XAKrqAo7PUUpXz1J69LNzwkEun4QTX7w\"]},\"contracts/openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x1e96fdc714c1d5e754ad716c7cb4ac8daa28856879f2d40bb428720adac47b69\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1725af76c335db636686b0b8f36dfdcfa15d40993509ed80c6e579dfd3e1c2f3\",\"dweb:/ipfs/QmcT6Bp635CWdmxQnv84bicV4eaD46cY1ywZNgriSusJXw\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/IERC721Permit.sol\":{\"keccak256\":\"0x9915ccd225c6840a809606b1a929404b0299bff8d7cbb6bc8439c5dfd74046d2\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f0cdf83091593d05e85f50c1c40cf17c8c1eb6aeaac87cb9f8c91e8e31cf162c\",\"dweb:/ipfs/QmZxxuzCfsPLnARKERZj2fvy2mEvyQWJd9uDWpFwj4UkJa\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol\":{\"keccak256\":\"0x631739110217293c69ff6fc6ca4499fcabe8774fb17de93a5546dabe6e207034\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://9f61686e40280404bb22e20c5c380ed8dd4467c8c5c164762566233146cc2e26\",\"dweb:/ipfs/QmbA6qoN6NJvnj3vTRFA5ozNLdnWqtK5iJjqzcR1NS3qJk\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol\":{\"keccak256\":\"0x7affcfeb5127c0925a71d6a65345e117c33537523aeca7bc98085ead8452519d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e16b291294210e71cb0f20cd0afe62ae2dc6878d627f5ccc19c4dc9cd80aec3f\",\"dweb:/ipfs/QmQGitSyBr26nour81BZmpmDMyJpvZRqHQZvnCD1Acb127\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol\":{\"keccak256\":\"0xb547e10f1e69bed03621a62b73a503e260643066c6b4054867a4d1fef47eb274\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f9a90f58f5fd5fb42f7811f4094113b532f307b14a73764c91f977590747f407\",\"dweb:/ipfs/QmSeNH2mfiDMKf3Q6V2sqtNxx1s72JNuA1VVxRM9HoMqYp\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/IPoolInitializer.sol\":{\"keccak256\":\"0x9d7695e8d94c22cc5fcced602017aabb988de89981ea7bee29ea629d5328a862\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://61b50933026ee1017db2a6273af8cedc3238c95dca58880db0918dbdbb2f064f\",\"dweb:/ipfs/QmUebR26pqG25d18aBELKz8aFFKkmHa8PxntzXTA7o9Ldu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Collect(uint256,address,uint256,uint256)": {
								"notice": "Emitted when tokens are collected for a position NFT"
							},
							"DecreaseLiquidity(uint256,uint128,uint256,uint256)": {
								"notice": "Emitted when liquidity is decreased for a position NFT"
							},
							"IncreaseLiquidity(uint256,uint128,uint256,uint256)": {
								"notice": "Emitted when liquidity is increased for a position NFT"
							}
						},
						"kind": "user",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"notice": "The domain separator used in the permit signature"
							},
							"PERMIT_TYPEHASH()": {
								"notice": "The permit typehash used in the permit signature"
							},
							"burn(uint256)": {
								"notice": "Burns a token ID, which deletes it from the NFT contract. The token must have 0 liquidity and all tokens must be collected first."
							},
							"collect((uint256,address,uint128,uint128))": {
								"notice": "Collects up to a maximum amount of fees owed to a specific position to the recipient"
							},
							"createAndInitializePoolIfNecessary(address,address,uint24,uint160)": {
								"notice": "Creates a new pool if it does not exist, then initializes if not initialized"
							},
							"decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))": {
								"notice": "Decreases the amount of liquidity in a position and accounts it to the position"
							},
							"increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))": {
								"notice": "Increases the amount of liquidity in a position, with tokens paid by the `msg.sender`"
							},
							"mint((address,address,uint24,int24,int24,uint256,uint256,uint256,uint256,address,uint256))": {
								"notice": "Creates a new position wrapped in a NFT"
							},
							"permit(address,uint256,uint256,uint8,bytes32,bytes32)": {
								"notice": "Approve of a specific token ID for spending by spender via signature"
							},
							"positions(uint256)": {
								"notice": "Returns the position information associated with a given token ID."
							},
							"refundETH()": {
								"notice": "Refunds any ETH balance held by this contract to the `msg.sender`"
							},
							"sweepToken(address,uint256,address)": {
								"notice": "Transfers the full amount of a token held by this contract to recipient"
							},
							"unwrapWETH9(uint256,address)": {
								"notice": "Unwraps the contract's WETH9 balance and sends it to recipient as ETH."
							}
						},
						"notice": "Wraps Uniswap V3 positions in a non-fungible token interface which allows for them to be transferred and authorized.",
						"version": 1
					}
				}
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol": {
				"IPeripheryImmutableState": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH9",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"WETH9()": {
								"returns": {
									"_0": "Returns the address of WETH9"
								}
							},
							"factory()": {
								"returns": {
									"_0": "Returns the address of the Uniswap V3 factory"
								}
							}
						},
						"title": "Immutable state",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH9()": "4aa4a4fc",
							"factory()": "c45a0155"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH9\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"WETH9()\":{\"returns\":{\"_0\":\"Returns the address of WETH9\"}},\"factory()\":{\"returns\":{\"_0\":\"Returns the address of the Uniswap V3 factory\"}}},\"title\":\"Immutable state\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Functions that return immutable state of the router\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol\":\"IPeripheryImmutableState\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol\":{\"keccak256\":\"0x7affcfeb5127c0925a71d6a65345e117c33537523aeca7bc98085ead8452519d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e16b291294210e71cb0f20cd0afe62ae2dc6878d627f5ccc19c4dc9cd80aec3f\",\"dweb:/ipfs/QmQGitSyBr26nour81BZmpmDMyJpvZRqHQZvnCD1Acb127\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Functions that return immutable state of the router",
						"version": 1
					}
				}
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol": {
				"IPeripheryPayments": {
					"abi": [
						{
							"inputs": [],
							"name": "refundETH",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountMinimum",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "sweepToken",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountMinimum",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "unwrapWETH9",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"refundETH()": {
								"details": "Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps that use ether for the input amount"
							},
							"sweepToken(address,uint256,address)": {
								"details": "The amountMinimum parameter prevents malicious contracts from stealing the token from users",
								"params": {
									"amountMinimum": "The minimum amount of token required for a transfer",
									"recipient": "The destination address of the token",
									"token": "The contract address of the token which will be transferred to `recipient`"
								}
							},
							"unwrapWETH9(uint256,address)": {
								"details": "The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.",
								"params": {
									"amountMinimum": "The minimum amount of WETH9 to unwrap",
									"recipient": "The address receiving ETH"
								}
							}
						},
						"title": "Periphery Payments",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"refundETH()": "12210e8a",
							"sweepToken(address,uint256,address)": "df2ab5bb",
							"unwrapWETH9(uint256,address)": "49404b7c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"refundETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"sweepToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"unwrapWETH9\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"refundETH()\":{\"details\":\"Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps that use ether for the input amount\"},\"sweepToken(address,uint256,address)\":{\"details\":\"The amountMinimum parameter prevents malicious contracts from stealing the token from users\",\"params\":{\"amountMinimum\":\"The minimum amount of token required for a transfer\",\"recipient\":\"The destination address of the token\",\"token\":\"The contract address of the token which will be transferred to `recipient`\"}},\"unwrapWETH9(uint256,address)\":{\"details\":\"The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.\",\"params\":{\"amountMinimum\":\"The minimum amount of WETH9 to unwrap\",\"recipient\":\"The address receiving ETH\"}}},\"title\":\"Periphery Payments\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"refundETH()\":{\"notice\":\"Refunds any ETH balance held by this contract to the `msg.sender`\"},\"sweepToken(address,uint256,address)\":{\"notice\":\"Transfers the full amount of a token held by this contract to recipient\"},\"unwrapWETH9(uint256,address)\":{\"notice\":\"Unwraps the contract's WETH9 balance and sends it to recipient as ETH.\"}},\"notice\":\"Functions to ease deposits and withdrawals of ETH\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol\":\"IPeripheryPayments\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol\":{\"keccak256\":\"0xb547e10f1e69bed03621a62b73a503e260643066c6b4054867a4d1fef47eb274\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f9a90f58f5fd5fb42f7811f4094113b532f307b14a73764c91f977590747f407\",\"dweb:/ipfs/QmSeNH2mfiDMKf3Q6V2sqtNxx1s72JNuA1VVxRM9HoMqYp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"refundETH()": {
								"notice": "Refunds any ETH balance held by this contract to the `msg.sender`"
							},
							"sweepToken(address,uint256,address)": {
								"notice": "Transfers the full amount of a token held by this contract to recipient"
							},
							"unwrapWETH9(uint256,address)": {
								"notice": "Unwraps the contract's WETH9 balance and sends it to recipient as ETH."
							}
						},
						"notice": "Functions to ease deposits and withdrawals of ETH",
						"version": 1
					}
				}
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/IPoolInitializer.sol": {
				"IPoolInitializer": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								}
							],
							"name": "createAndInitializePoolIfNecessary",
							"outputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"createAndInitializePoolIfNecessary(address,address,uint24,uint160)": {
								"details": "This method can be bundled with others via IMulticall for the first action (e.g. mint) performed against a pool",
								"params": {
									"fee": "The fee amount of the v3 pool for the specified token pair",
									"sqrtPriceX96": "The initial square root price of the pool as a Q64.96 value",
									"token0": "The contract address of token0 of the pool",
									"token1": "The contract address of token1 of the pool"
								},
								"returns": {
									"pool": "Returns the pool address based on the pair of tokens and fee, will return the newly created pool address if necessary"
								}
							}
						},
						"title": "Creates and initializes V3 Pools",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"createAndInitializePoolIfNecessary(address,address,uint24,uint160)": "13ead562"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"createAndInitializePoolIfNecessary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"createAndInitializePoolIfNecessary(address,address,uint24,uint160)\":{\"details\":\"This method can be bundled with others via IMulticall for the first action (e.g. mint) performed against a pool\",\"params\":{\"fee\":\"The fee amount of the v3 pool for the specified token pair\",\"sqrtPriceX96\":\"The initial square root price of the pool as a Q64.96 value\",\"token0\":\"The contract address of token0 of the pool\",\"token1\":\"The contract address of token1 of the pool\"},\"returns\":{\"pool\":\"Returns the pool address based on the pair of tokens and fee, will return the newly created pool address if necessary\"}}},\"title\":\"Creates and initializes V3 Pools\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createAndInitializePoolIfNecessary(address,address,uint24,uint160)\":{\"notice\":\"Creates a new pool if it does not exist, then initializes if not initialized\"}},\"notice\":\"Provides a method for creating and initializing a pool, if necessary, for bundling with other methods that require the pool to exist.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/uniswap/v3-periphery/contracts/interfaces/IPoolInitializer.sol\":\"IPoolInitializer\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/uniswap/v3-periphery/contracts/interfaces/IPoolInitializer.sol\":{\"keccak256\":\"0x9d7695e8d94c22cc5fcced602017aabb988de89981ea7bee29ea629d5328a862\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://61b50933026ee1017db2a6273af8cedc3238c95dca58880db0918dbdbb2f064f\",\"dweb:/ipfs/QmUebR26pqG25d18aBELKz8aFFKkmHa8PxntzXTA7o9Ldu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"createAndInitializePoolIfNecessary(address,address,uint24,uint160)": {
								"notice": "Creates a new pool if it does not exist, then initializes if not initialized"
							}
						},
						"notice": "Provides a method for creating and initializing a pool, if necessary, for bundling with other methods that require the pool to exist.",
						"version": 1
					}
				}
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
				"ISwapRouter": {
					"abi": [
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes",
											"name": "path",
											"type": "bytes"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountIn",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOutMinimum",
											"type": "uint256"
										}
									],
									"internalType": "struct ISwapRouter.ExactInputParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactInput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "tokenIn",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "tokenOut",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountIn",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOutMinimum",
											"type": "uint256"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceLimitX96",
											"type": "uint160"
										}
									],
									"internalType": "struct ISwapRouter.ExactInputSingleParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactInputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes",
											"name": "path",
											"type": "bytes"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOut",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountInMaximum",
											"type": "uint256"
										}
									],
									"internalType": "struct ISwapRouter.ExactOutputParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactOutput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "tokenIn",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "tokenOut",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOut",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountInMaximum",
											"type": "uint256"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceLimitX96",
											"type": "uint160"
										}
									],
									"internalType": "struct ISwapRouter.ExactOutputSingleParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactOutputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "amount0Delta",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1Delta",
									"type": "int256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "uniswapV3SwapCallback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"exactInput((bytes,address,uint256,uint256,uint256))": {
								"params": {
									"params": "The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata"
								},
								"returns": {
									"amountOut": "The amount of the received token"
								}
							},
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"params": {
									"params": "The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata"
								},
								"returns": {
									"amountOut": "The amount of the received token"
								}
							},
							"exactOutput((bytes,address,uint256,uint256,uint256))": {
								"params": {
									"params": "The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata"
								},
								"returns": {
									"amountIn": "The amount of the input token"
								}
							},
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"params": {
									"params": "The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata"
								},
								"returns": {
									"amountIn": "The amount of the input token"
								}
							},
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"details": "In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.",
								"params": {
									"amount0Delta": "The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.",
									"amount1Delta": "The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.",
									"data": "Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
								}
							}
						},
						"title": "Router token swapping functionality",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"exactInput((bytes,address,uint256,uint256,uint256))": "c04b8d59",
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": "414bf389",
							"exactOutput((bytes,address,uint256,uint256,uint256))": "f28c0498",
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": "db3e2198",
							"uniswapV3SwapCallback(int256,int256,bytes)": "fa461e33"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactInputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactInputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactOutputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactOutputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Router token swapping functionality\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another along the specified path\"},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another token\"},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\"},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another token\"},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Functions for swapping tokens via Uniswap V3\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":\"ISwapRouter\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0xfa925dc6086cfc426967d6b47a651ade9bb30a747359c0d006912c59d88b5c4a\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ec22f5863805d4afbf740bbba06c07fe4572ba993e4936a234222c61b3d1dd6e\",\"dweb:/ipfs/QmNyC92QbbjjG5V67GNfiXbSN6Ehi7637uFQXkWwKXR3s6\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0xe75caaf5ab5dad796a807a0db3ce9d5aeeadf3cc062aaa17f701134bbd085f53\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://21ae8e8c7af183532964bc81889b695801f868d903af91d18d02a77d793e14fb\",\"dweb:/ipfs/QmfDr8ugPEdbxtTCs6fut61Euf3adBvS2aNyFyC5CFAFGy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"exactInput((bytes,address,uint256,uint256,uint256))": {
								"notice": "Swaps `amountIn` of one token for as much as possible of another along the specified path"
							},
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"notice": "Swaps `amountIn` of one token for as much as possible of another token"
							},
							"exactOutput((bytes,address,uint256,uint256,uint256))": {
								"notice": "Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)"
							},
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"notice": "Swaps as little as possible of one token for `amountOut` of another token"
							},
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"notice": "Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."
							}
						},
						"notice": "Functions for swapping tokens via Uniswap V3",
						"version": 1
					}
				}
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/IUniswapV3Pool.sol": {
				"IUniswapV3Pool": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "Collect",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "CollectProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid1",
									"type": "uint256"
								}
							],
							"name": "Flash",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextOld",
									"type": "uint16"
								},
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextNew",
									"type": "uint16"
								}
							],
							"name": "IncreaseObservationCardinalityNext",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Initialize",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0New",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1New",
									"type": "uint8"
								}
							],
							"name": "SetFeeProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Swap",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collect",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collectProtocol",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fee",
							"outputs": [
								{
									"internalType": "uint24",
									"name": "",
									"type": "uint24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeGrowthGlobal0X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeGrowthGlobal1X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "flash",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								}
							],
							"name": "increaseObservationCardinalityNext",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidity",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxLiquidityPerTick",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "observations",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "blockTimestamp",
									"type": "uint32"
								},
								{
									"internalType": "int56",
									"name": "tickCumulative",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityCumulativeX128",
									"type": "uint160"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint32[]",
									"name": "secondsAgos",
									"type": "uint32[]"
								}
							],
							"name": "observe",
							"outputs": [
								{
									"internalType": "int56[]",
									"name": "tickCumulatives",
									"type": "int56[]"
								},
								{
									"internalType": "uint160[]",
									"name": "secondsPerLiquidityCumulativeX128s",
									"type": "uint160[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								}
							],
							"name": "positions",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "_liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside0LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside1LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "protocolFees",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "token0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "token1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "feeProtocol0",
									"type": "uint8"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol1",
									"type": "uint8"
								}
							],
							"name": "setFeeProtocol",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "slot0",
							"outputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								},
								{
									"internalType": "uint16",
									"name": "observationIndex",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinality",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol",
									"type": "uint8"
								},
								{
									"internalType": "bool",
									"name": "unlocked",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								}
							],
							"name": "snapshotCumulativesInside",
							"outputs": [
								{
									"internalType": "int56",
									"name": "tickCumulativeInside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityInsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsInside",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "zeroForOne",
									"type": "bool"
								},
								{
									"internalType": "int256",
									"name": "amountSpecified",
									"type": "int256"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceLimitX96",
									"type": "uint160"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [
								{
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int16",
									"name": "wordPosition",
									"type": "int16"
								}
							],
							"name": "tickBitmap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tickSpacing",
							"outputs": [
								{
									"internalType": "int24",
									"name": "",
									"type": "int24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "ticks",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "liquidityGross",
									"type": "uint128"
								},
								{
									"internalType": "int128",
									"name": "liquidityNet",
									"type": "int128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside0X128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside1X128",
									"type": "uint256"
								},
								{
									"internalType": "int56",
									"name": "tickCumulativeOutside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityOutsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsOutside",
									"type": "uint32"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "The pool interface is broken up into many smaller pieces",
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"details": "Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect",
								"params": {
									"amount": "The amount of liquidity to remove",
									"amount0": "The amount of token0 withdrawn",
									"amount1": "The amount of token1 withdrawn",
									"owner": "The owner of the position for which liquidity is removed",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"details": "Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees",
								"params": {
									"amount0": "The amount of token0 fees collected",
									"amount1": "The amount of token1 fees collected",
									"owner": "The owner of the position for which fees are collected",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"params": {
									"amount0": "The amount of token1 protocol fees that is withdrawn",
									"recipient": "The address that receives the collected protocol fees",
									"sender": "The address that collects the protocol fees"
								}
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"params": {
									"amount0": "The amount of token0 that was flashed",
									"amount1": "The amount of token1 that was flashed",
									"paid0": "The amount of token0 paid for the flash, which can exceed the amount0 plus the fee",
									"paid1": "The amount of token1 paid for the flash, which can exceed the amount1 plus the fee",
									"recipient": "The address that received the tokens from flash",
									"sender": "The address that initiated the swap call, and that received the callback"
								}
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"details": "observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.",
								"params": {
									"observationCardinalityNextNew": "The updated value of the next observation cardinality",
									"observationCardinalityNextOld": "The previous value of the next observation cardinality"
								}
							},
							"Initialize(uint160,int24)": {
								"details": "Mint/Burn/Swap cannot be emitted by the pool before Initialize",
								"params": {
									"sqrtPriceX96": "The initial sqrt price of the pool, as a Q64.96",
									"tick": "The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool"
								}
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"params": {
									"amount": "The amount of liquidity minted to the position range",
									"amount0": "How much token0 was required for the minted liquidity",
									"amount1": "How much token1 was required for the minted liquidity",
									"owner": "The owner of the position and recipient of any minted liquidity",
									"sender": "The address that minted the liquidity",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"params": {
									"feeProtocol0New": "The updated value of the token0 protocol fee",
									"feeProtocol0Old": "The previous value of the token0 protocol fee",
									"feeProtocol1New": "The updated value of the token1 protocol fee",
									"feeProtocol1Old": "The previous value of the token1 protocol fee"
								}
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"params": {
									"amount0": "The delta of the token0 balance of the pool",
									"amount1": "The delta of the token1 balance of the pool",
									"liquidity": "The liquidity of the pool after the swap",
									"recipient": "The address that received the output of the swap",
									"sender": "The address that initiated the swap call, and that received the callback",
									"sqrtPriceX96": "The sqrt(price) of the pool after the swap, as a Q64.96",
									"tick": "The log base 1.0001 of price of the pool after the swap"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"burn(int24,int24,uint128)": {
								"details": "Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect",
								"params": {
									"amount": "How much liquidity to burn",
									"tickLower": "The lower tick of the position for which to burn liquidity",
									"tickUpper": "The upper tick of the position for which to burn liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 sent to the recipient",
									"amount1": "The amount of token1 sent to the recipient"
								}
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"details": "Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.",
								"params": {
									"amount0Requested": "How much token0 should be withdrawn from the fees owed",
									"amount1Requested": "How much token1 should be withdrawn from the fees owed",
									"recipient": "The address which should receive the fees collected",
									"tickLower": "The lower tick of the position for which to collect fees",
									"tickUpper": "The upper tick of the position for which to collect fees"
								},
								"returns": {
									"amount0": "The amount of fees collected in token0",
									"amount1": "The amount of fees collected in token1"
								}
							},
							"collectProtocol(address,uint128,uint128)": {
								"params": {
									"amount0Requested": "The maximum amount of token0 to send, can be 0 to collect fees in only token1",
									"amount1Requested": "The maximum amount of token1 to send, can be 0 to collect fees in only token0",
									"recipient": "The address to which collected protocol fees should be sent"
								},
								"returns": {
									"amount0": "The protocol fee collected in token0",
									"amount1": "The protocol fee collected in token1"
								}
							},
							"factory()": {
								"returns": {
									"_0": "The contract address"
								}
							},
							"fee()": {
								"returns": {
									"_0": "The fee"
								}
							},
							"feeGrowthGlobal0X128()": {
								"details": "This value can overflow the uint256"
							},
							"feeGrowthGlobal1X128()": {
								"details": "This value can overflow the uint256"
							},
							"flash(address,uint256,uint256,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback",
								"params": {
									"amount0": "The amount of token0 to send",
									"amount1": "The amount of token1 to send",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address which will receive the token0 and token1 amounts"
								}
							},
							"increaseObservationCardinalityNext(uint16)": {
								"details": "This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.",
								"params": {
									"observationCardinalityNext": "The desired minimum number of observations for the pool to store"
								}
							},
							"initialize(uint160)": {
								"details": "Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value",
								"params": {
									"sqrtPriceX96": "the initial sqrt price of the pool as a Q64.96"
								}
							},
							"liquidity()": {
								"details": "This value has no relationship to the total liquidity across all ticks"
							},
							"maxLiquidityPerTick()": {
								"details": "This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool",
								"returns": {
									"_0": "The max amount of liquidity per tick"
								}
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.",
								"params": {
									"amount": "The amount of liquidity to mint",
									"data": "Any data that should be passed through to the callback",
									"recipient": "The address for which the liquidity will be created",
									"tickLower": "The lower tick of the position in which to add liquidity",
									"tickUpper": "The upper tick of the position in which to add liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback",
									"amount1": "The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"
								}
							},
							"observations(uint256)": {
								"details": "You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.",
								"params": {
									"index": "The element of the observations array to fetch"
								},
								"returns": {
									"blockTimestamp": "The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use"
								}
							},
							"observe(uint32[])": {
								"details": "To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.",
								"params": {
									"secondsAgos": "From how long ago each cumulative tick and liquidity value should be returned"
								},
								"returns": {
									"secondsPerLiquidityCumulativeX128s": "Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp",
									"tickCumulatives": "Cumulative tick values as of each `secondsAgos` from the current block timestamp"
								}
							},
							"positions(bytes32)": {
								"params": {
									"key": "The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper"
								},
								"returns": {
									"_liquidity": "The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"
								}
							},
							"protocolFees()": {
								"details": "Protocol fees will never exceed uint128 max in either token"
							},
							"setFeeProtocol(uint8,uint8)": {
								"params": {
									"feeProtocol0": "new protocol fee for token0 of the pool",
									"feeProtocol1": "new protocol fee for token1 of the pool"
								}
							},
							"slot0()": {
								"returns": {
									"sqrtPriceX96": "The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy"
								}
							},
							"snapshotCumulativesInside(int24,int24)": {
								"details": "Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.",
								"params": {
									"tickLower": "The lower tick of the range",
									"tickUpper": "The upper tick of the range"
								},
								"returns": {
									"secondsInside": "The snapshot of seconds per liquidity for the range",
									"secondsPerLiquidityInsideX128": "The snapshot of seconds per liquidity for the range",
									"tickCumulativeInside": "The snapshot of the tick accumulator for the range"
								}
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback",
								"params": {
									"amountSpecified": "The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address to receive the output of the swap",
									"sqrtPriceLimitX96": "The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap",
									"zeroForOne": "The direction of the swap, true for token0 to token1, false for token1 to token0"
								},
								"returns": {
									"amount0": "The delta of the balance of token0 of the pool, exact when negative, minimum when positive",
									"amount1": "The delta of the balance of token1 of the pool, exact when negative, minimum when positive"
								}
							},
							"tickSpacing()": {
								"details": "Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.",
								"returns": {
									"_0": "The tick spacing"
								}
							},
							"ticks(int24)": {
								"params": {
									"tick": "The tick to look up"
								},
								"returns": {
									"liquidityGross": "the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position."
								}
							},
							"token0()": {
								"returns": {
									"_0": "The token contract address"
								}
							},
							"token1()": {
								"returns": {
									"_0": "The token contract address"
								}
							}
						},
						"title": "The interface for a Uniswap V3 Pool",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"burn(int24,int24,uint128)": "a34123a7",
							"collect(address,int24,int24,uint128,uint128)": "4f1eb3d8",
							"collectProtocol(address,uint128,uint128)": "85b66729",
							"factory()": "c45a0155",
							"fee()": "ddca3f43",
							"feeGrowthGlobal0X128()": "f3058399",
							"feeGrowthGlobal1X128()": "46141319",
							"flash(address,uint256,uint256,bytes)": "490e6cbc",
							"increaseObservationCardinalityNext(uint16)": "32148f67",
							"initialize(uint160)": "f637731d",
							"liquidity()": "1a686502",
							"maxLiquidityPerTick()": "70cf754a",
							"mint(address,int24,int24,uint128,bytes)": "3c8a7d8d",
							"observations(uint256)": "252c09d7",
							"observe(uint32[])": "883bdbfd",
							"positions(bytes32)": "514ea4bf",
							"protocolFees()": "1ad8b03b",
							"setFeeProtocol(uint8,uint8)": "8206a4d1",
							"slot0()": "3850c7bd",
							"snapshotCumulativesInside(int24,int24)": "a38807f2",
							"swap(address,bool,int256,uint160,bytes)": "128acb08",
							"tickBitmap(int16)": "5339c296",
							"tickSpacing()": "d0c93a7c",
							"ticks(int24)": "f30dba93",
							"token0()": "0dfe1681",
							"token1()": "d21220a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"CollectProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid1\",\"type\":\"uint256\"}],\"name\":\"Flash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextOld\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextNew\",\"type\":\"uint16\"}],\"name\":\"IncreaseObservationCardinalityNext\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0New\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1New\",\"type\":\"uint8\"}],\"name\":\"SetFeeProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collectProtocol\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal0X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal1X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"}],\"name\":\"increaseObservationCardinalityNext\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLiquidityPerTick\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"observations\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"blockTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"int56\",\"name\":\"tickCumulative\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityCumulativeX128\",\"type\":\"uint160\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32[]\",\"name\":\"secondsAgos\",\"type\":\"uint32[]\"}],\"name\":\"observe\",\"outputs\":[{\"internalType\":\"int56[]\",\"name\":\"tickCumulatives\",\"type\":\"int56[]\"},{\"internalType\":\"uint160[]\",\"name\":\"secondsPerLiquidityCumulativeX128s\",\"type\":\"uint160[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"_liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"token0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"token1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"feeProtocol0\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol1\",\"type\":\"uint8\"}],\"name\":\"setFeeProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slot0\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"observationIndex\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinality\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"snapshotCumulativesInside\",\"outputs\":[{\"internalType\":\"int56\",\"name\":\"tickCumulativeInside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityInsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsInside\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int16\",\"name\":\"wordPosition\",\"type\":\"int16\"}],\"name\":\"tickBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"ticks\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidityGross\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"liquidityNet\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside0X128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside1X128\",\"type\":\"uint256\"},{\"internalType\":\"int56\",\"name\":\"tickCumulativeOutside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityOutsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsOutside\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The pool interface is broken up into many smaller pieces\",\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"details\":\"Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\",\"params\":{\"amount\":\"The amount of liquidity to remove\",\"amount0\":\"The amount of token0 withdrawn\",\"amount1\":\"The amount of token1 withdrawn\",\"owner\":\"The owner of the position for which liquidity is removed\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"details\":\"Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\",\"params\":{\"amount0\":\"The amount of token0 fees collected\",\"amount1\":\"The amount of token1 fees collected\",\"owner\":\"The owner of the position for which fees are collected\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"CollectProtocol(address,address,uint128,uint128)\":{\"params\":{\"amount0\":\"The amount of token1 protocol fees that is withdrawn\",\"recipient\":\"The address that receives the collected protocol fees\",\"sender\":\"The address that collects the protocol fees\"}},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"params\":{\"amount0\":\"The amount of token0 that was flashed\",\"amount1\":\"The amount of token1 that was flashed\",\"paid0\":\"The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\",\"paid1\":\"The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\",\"recipient\":\"The address that received the tokens from flash\",\"sender\":\"The address that initiated the swap call, and that received the callback\"}},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"details\":\"observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.\",\"params\":{\"observationCardinalityNextNew\":\"The updated value of the next observation cardinality\",\"observationCardinalityNextOld\":\"The previous value of the next observation cardinality\"}},\"Initialize(uint160,int24)\":{\"details\":\"Mint/Burn/Swap cannot be emitted by the pool before Initialize\",\"params\":{\"sqrtPriceX96\":\"The initial sqrt price of the pool, as a Q64.96\",\"tick\":\"The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\"}},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of liquidity minted to the position range\",\"amount0\":\"How much token0 was required for the minted liquidity\",\"amount1\":\"How much token1 was required for the minted liquidity\",\"owner\":\"The owner of the position and recipient of any minted liquidity\",\"sender\":\"The address that minted the liquidity\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"params\":{\"feeProtocol0New\":\"The updated value of the token0 protocol fee\",\"feeProtocol0Old\":\"The previous value of the token0 protocol fee\",\"feeProtocol1New\":\"The updated value of the token1 protocol fee\",\"feeProtocol1Old\":\"The previous value of the token1 protocol fee\"}},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"params\":{\"amount0\":\"The delta of the token0 balance of the pool\",\"amount1\":\"The delta of the token1 balance of the pool\",\"liquidity\":\"The liquidity of the pool after the swap\",\"recipient\":\"The address that received the output of the swap\",\"sender\":\"The address that initiated the swap call, and that received the callback\",\"sqrtPriceX96\":\"The sqrt(price) of the pool after the swap, as a Q64.96\",\"tick\":\"The log base 1.0001 of price of the pool after the swap\"}}},\"kind\":\"dev\",\"methods\":{\"burn(int24,int24,uint128)\":{\"details\":\"Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect\",\"params\":{\"amount\":\"How much liquidity to burn\",\"tickLower\":\"The lower tick of the position for which to burn liquidity\",\"tickUpper\":\"The upper tick of the position for which to burn liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 sent to the recipient\",\"amount1\":\"The amount of token1 sent to the recipient\"}},\"collect(address,int24,int24,uint128,uint128)\":{\"details\":\"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\",\"params\":{\"amount0Requested\":\"How much token0 should be withdrawn from the fees owed\",\"amount1Requested\":\"How much token1 should be withdrawn from the fees owed\",\"recipient\":\"The address which should receive the fees collected\",\"tickLower\":\"The lower tick of the position for which to collect fees\",\"tickUpper\":\"The upper tick of the position for which to collect fees\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"collectProtocol(address,uint128,uint128)\":{\"params\":{\"amount0Requested\":\"The maximum amount of token0 to send, can be 0 to collect fees in only token1\",\"amount1Requested\":\"The maximum amount of token1 to send, can be 0 to collect fees in only token0\",\"recipient\":\"The address to which collected protocol fees should be sent\"},\"returns\":{\"amount0\":\"The protocol fee collected in token0\",\"amount1\":\"The protocol fee collected in token1\"}},\"factory()\":{\"returns\":{\"_0\":\"The contract address\"}},\"fee()\":{\"returns\":{\"_0\":\"The fee\"}},\"feeGrowthGlobal0X128()\":{\"details\":\"This value can overflow the uint256\"},\"feeGrowthGlobal1X128()\":{\"details\":\"This value can overflow the uint256\"},\"flash(address,uint256,uint256,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback\",\"params\":{\"amount0\":\"The amount of token0 to send\",\"amount1\":\"The amount of token1 to send\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address which will receive the token0 and token1 amounts\"}},\"increaseObservationCardinalityNext(uint16)\":{\"details\":\"This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.\",\"params\":{\"observationCardinalityNext\":\"The desired minimum number of observations for the pool to store\"}},\"initialize(uint160)\":{\"details\":\"Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\",\"params\":{\"sqrtPriceX96\":\"the initial sqrt price of the pool as a Q64.96\"}},\"liquidity()\":{\"details\":\"This value has no relationship to the total liquidity across all ticks\"},\"maxLiquidityPerTick()\":{\"details\":\"This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\",\"returns\":{\"_0\":\"The max amount of liquidity per tick\"}},\"mint(address,int24,int24,uint128,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.\",\"params\":{\"amount\":\"The amount of liquidity to mint\",\"data\":\"Any data that should be passed through to the callback\",\"recipient\":\"The address for which the liquidity will be created\",\"tickLower\":\"The lower tick of the position in which to add liquidity\",\"tickUpper\":\"The upper tick of the position in which to add liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\",\"amount1\":\"The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\"}},\"observations(uint256)\":{\"details\":\"You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.\",\"params\":{\"index\":\"The element of the observations array to fetch\"},\"returns\":{\"blockTimestamp\":\"The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use\"}},\"observe(uint32[])\":{\"details\":\"To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\",\"params\":{\"secondsAgos\":\"From how long ago each cumulative tick and liquidity value should be returned\"},\"returns\":{\"secondsPerLiquidityCumulativeX128s\":\"Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp\",\"tickCumulatives\":\"Cumulative tick values as of each `secondsAgos` from the current block timestamp\"}},\"positions(bytes32)\":{\"params\":{\"key\":\"The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\"},\"returns\":{\"_liquidity\":\"The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\"}},\"protocolFees()\":{\"details\":\"Protocol fees will never exceed uint128 max in either token\"},\"setFeeProtocol(uint8,uint8)\":{\"params\":{\"feeProtocol0\":\"new protocol fee for token0 of the pool\",\"feeProtocol1\":\"new protocol fee for token1 of the pool\"}},\"slot0()\":{\"returns\":{\"sqrtPriceX96\":\"The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy\"}},\"snapshotCumulativesInside(int24,int24)\":{\"details\":\"Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.\",\"params\":{\"tickLower\":\"The lower tick of the range\",\"tickUpper\":\"The upper tick of the range\"},\"returns\":{\"secondsInside\":\"The snapshot of seconds per liquidity for the range\",\"secondsPerLiquidityInsideX128\":\"The snapshot of seconds per liquidity for the range\",\"tickCumulativeInside\":\"The snapshot of the tick accumulator for the range\"}},\"swap(address,bool,int256,uint160,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\",\"params\":{\"amountSpecified\":\"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address to receive the output of the swap\",\"sqrtPriceLimitX96\":\"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\",\"zeroForOne\":\"The direction of the swap, true for token0 to token1, false for token1 to token0\"},\"returns\":{\"amount0\":\"The delta of the balance of token0 of the pool, exact when negative, minimum when positive\",\"amount1\":\"The delta of the balance of token1 of the pool, exact when negative, minimum when positive\"}},\"tickSpacing()\":{\"details\":\"Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.\",\"returns\":{\"_0\":\"The tick spacing\"}},\"ticks(int24)\":{\"params\":{\"tick\":\"The tick to look up\"},\"returns\":{\"liquidityGross\":\"the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position.\"}},\"token0()\":{\"returns\":{\"_0\":\"The token contract address\"}},\"token1()\":{\"returns\":{\"_0\":\"The token contract address\"}}},\"title\":\"The interface for a Uniswap V3 Pool\",\"version\":1},\"userdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when a position's liquidity is removed\"},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"notice\":\"Emitted when fees are collected by the owner of a position\"},\"CollectProtocol(address,address,uint128,uint128)\":{\"notice\":\"Emitted when the collected protocol fees are withdrawn by the factory owner\"},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted by the pool for any flashes of token0/token1\"},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"notice\":\"Emitted by the pool for increases to the number of observations that can be stored\"},\"Initialize(uint160,int24)\":{\"notice\":\"Emitted exactly once by a pool when #initialize is first called on the pool\"},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is minted for a given position\"},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"notice\":\"Emitted when the protocol fee is changed by the pool\"},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"notice\":\"Emitted by the pool for any swaps between token0 and token1\"}},\"kind\":\"user\",\"methods\":{\"burn(int24,int24,uint128)\":{\"notice\":\"Burn liquidity from the sender and account tokens owed for the liquidity to the position\"},\"collect(address,int24,int24,uint128,uint128)\":{\"notice\":\"Collects tokens owed to a position\"},\"collectProtocol(address,uint128,uint128)\":{\"notice\":\"Collect the protocol fee accrued to the pool\"},\"factory()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"},\"fee()\":{\"notice\":\"The pool's fee in hundredths of a bip, i.e. 1e-6\"},\"feeGrowthGlobal0X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\"},\"feeGrowthGlobal1X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\"},\"flash(address,uint256,uint256,bytes)\":{\"notice\":\"Receive token0 and/or token1 and pay it back, plus a fee, in the callback\"},\"increaseObservationCardinalityNext(uint16)\":{\"notice\":\"Increase the maximum number of price and liquidity observations that this pool will store\"},\"initialize(uint160)\":{\"notice\":\"Sets the initial price for the pool\"},\"liquidity()\":{\"notice\":\"The currently in range liquidity available to the pool\"},\"maxLiquidityPerTick()\":{\"notice\":\"The maximum amount of position liquidity that can use any tick in the range\"},\"mint(address,int24,int24,uint128,bytes)\":{\"notice\":\"Adds liquidity for the given recipient/tickLower/tickUpper position\"},\"observations(uint256)\":{\"notice\":\"Returns data about a specific observation index\"},\"observe(uint32[])\":{\"notice\":\"Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\"},\"positions(bytes32)\":{\"notice\":\"Returns the information about a position by the position's key\"},\"protocolFees()\":{\"notice\":\"The amounts of token0 and token1 that are owed to the protocol\"},\"setFeeProtocol(uint8,uint8)\":{\"notice\":\"Set the denominator of the protocol's % share of the fees\"},\"slot0()\":{\"notice\":\"The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally.\"},\"snapshotCumulativesInside(int24,int24)\":{\"notice\":\"Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\"},\"swap(address,bool,int256,uint160,bytes)\":{\"notice\":\"Swap token0 for token1, or token1 for token0\"},\"tickBitmap(int16)\":{\"notice\":\"Returns 256 packed tick initialized boolean values. See TickBitmap for more information\"},\"tickSpacing()\":{\"notice\":\"The pool tick spacing\"},\"ticks(int24)\":{\"notice\":\"Look up information about a specific tick in the pool\"},\"token0()\":{\"notice\":\"The first of the two tokens of the pool, sorted by address\"},\"token1()\":{\"notice\":\"The second of the two tokens of the pool, sorted by address\"}},\"notice\":\"A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform to the ERC20 specification\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/uniswap/v3-periphery/contracts/interfaces/IUniswapV3Pool.sol\":\"IUniswapV3Pool\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/uniswap/v3-periphery/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5\",\"dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when a position's liquidity is removed"
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"notice": "Emitted when fees are collected by the owner of a position"
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"notice": "Emitted when the collected protocol fees are withdrawn by the factory owner"
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"notice": "Emitted by the pool for any flashes of token0/token1"
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"notice": "Emitted by the pool for increases to the number of observations that can be stored"
							},
							"Initialize(uint160,int24)": {
								"notice": "Emitted exactly once by a pool when #initialize is first called on the pool"
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when liquidity is minted for a given position"
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"notice": "Emitted when the protocol fee is changed by the pool"
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"notice": "Emitted by the pool for any swaps between token0 and token1"
							}
						},
						"kind": "user",
						"methods": {
							"burn(int24,int24,uint128)": {
								"notice": "Burn liquidity from the sender and account tokens owed for the liquidity to the position"
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"notice": "Collects tokens owed to a position"
							},
							"collectProtocol(address,uint128,uint128)": {
								"notice": "Collect the protocol fee accrued to the pool"
							},
							"factory()": {
								"notice": "The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface"
							},
							"fee()": {
								"notice": "The pool's fee in hundredths of a bip, i.e. 1e-6"
							},
							"feeGrowthGlobal0X128()": {
								"notice": "The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool"
							},
							"feeGrowthGlobal1X128()": {
								"notice": "The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool"
							},
							"flash(address,uint256,uint256,bytes)": {
								"notice": "Receive token0 and/or token1 and pay it back, plus a fee, in the callback"
							},
							"increaseObservationCardinalityNext(uint16)": {
								"notice": "Increase the maximum number of price and liquidity observations that this pool will store"
							},
							"initialize(uint160)": {
								"notice": "Sets the initial price for the pool"
							},
							"liquidity()": {
								"notice": "The currently in range liquidity available to the pool"
							},
							"maxLiquidityPerTick()": {
								"notice": "The maximum amount of position liquidity that can use any tick in the range"
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"notice": "Adds liquidity for the given recipient/tickLower/tickUpper position"
							},
							"observations(uint256)": {
								"notice": "Returns data about a specific observation index"
							},
							"observe(uint32[])": {
								"notice": "Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp"
							},
							"positions(bytes32)": {
								"notice": "Returns the information about a position by the position's key"
							},
							"protocolFees()": {
								"notice": "The amounts of token0 and token1 that are owed to the protocol"
							},
							"setFeeProtocol(uint8,uint8)": {
								"notice": "Set the denominator of the protocol's % share of the fees"
							},
							"slot0()": {
								"notice": "The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally."
							},
							"snapshotCumulativesInside(int24,int24)": {
								"notice": "Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range"
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"notice": "Swap token0 for token1, or token1 for token0"
							},
							"tickBitmap(int16)": {
								"notice": "Returns 256 packed tick initialized boolean values. See TickBitmap for more information"
							},
							"tickSpacing()": {
								"notice": "The pool tick spacing"
							},
							"ticks(int24)": {
								"notice": "Look up information about a specific tick in the pool"
							},
							"token0()": {
								"notice": "The first of the two tokens of the pool, sorted by address"
							},
							"token1()": {
								"notice": "The second of the two tokens of the pool, sorted by address"
							}
						},
						"notice": "A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform to the ERC20 specification",
						"version": 1
					}
				}
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"IUniswapV3SwapCallback": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "amount0Delta",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1Delta",
									"type": "int256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "uniswapV3SwapCallback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"details": "In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.",
								"params": {
									"amount0Delta": "The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.",
									"amount1Delta": "The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.",
									"data": "Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
								}
							}
						},
						"title": "Callback for IUniswapV3PoolActions#swap",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"uniswapV3SwapCallback(int256,int256,bytes)": "fa461e33"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Callback for IUniswapV3PoolActions#swap\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Any contract that calls IUniswapV3PoolActions#swap must implement this interface\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/uniswap/v3-periphery/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":\"IUniswapV3SwapCallback\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/uniswap/v3-periphery/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0xe75caaf5ab5dad796a807a0db3ce9d5aeeadf3cc062aaa17f701134bbd085f53\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://21ae8e8c7af183532964bc81889b695801f868d903af91d18d02a77d793e14fb\",\"dweb:/ipfs/QmfDr8ugPEdbxtTCs6fut61Euf3adBvS2aNyFyC5CFAFGy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"notice": "Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."
							}
						},
						"notice": "Any contract that calls IUniswapV3PoolActions#swap must implement this interface",
						"version": 1
					}
				}
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
				"IUniswapV3PoolActions": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collect",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "flash",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								}
							],
							"name": "increaseObservationCardinalityNext",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "zeroForOne",
									"type": "bool"
								},
								{
									"internalType": "int256",
									"name": "amountSpecified",
									"type": "int256"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceLimitX96",
									"type": "uint160"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [
								{
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"burn(int24,int24,uint128)": {
								"details": "Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect",
								"params": {
									"amount": "How much liquidity to burn",
									"tickLower": "The lower tick of the position for which to burn liquidity",
									"tickUpper": "The upper tick of the position for which to burn liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 sent to the recipient",
									"amount1": "The amount of token1 sent to the recipient"
								}
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"details": "Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.",
								"params": {
									"amount0Requested": "How much token0 should be withdrawn from the fees owed",
									"amount1Requested": "How much token1 should be withdrawn from the fees owed",
									"recipient": "The address which should receive the fees collected",
									"tickLower": "The lower tick of the position for which to collect fees",
									"tickUpper": "The upper tick of the position for which to collect fees"
								},
								"returns": {
									"amount0": "The amount of fees collected in token0",
									"amount1": "The amount of fees collected in token1"
								}
							},
							"flash(address,uint256,uint256,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback",
								"params": {
									"amount0": "The amount of token0 to send",
									"amount1": "The amount of token1 to send",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address which will receive the token0 and token1 amounts"
								}
							},
							"increaseObservationCardinalityNext(uint16)": {
								"details": "This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.",
								"params": {
									"observationCardinalityNext": "The desired minimum number of observations for the pool to store"
								}
							},
							"initialize(uint160)": {
								"details": "Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value",
								"params": {
									"sqrtPriceX96": "the initial sqrt price of the pool as a Q64.96"
								}
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.",
								"params": {
									"amount": "The amount of liquidity to mint",
									"data": "Any data that should be passed through to the callback",
									"recipient": "The address for which the liquidity will be created",
									"tickLower": "The lower tick of the position in which to add liquidity",
									"tickUpper": "The upper tick of the position in which to add liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback",
									"amount1": "The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"
								}
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback",
								"params": {
									"amountSpecified": "The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address to receive the output of the swap",
									"sqrtPriceLimitX96": "The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap",
									"zeroForOne": "The direction of the swap, true for token0 to token1, false for token1 to token0"
								},
								"returns": {
									"amount0": "The delta of the balance of token0 of the pool, exact when negative, minimum when positive",
									"amount1": "The delta of the balance of token1 of the pool, exact when negative, minimum when positive"
								}
							}
						},
						"title": "Permissionless pool actions",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"burn(int24,int24,uint128)": "a34123a7",
							"collect(address,int24,int24,uint128,uint128)": "4f1eb3d8",
							"flash(address,uint256,uint256,bytes)": "490e6cbc",
							"increaseObservationCardinalityNext(uint16)": "32148f67",
							"initialize(uint160)": "f637731d",
							"mint(address,int24,int24,uint128,bytes)": "3c8a7d8d",
							"swap(address,bool,int256,uint160,bytes)": "128acb08"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"}],\"name\":\"increaseObservationCardinalityNext\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"burn(int24,int24,uint128)\":{\"details\":\"Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect\",\"params\":{\"amount\":\"How much liquidity to burn\",\"tickLower\":\"The lower tick of the position for which to burn liquidity\",\"tickUpper\":\"The upper tick of the position for which to burn liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 sent to the recipient\",\"amount1\":\"The amount of token1 sent to the recipient\"}},\"collect(address,int24,int24,uint128,uint128)\":{\"details\":\"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\",\"params\":{\"amount0Requested\":\"How much token0 should be withdrawn from the fees owed\",\"amount1Requested\":\"How much token1 should be withdrawn from the fees owed\",\"recipient\":\"The address which should receive the fees collected\",\"tickLower\":\"The lower tick of the position for which to collect fees\",\"tickUpper\":\"The upper tick of the position for which to collect fees\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"flash(address,uint256,uint256,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback\",\"params\":{\"amount0\":\"The amount of token0 to send\",\"amount1\":\"The amount of token1 to send\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address which will receive the token0 and token1 amounts\"}},\"increaseObservationCardinalityNext(uint16)\":{\"details\":\"This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.\",\"params\":{\"observationCardinalityNext\":\"The desired minimum number of observations for the pool to store\"}},\"initialize(uint160)\":{\"details\":\"Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\",\"params\":{\"sqrtPriceX96\":\"the initial sqrt price of the pool as a Q64.96\"}},\"mint(address,int24,int24,uint128,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.\",\"params\":{\"amount\":\"The amount of liquidity to mint\",\"data\":\"Any data that should be passed through to the callback\",\"recipient\":\"The address for which the liquidity will be created\",\"tickLower\":\"The lower tick of the position in which to add liquidity\",\"tickUpper\":\"The upper tick of the position in which to add liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\",\"amount1\":\"The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\"}},\"swap(address,bool,int256,uint160,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\",\"params\":{\"amountSpecified\":\"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address to receive the output of the swap\",\"sqrtPriceLimitX96\":\"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\",\"zeroForOne\":\"The direction of the swap, true for token0 to token1, false for token1 to token0\"},\"returns\":{\"amount0\":\"The delta of the balance of token0 of the pool, exact when negative, minimum when positive\",\"amount1\":\"The delta of the balance of token1 of the pool, exact when negative, minimum when positive\"}}},\"title\":\"Permissionless pool actions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burn(int24,int24,uint128)\":{\"notice\":\"Burn liquidity from the sender and account tokens owed for the liquidity to the position\"},\"collect(address,int24,int24,uint128,uint128)\":{\"notice\":\"Collects tokens owed to a position\"},\"flash(address,uint256,uint256,bytes)\":{\"notice\":\"Receive token0 and/or token1 and pay it back, plus a fee, in the callback\"},\"increaseObservationCardinalityNext(uint16)\":{\"notice\":\"Increase the maximum number of price and liquidity observations that this pool will store\"},\"initialize(uint160)\":{\"notice\":\"Sets the initial price for the pool\"},\"mint(address,int24,int24,uint128,bytes)\":{\"notice\":\"Adds liquidity for the given recipient/tickLower/tickUpper position\"},\"swap(address,bool,int256,uint160,bytes)\":{\"notice\":\"Swap token0 for token1, or token1 for token0\"}},\"notice\":\"Contains pool methods that can be called by anyone\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":\"IUniswapV3PoolActions\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"burn(int24,int24,uint128)": {
								"notice": "Burn liquidity from the sender and account tokens owed for the liquidity to the position"
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"notice": "Collects tokens owed to a position"
							},
							"flash(address,uint256,uint256,bytes)": {
								"notice": "Receive token0 and/or token1 and pay it back, plus a fee, in the callback"
							},
							"increaseObservationCardinalityNext(uint16)": {
								"notice": "Increase the maximum number of price and liquidity observations that this pool will store"
							},
							"initialize(uint160)": {
								"notice": "Sets the initial price for the pool"
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"notice": "Adds liquidity for the given recipient/tickLower/tickUpper position"
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"notice": "Swap token0 for token1, or token1 for token0"
							}
						},
						"notice": "Contains pool methods that can be called by anyone",
						"version": 1
					}
				}
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
				"IUniswapV3PoolDerivedState": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint32[]",
									"name": "secondsAgos",
									"type": "uint32[]"
								}
							],
							"name": "observe",
							"outputs": [
								{
									"internalType": "int56[]",
									"name": "tickCumulatives",
									"type": "int56[]"
								},
								{
									"internalType": "uint160[]",
									"name": "secondsPerLiquidityCumulativeX128s",
									"type": "uint160[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								}
							],
							"name": "snapshotCumulativesInside",
							"outputs": [
								{
									"internalType": "int56",
									"name": "tickCumulativeInside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityInsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsInside",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"observe(uint32[])": {
								"details": "To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.",
								"params": {
									"secondsAgos": "From how long ago each cumulative tick and liquidity value should be returned"
								},
								"returns": {
									"secondsPerLiquidityCumulativeX128s": "Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp",
									"tickCumulatives": "Cumulative tick values as of each `secondsAgos` from the current block timestamp"
								}
							},
							"snapshotCumulativesInside(int24,int24)": {
								"details": "Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.",
								"params": {
									"tickLower": "The lower tick of the range",
									"tickUpper": "The upper tick of the range"
								},
								"returns": {
									"secondsInside": "The snapshot of seconds per liquidity for the range",
									"secondsPerLiquidityInsideX128": "The snapshot of seconds per liquidity for the range",
									"tickCumulativeInside": "The snapshot of the tick accumulator for the range"
								}
							}
						},
						"title": "Pool state that is not stored",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"observe(uint32[])": "883bdbfd",
							"snapshotCumulativesInside(int24,int24)": "a38807f2"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint32[]\",\"name\":\"secondsAgos\",\"type\":\"uint32[]\"}],\"name\":\"observe\",\"outputs\":[{\"internalType\":\"int56[]\",\"name\":\"tickCumulatives\",\"type\":\"int56[]\"},{\"internalType\":\"uint160[]\",\"name\":\"secondsPerLiquidityCumulativeX128s\",\"type\":\"uint160[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"snapshotCumulativesInside\",\"outputs\":[{\"internalType\":\"int56\",\"name\":\"tickCumulativeInside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityInsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsInside\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"observe(uint32[])\":{\"details\":\"To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\",\"params\":{\"secondsAgos\":\"From how long ago each cumulative tick and liquidity value should be returned\"},\"returns\":{\"secondsPerLiquidityCumulativeX128s\":\"Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp\",\"tickCumulatives\":\"Cumulative tick values as of each `secondsAgos` from the current block timestamp\"}},\"snapshotCumulativesInside(int24,int24)\":{\"details\":\"Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.\",\"params\":{\"tickLower\":\"The lower tick of the range\",\"tickUpper\":\"The upper tick of the range\"},\"returns\":{\"secondsInside\":\"The snapshot of seconds per liquidity for the range\",\"secondsPerLiquidityInsideX128\":\"The snapshot of seconds per liquidity for the range\",\"tickCumulativeInside\":\"The snapshot of the tick accumulator for the range\"}}},\"title\":\"Pool state that is not stored\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"observe(uint32[])\":{\"notice\":\"Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\"},\"snapshotCumulativesInside(int24,int24)\":{\"notice\":\"Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\"}},\"notice\":\"Contains view functions to provide information about the pool that is computed rather than stored on the blockchain. The functions here may have variable gas costs.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":\"IUniswapV3PoolDerivedState\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"observe(uint32[])": {
								"notice": "Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp"
							},
							"snapshotCumulativesInside(int24,int24)": {
								"notice": "Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range"
							}
						},
						"notice": "Contains view functions to provide information about the pool that is computed rather than stored on the blockchain. The functions here may have variable gas costs.",
						"version": 1
					}
				}
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
				"IUniswapV3PoolEvents": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "Collect",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "CollectProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid1",
									"type": "uint256"
								}
							],
							"name": "Flash",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextOld",
									"type": "uint16"
								},
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextNew",
									"type": "uint16"
								}
							],
							"name": "IncreaseObservationCardinalityNext",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Initialize",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0New",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1New",
									"type": "uint8"
								}
							],
							"name": "SetFeeProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Swap",
							"type": "event"
						}
					],
					"devdoc": {
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"details": "Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect",
								"params": {
									"amount": "The amount of liquidity to remove",
									"amount0": "The amount of token0 withdrawn",
									"amount1": "The amount of token1 withdrawn",
									"owner": "The owner of the position for which liquidity is removed",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"details": "Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees",
								"params": {
									"amount0": "The amount of token0 fees collected",
									"amount1": "The amount of token1 fees collected",
									"owner": "The owner of the position for which fees are collected",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"params": {
									"amount0": "The amount of token1 protocol fees that is withdrawn",
									"recipient": "The address that receives the collected protocol fees",
									"sender": "The address that collects the protocol fees"
								}
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"params": {
									"amount0": "The amount of token0 that was flashed",
									"amount1": "The amount of token1 that was flashed",
									"paid0": "The amount of token0 paid for the flash, which can exceed the amount0 plus the fee",
									"paid1": "The amount of token1 paid for the flash, which can exceed the amount1 plus the fee",
									"recipient": "The address that received the tokens from flash",
									"sender": "The address that initiated the swap call, and that received the callback"
								}
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"details": "observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.",
								"params": {
									"observationCardinalityNextNew": "The updated value of the next observation cardinality",
									"observationCardinalityNextOld": "The previous value of the next observation cardinality"
								}
							},
							"Initialize(uint160,int24)": {
								"details": "Mint/Burn/Swap cannot be emitted by the pool before Initialize",
								"params": {
									"sqrtPriceX96": "The initial sqrt price of the pool, as a Q64.96",
									"tick": "The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool"
								}
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"params": {
									"amount": "The amount of liquidity minted to the position range",
									"amount0": "How much token0 was required for the minted liquidity",
									"amount1": "How much token1 was required for the minted liquidity",
									"owner": "The owner of the position and recipient of any minted liquidity",
									"sender": "The address that minted the liquidity",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"params": {
									"feeProtocol0New": "The updated value of the token0 protocol fee",
									"feeProtocol0Old": "The previous value of the token0 protocol fee",
									"feeProtocol1New": "The updated value of the token1 protocol fee",
									"feeProtocol1Old": "The previous value of the token1 protocol fee"
								}
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"params": {
									"amount0": "The delta of the token0 balance of the pool",
									"amount1": "The delta of the token1 balance of the pool",
									"liquidity": "The liquidity of the pool after the swap",
									"recipient": "The address that received the output of the swap",
									"sender": "The address that initiated the swap call, and that received the callback",
									"sqrtPriceX96": "The sqrt(price) of the pool after the swap, as a Q64.96",
									"tick": "The log base 1.0001 of price of the pool after the swap"
								}
							}
						},
						"kind": "dev",
						"methods": {},
						"title": "Events emitted by a pool",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"CollectProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid1\",\"type\":\"uint256\"}],\"name\":\"Flash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextOld\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextNew\",\"type\":\"uint16\"}],\"name\":\"IncreaseObservationCardinalityNext\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0New\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1New\",\"type\":\"uint8\"}],\"name\":\"SetFeeProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Swap\",\"type\":\"event\"}],\"devdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"details\":\"Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\",\"params\":{\"amount\":\"The amount of liquidity to remove\",\"amount0\":\"The amount of token0 withdrawn\",\"amount1\":\"The amount of token1 withdrawn\",\"owner\":\"The owner of the position for which liquidity is removed\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"details\":\"Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\",\"params\":{\"amount0\":\"The amount of token0 fees collected\",\"amount1\":\"The amount of token1 fees collected\",\"owner\":\"The owner of the position for which fees are collected\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"CollectProtocol(address,address,uint128,uint128)\":{\"params\":{\"amount0\":\"The amount of token1 protocol fees that is withdrawn\",\"recipient\":\"The address that receives the collected protocol fees\",\"sender\":\"The address that collects the protocol fees\"}},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"params\":{\"amount0\":\"The amount of token0 that was flashed\",\"amount1\":\"The amount of token1 that was flashed\",\"paid0\":\"The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\",\"paid1\":\"The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\",\"recipient\":\"The address that received the tokens from flash\",\"sender\":\"The address that initiated the swap call, and that received the callback\"}},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"details\":\"observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.\",\"params\":{\"observationCardinalityNextNew\":\"The updated value of the next observation cardinality\",\"observationCardinalityNextOld\":\"The previous value of the next observation cardinality\"}},\"Initialize(uint160,int24)\":{\"details\":\"Mint/Burn/Swap cannot be emitted by the pool before Initialize\",\"params\":{\"sqrtPriceX96\":\"The initial sqrt price of the pool, as a Q64.96\",\"tick\":\"The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\"}},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of liquidity minted to the position range\",\"amount0\":\"How much token0 was required for the minted liquidity\",\"amount1\":\"How much token1 was required for the minted liquidity\",\"owner\":\"The owner of the position and recipient of any minted liquidity\",\"sender\":\"The address that minted the liquidity\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"params\":{\"feeProtocol0New\":\"The updated value of the token0 protocol fee\",\"feeProtocol0Old\":\"The previous value of the token0 protocol fee\",\"feeProtocol1New\":\"The updated value of the token1 protocol fee\",\"feeProtocol1Old\":\"The previous value of the token1 protocol fee\"}},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"params\":{\"amount0\":\"The delta of the token0 balance of the pool\",\"amount1\":\"The delta of the token1 balance of the pool\",\"liquidity\":\"The liquidity of the pool after the swap\",\"recipient\":\"The address that received the output of the swap\",\"sender\":\"The address that initiated the swap call, and that received the callback\",\"sqrtPriceX96\":\"The sqrt(price) of the pool after the swap, as a Q64.96\",\"tick\":\"The log base 1.0001 of price of the pool after the swap\"}}},\"kind\":\"dev\",\"methods\":{},\"title\":\"Events emitted by a pool\",\"version\":1},\"userdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when a position's liquidity is removed\"},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"notice\":\"Emitted when fees are collected by the owner of a position\"},\"CollectProtocol(address,address,uint128,uint128)\":{\"notice\":\"Emitted when the collected protocol fees are withdrawn by the factory owner\"},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted by the pool for any flashes of token0/token1\"},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"notice\":\"Emitted by the pool for increases to the number of observations that can be stored\"},\"Initialize(uint160,int24)\":{\"notice\":\"Emitted exactly once by a pool when #initialize is first called on the pool\"},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is minted for a given position\"},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"notice\":\"Emitted when the protocol fee is changed by the pool\"},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"notice\":\"Emitted by the pool for any swaps between token0 and token1\"}},\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains all events emitted by the pool\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":\"IUniswapV3PoolEvents\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when a position's liquidity is removed"
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"notice": "Emitted when fees are collected by the owner of a position"
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"notice": "Emitted when the collected protocol fees are withdrawn by the factory owner"
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"notice": "Emitted by the pool for any flashes of token0/token1"
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"notice": "Emitted by the pool for increases to the number of observations that can be stored"
							},
							"Initialize(uint160,int24)": {
								"notice": "Emitted exactly once by a pool when #initialize is first called on the pool"
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when liquidity is minted for a given position"
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"notice": "Emitted when the protocol fee is changed by the pool"
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"notice": "Emitted by the pool for any swaps between token0 and token1"
							}
						},
						"kind": "user",
						"methods": {},
						"notice": "Contains all events emitted by the pool",
						"version": 1
					}
				}
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
				"IUniswapV3PoolImmutables": {
					"abi": [
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fee",
							"outputs": [
								{
									"internalType": "uint24",
									"name": "",
									"type": "uint24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxLiquidityPerTick",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tickSpacing",
							"outputs": [
								{
									"internalType": "int24",
									"name": "",
									"type": "int24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"factory()": {
								"returns": {
									"_0": "The contract address"
								}
							},
							"fee()": {
								"returns": {
									"_0": "The fee"
								}
							},
							"maxLiquidityPerTick()": {
								"details": "This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool",
								"returns": {
									"_0": "The max amount of liquidity per tick"
								}
							},
							"tickSpacing()": {
								"details": "Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.",
								"returns": {
									"_0": "The tick spacing"
								}
							},
							"token0()": {
								"returns": {
									"_0": "The token contract address"
								}
							},
							"token1()": {
								"returns": {
									"_0": "The token contract address"
								}
							}
						},
						"title": "Pool state that never changes",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"factory()": "c45a0155",
							"fee()": "ddca3f43",
							"maxLiquidityPerTick()": "70cf754a",
							"tickSpacing()": "d0c93a7c",
							"token0()": "0dfe1681",
							"token1()": "d21220a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLiquidityPerTick\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"factory()\":{\"returns\":{\"_0\":\"The contract address\"}},\"fee()\":{\"returns\":{\"_0\":\"The fee\"}},\"maxLiquidityPerTick()\":{\"details\":\"This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\",\"returns\":{\"_0\":\"The max amount of liquidity per tick\"}},\"tickSpacing()\":{\"details\":\"Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.\",\"returns\":{\"_0\":\"The tick spacing\"}},\"token0()\":{\"returns\":{\"_0\":\"The token contract address\"}},\"token1()\":{\"returns\":{\"_0\":\"The token contract address\"}}},\"title\":\"Pool state that never changes\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"factory()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"},\"fee()\":{\"notice\":\"The pool's fee in hundredths of a bip, i.e. 1e-6\"},\"maxLiquidityPerTick()\":{\"notice\":\"The maximum amount of position liquidity that can use any tick in the range\"},\"tickSpacing()\":{\"notice\":\"The pool tick spacing\"},\"token0()\":{\"notice\":\"The first of the two tokens of the pool, sorted by address\"},\"token1()\":{\"notice\":\"The second of the two tokens of the pool, sorted by address\"}},\"notice\":\"These parameters are fixed for a pool forever, i.e., the methods will always return the same values\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":\"IUniswapV3PoolImmutables\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"factory()": {
								"notice": "The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface"
							},
							"fee()": {
								"notice": "The pool's fee in hundredths of a bip, i.e. 1e-6"
							},
							"maxLiquidityPerTick()": {
								"notice": "The maximum amount of position liquidity that can use any tick in the range"
							},
							"tickSpacing()": {
								"notice": "The pool tick spacing"
							},
							"token0()": {
								"notice": "The first of the two tokens of the pool, sorted by address"
							},
							"token1()": {
								"notice": "The second of the two tokens of the pool, sorted by address"
							}
						},
						"notice": "These parameters are fixed for a pool forever, i.e., the methods will always return the same values",
						"version": 1
					}
				}
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
				"IUniswapV3PoolOwnerActions": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collectProtocol",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "feeProtocol0",
									"type": "uint8"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol1",
									"type": "uint8"
								}
							],
							"name": "setFeeProtocol",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"collectProtocol(address,uint128,uint128)": {
								"params": {
									"amount0Requested": "The maximum amount of token0 to send, can be 0 to collect fees in only token1",
									"amount1Requested": "The maximum amount of token1 to send, can be 0 to collect fees in only token0",
									"recipient": "The address to which collected protocol fees should be sent"
								},
								"returns": {
									"amount0": "The protocol fee collected in token0",
									"amount1": "The protocol fee collected in token1"
								}
							},
							"setFeeProtocol(uint8,uint8)": {
								"params": {
									"feeProtocol0": "new protocol fee for token0 of the pool",
									"feeProtocol1": "new protocol fee for token1 of the pool"
								}
							}
						},
						"title": "Permissioned pool actions",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"collectProtocol(address,uint128,uint128)": "85b66729",
							"setFeeProtocol(uint8,uint8)": "8206a4d1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collectProtocol\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"feeProtocol0\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol1\",\"type\":\"uint8\"}],\"name\":\"setFeeProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"collectProtocol(address,uint128,uint128)\":{\"params\":{\"amount0Requested\":\"The maximum amount of token0 to send, can be 0 to collect fees in only token1\",\"amount1Requested\":\"The maximum amount of token1 to send, can be 0 to collect fees in only token0\",\"recipient\":\"The address to which collected protocol fees should be sent\"},\"returns\":{\"amount0\":\"The protocol fee collected in token0\",\"amount1\":\"The protocol fee collected in token1\"}},\"setFeeProtocol(uint8,uint8)\":{\"params\":{\"feeProtocol0\":\"new protocol fee for token0 of the pool\",\"feeProtocol1\":\"new protocol fee for token1 of the pool\"}}},\"title\":\"Permissioned pool actions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"collectProtocol(address,uint128,uint128)\":{\"notice\":\"Collect the protocol fee accrued to the pool\"},\"setFeeProtocol(uint8,uint8)\":{\"notice\":\"Set the denominator of the protocol's % share of the fees\"}},\"notice\":\"Contains pool methods that may only be called by the factory owner\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":\"IUniswapV3PoolOwnerActions\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"collectProtocol(address,uint128,uint128)": {
								"notice": "Collect the protocol fee accrued to the pool"
							},
							"setFeeProtocol(uint8,uint8)": {
								"notice": "Set the denominator of the protocol's % share of the fees"
							}
						},
						"notice": "Contains pool methods that may only be called by the factory owner",
						"version": 1
					}
				}
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
				"IUniswapV3PoolState": {
					"abi": [
						{
							"inputs": [],
							"name": "feeGrowthGlobal0X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeGrowthGlobal1X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidity",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "observations",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "blockTimestamp",
									"type": "uint32"
								},
								{
									"internalType": "int56",
									"name": "tickCumulative",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityCumulativeX128",
									"type": "uint160"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								}
							],
							"name": "positions",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "_liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside0LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside1LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "protocolFees",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "token0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "token1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "slot0",
							"outputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								},
								{
									"internalType": "uint16",
									"name": "observationIndex",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinality",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol",
									"type": "uint8"
								},
								{
									"internalType": "bool",
									"name": "unlocked",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int16",
									"name": "wordPosition",
									"type": "int16"
								}
							],
							"name": "tickBitmap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "ticks",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "liquidityGross",
									"type": "uint128"
								},
								{
									"internalType": "int128",
									"name": "liquidityNet",
									"type": "int128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside0X128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside1X128",
									"type": "uint256"
								},
								{
									"internalType": "int56",
									"name": "tickCumulativeOutside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityOutsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsOutside",
									"type": "uint32"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"feeGrowthGlobal0X128()": {
								"details": "This value can overflow the uint256"
							},
							"feeGrowthGlobal1X128()": {
								"details": "This value can overflow the uint256"
							},
							"liquidity()": {
								"details": "This value has no relationship to the total liquidity across all ticks"
							},
							"observations(uint256)": {
								"details": "You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.",
								"params": {
									"index": "The element of the observations array to fetch"
								},
								"returns": {
									"blockTimestamp": "The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use"
								}
							},
							"positions(bytes32)": {
								"params": {
									"key": "The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper"
								},
								"returns": {
									"_liquidity": "The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"
								}
							},
							"protocolFees()": {
								"details": "Protocol fees will never exceed uint128 max in either token"
							},
							"slot0()": {
								"returns": {
									"sqrtPriceX96": "The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy"
								}
							},
							"ticks(int24)": {
								"params": {
									"tick": "The tick to look up"
								},
								"returns": {
									"liquidityGross": "the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position."
								}
							}
						},
						"title": "Pool state that can change",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"feeGrowthGlobal0X128()": "f3058399",
							"feeGrowthGlobal1X128()": "46141319",
							"liquidity()": "1a686502",
							"observations(uint256)": "252c09d7",
							"positions(bytes32)": "514ea4bf",
							"protocolFees()": "1ad8b03b",
							"slot0()": "3850c7bd",
							"tickBitmap(int16)": "5339c296",
							"ticks(int24)": "f30dba93"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"feeGrowthGlobal0X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal1X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"observations\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"blockTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"int56\",\"name\":\"tickCumulative\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityCumulativeX128\",\"type\":\"uint160\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"_liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"token0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"token1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slot0\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"observationIndex\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinality\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int16\",\"name\":\"wordPosition\",\"type\":\"int16\"}],\"name\":\"tickBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"ticks\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidityGross\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"liquidityNet\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside0X128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside1X128\",\"type\":\"uint256\"},{\"internalType\":\"int56\",\"name\":\"tickCumulativeOutside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityOutsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsOutside\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"feeGrowthGlobal0X128()\":{\"details\":\"This value can overflow the uint256\"},\"feeGrowthGlobal1X128()\":{\"details\":\"This value can overflow the uint256\"},\"liquidity()\":{\"details\":\"This value has no relationship to the total liquidity across all ticks\"},\"observations(uint256)\":{\"details\":\"You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.\",\"params\":{\"index\":\"The element of the observations array to fetch\"},\"returns\":{\"blockTimestamp\":\"The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use\"}},\"positions(bytes32)\":{\"params\":{\"key\":\"The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\"},\"returns\":{\"_liquidity\":\"The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\"}},\"protocolFees()\":{\"details\":\"Protocol fees will never exceed uint128 max in either token\"},\"slot0()\":{\"returns\":{\"sqrtPriceX96\":\"The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy\"}},\"ticks(int24)\":{\"params\":{\"tick\":\"The tick to look up\"},\"returns\":{\"liquidityGross\":\"the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position.\"}}},\"title\":\"Pool state that can change\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"feeGrowthGlobal0X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\"},\"feeGrowthGlobal1X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\"},\"liquidity()\":{\"notice\":\"The currently in range liquidity available to the pool\"},\"observations(uint256)\":{\"notice\":\"Returns data about a specific observation index\"},\"positions(bytes32)\":{\"notice\":\"Returns the information about a position by the position's key\"},\"protocolFees()\":{\"notice\":\"The amounts of token0 and token1 that are owed to the protocol\"},\"slot0()\":{\"notice\":\"The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally.\"},\"tickBitmap(int16)\":{\"notice\":\"Returns 256 packed tick initialized boolean values. See TickBitmap for more information\"},\"ticks(int24)\":{\"notice\":\"Look up information about a specific tick in the pool\"}},\"notice\":\"These methods compose the pool's state, and can change with any frequency including multiple times per transaction\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolState.sol\":\"IUniswapV3PoolState\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"feeGrowthGlobal0X128()": {
								"notice": "The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool"
							},
							"feeGrowthGlobal1X128()": {
								"notice": "The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool"
							},
							"liquidity()": {
								"notice": "The currently in range liquidity available to the pool"
							},
							"observations(uint256)": {
								"notice": "Returns data about a specific observation index"
							},
							"positions(bytes32)": {
								"notice": "Returns the information about a position by the position's key"
							},
							"protocolFees()": {
								"notice": "The amounts of token0 and token1 that are owed to the protocol"
							},
							"slot0()": {
								"notice": "The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally."
							},
							"tickBitmap(int16)": {
								"notice": "Returns 256 packed tick initialized boolean values. See TickBitmap for more information"
							},
							"ticks(int24)": {
								"notice": "Look up information about a specific tick in the pool"
							}
						},
						"notice": "These methods compose the pool's state, and can change with any frequency including multiple times per transaction",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/Controller.sol": {
				"ast": {
					"absolutePath": "contracts/Controller.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							1874
						],
						"Controller": [
							383
						],
						"DataTypes": [
							1298
						],
						"IERC165": [
							2061
						],
						"IERC20": [
							419
						],
						"IERC721": [
							1991
						],
						"IERC721Enumerable": [
							2022
						],
						"IERC721Metadata": [
							2049
						],
						"IERC721Permit": [
							2096
						],
						"ILendingPool": [
							1677
						],
						"ILendingPoolAddressesProvider": [
							1828
						],
						"INonfungiblePositionManager": [
							2294
						],
						"IPeripheryImmutableState": [
							2310
						],
						"IPeripheryPayments": [
							2336
						],
						"IPoolInitializer": [
							2355
						],
						"ISwapRouter": [
							2455
						],
						"IUniswapV3Pool": [
							2477
						],
						"IUniswapV3PoolActions": [
							2587
						],
						"IUniswapV3PoolDerivedState": [
							2618
						],
						"IUniswapV3PoolEvents": [
							2737
						],
						"IUniswapV3PoolImmutables": [
							2777
						],
						"IUniswapV3PoolOwnerActions": [
							2803
						],
						"IUniswapV3PoolState": [
							2911
						],
						"IUniswapV3SwapCallback": [
							2491
						],
						"MainBot": [
							1247
						]
					},
					"id": 384,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:0"
						},
						{
							"absolutePath": "contracts/MainBot.sol",
							"file": "./MainBot.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 384,
							"sourceUnit": 1248,
							"src": "58:23:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Controller",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 383,
							"linearizedBaseContracts": [
								383
							],
							"name": "Controller",
							"nameLocation": "92:10:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "e529930a",
									"id": 5,
									"mutability": "mutable",
									"name": "mainBot",
									"nameLocation": "124:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 383,
									"src": "109:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_MainBot_$1247",
										"typeString": "contract MainBot"
									},
									"typeName": {
										"id": 4,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3,
											"name": "MainBot",
											"nameLocations": [
												"109:7:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1247,
											"src": "109:7:0"
										},
										"referencedDeclaration": 1247,
										"src": "109:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_MainBot_$1247",
											"typeString": "contract MainBot"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 7,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "152:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 383,
									"src": "137:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "137:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "838c29b6",
									"id": 9,
									"mutability": "mutable",
									"name": "checkInterval",
									"nameLocation": "178:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 383,
									"src": "163:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 8,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "163:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "36dff6b6",
									"id": 11,
									"mutability": "mutable",
									"name": "nextCheckTime",
									"nameLocation": "212:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 383,
									"src": "197:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 10,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "197:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "4896f6f06b46d0ebc6bd420e59b05a5e5486f3a5a2e306e20def08c8f284f374",
									"id": 15,
									"name": "LogControllerCheck",
									"nameLocation": "238:18:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"indexed": false,
												"mutability": "mutable",
												"name": "time",
												"nameLocation": "265:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 15,
												"src": "257:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 12,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "257:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "256:14:0"
									},
									"src": "232:39:0"
								},
								{
									"anonymous": false,
									"eventSelector": "573f22c312382d046159d834aa0e9f7c23b7ba1ba8c9ff20b839b47844686e88",
									"id": 21,
									"name": "LogControllerTrade",
									"nameLocation": "282:18:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"indexed": false,
												"mutability": "mutable",
												"name": "tradeType",
												"nameLocation": "308:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "301:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 16,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "301:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 19,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "327:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "319:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 18,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "319:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "300:34:0"
									},
									"src": "276:59:0"
								},
								{
									"anonymous": false,
									"eventSelector": "7541b06c3dec9fdc83c6c723dc48e42d9b1632a4ab380f150eb91c2e6fc310b9",
									"id": 23,
									"name": "ConsolidationStarted",
									"nameLocation": "346:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "366:2:0"
									},
									"src": "340:29:0"
								},
								{
									"anonymous": false,
									"eventSelector": "9dc90ce348fed0b93ddbc45640ba9e0ab32f42e205a3c0b452fb17474b96e1c0",
									"id": 25,
									"name": "ConsolidationCompleted",
									"nameLocation": "380:22:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "402:2:0"
									},
									"src": "374:31:0"
								},
								{
									"anonymous": false,
									"eventSelector": "6e001753e59c246317b708b3090a58d44776f3b9e74dcd996149a49758f4d487",
									"id": 29,
									"name": "CurrentActivity",
									"nameLocation": "416:15:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"indexed": false,
												"mutability": "mutable",
												"name": "activity",
												"nameLocation": "439:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "432:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 26,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "432:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "431:17:0"
									},
									"src": "410:39:0"
								},
								{
									"body": {
										"id": 40,
										"nodeType": "Block",
										"src": "476:73:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 35,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 32,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "494:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "498:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "494:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 34,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "508:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "494:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420746865206f776e6572",
															"id": 36,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "515:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5",
																"typeString": "literal_string \"Not the owner\""
															},
															"value": "Not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5",
																"typeString": "literal_string \"Not the owner\""
															}
														],
														"id": 31,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "486:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "486:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 38,
												"nodeType": "ExpressionStatement",
												"src": "486:45:0"
											},
											{
												"id": 39,
												"nodeType": "PlaceholderStatement",
												"src": "541:1:0"
											}
										]
									},
									"id": 41,
									"name": "onlyOwner",
									"nameLocation": "464:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "473:2:0"
									},
									"src": "455:94:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 70,
										"nodeType": "Block",
										"src": "623:201:0",
										"statements": [
											{
												"expression": {
													"id": 52,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 48,
														"name": "mainBot",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "633:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_MainBot_$1247",
															"typeString": "contract MainBot"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 50,
																"name": "mainBotAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 43,
																"src": "651:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															],
															"id": 49,
															"name": "MainBot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1247,
															"src": "643:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_MainBot_$1247_$",
																"typeString": "type(contract MainBot)"
															}
														},
														"id": 51,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "643:23:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_MainBot_$1247",
															"typeString": "contract MainBot"
														}
													},
													"src": "633:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_MainBot_$1247",
														"typeString": "contract MainBot"
													}
												},
												"id": 53,
												"nodeType": "ExpressionStatement",
												"src": "633:33:0"
											},
											{
												"expression": {
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 54,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "676:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 55,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "684:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 56,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "688:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "684:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "676:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "676:18:0"
											},
											{
												"expression": {
													"id": 61,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 59,
														"name": "checkInterval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "704:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 60,
														"name": "_checkInterval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 45,
														"src": "720:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "704:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 62,
												"nodeType": "ExpressionStatement",
												"src": "704:30:0"
											},
											{
												"expression": {
													"id": 68,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 63,
														"name": "nextCheckTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "770:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 67,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 64,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "786:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 65,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "792:9:0",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "786:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 66,
															"name": "checkInterval",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "804:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "786:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "770:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 69,
												"nodeType": "ExpressionStatement",
												"src": "770:47:0"
											}
										]
									},
									"id": 71,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "mainBotAddress",
												"nameLocation": "583:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "567:30:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 42,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "567:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "_checkInterval",
												"nameLocation": "607:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "599:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 44,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "599:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "566:56:0"
									},
									"returnParameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "623:0:0"
									},
									"scope": 383,
									"src": "555:269:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 136,
										"nodeType": "Block",
										"src": "874:643:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 80,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 77,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "892:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 78,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "898:9:0",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "892:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 79,
																"name": "nextCheckTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "911:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "892:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "49742773206e6f742074696d6520666f7220746865206e65787420636865636b20796574",
															"id": 81,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "926:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d83fc4bcc48d9861126a9a171854eb7f3b6e2fea418e78b773624359d1d0810b",
																"typeString": "literal_string \"It's not time for the next check yet\""
															},
															"value": "It's not time for the next check yet"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d83fc4bcc48d9861126a9a171854eb7f3b6e2fea418e78b773624359d1d0810b",
																"typeString": "literal_string \"It's not time for the next check yet\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "884:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 82,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "884:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 83,
												"nodeType": "ExpressionStatement",
												"src": "884:81:0"
											},
											{
												"assignments": [
													85
												],
												"declarations": [
													{
														"constant": false,
														"id": 85,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "992:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 136,
														"src": "984:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 84,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "984:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 89,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 86,
															"name": "mainBot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "1000:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_MainBot_$1247",
																"typeString": "contract MainBot"
															}
														},
														"id": 87,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1008:10:0",
														"memberName": "checkPrice",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 673,
														"src": "1000:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
															"typeString": "function () view external returns (uint256)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1000:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "984:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 91,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "1054:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 92,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1060:9:0",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "1054:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 90,
														"name": "LogControllerCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "1035:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 93,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1035:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 94,
												"nodeType": "EmitStatement",
												"src": "1030:40:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 97,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 95,
														"name": "price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 85,
														"src": "1158:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31303530",
														"id": 96,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1166:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1050_by_1",
															"typeString": "int_const 1050"
														},
														"value": "1050"
													},
													"src": "1158:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 113,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 111,
															"name": "price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 85,
															"src": "1312:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"hexValue": "393530",
															"id": 112,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1320:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_950_by_1",
																"typeString": "int_const 950"
															},
															"value": "950"
														},
														"src": "1312:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 127,
													"nodeType": "IfStatement",
													"src": "1308:145:0",
													"trueBody": {
														"id": 126,
														"nodeType": "Block",
														"src": "1325:128:0",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"hexValue": "627579",
																			"id": 117,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1382:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_6ed88e868af0a1983e3886d5f3e95a2fafbd6c3450bc229e27342283dc429ccc",
																				"typeString": "literal_string \"buy\""
																			},
																			"value": "buy"
																		},
																		{
																			"hexValue": "313030",
																			"id": 118,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1389:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"value": "100"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_6ed88e868af0a1983e3886d5f3e95a2fafbd6c3450bc229e27342283dc429ccc",
																				"typeString": "literal_string \"buy\""
																			},
																			{
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		],
																		"expression": {
																			"id": 114,
																			"name": "mainBot",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 5,
																			"src": "1360:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_MainBot_$1247",
																				"typeString": "contract MainBot"
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1368:13:0",
																		"memberName": "initiateTrade",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 693,
																		"src": "1360:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
																			"typeString": "function (string memory,uint256) external"
																		}
																	},
																	"id": 119,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1360:33:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 120,
																"nodeType": "ExpressionStatement",
																"src": "1360:33:0"
															},
															{
																"eventCall": {
																	"arguments": [
																		{
																			"hexValue": "627579",
																			"id": 122,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1431:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_6ed88e868af0a1983e3886d5f3e95a2fafbd6c3450bc229e27342283dc429ccc",
																				"typeString": "literal_string \"buy\""
																			},
																			"value": "buy"
																		},
																		{
																			"hexValue": "313030",
																			"id": 123,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1438:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"value": "100"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_6ed88e868af0a1983e3886d5f3e95a2fafbd6c3450bc229e27342283dc429ccc",
																				"typeString": "literal_string \"buy\""
																			},
																			{
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		],
																		"id": 121,
																		"name": "LogControllerTrade",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 21,
																		"src": "1412:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
																			"typeString": "function (string memory,uint256)"
																		}
																	},
																	"id": 124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1412:30:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 125,
																"nodeType": "EmitStatement",
																"src": "1407:35:0"
															}
														]
													}
												},
												"id": 128,
												"nodeType": "IfStatement",
												"src": "1154:299:0",
												"trueBody": {
													"id": 110,
													"nodeType": "Block",
													"src": "1172:130:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"hexValue": "73656c6c",
																		"id": 101,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1229:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_f3b277728b3fee749481eb3e0b3b48980dbbab78658fc419025cb16eee346775",
																			"typeString": "literal_string \"sell\""
																		},
																		"value": "sell"
																	},
																	{
																		"hexValue": "313030",
																		"id": 102,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1237:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		},
																		"value": "100"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_f3b277728b3fee749481eb3e0b3b48980dbbab78658fc419025cb16eee346775",
																			"typeString": "literal_string \"sell\""
																		},
																		{
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		}
																	],
																	"expression": {
																		"id": 98,
																		"name": "mainBot",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5,
																		"src": "1207:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_MainBot_$1247",
																			"typeString": "contract MainBot"
																		}
																	},
																	"id": 100,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1215:13:0",
																	"memberName": "initiateTrade",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 693,
																	"src": "1207:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
																		"typeString": "function (string memory,uint256) external"
																	}
																},
																"id": 103,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1207:34:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 104,
															"nodeType": "ExpressionStatement",
															"src": "1207:34:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "73656c6c",
																		"id": 106,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1279:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_f3b277728b3fee749481eb3e0b3b48980dbbab78658fc419025cb16eee346775",
																			"typeString": "literal_string \"sell\""
																		},
																		"value": "sell"
																	},
																	{
																		"hexValue": "313030",
																		"id": 107,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1287:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		},
																		"value": "100"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_f3b277728b3fee749481eb3e0b3b48980dbbab78658fc419025cb16eee346775",
																			"typeString": "literal_string \"sell\""
																		},
																		{
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		}
																	],
																	"id": 105,
																	"name": "LogControllerTrade",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "1260:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
																		"typeString": "function (string memory,uint256)"
																	}
																},
																"id": 108,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1260:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 109,
															"nodeType": "EmitStatement",
															"src": "1255:36:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 129,
														"name": "nextCheckTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "1463:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 133,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 130,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "1479:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1485:9:0",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "1479:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 132,
															"name": "checkInterval",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "1497:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1479:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1463:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 135,
												"nodeType": "ExpressionStatement",
												"src": "1463:47:0"
											}
										]
									},
									"functionSelector": "c98706c3",
									"id": 137,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nameLocations": [
													"864:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "864:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "864:9:0"
										}
									],
									"name": "periodicCheck",
									"nameLocation": "839:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "852:2:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "874:0:0"
									},
									"scope": 383,
									"src": "830:687:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 153,
										"nodeType": "Block",
										"src": "1565:118:0",
										"statements": [
											{
												"eventCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 142,
														"name": "ConsolidationStarted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "1580:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1580:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "1575:27:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 145,
															"name": "mainBot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "1612:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_MainBot_$1247",
																"typeString": "contract MainBot"
															}
														},
														"id": 147,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1620:15:0",
														"memberName": "convertAllToPOL",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 709,
														"src": "1612:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
															"typeString": "function () external"
														}
													},
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1612:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 149,
												"nodeType": "ExpressionStatement",
												"src": "1612:25:0"
											},
											{
												"eventCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 150,
														"name": "ConsolidationCompleted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "1652:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1652:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 152,
												"nodeType": "EmitStatement",
												"src": "1647:29:0"
											}
										]
									},
									"functionSelector": "8c44c530",
									"id": 154,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 140,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 139,
												"name": "onlyOwner",
												"nameLocations": [
													"1555:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "1555:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1555:9:0"
										}
									],
									"name": "Consolidate",
									"nameLocation": "1532:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1543:2:0"
									},
									"returnParameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1565:0:0"
									},
									"scope": 383,
									"src": "1523:160:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 178,
										"nodeType": "Block",
										"src": "1744:201:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 159,
														"name": "retryCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "1758:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "33",
														"id": 160,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1772:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "1758:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 176,
													"nodeType": "Block",
													"src": "1902:37:0",
													"statements": [
														{
															"expression": {
																"id": 174,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "1916:12:0",
																"subExpression": {
																	"id": 173,
																	"name": "retryCount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 156,
																	"src": "1916:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 175,
															"nodeType": "ExpressionStatement",
															"src": "1916:12:0"
														}
													]
												},
												"id": 177,
												"nodeType": "IfStatement",
												"src": "1754:185:0",
												"trueBody": {
													"id": 172,
													"nodeType": "Block",
													"src": "1775:121:0",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 162,
																		"name": "mainBot",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5,
																		"src": "1789:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_MainBot_$1247",
																			"typeString": "contract MainBot"
																		}
																	},
																	"id": 164,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1797:14:0",
																	"memberName": "disableTrading",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 795,
																	"src": "1789:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
																		"typeString": "function () external"
																	}
																},
																"id": 165,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1789:24:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 166,
															"nodeType": "ExpressionStatement",
															"src": "1789:24:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "53746f702064756520746f2070657273697374656e74206572726f72",
																		"id": 168,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1851:30:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_ec981ea7387b20aa445aafc51c47f81796098078ae4bfcdd78149f5876d236f8",
																			"typeString": "literal_string \"Stop due to persistent error\""
																		},
																		"value": "Stop due to persistent error"
																	},
																	{
																		"hexValue": "30",
																		"id": 169,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1883:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_ec981ea7387b20aa445aafc51c47f81796098078ae4bfcdd78149f5876d236f8",
																			"typeString": "literal_string \"Stop due to persistent error\""
																		},
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 167,
																	"name": "LogControllerTrade",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "1832:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
																		"typeString": "function (string memory,uint256)"
																	}
																},
																"id": 170,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1832:53:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 171,
															"nodeType": "EmitStatement",
															"src": "1827:58:0"
														}
													]
												}
											}
										]
									},
									"id": 179,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "handleTradeError",
									"nameLocation": "1698:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "retryCount",
												"nameLocation": "1723:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "1715:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1715:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1714:20:0"
									},
									"returnParameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1744:0:0"
									},
									"scope": 383,
									"src": "1689:256:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 227,
										"nodeType": "Block",
										"src": "2046:357:0",
										"statements": [
											{
												"assignments": [
													189
												],
												"declarations": [
													{
														"constant": false,
														"id": 189,
														"mutability": "mutable",
														"name": "retryCount",
														"nameLocation": "2064:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 227,
														"src": "2056:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 188,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2056:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 191,
												"initialValue": {
													"hexValue": "30",
													"id": 190,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2077:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2056:22:0"
											},
											{
												"assignments": [
													193
												],
												"declarations": [
													{
														"constant": false,
														"id": 193,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2093:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 227,
														"src": "2088:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 192,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2088:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 195,
												"initialValue": {
													"hexValue": "66616c7365",
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2103:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2088:20:0"
											},
											{
												"body": {
													"id": 225,
													"nodeType": "Block",
													"src": "2153:244:0",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 216,
																		"nodeType": "Block",
																		"src": "2212:107:0",
																		"statements": [
																			{
																				"expression": {
																					"id": 209,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 207,
																						"name": "success",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 193,
																						"src": "2230:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"hexValue": "74727565",
																						"id": 208,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "bool",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "2240:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						},
																						"value": "true"
																					},
																					"src": "2230:14:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 210,
																				"nodeType": "ExpressionStatement",
																				"src": "2230:14:0"
																			},
																			{
																				"eventCall": {
																					"arguments": [
																						{
																							"id": 212,
																							"name": "tradeType",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 181,
																							"src": "2286:9:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						},
																						{
																							"id": 213,
																							"name": "amount",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 183,
																							"src": "2297:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"id": 211,
																						"name": "LogControllerTrade",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 21,
																						"src": "2267:18:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
																							"typeString": "function (string memory,uint256)"
																						}
																					},
																					"id": 214,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2267:37:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 215,
																				"nodeType": "EmitStatement",
																				"src": "2262:42:0"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 217,
																	"nodeType": "TryCatchClause",
																	"src": "2212:107:0"
																},
																{
																	"block": {
																		"id": 222,
																		"nodeType": "Block",
																		"src": "2326:61:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"id": 219,
																							"name": "retryCount",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 189,
																							"src": "2361:10:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"id": 218,
																						"name": "handleTradeError",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 179,
																						"src": "2344:16:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																							"typeString": "function (uint256)"
																						}
																					},
																					"id": 220,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2344:28:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 221,
																				"nodeType": "ExpressionStatement",
																				"src": "2344:28:0"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 223,
																	"nodeType": "TryCatchClause",
																	"src": "2320:67:0"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 204,
																		"name": "tradeType",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 181,
																		"src": "2193:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"id": 205,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 183,
																		"src": "2204:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 202,
																		"name": "mainBot",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5,
																		"src": "2171:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_MainBot_$1247",
																			"typeString": "contract MainBot"
																		}
																	},
																	"id": 203,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2179:13:0",
																	"memberName": "initiateTrade",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 693,
																	"src": "2171:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
																		"typeString": "function (string memory,uint256) external"
																	}
																},
																"id": 206,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2171:40:0",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 224,
															"nodeType": "TryStatement",
															"src": "2167:220:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 198,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 196,
															"name": "retryCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 189,
															"src": "2125:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"hexValue": "33",
															"id": 197,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2138:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															},
															"value": "3"
														},
														"src": "2125:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 200,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "2143:8:0",
														"subExpression": {
															"id": 199,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "2144:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2125:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 226,
												"nodeType": "WhileStatement",
												"src": "2118:279:0"
											}
										]
									},
									"functionSelector": "efa274ef",
									"id": 228,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 186,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 185,
												"name": "onlyOwner",
												"nameLocations": [
													"2036:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "2036:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2036:9:0"
										}
									],
									"name": "initiateTradeWithHandling",
									"nameLocation": "1960:25:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "tradeType",
												"nameLocation": "2000:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "1986:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 180,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1986:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2019:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "2011:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2011:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1985:41:0"
									},
									"returnParameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2046:0:0"
									},
									"scope": 383,
									"src": "1951:452:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 311,
										"nodeType": "Block",
										"src": "2481:612:0",
										"statements": [
											{
												"assignments": [
													239
												],
												"declarations": [
													{
														"constant": false,
														"id": 239,
														"mutability": "mutable",
														"name": "timeframes",
														"nameLocation": "2508:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 311,
														"src": "2491:27:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 237,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2491:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 238,
															"nodeType": "ArrayTypeName",
															"src": "2491:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 245,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "38",
															"id": 243,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2535:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_8_by_1",
																"typeString": "int_const 8"
															},
															"value": "8"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_8_by_1",
																"typeString": "int_const 8"
															}
														],
														"id": 242,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2521:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 240,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2525:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 241,
															"nodeType": "ArrayTypeName",
															"src": "2525:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 244,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2521:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2491:46:0"
											},
											{
												"expression": {
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 246,
															"name": "timeframes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 239,
															"src": "2547:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 248,
														"indexExpression": {
															"hexValue": "30",
															"id": 247,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2558:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2547:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "393030",
														"id": 249,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2563:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_900_by_1",
															"typeString": "int_const 900"
														},
														"value": "900"
													},
													"src": "2547:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 251,
												"nodeType": "ExpressionStatement",
												"src": "2547:19:0"
											},
											{
												"expression": {
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 252,
															"name": "timeframes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 239,
															"src": "2594:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 254,
														"indexExpression": {
															"hexValue": "31",
															"id": 253,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2605:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2594:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31383030",
														"id": 255,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2610:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1800_by_1",
															"typeString": "int_const 1800"
														},
														"value": "1800"
													},
													"src": "2594:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "2594:20:0"
											},
											{
												"expression": {
													"id": 262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 258,
															"name": "timeframes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 239,
															"src": "2641:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 260,
														"indexExpression": {
															"hexValue": "32",
															"id": 259,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2652:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2641:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "33363030",
														"id": 261,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2657:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3600_by_1",
															"typeString": "int_const 3600"
														},
														"value": "3600"
													},
													"src": "2641:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 263,
												"nodeType": "ExpressionStatement",
												"src": "2641:20:0"
											},
											{
												"expression": {
													"id": 268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 264,
															"name": "timeframes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 239,
															"src": "2684:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 266,
														"indexExpression": {
															"hexValue": "33",
															"id": 265,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2695:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															},
															"value": "3"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2684:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "37323030",
														"id": 267,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2700:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_7200_by_1",
															"typeString": "int_const 7200"
														},
														"value": "7200"
													},
													"src": "2684:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 269,
												"nodeType": "ExpressionStatement",
												"src": "2684:20:0"
											},
											{
												"expression": {
													"id": 274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 270,
															"name": "timeframes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 239,
															"src": "2728:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 272,
														"indexExpression": {
															"hexValue": "34",
															"id": 271,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2739:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4_by_1",
																"typeString": "int_const 4"
															},
															"value": "4"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2728:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3134343030",
														"id": 273,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2744:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_14400_by_1",
															"typeString": "int_const 14400"
														},
														"value": "14400"
													},
													"src": "2728:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 275,
												"nodeType": "ExpressionStatement",
												"src": "2728:21:0"
											},
											{
												"expression": {
													"id": 280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 276,
															"name": "timeframes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 239,
															"src": "2772:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 278,
														"indexExpression": {
															"hexValue": "35",
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2783:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_5_by_1",
																"typeString": "int_const 5"
															},
															"value": "5"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2772:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3238383030",
														"id": 279,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2788:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_28800_by_1",
															"typeString": "int_const 28800"
														},
														"value": "28800"
													},
													"src": "2772:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 281,
												"nodeType": "ExpressionStatement",
												"src": "2772:21:0"
											},
											{
												"expression": {
													"id": 286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 282,
															"name": "timeframes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 239,
															"src": "2816:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 284,
														"indexExpression": {
															"hexValue": "36",
															"id": 283,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2827:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_6_by_1",
																"typeString": "int_const 6"
															},
															"value": "6"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2816:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3836343030",
														"id": 285,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2832:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_86400_by_1",
															"typeString": "int_const 86400"
														},
														"value": "86400"
													},
													"src": "2816:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 287,
												"nodeType": "ExpressionStatement",
												"src": "2816:21:0"
											},
											{
												"expression": {
													"id": 292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 288,
															"name": "timeframes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 239,
															"src": "2861:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 290,
														"indexExpression": {
															"hexValue": "37",
															"id": 289,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2872:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_7_by_1",
																"typeString": "int_const 7"
															},
															"value": "7"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2861:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "363034383030",
														"id": 291,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2877:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_604800_by_1",
															"typeString": "int_const 604800"
														},
														"value": "604800"
													},
													"src": "2861:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 293,
												"nodeType": "ExpressionStatement",
												"src": "2861:22:0"
											},
											{
												"assignments": [
													295
												],
												"declarations": [
													{
														"constant": false,
														"id": 295,
														"mutability": "mutable",
														"name": "selectedTimeframe",
														"nameLocation": "2913:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 311,
														"src": "2905:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 294,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2905:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 299,
												"initialValue": {
													"baseExpression": {
														"id": 296,
														"name": "timeframes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 239,
														"src": "2933:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"id": 298,
													"indexExpression": {
														"id": 297,
														"name": "timeframeIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 230,
														"src": "2944:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2933:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2905:54:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 303,
															"name": "selectedTimeframe",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 295,
															"src": "2993:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 300,
															"name": "mainBot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "2969:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_MainBot_$1247",
																"typeString": "contract MainBot"
															}
														},
														"id": 302,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2977:15:0",
														"memberName": "adjustTimeframe",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 660,
														"src": "2969:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256) external"
														}
													},
													"id": 304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2969:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 305,
												"nodeType": "ExpressionStatement",
												"src": "2969:42:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"hexValue": "41646a757374696e672074696d656672616d65",
															"id": 307,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3045:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc162d2f035f316232d784025f19583e5a4b535fde2dcb64fff53e8425e24ae3",
																"typeString": "literal_string \"Adjusting timeframe\""
															},
															"value": "Adjusting timeframe"
														},
														{
															"id": 308,
															"name": "selectedTimeframe",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 295,
															"src": "3068:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_fc162d2f035f316232d784025f19583e5a4b535fde2dcb64fff53e8425e24ae3",
																"typeString": "literal_string \"Adjusting timeframe\""
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 306,
														"name": "LogControllerTrade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 21,
														"src": "3026:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (string memory,uint256)"
														}
													},
													"id": 309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3026:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 310,
												"nodeType": "EmitStatement",
												"src": "3021:65:0"
											}
										]
									},
									"functionSelector": "88ac3ea1",
									"id": 312,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 233,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 232,
												"name": "onlyOwner",
												"nameLocations": [
													"2471:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "2471:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2471:9:0"
										}
									],
									"name": "setTradingTimeframe",
									"nameLocation": "2418:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "timeframeIndex",
												"nameLocation": "2446:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "2438:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2438:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2437:24:0"
									},
									"returnParameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2481:0:0"
									},
									"scope": 383,
									"src": "2409:684:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 330,
										"nodeType": "Block",
										"src": "3130:60:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 325,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "3173:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_Controller_$383",
																			"typeString": "contract Controller"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_Controller_$383",
																			"typeString": "contract Controller"
																		}
																	],
																	"id": 324,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3165:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 323,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3165:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 326,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3165:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 327,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3179:7:0",
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "3165:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 319,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3144:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 320,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3148:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3144:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 318,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3136:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 317,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3136:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 321,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3136:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 322,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3156:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "3136:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3136:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 329,
												"nodeType": "ExpressionStatement",
												"src": "3136:51:0"
											}
										]
									},
									"functionSelector": "41c0e1b5",
									"id": 331,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 315,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 314,
												"name": "onlyOwner",
												"nameLocations": [
													"3120:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "3120:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3120:9:0"
										}
									],
									"name": "kill",
									"nameLocation": "3104:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3108:2:0"
									},
									"returnParameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3130:0:0"
									},
									"scope": 383,
									"src": "3095:95:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 363,
										"nodeType": "Block",
										"src": "3261:185:0",
										"statements": [
											{
												"assignments": [
													339
												],
												"declarations": [
													{
														"constant": false,
														"id": 339,
														"mutability": "mutable",
														"name": "amountInWei",
														"nameLocation": "3279:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 363,
														"src": "3271:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 338,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3271:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 343,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 340,
														"name": "amountInGwei",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 333,
														"src": "3293:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"hexValue": "31",
														"id": 341,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3308:6:0",
														"subdenomination": "gwei",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000_by_1",
															"typeString": "int_const 1000000000"
														},
														"value": "1"
													},
													"src": "3293:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3271:43:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 347,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3340:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Controller_$383",
																				"typeString": "contract Controller"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Controller_$383",
																				"typeString": "contract Controller"
																			}
																		],
																		"id": 346,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3332:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 345,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3332:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 348,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3332:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 349,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3346:7:0",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "3332:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 350,
																"name": "amountInWei",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 339,
																"src": "3357:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3332:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e6365",
															"id": 352,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3370:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															},
															"value": "Insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															}
														],
														"id": 344,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3324:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3324:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 354,
												"nodeType": "ExpressionStatement",
												"src": "3324:69:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 360,
															"name": "amountInWei",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "3427:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 357,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 7,
																	"src": "3411:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 356,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3403:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 355,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3403:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 358,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3403:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 359,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3418:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "3403:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3403:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 362,
												"nodeType": "ExpressionStatement",
												"src": "3403:36:0"
											}
										]
									},
									"functionSelector": "457f3cb0",
									"id": 364,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 336,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 335,
												"name": "onlyOwner",
												"nameLocations": [
													"3251:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "3251:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3251:9:0"
										}
									],
									"name": "withdrawInGwei",
									"nameLocation": "3205:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "amountInGwei",
												"nameLocation": "3228:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "3220:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3220:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3219:22:0"
									},
									"returnParameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3261:0:0"
									},
									"scope": 383,
									"src": "3196:250:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 381,
										"nodeType": "Block",
										"src": "3530:91:0",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"id": 374,
															"name": "timestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 366,
															"src": "3564:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 373,
														"name": "LogControllerCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "3545:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3545:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 376,
												"nodeType": "EmitStatement",
												"src": "3540:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 378,
															"name": "activity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 368,
															"src": "3605:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 377,
														"name": "CurrentActivity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "3589:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3589:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 380,
												"nodeType": "EmitStatement",
												"src": "3584:30:0"
											}
										]
									},
									"functionSelector": "4359b7ef",
									"id": 382,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 371,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 370,
												"name": "onlyOwner",
												"nameLocations": [
													"3520:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "3520:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3520:9:0"
										}
									],
									"name": "logEvent",
									"nameLocation": "3461:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "3478:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "3470:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3470:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "activity",
												"nameLocation": "3503:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "3489:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 367,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3489:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3469:43:0"
									},
									"returnParameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3530:0:0"
									},
									"scope": 383,
									"src": "3452:169:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 384,
							"src": "83:3540:0",
							"usedErrors": [],
							"usedEvents": [
								15,
								21,
								23,
								25,
								29
							]
						}
					],
					"src": "32:3592:0"
				},
				"id": 0
			},
			"contracts/MainBot.sol": {
				"ast": {
					"absolutePath": "contracts/MainBot.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							1874
						],
						"DataTypes": [
							1298
						],
						"IERC165": [
							2061
						],
						"IERC20": [
							419
						],
						"IERC721": [
							1991
						],
						"IERC721Enumerable": [
							2022
						],
						"IERC721Metadata": [
							2049
						],
						"IERC721Permit": [
							2096
						],
						"ILendingPool": [
							1677
						],
						"ILendingPoolAddressesProvider": [
							1828
						],
						"INonfungiblePositionManager": [
							2294
						],
						"IPeripheryImmutableState": [
							2310
						],
						"IPeripheryPayments": [
							2336
						],
						"IPoolInitializer": [
							2355
						],
						"ISwapRouter": [
							2455
						],
						"IUniswapV3Pool": [
							2477
						],
						"IUniswapV3PoolActions": [
							2587
						],
						"IUniswapV3PoolDerivedState": [
							2618
						],
						"IUniswapV3PoolEvents": [
							2737
						],
						"IUniswapV3PoolImmutables": [
							2777
						],
						"IUniswapV3PoolOwnerActions": [
							2803
						],
						"IUniswapV3PoolState": [
							2911
						],
						"IUniswapV3SwapCallback": [
							2491
						],
						"MainBot": [
							1247
						]
					},
					"id": 1248,
					"license": "MITs",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 385,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:1"
						},
						{
							"absolutePath": "contracts/chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol",
							"file": "./chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol",
							"id": 386,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1248,
							"sourceUnit": 1875,
							"src": "59:84:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
							"file": "./uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
							"id": 387,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1248,
							"sourceUnit": 2456,
							"src": "144:69:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/uniswap/v3-periphery/contracts/interfaces/IUniswapV3Pool.sol",
							"file": "./uniswap/v3-periphery/contracts/interfaces/IUniswapV3Pool.sol",
							"id": 388,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1248,
							"sourceUnit": 2478,
							"src": "214:72:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol",
							"file": "./uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol",
							"id": 389,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1248,
							"sourceUnit": 2311,
							"src": "287:82:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol",
							"file": "./uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol",
							"id": 390,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1248,
							"sourceUnit": 2337,
							"src": "370:76:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol",
							"file": "./uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol",
							"id": 391,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1248,
							"sourceUnit": 2295,
							"src": "447:85:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/aave/protocol-v2/contracts/interfaces/ILendingPool.sol",
							"file": "./aave/protocol-v2/contracts/interfaces/ILendingPool.sol",
							"id": 392,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1248,
							"sourceUnit": 1678,
							"src": "533:66:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/aave/protocol-v2/contracts/interfaces/ILendingPoolAddressesProvider.sol",
							"file": "./aave/protocol-v2/contracts/interfaces/ILendingPoolAddressesProvider.sol",
							"id": 393,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1248,
							"sourceUnit": 1829,
							"src": "600:83:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 419,
							"linearizedBaseContracts": [
								419
							],
							"name": "IERC20",
							"nameLocation": "695:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "a9059cbb",
									"id": 402,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "717:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "734:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "726:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "726:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "753:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "745:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "745:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "725:35:1"
									},
									"returnParameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "779:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 399,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "779:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "778:6:1"
									},
									"scope": 419,
									"src": "708:77:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 409,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "799:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "817:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "809:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 403,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "809:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:17:1"
									},
									"returnParameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "849:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "849:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "848:9:1"
									},
									"scope": 419,
									"src": "790:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "095ea7b3",
									"id": 418,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "872:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "888:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "880:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 410,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "880:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "905:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "897:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 412,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "897:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "879:33:1"
									},
									"returnParameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "931:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 415,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "931:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:6:1"
									},
									"scope": 419,
									"src": "863:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1248,
							"src": "685:254:1",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MainBot",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1247,
							"linearizedBaseContracts": [
								1247
							],
							"name": "MainBot",
							"nameLocation": "950:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 421,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "979:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 1247,
									"src": "964:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 420,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "964:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4ada218b",
									"id": 423,
									"mutability": "mutable",
									"name": "tradingEnabled",
									"nameLocation": "1003:14:1",
									"nodeType": "VariableDeclaration",
									"scope": 1247,
									"src": "991:26:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 422,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "991:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e037f889",
									"id": 425,
									"mutability": "mutable",
									"name": "initialDeposit",
									"nameLocation": "1038:14:1",
									"nodeType": "VariableDeclaration",
									"scope": 1247,
									"src": "1023:29:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 424,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1023:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1458d9d8",
									"id": 427,
									"mutability": "mutable",
									"name": "maticBalance",
									"nameLocation": "1073:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 1247,
									"src": "1058:27:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 426,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1058:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "64aabb9e",
									"id": 429,
									"mutability": "mutable",
									"name": "stablecoinBalance",
									"nameLocation": "1106:17:1",
									"nodeType": "VariableDeclaration",
									"scope": 1247,
									"src": "1091:32:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 428,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1091:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f974821a",
									"id": 431,
									"mutability": "mutable",
									"name": "profitThreshold",
									"nameLocation": "1144:15:1",
									"nodeType": "VariableDeclaration",
									"scope": 1247,
									"src": "1129:30:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 430,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1129:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c0fc247f",
									"id": 433,
									"mutability": "mutable",
									"name": "lossThreshold",
									"nameLocation": "1180:13:1",
									"nodeType": "VariableDeclaration",
									"scope": 1247,
									"src": "1165:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 432,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1165:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a30fb905",
									"id": 436,
									"mutability": "mutable",
									"name": "gasCostMultiplier",
									"nameLocation": "1214:17:1",
									"nodeType": "VariableDeclaration",
									"scope": 1247,
									"src": "1199:36:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 434,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1199:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "33",
										"id": 435,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1234:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3_by_1",
											"typeString": "int_const 3"
										},
										"value": "3"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b3ce56a2",
									"id": 439,
									"mutability": "mutable",
									"name": "trailingStopLoss",
									"nameLocation": "1256:16:1",
									"nodeType": "VariableDeclaration",
									"scope": 1247,
									"src": "1241:36:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 437,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1241:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130",
										"id": 438,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1275:2:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10_by_1",
											"typeString": "int_const 10"
										},
										"value": "10"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1bf41362",
									"id": 441,
									"mutability": "mutable",
									"name": "nextLogTime",
									"nameLocation": "1298:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 1247,
									"src": "1283:26:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 440,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1283:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6d546cdd",
									"id": 444,
									"mutability": "mutable",
									"name": "currentActivity",
									"nameLocation": "1329:15:1",
									"nodeType": "VariableDeclaration",
									"scope": 1247,
									"src": "1315:46:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 442,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1315:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "496e697469616c697a696e67",
										"id": 443,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1347:14:1",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_9536fd274b1da513899715f101ac7dd4165956a4323c575571d0d2c5d0ec45f9",
											"typeString": "literal_string \"Initializing\""
										},
										"value": "Initializing"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b6658d07",
									"id": 446,
									"mutability": "mutable",
									"name": "polToken",
									"nameLocation": "1383:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 1247,
									"src": "1368:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 445,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1368:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a98ad46c",
									"id": 448,
									"mutability": "mutable",
									"name": "usdtToken",
									"nameLocation": "1412:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 1247,
									"src": "1397:24:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 447,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1397:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "11eac855",
									"id": 450,
									"mutability": "mutable",
									"name": "usdcToken",
									"nameLocation": "1442:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 1247,
									"src": "1427:24:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 449,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1427:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e189eb42",
									"id": 452,
									"mutability": "mutable",
									"name": "quickSwapRouter",
									"nameLocation": "1472:15:1",
									"nodeType": "VariableDeclaration",
									"scope": 1247,
									"src": "1457:30:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 451,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1457:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e0abca0b",
									"id": 454,
									"mutability": "mutable",
									"name": "priceFeedAddress",
									"nameLocation": "1508:16:1",
									"nodeType": "VariableDeclaration",
									"scope": 1247,
									"src": "1493:31:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 453,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1493:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "735de9f7",
									"id": 456,
									"mutability": "mutable",
									"name": "uniswapRouter",
									"nameLocation": "1545:13:1",
									"nodeType": "VariableDeclaration",
									"scope": 1247,
									"src": "1530:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 455,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1530:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e5047b30",
									"id": 458,
									"mutability": "mutable",
									"name": "uniswapPositionManager",
									"nameLocation": "1579:22:1",
									"nodeType": "VariableDeclaration",
									"scope": 1247,
									"src": "1564:37:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 457,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1564:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "238f9b7a",
									"id": 460,
									"mutability": "mutable",
									"name": "aaveLendingPoolAddressesProvider",
									"nameLocation": "1622:32:1",
									"nodeType": "VariableDeclaration",
									"scope": 1247,
									"src": "1607:47:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 459,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1607:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5e7ffa67",
									"id": 464,
									"mutability": "mutable",
									"name": "dexRouters",
									"nameLocation": "1695:10:1",
									"nodeType": "VariableDeclaration",
									"scope": 1247,
									"src": "1661:44:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
										"typeString": "mapping(string => address)"
									},
									"typeName": {
										"id": 463,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 461,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "1669:6:1",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										},
										"nodeType": "Mapping",
										"src": "1661:26:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
											"typeString": "mapping(string => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 462,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1679:7:1",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "030fdcd4f0c28c5dbcbc3f59aa8e2260c7f58ac45be2a2dca652999af89c33e0",
									"id": 476,
									"name": "TradeExecuted",
									"nameLocation": "1718:13:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 466,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1748:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "1732:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 465,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1732:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 468,
												"indexed": false,
												"mutability": "mutable",
												"name": "tradeType",
												"nameLocation": "1761:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "1754:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 467,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1754:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 470,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "1777:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "1772:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 469,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1772:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 472,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "1792:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "1787:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 471,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1787:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 474,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "1808:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "1803:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 473,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1803:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1731:83:1"
									},
									"src": "1712:103:1"
								},
								{
									"anonymous": false,
									"eventSelector": "84f286df5a264707bc5e32ccd269f47ddd90c52ff6d1753459246a4dded9b9e5",
									"id": 482,
									"name": "StopLossTriggered",
									"nameLocation": "1826:17:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"indexed": false,
												"mutability": "mutable",
												"name": "currentBalance",
												"nameLocation": "1849:14:1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "1844:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 477,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1844:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 480,
												"indexed": false,
												"mutability": "mutable",
												"name": "threshold",
												"nameLocation": "1870:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "1865:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 479,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1865:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1843:37:1"
									},
									"src": "1820:61:1"
								},
								{
									"anonymous": false,
									"eventSelector": "6e001753e59c246317b708b3090a58d44776f3b9e74dcd996149a49758f4d487",
									"id": 486,
									"name": "CurrentActivity",
									"nameLocation": "1892:15:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 484,
												"indexed": false,
												"mutability": "mutable",
												"name": "activity",
												"nameLocation": "1915:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "1908:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 483,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:17:1"
									},
									"src": "1886:39:1"
								},
								{
									"anonymous": false,
									"eventSelector": "e75028ff36bb6473da3731a30e1aeeae9988e2415dba2c4e91e0357955065fba",
									"id": 490,
									"name": "TestEvent",
									"nameLocation": "1936:9:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"indexed": false,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "1953:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "1946:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 487,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1946:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1945:16:1"
									},
									"src": "1930:32:1"
								},
								{
									"body": {
										"id": 501,
										"nodeType": "Block",
										"src": "1989:73:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 496,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 493,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2007:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 494,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2011:6:1",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2007:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 495,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 421,
																"src": "2021:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2007:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420746865206f776e6572",
															"id": 497,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2028:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5",
																"typeString": "literal_string \"Not the owner\""
															},
															"value": "Not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5",
																"typeString": "literal_string \"Not the owner\""
															}
														],
														"id": 492,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1999:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1999:45:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 499,
												"nodeType": "ExpressionStatement",
												"src": "1999:45:1"
											},
											{
												"id": 500,
												"nodeType": "PlaceholderStatement",
												"src": "2054:1:1"
											}
										]
									},
									"id": 502,
									"name": "onlyOwner",
									"nameLocation": "1977:9:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1986:2:1"
									},
									"src": "1968:94:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 510,
										"nodeType": "Block",
										"src": "2098:74:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 505,
															"name": "tradingEnabled",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "2116:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54726164696e672069732064697361626c6564",
															"id": 506,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2132:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_946a67ad1237df6dd5563413d72a6b321f0b7e3cee2668a783fe11689a85e004",
																"typeString": "literal_string \"Trading is disabled\""
															},
															"value": "Trading is disabled"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_946a67ad1237df6dd5563413d72a6b321f0b7e3cee2668a783fe11689a85e004",
																"typeString": "literal_string \"Trading is disabled\""
															}
														],
														"id": 504,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2108:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2108:46:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 508,
												"nodeType": "ExpressionStatement",
												"src": "2108:46:1"
											},
											{
												"id": 509,
												"nodeType": "PlaceholderStatement",
												"src": "2164:1:1"
											}
										]
									},
									"id": 511,
									"name": "whenTradingEnabled",
									"nameLocation": "2077:18:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2095:2:1"
									},
									"src": "2068:104:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 590,
										"nodeType": "Block",
										"src": "2472:625:1",
										"statements": [
											{
												"expression": {
													"id": 533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 530,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 421,
														"src": "2482:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 531,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2490:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 532,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2494:6:1",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2490:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2482:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 534,
												"nodeType": "ExpressionStatement",
												"src": "2482:18:1"
											},
											{
												"expression": {
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 535,
														"name": "polToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 446,
														"src": "2510:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 536,
														"name": "_polToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 513,
														"src": "2521:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2510:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 538,
												"nodeType": "ExpressionStatement",
												"src": "2510:20:1"
											},
											{
												"expression": {
													"id": 541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 539,
														"name": "usdtToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 448,
														"src": "2540:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 540,
														"name": "_usdtToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 515,
														"src": "2552:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2540:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 542,
												"nodeType": "ExpressionStatement",
												"src": "2540:22:1"
											},
											{
												"expression": {
													"id": 545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 543,
														"name": "usdcToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 450,
														"src": "2572:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 544,
														"name": "_usdcToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 517,
														"src": "2584:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2572:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 546,
												"nodeType": "ExpressionStatement",
												"src": "2572:22:1"
											},
											{
												"expression": {
													"id": 549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 547,
														"name": "quickSwapRouter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 452,
														"src": "2604:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 548,
														"name": "_quickSwapRouter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 519,
														"src": "2622:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2604:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 550,
												"nodeType": "ExpressionStatement",
												"src": "2604:34:1"
											},
											{
												"expression": {
													"id": 553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 551,
														"name": "priceFeedAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 454,
														"src": "2648:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 552,
														"name": "_priceFeedAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 521,
														"src": "2667:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2648:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 554,
												"nodeType": "ExpressionStatement",
												"src": "2648:36:1"
											},
											{
												"expression": {
													"id": 557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 555,
														"name": "uniswapRouter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 456,
														"src": "2694:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 556,
														"name": "_uniswapRouter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 523,
														"src": "2710:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2694:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 558,
												"nodeType": "ExpressionStatement",
												"src": "2694:30:1"
											},
											{
												"expression": {
													"id": 561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 559,
														"name": "uniswapPositionManager",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "2734:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 560,
														"name": "_uniswapPositionManager",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 525,
														"src": "2759:23:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2734:48:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 562,
												"nodeType": "ExpressionStatement",
												"src": "2734:48:1"
											},
											{
												"expression": {
													"id": 565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 563,
														"name": "aaveLendingPoolAddressesProvider",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 460,
														"src": "2792:32:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 564,
														"name": "_aaveLendingPoolAddressesProvider",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 527,
														"src": "2827:33:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2792:68:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 566,
												"nodeType": "ExpressionStatement",
												"src": "2792:68:1"
											},
											{
												"expression": {
													"id": 571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 567,
															"name": "dexRouters",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 464,
															"src": "2879:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
																"typeString": "mapping(string memory => address)"
															}
														},
														"id": 569,
														"indexExpression": {
															"hexValue": "517569636b53776170",
															"id": 568,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2890:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_594d562b07e5639baeda43f9427a7d73488025602cf4b19cc0e4cec02e1718f8",
																"typeString": "literal_string \"QuickSwap\""
															},
															"value": "QuickSwap"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2879:23:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 570,
														"name": "quickSwapRouter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 452,
														"src": "2905:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2879:41:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 572,
												"nodeType": "ExpressionStatement",
												"src": "2879:41:1"
											},
											{
												"expression": {
													"id": 575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 573,
														"name": "tradingEnabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 423,
														"src": "2930:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 574,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2947:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2930:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 576,
												"nodeType": "ExpressionStatement",
												"src": "2930:22:1"
											},
											{
												"expression": {
													"id": 579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 577,
														"name": "profitThreshold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 431,
														"src": "2962:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "313130",
														"id": 578,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2980:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_110_by_1",
															"typeString": "int_const 110"
														},
														"value": "110"
													},
													"src": "2962:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 580,
												"nodeType": "ExpressionStatement",
												"src": "2962:21:1"
											},
											{
												"expression": {
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 581,
														"name": "lossThreshold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 433,
														"src": "3007:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3835",
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3023:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_85_by_1",
															"typeString": "int_const 85"
														},
														"value": "85"
													},
													"src": "3007:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 584,
												"nodeType": "ExpressionStatement",
												"src": "3007:18:1"
											},
											{
												"expression": {
													"id": 588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 585,
														"name": "nextLogTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 441,
														"src": "3061:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 586,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3075:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 587,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3081:9:1",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3075:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3061:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 589,
												"nodeType": "ExpressionStatement",
												"src": "3061:29:1"
											}
										]
									},
									"id": 591,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "_polToken",
												"nameLocation": "2207:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "2199:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 512,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2199:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "_usdtToken",
												"nameLocation": "2234:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "2226:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 514,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2226:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 517,
												"mutability": "mutable",
												"name": "_usdcToken",
												"nameLocation": "2262:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "2254:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 516,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2254:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "_quickSwapRouter",
												"nameLocation": "2290:16:1",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "2282:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 518,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2282:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "_priceFeedAddress",
												"nameLocation": "2324:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "2316:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 520,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2316:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "_uniswapRouter",
												"nameLocation": "2359:14:1",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "2351:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 522,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2351:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "_uniswapPositionManager",
												"nameLocation": "2391:23:1",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "2383:31:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 524,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2383:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "_aaveLendingPoolAddressesProvider",
												"nameLocation": "2432:33:1",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "2424:41:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2424:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2189:282:1"
									},
									"returnParameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2472:0:1"
									},
									"scope": 1247,
									"src": "2178:919:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 602,
										"nodeType": "Block",
										"src": "3165:35:1",
										"statements": [
											{
												"expression": {
													"id": 600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 598,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 421,
														"src": "3175:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 599,
														"name": "controller",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 593,
														"src": "3183:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3175:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 601,
												"nodeType": "ExpressionStatement",
												"src": "3175:18:1"
											}
										]
									},
									"functionSelector": "92eefe9b",
									"id": 603,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 596,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 595,
												"name": "onlyOwner",
												"nameLocations": [
													"3155:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 502,
												"src": "3155:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "3155:9:1"
										}
									],
									"name": "setController",
									"nameLocation": "3112:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "controller",
												"nameLocation": "3134:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "3126:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 592,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3126:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3125:20:1"
									},
									"returnParameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3165:0:1"
									},
									"scope": 1247,
									"src": "3103:97:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 631,
										"nodeType": "Block",
										"src": "3233:145:1",
										"statements": [
											{
												"expression": {
													"id": 609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 606,
														"name": "initialDeposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "3243:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"id": 607,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3261:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 608,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3265:5:1",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "3261:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3243:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 610,
												"nodeType": "ExpressionStatement",
												"src": "3243:27:1"
											},
											{
												"expression": {
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 611,
														"name": "maticBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 427,
														"src": "3280:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 615,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 612,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3297:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 613,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3301:5:1",
																		"memberName": "value",
																		"nodeType": "MemberAccess",
																		"src": "3297:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"hexValue": "3730",
																		"id": 614,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3309:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_70_by_1",
																			"typeString": "int_const 70"
																		},
																		"value": "70"
																	},
																	"src": "3297:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 616,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3296:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "313030",
															"id": 617,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3315:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														},
														"src": "3296:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3280:38:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 620,
												"nodeType": "ExpressionStatement",
												"src": "3280:38:1"
											},
											{
												"expression": {
													"id": 629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 621,
														"name": "stablecoinBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 429,
														"src": "3328:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 628,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 625,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 622,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3350:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 623,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3354:5:1",
																		"memberName": "value",
																		"nodeType": "MemberAccess",
																		"src": "3350:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"hexValue": "3330",
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3362:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_30_by_1",
																			"typeString": "int_const 30"
																		},
																		"value": "30"
																	},
																	"src": "3350:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 626,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3349:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "313030",
															"id": 627,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3368:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														},
														"src": "3349:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3328:43:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 630,
												"nodeType": "ExpressionStatement",
												"src": "3328:43:1"
											}
										]
									},
									"id": 632,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 604,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3213:2:1"
									},
									"returnParameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3233:0:1"
									},
									"scope": 1247,
									"src": "3206:172:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 659,
										"nodeType": "Block",
										"src": "3455:294:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 639,
														"name": "selectedTimeframe",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 634,
														"src": "3469:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "393030",
														"id": 640,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3490:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_900_by_1",
															"typeString": "int_const 900"
														},
														"value": "900"
													},
													"src": "3469:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 645,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 643,
															"name": "selectedTimeframe",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 634,
															"src": "3566:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "3836343030",
															"id": 644,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3587:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_86400_by_1",
																"typeString": "int_const 86400"
															},
															"value": "86400"
														},
														"src": "3566:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 647,
													"nodeType": "IfStatement",
													"src": "3562:85:1",
													"trueBody": {
														"id": 646,
														"nodeType": "Block",
														"src": "3594:53:1",
														"statements": []
													}
												},
												"id": 648,
												"nodeType": "IfStatement",
												"src": "3465:182:1",
												"trueBody": {
													"id": 642,
													"nodeType": "Block",
													"src": "3495:61:1",
													"statements": []
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 650,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3675:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 651,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3679:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3675:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "54696d656672616d652061646a7573746564",
															"id": 652,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3687:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7638e8c8903c5fa61ebf97e2b2f70e2c3ee679b62e1042ef4e4240a60c0694d0",
																"typeString": "literal_string \"Timeframe adjusted\""
															},
															"value": "Timeframe adjusted"
														},
														{
															"id": 653,
															"name": "selectedTimeframe",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 634,
															"src": "3709:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 654,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3728:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 655,
																"name": "getPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1246,
																"src": "3731:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 656,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3731:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_stringliteral_7638e8c8903c5fa61ebf97e2b2f70e2c3ee679b62e1042ef4e4240a60c0694d0",
																"typeString": "literal_string \"Timeframe adjusted\""
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 649,
														"name": "TradeExecuted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 476,
														"src": "3661:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,string memory,uint256,uint256,uint256)"
														}
													},
													"id": 657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3661:81:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 658,
												"nodeType": "EmitStatement",
												"src": "3656:86:1"
											}
										]
									},
									"functionSelector": "869665e9",
									"id": 660,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 637,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 636,
												"name": "onlyOwner",
												"nameLocations": [
													"3445:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 502,
												"src": "3445:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "3445:9:1"
										}
									],
									"name": "adjustTimeframe",
									"nameLocation": "3393:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "selectedTimeframe",
												"nameLocation": "3417:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "3409:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 633,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3409:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3408:27:1"
									},
									"returnParameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3455:0:1"
									},
									"scope": 1247,
									"src": "3384:365:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 672,
										"nodeType": "Block",
										"src": "3809:65:1",
										"statements": [
											{
												"assignments": [
													666
												],
												"declarations": [
													{
														"constant": false,
														"id": 666,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "3827:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 672,
														"src": "3819:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 665,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3819:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 669,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 667,
														"name": "getPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1246,
														"src": "3835:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3835:10:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3819:26:1"
											},
											{
												"expression": {
													"id": 670,
													"name": "price",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 666,
													"src": "3862:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 664,
												"id": 671,
												"nodeType": "Return",
												"src": "3855:12:1"
											}
										]
									},
									"functionSelector": "8fc3047d",
									"id": 673,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkPrice",
									"nameLocation": "3764:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3774:2:1"
									},
									"returnParameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 673,
												"src": "3800:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 662,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3800:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3799:9:1"
									},
									"scope": 1247,
									"src": "3755:119:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 692,
										"nodeType": "Block",
										"src": "3963:81:1",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 683,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3992:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 684,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3996:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3992:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "tradeType",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "4004:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 686,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "4015:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 687,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4023:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 688,
																"name": "getPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1246,
																"src": "4026:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 689,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4026:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 682,
														"name": "TradeExecuted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 476,
														"src": "3978:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,string memory,uint256,uint256,uint256)"
														}
													},
													"id": 690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3978:59:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 691,
												"nodeType": "EmitStatement",
												"src": "3973:64:1"
											}
										]
									},
									"functionSelector": "26c403ed",
									"id": 693,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 680,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 679,
												"name": "onlyOwner",
												"nameLocations": [
													"3953:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 502,
												"src": "3953:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "3953:9:1"
										}
									],
									"name": "initiateTrade",
									"nameLocation": "3889:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "tradeType",
												"nameLocation": "3917:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 693,
												"src": "3903:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 674,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3903:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3936:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 693,
												"src": "3928:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 676,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3928:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3902:41:1"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3963:0:1"
									},
									"scope": 1247,
									"src": "3880:164:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 708,
										"nodeType": "Block",
										"src": "4096:83:1",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 699,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4125:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 700,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4129:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4125:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "636f6e7665727420746f20504f4c",
															"id": 701,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4137:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f548031c271626835f64bb759a80cb1c7ee3cbb01af72f7702986b2084fa7f35",
																"typeString": "literal_string \"convert to POL\""
															},
															"value": "convert to POL"
														},
														{
															"hexValue": "30",
															"id": 702,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4155:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "30",
															"id": 703,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4158:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 704,
																"name": "getPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1246,
																"src": "4161:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 705,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4161:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_stringliteral_f548031c271626835f64bb759a80cb1c7ee3cbb01af72f7702986b2084fa7f35",
																"typeString": "literal_string \"convert to POL\""
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 698,
														"name": "TradeExecuted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 476,
														"src": "4111:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,string memory,uint256,uint256,uint256)"
														}
													},
													"id": 706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4111:61:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 707,
												"nodeType": "EmitStatement",
												"src": "4106:66:1"
											}
										]
									},
									"functionSelector": "9d8ef1e1",
									"id": 709,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 696,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 695,
												"name": "onlyOwner",
												"nameLocations": [
													"4086:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 502,
												"src": "4086:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "4086:9:1"
										}
									],
									"name": "convertAllToPOL",
									"nameLocation": "4059:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4074:2:1"
									},
									"returnParameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4096:0:1"
									},
									"scope": 1247,
									"src": "4050:129:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 763,
										"nodeType": "Block",
										"src": "4295:364:1",
										"statements": [
											{
												"assignments": [
													720
												],
												"declarations": [
													{
														"constant": false,
														"id": 720,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "4320:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 763,
														"src": "4305:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV3Pool_$2477",
															"typeString": "contract IUniswapV3Pool"
														},
														"typeName": {
															"id": 719,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 718,
																"name": "IUniswapV3Pool",
																"nameLocations": [
																	"4305:14:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2477,
																"src": "4305:14:1"
															},
															"referencedDeclaration": 2477,
															"src": "4305:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV3Pool_$2477",
																"typeString": "contract IUniswapV3Pool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 724,
												"initialValue": {
													"arguments": [
														{
															"id": 722,
															"name": "poolAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 713,
															"src": "4342:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 721,
														"name": "IUniswapV3Pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2477,
														"src": "4327:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IUniswapV3Pool_$2477_$",
															"typeString": "type(contract IUniswapV3Pool)"
														}
													},
													"id": 723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4327:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV3Pool_$2477",
														"typeString": "contract IUniswapV3Pool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4305:49:1"
											},
											{
												"assignments": [
													726,
													null,
													null,
													null,
													null,
													null,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 726,
														"mutability": "mutable",
														"name": "sqrtPriceX96",
														"nameLocation": "4373:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 763,
														"src": "4365:20:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														},
														"typeName": {
															"id": 725,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "4365:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"visibility": "internal"
													},
													null,
													null,
													null,
													null,
													null,
													null
												],
												"id": 730,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 727,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 720,
															"src": "4395:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV3Pool_$2477",
																"typeString": "contract IUniswapV3Pool"
															}
														},
														"id": 728,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4400:5:1",
														"memberName": "slot0",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2824,
														"src": "4395:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
															"typeString": "function () view external returns (uint160,int24,uint16,uint16,uint16,uint8,bool)"
														}
													},
													"id": 729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4395:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
														"typeString": "tuple(uint160,int24,uint16,uint16,uint16,uint8,bool)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4364:43:1"
											},
											{
												"assignments": [
													732
												],
												"declarations": [
													{
														"constant": false,
														"id": 732,
														"mutability": "mutable",
														"name": "liquidity",
														"nameLocation": "4425:9:1",
														"nodeType": "VariableDeclaration",
														"scope": 763,
														"src": "4417:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 731,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4417:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 736,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 733,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 720,
															"src": "4437:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV3Pool_$2477",
																"typeString": "contract IUniswapV3Pool"
															}
														},
														"id": 734,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4442:9:1",
														"memberName": "liquidity",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2850,
														"src": "4437:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint128_$",
															"typeString": "function () view external returns (uint128)"
														}
													},
													"id": 735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4437:16:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4417:36:1"
											},
											{
												"assignments": [
													738
												],
												"declarations": [
													{
														"constant": false,
														"id": 738,
														"mutability": "mutable",
														"name": "amountOut",
														"nameLocation": "4471:9:1",
														"nodeType": "VariableDeclaration",
														"scope": 763,
														"src": "4463:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 737,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4463:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 744,
												"initialValue": {
													"arguments": [
														{
															"id": 740,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 711,
															"src": "4502:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 741,
															"name": "sqrtPriceX96",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 726,
															"src": "4512:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														{
															"id": 742,
															"name": "liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 732,
															"src": "4526:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 739,
														"name": "calculateAmountOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 785,
														"src": "4483:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint160_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint160,uint256) pure returns (uint256)"
														}
													},
													"id": 743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4483:53:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4463:73:1"
											},
											{
												"assignments": [
													746
												],
												"declarations": [
													{
														"constant": false,
														"id": 746,
														"mutability": "mutable",
														"name": "slippage",
														"nameLocation": "4554:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 763,
														"src": "4546:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 745,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4546:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 753,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 749,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 747,
																	"name": "amountOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 738,
																	"src": "4566:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 748,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4578:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "4566:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 750,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4565:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 751,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4583:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "4565:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4546:40:1"
											},
											{
												"expression": {
													"id": 761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 754,
														"name": "sufficientLiquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 716,
														"src": "4596:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 759,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 755,
																	"name": "amountOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 738,
																	"src": "4619:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 758,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 756,
																		"name": "amountIn",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 711,
																		"src": "4632:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 757,
																		"name": "slippage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 746,
																		"src": "4643:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4632:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4619:32:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 760,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4618:34:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4596:56:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 762,
												"nodeType": "ExpressionStatement",
												"src": "4596:56:1"
											}
										]
									},
									"functionSelector": "3fb47a3b",
									"id": 764,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkLiquidity",
									"nameLocation": "4194:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "4217:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 764,
												"src": "4209:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4209:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "poolAddress",
												"nameLocation": "4235:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 764,
												"src": "4227:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 712,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4227:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4208:39:1"
									},
									"returnParameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "sufficientLiquidity",
												"nameLocation": "4274:19:1",
												"nodeType": "VariableDeclaration",
												"scope": 764,
												"src": "4269:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 715,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4269:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4268:26:1"
									},
									"scope": 1247,
									"src": "4185:474:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 784,
										"nodeType": "Block",
										"src": "4784:68:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 781,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 779,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 777,
																	"name": "amountIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 766,
																	"src": "4809:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 778,
																	"name": "sqrtPriceX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 768,
																	"src": "4820:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"src": "4809:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 780,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 770,
																"src": "4835:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4809:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 776,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4801:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 775,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4801:7:1",
															"typeDescriptions": {}
														}
													},
													"id": 782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4801:44:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 774,
												"id": 783,
												"nodeType": "Return",
												"src": "4794:51:1"
											}
										]
									},
									"id": 785,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateAmountOut",
									"nameLocation": "4674:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "4701:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "4693:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 765,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4693:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 768,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "4719:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "4711:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 767,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "4711:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "4741:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "4733:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 769,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4733:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4692:59:1"
									},
									"returnParameters": {
										"id": 774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 773,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "4775:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 772,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4775:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4774:9:1"
									},
									"scope": 1247,
									"src": "4665:187:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 794,
										"nodeType": "Block",
										"src": "4903:39:1",
										"statements": [
											{
												"expression": {
													"id": 792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 790,
														"name": "tradingEnabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 423,
														"src": "4913:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 791,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4930:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "4913:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 793,
												"nodeType": "ExpressionStatement",
												"src": "4913:22:1"
											}
										]
									},
									"functionSelector": "17700f01",
									"id": 795,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 788,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 787,
												"name": "onlyOwner",
												"nameLocations": [
													"4893:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 502,
												"src": "4893:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "4893:9:1"
										}
									],
									"name": "disableTrading",
									"nameLocation": "4867:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4881:2:1"
									},
									"returnParameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4903:0:1"
									},
									"scope": 1247,
									"src": "4858:84:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 827,
										"nodeType": "Block",
										"src": "5013:185:1",
										"statements": [
											{
												"assignments": [
													803
												],
												"declarations": [
													{
														"constant": false,
														"id": 803,
														"mutability": "mutable",
														"name": "amountInWei",
														"nameLocation": "5031:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 827,
														"src": "5023:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 802,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5023:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 807,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 806,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 804,
														"name": "amountInGwei",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 797,
														"src": "5045:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"hexValue": "31",
														"id": 805,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5060:6:1",
														"subdenomination": "gwei",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000_by_1",
															"typeString": "int_const 1000000000"
														},
														"value": "1"
													},
													"src": "5045:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5023:43:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 815,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 811,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5092:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_MainBot_$1247",
																				"typeString": "contract MainBot"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_MainBot_$1247",
																				"typeString": "contract MainBot"
																			}
																		],
																		"id": 810,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5084:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 809,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5084:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 812,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5084:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 813,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5098:7:1",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5084:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 814,
																"name": "amountInWei",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 803,
																"src": "5109:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5084:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e6365",
															"id": 816,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5122:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															},
															"value": "Insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															}
														],
														"id": 808,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5076:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5076:69:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 818,
												"nodeType": "ExpressionStatement",
												"src": "5076:69:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 824,
															"name": "amountInWei",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 803,
															"src": "5179:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 821,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 421,
																	"src": "5163:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 820,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5155:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 819,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5155:8:1",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 822,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5155:14:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 823,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5170:8:1",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "5155:23:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5155:36:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 826,
												"nodeType": "ExpressionStatement",
												"src": "5155:36:1"
											}
										]
									},
									"functionSelector": "457f3cb0",
									"id": 828,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 800,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 799,
												"name": "onlyOwner",
												"nameLocations": [
													"5003:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 502,
												"src": "5003:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "5003:9:1"
										}
									],
									"name": "withdrawInGwei",
									"nameLocation": "4957:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "amountInGwei",
												"nameLocation": "4980:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "4972:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 796,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4972:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:22:1"
									},
									"returnParameters": {
										"id": 801,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5013:0:1"
									},
									"scope": 1247,
									"src": "4948:250:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 846,
										"nodeType": "Block",
										"src": "5239:68:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 841,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "5286:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_MainBot_$1247",
																			"typeString": "contract MainBot"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_MainBot_$1247",
																			"typeString": "contract MainBot"
																		}
																	],
																	"id": 840,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5278:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 839,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5278:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 842,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5278:13:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 843,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5292:7:1",
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "5278:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 835,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "5257:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 836,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5261:6:1",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "5257:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 834,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5249:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 833,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5249:8:1",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 837,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5249:19:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 838,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5269:8:1",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "5249:28:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5249:51:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 845,
												"nodeType": "ExpressionStatement",
												"src": "5249:51:1"
											}
										]
									},
									"functionSelector": "41c0e1b5",
									"id": 847,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 831,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 830,
												"name": "onlyOwner",
												"nameLocations": [
													"5229:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 502,
												"src": "5229:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "5229:9:1"
										}
									],
									"name": "kill",
									"nameLocation": "5213:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5217:2:1"
									},
									"returnParameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5239:0:1"
									},
									"scope": 1247,
									"src": "5204:103:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 869,
										"nodeType": "Block",
										"src": "5371:162:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 855,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 852,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "5385:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 853,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5391:9:1",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "5385:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 854,
														"name": "nextLogTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 441,
														"src": "5404:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5385:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 868,
												"nodeType": "IfStatement",
												"src": "5381:146:1",
												"trueBody": {
													"id": 867,
													"nodeType": "Block",
													"src": "5417:110:1",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 857,
																		"name": "currentActivity",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 444,
																		"src": "5452:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_storage",
																			"typeString": "string storage ref"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_storage",
																			"typeString": "string storage ref"
																		}
																	],
																	"id": 856,
																	"name": "CurrentActivity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 486,
																	"src": "5436:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory)"
																	}
																},
																"id": 858,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5436:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 859,
															"nodeType": "EmitStatement",
															"src": "5431:37:1"
														},
														{
															"expression": {
																"id": 865,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 860,
																	"name": "nextLogTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 441,
																	"src": "5482:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 864,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 861,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "5496:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 862,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5502:9:1",
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "5496:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "3630",
																		"id": 863,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5514:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_60_by_1",
																			"typeString": "int_const 60"
																		},
																		"value": "60"
																	},
																	"src": "5496:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5482:34:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 866,
															"nodeType": "ExpressionStatement",
															"src": "5482:34:1"
														}
													]
												}
											}
										]
									},
									"id": 870,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 850,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 849,
												"name": "whenTradingEnabled",
												"nameLocations": [
													"5352:18:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 511,
												"src": "5352:18:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "5352:18:1"
										}
									],
									"name": "logCurrentActivity",
									"nameLocation": "5322:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 848,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5340:2:1"
									},
									"returnParameters": {
										"id": 851,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5371:0:1"
									},
									"scope": 1247,
									"src": "5313:220:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 957,
										"nodeType": "Block",
										"src": "5618:409:1",
										"statements": [
											{
												"assignments": [
													879
												],
												"declarations": [
													{
														"constant": false,
														"id": 879,
														"mutability": "mutable",
														"name": "gain",
														"nameLocation": "5636:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 957,
														"src": "5628:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 878,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5628:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 881,
												"initialValue": {
													"hexValue": "30",
													"id": 880,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5643:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5628:16:1"
											},
											{
												"assignments": [
													883
												],
												"declarations": [
													{
														"constant": false,
														"id": 883,
														"mutability": "mutable",
														"name": "loss",
														"nameLocation": "5662:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 957,
														"src": "5654:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 882,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5654:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 885,
												"initialValue": {
													"hexValue": "30",
													"id": 884,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5669:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5654:16:1"
											},
											{
												"body": {
													"id": 935,
													"nodeType": "Block",
													"src": "5724:197:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 905,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 897,
																		"name": "prices",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 873,
																		"src": "5742:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 899,
																	"indexExpression": {
																		"id": 898,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 887,
																		"src": "5749:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5742:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"baseExpression": {
																		"id": 900,
																		"name": "prices",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 873,
																		"src": "5754:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 904,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 903,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 901,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 887,
																			"src": "5761:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 902,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5765:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "5761:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5754:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5742:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 933,
																"nodeType": "Block",
																"src": "5843:68:1",
																"statements": [
																	{
																		"expression": {
																			"id": 931,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 920,
																				"name": "loss",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 883,
																				"src": "5861:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 929,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"baseExpression": {
																								"id": 921,
																								"name": "prices",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 873,
																								"src": "5870:6:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																									"typeString": "uint256[] memory"
																								}
																							},
																							"id": 925,
																							"indexExpression": {
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 924,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 922,
																									"name": "i",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 887,
																									"src": "5877:1:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "-",
																								"rightExpression": {
																									"hexValue": "31",
																									"id": 923,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "5881:1:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_1_by_1",
																										"typeString": "int_const 1"
																									},
																									"value": "1"
																								},
																								"src": "5877:5:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "5870:13:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"baseExpression": {
																								"id": 926,
																								"name": "prices",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 873,
																								"src": "5886:6:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																									"typeString": "uint256[] memory"
																								}
																							},
																							"id": 928,
																							"indexExpression": {
																								"id": 927,
																								"name": "i",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 887,
																								"src": "5893:1:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "5886:9:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "5870:25:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 930,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5869:27:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5861:35:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 932,
																		"nodeType": "ExpressionStatement",
																		"src": "5861:35:1"
																	}
																]
															},
															"id": 934,
															"nodeType": "IfStatement",
															"src": "5738:173:1",
															"trueBody": {
																"id": 919,
																"nodeType": "Block",
																"src": "5769:68:1",
																"statements": [
																	{
																		"expression": {
																			"id": 917,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 906,
																				"name": "gain",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 879,
																				"src": "5787:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 915,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"baseExpression": {
																								"id": 907,
																								"name": "prices",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 873,
																								"src": "5796:6:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																									"typeString": "uint256[] memory"
																								}
																							},
																							"id": 909,
																							"indexExpression": {
																								"id": 908,
																								"name": "i",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 887,
																								"src": "5803:1:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "5796:9:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"baseExpression": {
																								"id": 910,
																								"name": "prices",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 873,
																								"src": "5808:6:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																									"typeString": "uint256[] memory"
																								}
																							},
																							"id": 914,
																							"indexExpression": {
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 913,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 911,
																									"name": "i",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 887,
																									"src": "5815:1:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "-",
																								"rightExpression": {
																									"hexValue": "31",
																									"id": 912,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "5819:1:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_1_by_1",
																										"typeString": "int_const 1"
																									},
																									"value": "1"
																								},
																								"src": "5815:5:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "5808:13:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "5796:25:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 916,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5795:27:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5787:35:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 918,
																		"nodeType": "ExpressionStatement",
																		"src": "5787:35:1"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 890,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 887,
														"src": "5700:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 891,
															"name": "prices",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 873,
															"src": "5704:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 892,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5711:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5704:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5700:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 936,
												"initializationExpression": {
													"assignments": [
														887
													],
													"declarations": [
														{
															"constant": false,
															"id": 887,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "5693:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 936,
															"src": "5685:9:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 886,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5685:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 889,
													"initialValue": {
														"hexValue": "31",
														"id": 888,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5697:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "5685:13:1"
												},
												"loopExpression": {
													"expression": {
														"id": 895,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "5719:3:1",
														"subExpression": {
															"id": 894,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 887,
															"src": "5719:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 896,
													"nodeType": "ExpressionStatement",
													"src": "5719:3:1"
												},
												"nodeType": "ForStatement",
												"src": "5680:241:1"
											},
											{
												"assignments": [
													938
												],
												"declarations": [
													{
														"constant": false,
														"id": 938,
														"mutability": "mutable",
														"name": "rs",
														"nameLocation": "5938:2:1",
														"nodeType": "VariableDeclaration",
														"scope": 957,
														"src": "5930:10:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 937,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5930:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 942,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 939,
														"name": "gain",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 879,
														"src": "5943:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 940,
														"name": "loss",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 883,
														"src": "5950:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5943:11:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5930:24:1"
											},
											{
												"assignments": [
													944
												],
												"declarations": [
													{
														"constant": false,
														"id": 944,
														"mutability": "mutable",
														"name": "rsi",
														"nameLocation": "5972:3:1",
														"nodeType": "VariableDeclaration",
														"scope": 957,
														"src": "5964:11:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 943,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5964:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 954,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "313030",
														"id": 945,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5978:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 951,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "313030",
																	"id": 946,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5985:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 949,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "31",
																				"id": 947,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5992:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"id": 948,
																				"name": "rs",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 938,
																				"src": "5996:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5992:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 950,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "5991:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5985:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 952,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5984:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5978:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5964:36:1"
											},
											{
												"expression": {
													"id": 955,
													"name": "rsi",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 944,
													"src": "6017:3:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 877,
												"id": 956,
												"nodeType": "Return",
												"src": "6010:10:1"
											}
										]
									},
									"id": 958,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateRSI",
									"nameLocation": "5548:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "prices",
												"nameLocation": "5578:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "5561:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 871,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5561:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 872,
													"nodeType": "ArrayTypeName",
													"src": "5561:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5560:25:1"
									},
									"returnParameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 876,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "5609:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 875,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5609:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5608:9:1"
									},
									"scope": 1247,
									"src": "5539:488:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 991,
										"nodeType": "Block",
										"src": "6112:183:1",
										"statements": [
											{
												"assignments": [
													967
												],
												"declarations": [
													{
														"constant": false,
														"id": 967,
														"mutability": "mutable",
														"name": "emaShort",
														"nameLocation": "6130:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 991,
														"src": "6122:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 966,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6122:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 972,
												"initialValue": {
													"arguments": [
														{
															"id": 969,
															"name": "prices",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 961,
															"src": "6154:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "3132",
															"id": 970,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6162:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_12_by_1",
																"typeString": "int_const 12"
															},
															"value": "12"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_rational_12_by_1",
																"typeString": "int_const 12"
															}
														],
														"id": 968,
														"name": "calculateEMA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1047,
														"src": "6141:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
														}
													},
													"id": 971,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6141:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6122:43:1"
											},
											{
												"assignments": [
													974
												],
												"declarations": [
													{
														"constant": false,
														"id": 974,
														"mutability": "mutable",
														"name": "emaLong",
														"nameLocation": "6183:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 991,
														"src": "6175:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 973,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6175:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 979,
												"initialValue": {
													"arguments": [
														{
															"id": 976,
															"name": "prices",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 961,
															"src": "6206:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "3236",
															"id": 977,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6214:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_26_by_1",
																"typeString": "int_const 26"
															},
															"value": "26"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_rational_26_by_1",
																"typeString": "int_const 26"
															}
														],
														"id": 975,
														"name": "calculateEMA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1047,
														"src": "6193:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
														}
													},
													"id": 978,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6193:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6175:42:1"
											},
											{
												"assignments": [
													981
												],
												"declarations": [
													{
														"constant": false,
														"id": 981,
														"mutability": "mutable",
														"name": "macd",
														"nameLocation": "6234:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 991,
														"src": "6227:11:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 980,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "6227:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 988,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 986,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 984,
																"name": "emaShort",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 967,
																"src": "6248:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 985,
																"name": "emaLong",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 974,
																"src": "6259:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6248:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 983,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "6241:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int256_$",
															"typeString": "type(int256)"
														},
														"typeName": {
															"id": 982,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "6241:6:1",
															"typeDescriptions": {}
														}
													},
													"id": 987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6241:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6227:40:1"
											},
											{
												"expression": {
													"id": 989,
													"name": "macd",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 981,
													"src": "6284:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 965,
												"id": 990,
												"nodeType": "Return",
												"src": "6277:11:1"
											}
										]
									},
									"id": 992,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateMACD",
									"nameLocation": "6042:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 962,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "prices",
												"nameLocation": "6073:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 992,
												"src": "6056:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 959,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6056:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 960,
													"nodeType": "ArrayTypeName",
													"src": "6056:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6055:25:1"
									},
									"returnParameters": {
										"id": 965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 964,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 992,
												"src": "6104:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 963,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "6104:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6103:8:1"
									},
									"scope": 1247,
									"src": "6033:262:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1046,
										"nodeType": "Block",
										"src": "6396:229:1",
										"statements": [
											{
												"assignments": [
													1003
												],
												"declarations": [
													{
														"constant": false,
														"id": 1003,
														"mutability": "mutable",
														"name": "multiplier",
														"nameLocation": "6414:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 1046,
														"src": "6406:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1002,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6406:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1010,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1009,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "32",
														"id": 1004,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6427:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1007,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1005,
																	"name": "period",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 997,
																	"src": "6432:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1006,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6441:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "6432:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1008,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6431:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6427:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6406:37:1"
											},
											{
												"assignments": [
													1012
												],
												"declarations": [
													{
														"constant": false,
														"id": 1012,
														"mutability": "mutable",
														"name": "ema",
														"nameLocation": "6461:3:1",
														"nodeType": "VariableDeclaration",
														"scope": 1046,
														"src": "6453:11:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1011,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6453:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1016,
												"initialValue": {
													"baseExpression": {
														"id": 1013,
														"name": "prices",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 995,
														"src": "6467:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"id": 1015,
													"indexExpression": {
														"hexValue": "30",
														"id": 1014,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6474:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6467:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6453:23:1"
											},
											{
												"body": {
													"id": 1042,
													"nodeType": "Block",
													"src": "6530:69:1",
													"statements": [
														{
															"expression": {
																"id": 1040,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1028,
																	"name": "ema",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1012,
																	"src": "6544:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1039,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1036,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1033,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"baseExpression": {
																									"id": 1029,
																									"name": "prices",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 995,
																									"src": "6552:6:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																										"typeString": "uint256[] memory"
																									}
																								},
																								"id": 1031,
																								"indexExpression": {
																									"id": 1030,
																									"name": "i",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1018,
																									"src": "6559:1:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "6552:9:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "-",
																							"rightExpression": {
																								"id": 1032,
																								"name": "ema",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1012,
																								"src": "6564:3:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "6552:15:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 1034,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "6551:17:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 1035,
																					"name": "multiplier",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1003,
																					"src": "6571:10:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "6551:30:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1037,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "6550:32:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 1038,
																		"name": "ema",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1012,
																		"src": "6585:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6550:38:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6544:44:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1041,
															"nodeType": "ExpressionStatement",
															"src": "6544:44:1"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1024,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1021,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1018,
														"src": "6506:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1022,
															"name": "prices",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 995,
															"src": "6510:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1023,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6517:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6510:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6506:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1043,
												"initializationExpression": {
													"assignments": [
														1018
													],
													"declarations": [
														{
															"constant": false,
															"id": 1018,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "6499:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 1043,
															"src": "6491:9:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1017,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6491:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1020,
													"initialValue": {
														"hexValue": "31",
														"id": 1019,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6503:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6491:13:1"
												},
												"loopExpression": {
													"expression": {
														"id": 1026,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "6525:3:1",
														"subExpression": {
															"id": 1025,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1018,
															"src": "6525:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1027,
													"nodeType": "ExpressionStatement",
													"src": "6525:3:1"
												},
												"nodeType": "ForStatement",
												"src": "6486:113:1"
											},
											{
												"expression": {
													"id": 1044,
													"name": "ema",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1012,
													"src": "6615:3:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1001,
												"id": 1045,
												"nodeType": "Return",
												"src": "6608:10:1"
											}
										]
									},
									"id": 1047,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateEMA",
									"nameLocation": "6310:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 995,
												"mutability": "mutable",
												"name": "prices",
												"nameLocation": "6340:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "6323:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 993,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6323:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 994,
													"nodeType": "ArrayTypeName",
													"src": "6323:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 997,
												"mutability": "mutable",
												"name": "period",
												"nameLocation": "6356:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "6348:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 996,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6348:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6322:41:1"
									},
									"returnParameters": {
										"id": 1001,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1000,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "6387:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 999,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6387:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6386:9:1"
									},
									"scope": 1247,
									"src": "6301:324:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1217,
										"nodeType": "Block",
										"src": "6727:653:1",
										"statements": [
											{
												"assignments": [
													1061
												],
												"declarations": [
													{
														"constant": false,
														"id": 1061,
														"mutability": "mutable",
														"name": "fibLevels",
														"nameLocation": "6754:9:1",
														"nodeType": "VariableDeclaration",
														"scope": 1217,
														"src": "6737:26:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1059,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6737:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1060,
															"nodeType": "ArrayTypeName",
															"src": "6737:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1067,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "3131",
															"id": 1065,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6780:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_11_by_1",
																"typeString": "int_const 11"
															},
															"value": "11"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_11_by_1",
																"typeString": "int_const 11"
															}
														],
														"id": 1064,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "6766:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1062,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6770:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1063,
															"nodeType": "ArrayTypeName",
															"src": "6770:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 1066,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6766:17:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6737:46:1"
											},
											{
												"expression": {
													"id": 1072,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1068,
															"name": "fibLevels",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1061,
															"src": "6793:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1070,
														"indexExpression": {
															"hexValue": "30",
															"id": 1069,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6803:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6793:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1071,
														"name": "low",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1051,
														"src": "6808:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6793:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1073,
												"nodeType": "ExpressionStatement",
												"src": "6793:18:1"
											},
											{
												"expression": {
													"id": 1087,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1074,
															"name": "fibLevels",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1061,
															"src": "6821:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1076,
														"indexExpression": {
															"hexValue": "31",
															"id": 1075,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6831:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6821:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1086,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1077,
															"name": "low",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1051,
															"src": "6836:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1085,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1083,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1080,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1078,
																				"name": "high",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1049,
																				"src": "6843:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1079,
																				"name": "low",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1051,
																				"src": "6850:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6843:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1081,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "6842:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "323336",
																	"id": 1082,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6857:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_236_by_1",
																		"typeString": "int_const 236"
																	},
																	"value": "236"
																},
																"src": "6842:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "31303030",
																"id": 1084,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6863:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000_by_1",
																	"typeString": "int_const 1000"
																},
																"value": "1000"
															},
															"src": "6842:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6836:31:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6821:46:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1088,
												"nodeType": "ExpressionStatement",
												"src": "6821:46:1"
											},
											{
												"expression": {
													"id": 1102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1089,
															"name": "fibLevels",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1061,
															"src": "6877:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1091,
														"indexExpression": {
															"hexValue": "32",
															"id": 1090,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6887:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6877:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1101,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1092,
															"name": "low",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1051,
															"src": "6892:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1098,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1095,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1093,
																				"name": "high",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1049,
																				"src": "6899:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1094,
																				"name": "low",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1051,
																				"src": "6906:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6899:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1096,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "6898:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "333832",
																	"id": 1097,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6913:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_382_by_1",
																		"typeString": "int_const 382"
																	},
																	"value": "382"
																},
																"src": "6898:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "31303030",
																"id": 1099,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6919:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000_by_1",
																	"typeString": "int_const 1000"
																},
																"value": "1000"
															},
															"src": "6898:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6892:31:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6877:46:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1103,
												"nodeType": "ExpressionStatement",
												"src": "6877:46:1"
											},
											{
												"expression": {
													"id": 1117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1104,
															"name": "fibLevels",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1061,
															"src": "6933:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1106,
														"indexExpression": {
															"hexValue": "33",
															"id": 1105,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6943:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															},
															"value": "3"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6933:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1116,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1107,
															"name": "low",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1051,
															"src": "6948:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1115,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1113,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1110,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1108,
																				"name": "high",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1049,
																				"src": "6955:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1109,
																				"name": "low",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1051,
																				"src": "6962:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6955:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1111,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "6954:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "353030",
																	"id": 1112,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6969:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_500_by_1",
																		"typeString": "int_const 500"
																	},
																	"value": "500"
																},
																"src": "6954:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "31303030",
																"id": 1114,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6975:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000_by_1",
																	"typeString": "int_const 1000"
																},
																"value": "1000"
															},
															"src": "6954:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6948:31:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6933:46:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1118,
												"nodeType": "ExpressionStatement",
												"src": "6933:46:1"
											},
											{
												"expression": {
													"id": 1132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1119,
															"name": "fibLevels",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1061,
															"src": "6989:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1121,
														"indexExpression": {
															"hexValue": "34",
															"id": 1120,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6999:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4_by_1",
																"typeString": "int_const 4"
															},
															"value": "4"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6989:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1131,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1122,
															"name": "low",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1051,
															"src": "7004:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1130,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1128,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1125,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1123,
																				"name": "high",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1049,
																				"src": "7011:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1124,
																				"name": "low",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1051,
																				"src": "7018:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7011:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1126,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7010:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "363138",
																	"id": 1127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7025:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_618_by_1",
																		"typeString": "int_const 618"
																	},
																	"value": "618"
																},
																"src": "7010:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "31303030",
																"id": 1129,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7031:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000_by_1",
																	"typeString": "int_const 1000"
																},
																"value": "1000"
															},
															"src": "7010:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7004:31:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6989:46:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1133,
												"nodeType": "ExpressionStatement",
												"src": "6989:46:1"
											},
											{
												"expression": {
													"id": 1147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1134,
															"name": "fibLevels",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1061,
															"src": "7045:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1136,
														"indexExpression": {
															"hexValue": "35",
															"id": 1135,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7055:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_5_by_1",
																"typeString": "int_const 5"
															},
															"value": "5"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7045:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1146,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1137,
															"name": "low",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1051,
															"src": "7060:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1145,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1143,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1140,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1138,
																				"name": "high",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1049,
																				"src": "7067:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1139,
																				"name": "low",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1051,
																				"src": "7074:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7067:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1141,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7066:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "373836",
																	"id": 1142,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7081:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_786_by_1",
																		"typeString": "int_const 786"
																	},
																	"value": "786"
																},
																"src": "7066:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "31303030",
																"id": 1144,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7087:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000_by_1",
																	"typeString": "int_const 1000"
																},
																"value": "1000"
															},
															"src": "7066:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7060:31:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7045:46:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1148,
												"nodeType": "ExpressionStatement",
												"src": "7045:46:1"
											},
											{
												"expression": {
													"id": 1153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1149,
															"name": "fibLevels",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1061,
															"src": "7101:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1151,
														"indexExpression": {
															"hexValue": "36",
															"id": 1150,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7111:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_6_by_1",
																"typeString": "int_const 6"
															},
															"value": "6"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7101:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1152,
														"name": "high",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1049,
														"src": "7116:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7101:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1154,
												"nodeType": "ExpressionStatement",
												"src": "7101:19:1"
											},
											{
												"expression": {
													"id": 1168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1155,
															"name": "fibLevels",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1061,
															"src": "7130:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1157,
														"indexExpression": {
															"hexValue": "37",
															"id": 1156,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7140:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_7_by_1",
																"typeString": "int_const 7"
															},
															"value": "7"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7130:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1167,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1158,
															"name": "high",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1049,
															"src": "7145:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1166,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1164,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1161,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1159,
																				"name": "high",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1049,
																				"src": "7153:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1160,
																				"name": "low",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1051,
																				"src": "7160:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7153:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1162,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7152:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "363138",
																	"id": 1163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7167:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_618_by_1",
																		"typeString": "int_const 618"
																	},
																	"value": "618"
																},
																"src": "7152:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "31303030",
																"id": 1165,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7173:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000_by_1",
																	"typeString": "int_const 1000"
																},
																"value": "1000"
															},
															"src": "7152:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7145:32:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7130:47:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1169,
												"nodeType": "ExpressionStatement",
												"src": "7130:47:1"
											},
											{
												"expression": {
													"id": 1183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1170,
															"name": "fibLevels",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1061,
															"src": "7187:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1172,
														"indexExpression": {
															"hexValue": "38",
															"id": 1171,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7197:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_8_by_1",
																"typeString": "int_const 8"
															},
															"value": "8"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7187:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1182,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1173,
															"name": "high",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1049,
															"src": "7202:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1181,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1176,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1174,
																				"name": "high",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1049,
																				"src": "7210:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1175,
																				"name": "low",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1051,
																				"src": "7217:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7210:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1177,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7209:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "313638",
																	"id": 1178,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7224:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_168_by_1",
																		"typeString": "int_const 168"
																	},
																	"value": "168"
																},
																"src": "7209:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "313030",
																"id": 1180,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7230:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															},
															"src": "7209:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7202:31:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7187:46:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1184,
												"nodeType": "ExpressionStatement",
												"src": "7187:46:1"
											},
											{
												"expression": {
													"id": 1198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1185,
															"name": "fibLevels",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1061,
															"src": "7243:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1187,
														"indexExpression": {
															"hexValue": "39",
															"id": 1186,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7253:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_9_by_1",
																"typeString": "int_const 9"
															},
															"value": "9"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7243:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1197,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1188,
															"name": "high",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1049,
															"src": "7258:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1196,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1194,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1191,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1189,
																				"name": "high",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1049,
																				"src": "7266:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1190,
																				"name": "low",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1051,
																				"src": "7273:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7266:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1192,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7265:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "363138",
																	"id": 1193,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7280:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_618_by_1",
																		"typeString": "int_const 618"
																	},
																	"value": "618"
																},
																"src": "7265:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "31303030",
																"id": 1195,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7286:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000_by_1",
																	"typeString": "int_const 1000"
																},
																"value": "1000"
															},
															"src": "7265:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7258:32:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7243:47:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1199,
												"nodeType": "ExpressionStatement",
												"src": "7243:47:1"
											},
											{
												"expression": {
													"id": 1213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1200,
															"name": "fibLevels",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1061,
															"src": "7300:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1202,
														"indexExpression": {
															"hexValue": "3130",
															"id": 1201,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7310:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7300:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1212,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1203,
															"name": "high",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1049,
															"src": "7316:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1209,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1206,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1204,
																				"name": "high",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1049,
																				"src": "7324:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1205,
																				"name": "low",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1051,
																				"src": "7331:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7324:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1207,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7323:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "323336",
																	"id": 1208,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7338:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_236_by_1",
																		"typeString": "int_const 236"
																	},
																	"value": "236"
																},
																"src": "7323:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "313030",
																"id": 1210,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7344:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															},
															"src": "7323:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7316:31:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7300:47:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1214,
												"nodeType": "ExpressionStatement",
												"src": "7300:47:1"
											},
											{
												"expression": {
													"id": 1215,
													"name": "fibLevels",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1061,
													"src": "7364:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 1056,
												"id": 1216,
												"nodeType": "Return",
												"src": "7357:16:1"
											}
										]
									},
									"id": 1218,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateFibonacci",
									"nameLocation": "6640:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1052,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1049,
												"mutability": "mutable",
												"name": "high",
												"nameLocation": "6667:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1218,
												"src": "6659:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1048,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6659:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1051,
												"mutability": "mutable",
												"name": "low",
												"nameLocation": "6681:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 1218,
												"src": "6673:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1050,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6673:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6658:27:1"
									},
									"returnParameters": {
										"id": 1056,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1218,
												"src": "6709:16:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1053,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6709:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1054,
													"nodeType": "ArrayTypeName",
													"src": "6709:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6708:18:1"
									},
									"scope": 1247,
									"src": "6631:749:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1245,
										"nodeType": "Block",
										"src": "7438:188:1",
										"statements": [
											{
												"assignments": [
													1225
												],
												"declarations": [
													{
														"constant": false,
														"id": 1225,
														"mutability": "mutable",
														"name": "priceFeed",
														"nameLocation": "7470:9:1",
														"nodeType": "VariableDeclaration",
														"scope": 1245,
														"src": "7448:31:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$1874",
															"typeString": "contract AggregatorV3Interface"
														},
														"typeName": {
															"id": 1224,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1223,
																"name": "AggregatorV3Interface",
																"nameLocations": [
																	"7448:21:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1874,
																"src": "7448:21:1"
															},
															"referencedDeclaration": 1874,
															"src": "7448:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$1874",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1229,
												"initialValue": {
													"arguments": [
														{
															"id": 1227,
															"name": "priceFeedAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 454,
															"src": "7504:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1226,
														"name": "AggregatorV3Interface",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1874,
														"src": "7482:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$1874_$",
															"typeString": "type(contract AggregatorV3Interface)"
														}
													},
													"id": 1228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7482:39:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_AggregatorV3Interface_$1874",
														"typeString": "contract AggregatorV3Interface"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7448:73:1"
											},
											{
												"assignments": [
													null,
													1231,
													null,
													null,
													null
												],
												"declarations": [
													null,
													{
														"constant": false,
														"id": 1231,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "7538:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 1245,
														"src": "7534:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1230,
															"name": "int",
															"nodeType": "ElementaryTypeName",
															"src": "7534:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													},
													null,
													null,
													null
												],
												"id": 1235,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1232,
															"name": "priceFeed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1225,
															"src": "7550:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$1874",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"id": 1233,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7560:15:1",
														"memberName": "latestRoundData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1873,
														"src": "7550:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
															"typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
														}
													},
													"id": 1234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7550:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
														"typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7531:46:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 1242,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1238,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1231,
																"src": "7602:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000_by_1",
																	"typeString": "int_const 10000000000"
																},
																"id": 1241,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1239,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7610:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3130",
																	"id": 1240,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7616:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "7610:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000_by_1",
																	"typeString": "int_const 10000000000"
																}
															},
															"src": "7602:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 1237,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "7594:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 1236,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7594:7:1",
															"typeDescriptions": {}
														}
													},
													"id": 1243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7594:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1222,
												"id": 1244,
												"nodeType": "Return",
												"src": "7587:32:1"
											}
										]
									},
									"id": 1246,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPrice",
									"nameLocation": "7395:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1219,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7403:2:1"
									},
									"returnParameters": {
										"id": 1222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1221,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1246,
												"src": "7429:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7429:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7428:9:1"
									},
									"scope": 1247,
									"src": "7386:240:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1248,
							"src": "941:6687:1",
							"usedErrors": [],
							"usedEvents": [
								476,
								482,
								486,
								490
							]
						}
					],
					"src": "33:7596:1"
				},
				"id": 1
			},
			"contracts/aave/protocol-v2/contracts/interfaces/DataTypes.sol": {
				"ast": {
					"absolutePath": "contracts/aave/protocol-v2/contracts/interfaces/DataTypes.sol",
					"exportedSymbols": {
						"DataTypes": [
							1298
						]
					},
					"id": 1299,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1249,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "DataTypes",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 1298,
							"linearizedBaseContracts": [
								1298
							],
							"name": "DataTypes",
							"nameLocation": "65:9:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "DataTypes.ReserveConfigurationMap",
									"id": 1252,
									"members": [
										{
											"constant": false,
											"id": 1251,
											"mutability": "mutable",
											"name": "data",
											"nameLocation": "130:4:2",
											"nodeType": "VariableDeclaration",
											"scope": 1252,
											"src": "122:12:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1250,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "122:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ReserveConfigurationMap",
									"nameLocation": "88:23:2",
									"nodeType": "StructDefinition",
									"scope": 1298,
									"src": "81:60:2",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.UserConfigurationMap",
									"id": 1255,
									"members": [
										{
											"constant": false,
											"id": 1254,
											"mutability": "mutable",
											"name": "data",
											"nameLocation": "193:4:2",
											"nodeType": "VariableDeclaration",
											"scope": 1255,
											"src": "185:12:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1253,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "185:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserConfigurationMap",
									"nameLocation": "154:20:2",
									"nodeType": "StructDefinition",
									"scope": 1298,
									"src": "147:57:2",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.ReserveData",
									"id": 1278,
									"members": [
										{
											"constant": false,
											"id": 1257,
											"mutability": "mutable",
											"name": "totalLiquidity",
											"nameLocation": "247:14:2",
											"nodeType": "VariableDeclaration",
											"scope": 1278,
											"src": "239:22:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1256,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "239:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1259,
											"mutability": "mutable",
											"name": "availableLiquidity",
											"nameLocation": "279:18:2",
											"nodeType": "VariableDeclaration",
											"scope": 1278,
											"src": "271:26:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1258,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "271:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1261,
											"mutability": "mutable",
											"name": "totalStableDebt",
											"nameLocation": "315:15:2",
											"nodeType": "VariableDeclaration",
											"scope": 1278,
											"src": "307:23:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1260,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "307:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1263,
											"mutability": "mutable",
											"name": "totalVariableDebt",
											"nameLocation": "348:17:2",
											"nodeType": "VariableDeclaration",
											"scope": 1278,
											"src": "340:25:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1262,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "340:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1265,
											"mutability": "mutable",
											"name": "liquidityRate",
											"nameLocation": "383:13:2",
											"nodeType": "VariableDeclaration",
											"scope": 1278,
											"src": "375:21:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1264,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "375:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1267,
											"mutability": "mutable",
											"name": "variableBorrowRate",
											"nameLocation": "414:18:2",
											"nodeType": "VariableDeclaration",
											"scope": 1278,
											"src": "406:26:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1266,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "406:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1269,
											"mutability": "mutable",
											"name": "stableBorrowRate",
											"nameLocation": "450:16:2",
											"nodeType": "VariableDeclaration",
											"scope": 1278,
											"src": "442:24:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1268,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "442:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1271,
											"mutability": "mutable",
											"name": "averageStableBorrowRate",
											"nameLocation": "484:23:2",
											"nodeType": "VariableDeclaration",
											"scope": 1278,
											"src": "476:31:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1270,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "476:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1273,
											"mutability": "mutable",
											"name": "liquidityIndex",
											"nameLocation": "525:14:2",
											"nodeType": "VariableDeclaration",
											"scope": 1278,
											"src": "517:22:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1272,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "517:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1275,
											"mutability": "mutable",
											"name": "variableBorrowIndex",
											"nameLocation": "557:19:2",
											"nodeType": "VariableDeclaration",
											"scope": 1278,
											"src": "549:27:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1274,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "549:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1277,
											"mutability": "mutable",
											"name": "lastUpdateTimestamp",
											"nameLocation": "593:19:2",
											"nodeType": "VariableDeclaration",
											"scope": 1278,
											"src": "586:26:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint40",
												"typeString": "uint40"
											},
											"typeName": {
												"id": 1276,
												"name": "uint40",
												"nodeType": "ElementaryTypeName",
												"src": "586:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint40",
													"typeString": "uint40"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ReserveData",
									"nameLocation": "217:11:2",
									"nodeType": "StructDefinition",
									"scope": 1298,
									"src": "210:409:2",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.UserReserveData",
									"id": 1297,
									"members": [
										{
											"constant": false,
											"id": 1280,
											"mutability": "mutable",
											"name": "currentATokenBalance",
											"nameLocation": "666:20:2",
											"nodeType": "VariableDeclaration",
											"scope": 1297,
											"src": "658:28:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1279,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "658:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1282,
											"mutability": "mutable",
											"name": "currentStableDebt",
											"nameLocation": "704:17:2",
											"nodeType": "VariableDeclaration",
											"scope": 1297,
											"src": "696:25:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1281,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "696:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1284,
											"mutability": "mutable",
											"name": "currentVariableDebt",
											"nameLocation": "739:19:2",
											"nodeType": "VariableDeclaration",
											"scope": 1297,
											"src": "731:27:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1283,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "731:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1286,
											"mutability": "mutable",
											"name": "principalStableDebt",
											"nameLocation": "776:19:2",
											"nodeType": "VariableDeclaration",
											"scope": 1297,
											"src": "768:27:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1285,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "768:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1288,
											"mutability": "mutable",
											"name": "scaledVariableDebt",
											"nameLocation": "813:18:2",
											"nodeType": "VariableDeclaration",
											"scope": 1297,
											"src": "805:26:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1287,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "805:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1290,
											"mutability": "mutable",
											"name": "stableBorrowRate",
											"nameLocation": "849:16:2",
											"nodeType": "VariableDeclaration",
											"scope": 1297,
											"src": "841:24:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1289,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "841:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1292,
											"mutability": "mutable",
											"name": "liquidityRate",
											"nameLocation": "883:13:2",
											"nodeType": "VariableDeclaration",
											"scope": 1297,
											"src": "875:21:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1291,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "875:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1294,
											"mutability": "mutable",
											"name": "stableRateLastUpdated",
											"nameLocation": "913:21:2",
											"nodeType": "VariableDeclaration",
											"scope": 1297,
											"src": "906:28:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint40",
												"typeString": "uint40"
											},
											"typeName": {
												"id": 1293,
												"name": "uint40",
												"nodeType": "ElementaryTypeName",
												"src": "906:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint40",
													"typeString": "uint40"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1296,
											"mutability": "mutable",
											"name": "usageAsCollateralEnabled",
											"nameLocation": "949:24:2",
											"nodeType": "VariableDeclaration",
											"scope": 1297,
											"src": "944:29:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1295,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "944:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserReserveData",
									"nameLocation": "632:15:2",
									"nodeType": "StructDefinition",
									"scope": 1298,
									"src": "625:355:2",
									"visibility": "public"
								}
							],
							"scope": 1299,
							"src": "57:925:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:951:2"
				},
				"id": 2
			},
			"contracts/aave/protocol-v2/contracts/interfaces/ILendingPool.sol": {
				"ast": {
					"absolutePath": "contracts/aave/protocol-v2/contracts/interfaces/ILendingPool.sol",
					"exportedSymbols": {
						"DataTypes": [
							1298
						],
						"ILendingPool": [
							1677
						],
						"ILendingPoolAddressesProvider": [
							1828
						]
					},
					"id": 1678,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1300,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:3"
						},
						{
							"id": 1301,
							"literals": [
								"experimental",
								"ABIEncoderV2"
							],
							"nodeType": "PragmaDirective",
							"src": "61:33:3"
						},
						{
							"absolutePath": "contracts/aave/protocol-v2/contracts/interfaces/ILendingPoolAddressesProvider.sol",
							"file": "./ILendingPoolAddressesProvider.sol",
							"id": 1303,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1678,
							"sourceUnit": 1829,
							"src": "96:82:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1302,
										"name": "ILendingPoolAddressesProvider",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1828,
										"src": "104:29:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/aave/protocol-v2/contracts/interfaces/DataTypes.sol",
							"file": "./DataTypes.sol",
							"id": 1305,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1678,
							"sourceUnit": 1299,
							"src": "179:42:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1304,
										"name": "DataTypes",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1298,
										"src": "187:9:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ILendingPool",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1677,
							"linearizedBaseContracts": [
								1677
							],
							"name": "ILendingPool",
							"nameLocation": "233:12:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1306,
										"nodeType": "StructuredDocumentation",
										"src": "250:325:3",
										"text": " @dev Emitted on deposit()\n @param reserve The address of the underlying asset of the reserve\n @param user The address initiating the deposit\n @param onBehalfOf The beneficiary of the deposit, receiving the aTokens\n @param amount The amount deposited\n @param referral The referral code used*"
									},
									"eventSelector": "de6857219544bb5b7746f48ed30be6386fefc61b2f864cacf559893bf50fd951",
									"id": 1318,
									"name": "Deposit",
									"nameLocation": "584:7:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1308,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "613:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "597:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1307,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "597:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1310,
												"indexed": false,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "634:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "626:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "626:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1312,
												"indexed": true,
												"mutability": "mutable",
												"name": "onBehalfOf",
												"nameLocation": "660:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "644:26:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1311,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "644:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1314,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "684:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "676:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1313,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "676:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1316,
												"indexed": true,
												"mutability": "mutable",
												"name": "referral",
												"nameLocation": "711:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "696:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1315,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "696:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "591:132:3"
									},
									"src": "578:146:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1319,
										"nodeType": "StructuredDocumentation",
										"src": "728:288:3",
										"text": " @dev Emitted on withdraw()\n @param reserve The address of the underlyng asset being withdrawn\n @param user The address initiating the withdrawal, owner of aTokens\n @param to Address that will receive the underlying\n @param amount The amount to be withdrawn*"
									},
									"eventSelector": "3115d1449a7b732c986cba18244e897a450f61e1bb8d589cd2e69e6c8924f9f7",
									"id": 1329,
									"name": "Withdraw",
									"nameLocation": "1025:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1321,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "1050:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1329,
												"src": "1034:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1320,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1034:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1323,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1075:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1329,
												"src": "1059:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1322,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1059:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1325,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1097:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1329,
												"src": "1081:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1081:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1327,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1109:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1329,
												"src": "1101:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1101:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1033:83:3"
									},
									"src": "1019:98:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1330,
										"nodeType": "StructuredDocumentation",
										"src": "1121:605:3",
										"text": " @dev Emitted on borrow() and flashLoan() when debt needs to be opened\n @param reserve The address of the underlying asset being borrowed\n @param user The address of the user initiating the borrow(), receiving the funds on borrow() or just\n initiator of the transaction on flashLoan()\n @param onBehalfOf The address that will be getting the debt\n @param amount The amount borrowed out\n @param borrowRateMode The rate mode: 1 for Stable, 2 for Variable\n @param borrowRate The numeric rate at which the user has borrowed\n @param referral The referral code used*"
									},
									"eventSelector": "c6a898309e823ee50bac64e45ca8adba6690e99e7841c45d754e2a38e9019d9b",
									"id": 1346,
									"name": "Borrow",
									"nameLocation": "1735:6:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1332,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "1763:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1346,
												"src": "1747:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1747:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1334,
												"indexed": false,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1784:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1346,
												"src": "1776:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1776:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1336,
												"indexed": true,
												"mutability": "mutable",
												"name": "onBehalfOf",
												"nameLocation": "1810:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 1346,
												"src": "1794:26:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1335,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1794:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1338,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1834:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1346,
												"src": "1826:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1337,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1826:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1340,
												"indexed": false,
												"mutability": "mutable",
												"name": "borrowRateMode",
												"nameLocation": "1854:14:3",
												"nodeType": "VariableDeclaration",
												"scope": 1346,
												"src": "1846:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1339,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1846:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1342,
												"indexed": false,
												"mutability": "mutable",
												"name": "borrowRate",
												"nameLocation": "1882:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 1346,
												"src": "1874:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1874:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1344,
												"indexed": true,
												"mutability": "mutable",
												"name": "referral",
												"nameLocation": "1913:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1346,
												"src": "1898:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1343,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1898:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1741:184:3"
									},
									"src": "1729:197:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1347,
										"nodeType": "StructuredDocumentation",
										"src": "1930:311:3",
										"text": " @dev Emitted on repay()\n @param reserve The address of the underlying asset of the reserve\n @param user The beneficiary of the repayment, getting his debt reduced\n @param repayer The address of the user initiating the repay(), providing the funds\n @param amount The amount repaid*"
									},
									"eventSelector": "4cdde6e09bb755c9a5589ebaec640bbfedff1362d4b255ebf8339782b9942faa",
									"id": 1357,
									"name": "Repay",
									"nameLocation": "2250:5:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1349,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "2277:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1357,
												"src": "2261:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1348,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2261:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1351,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2306:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1357,
												"src": "2290:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1350,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2290:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1353,
												"indexed": true,
												"mutability": "mutable",
												"name": "repayer",
												"nameLocation": "2332:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1357,
												"src": "2316:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2316:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1355,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2353:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1357,
												"src": "2345:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2345:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2255:108:3"
									},
									"src": "2244:120:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1358,
										"nodeType": "StructuredDocumentation",
										"src": "2368:253:3",
										"text": " @dev Emitted on swapBorrowRateMode()\n @param reserve The address of the underlying asset of the reserve\n @param user The address of the user swapping his rate mode\n @param rateMode The rate mode that the user wants to swap to*"
									},
									"eventSelector": "ea368a40e9570069bb8e6511d668293ad2e1f03b0d982431fd223de9f3b70ca6",
									"id": 1366,
									"name": "Swap",
									"nameLocation": "2630:4:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1360,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "2651:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1366,
												"src": "2635:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2635:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1362,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2676:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1366,
												"src": "2660:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1361,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2660:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1364,
												"indexed": false,
												"mutability": "mutable",
												"name": "rateMode",
												"nameLocation": "2690:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1366,
												"src": "2682:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1363,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2682:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2634:65:3"
									},
									"src": "2624:76:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1367,
										"nodeType": "StructuredDocumentation",
										"src": "2704:208:3",
										"text": " @dev Emitted on setUserUseReserveAsCollateral()\n @param reserve The address of the underlying asset of the reserve\n @param user The address of the user enabling the usage as collateral*"
									},
									"eventSelector": "00058a56ea94653cdf4f152d227ace22d4c00ad99e2a43f58cb7d9e3feb295f2",
									"id": 1373,
									"name": "ReserveUsedAsCollateralEnabled",
									"nameLocation": "2921:30:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1369,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "2968:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1373,
												"src": "2952:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2952:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1371,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2993:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1373,
												"src": "2977:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1370,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2977:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2951:47:3"
									},
									"src": "2915:84:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1374,
										"nodeType": "StructuredDocumentation",
										"src": "3003:208:3",
										"text": " @dev Emitted on setUserUseReserveAsCollateral()\n @param reserve The address of the underlying asset of the reserve\n @param user The address of the user enabling the usage as collateral*"
									},
									"eventSelector": "44c58d81365b66dd4b1a7f36c25aa97b8c71c361ee4937adc1a00000227db5dd",
									"id": 1380,
									"name": "ReserveUsedAsCollateralDisabled",
									"nameLocation": "3220:31:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1376,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "3268:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1380,
												"src": "3252:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1375,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3252:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1378,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "3293:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1380,
												"src": "3277:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3277:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3251:47:3"
									},
									"src": "3214:85:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1381,
										"nodeType": "StructuredDocumentation",
										"src": "3303:213:3",
										"text": " @dev Emitted on rebalanceStableBorrowRate()\n @param reserve The address of the underlying asset of the reserve\n @param user The address of the user for which the rebalance has been executed*"
									},
									"eventSelector": "9f439ae0c81e41a04d3fdfe07aed54e6a179fb0db15be7702eb66fa8ef6f5300",
									"id": 1387,
									"name": "RebalanceStableBorrowRate",
									"nameLocation": "3525:25:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1383,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "3567:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "3551:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1382,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3551:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1385,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "3592:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "3576:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1384,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3576:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3550:47:3"
									},
									"src": "3519:79:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1388,
										"nodeType": "StructuredDocumentation",
										"src": "3602:370:3",
										"text": " @dev Emitted on flashLoan()\n @param target The address of the flash loan receiver contract\n @param initiator The address initiating the flash loan\n @param asset The address of the asset being flash borrowed\n @param amount The amount flash borrowed\n @param premium The fee flash borrowed\n @param referralCode The referral code used*"
									},
									"eventSelector": "631042c832b07452973831137f2d73e395028b44b250dedc5abb0ee766e168ac",
									"id": 1402,
									"name": "FlashLoan",
									"nameLocation": "3981:9:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1390,
												"indexed": true,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4012:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "3996:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3996:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1392,
												"indexed": true,
												"mutability": "mutable",
												"name": "initiator",
												"nameLocation": "4040:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "4024:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1391,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4024:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1394,
												"indexed": true,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "4071:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "4055:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1393,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4055:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1396,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4090:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "4082:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1395,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4082:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1398,
												"indexed": false,
												"mutability": "mutable",
												"name": "premium",
												"nameLocation": "4110:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "4102:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4102:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1400,
												"indexed": false,
												"mutability": "mutable",
												"name": "referralCode",
												"nameLocation": "4130:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "4123:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1399,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4123:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3990:156:3"
									},
									"src": "3975:172:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1403,
										"nodeType": "StructuredDocumentation",
										"src": "4151:56:3",
										"text": " @dev Emitted when the pause is triggered."
									},
									"eventSelector": "9e87fac88ff661f02d44f95383c817fece4bce600a3dab7a54406878b965e752",
									"id": 1405,
									"name": "Paused",
									"nameLocation": "4216:6:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1404,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4222:2:3"
									},
									"src": "4210:15:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1406,
										"nodeType": "StructuredDocumentation",
										"src": "4229:53:3",
										"text": " @dev Emitted when the pause is lifted."
									},
									"eventSelector": "a45f47fdea8a1efdd9029a5691c7f759c32b7c698632b563573e155625d16933",
									"id": 1408,
									"name": "Unpaused",
									"nameLocation": "4291:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1407,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4299:2:3"
									},
									"src": "4285:17:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1409,
										"nodeType": "StructuredDocumentation",
										"src": "4306:928:3",
										"text": " @dev Emitted when a borrower is liquidated. This event is emitted by the LendingPool via\n LendingPoolCollateral manager using a DELEGATECALL\n This allows to have the events in the generated ABI for LendingPool.\n @param collateralAsset The address of the underlying asset used as collateral, to receive as result of the liquidation\n @param debtAsset The address of the underlying borrowed asset to be repaid with the liquidation\n @param user The address of the borrower getting liquidated\n @param debtToCover The debt amount of borrowed `asset` the liquidator wants to cover\n @param liquidatedCollateralAmount The amount of collateral received by the liiquidator\n @param liquidator The address of the liquidator\n @param receiveAToken `true` if the liquidators wants to receive the collateral aTokens, `false` if he wants\n to receive the underlying collateral asset directly*"
									},
									"eventSelector": "e413a321e8681d831f4dbccbca790d2952b56f977908e45be37335533e005286",
									"id": 1425,
									"name": "LiquidationCall",
									"nameLocation": "5243:15:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1411,
												"indexed": true,
												"mutability": "mutable",
												"name": "collateralAsset",
												"nameLocation": "5280:15:3",
												"nodeType": "VariableDeclaration",
												"scope": 1425,
												"src": "5264:31:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1410,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5264:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1413,
												"indexed": true,
												"mutability": "mutable",
												"name": "debtAsset",
												"nameLocation": "5317:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 1425,
												"src": "5301:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1412,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5301:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1415,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "5348:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1425,
												"src": "5332:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1414,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5332:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1417,
												"indexed": false,
												"mutability": "mutable",
												"name": "debtToCover",
												"nameLocation": "5366:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 1425,
												"src": "5358:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5358:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1419,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidatedCollateralAmount",
												"nameLocation": "5391:26:3",
												"nodeType": "VariableDeclaration",
												"scope": 1425,
												"src": "5383:34:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1418,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5383:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1421,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidator",
												"nameLocation": "5431:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 1425,
												"src": "5423:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5423:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1423,
												"indexed": false,
												"mutability": "mutable",
												"name": "receiveAToken",
												"nameLocation": "5452:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 1425,
												"src": "5447:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1422,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5447:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5258:211:3"
									},
									"src": "5237:233:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1426,
										"nodeType": "StructuredDocumentation",
										"src": "5474:722:3",
										"text": " @dev Emitted when the state of a reserve is updated. NOTE: This event is actually declared\n in the ReserveLogic library and emitted in the updateInterestRates() function. Since the function is internal,\n the event will actually be fired by the LendingPool contract. The event is therefore replicated here so it\n gets added to the LendingPool ABI\n @param reserve The address of the underlying asset of the reserve\n @param liquidityRate The new liquidity rate\n @param stableBorrowRate The new stable borrow rate\n @param variableBorrowRate The new variable borrow rate\n @param liquidityIndex The new liquidity index\n @param variableBorrowIndex The new variable borrow index*"
									},
									"eventSelector": "804c9b842b2748a22bb64b345453a3de7ca54a6ca45ce00d415894979e22897a",
									"id": 1440,
									"name": "ReserveDataUpdated",
									"nameLocation": "6205:18:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1428,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "6245:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1440,
												"src": "6229:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1427,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6229:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1430,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidityRate",
												"nameLocation": "6266:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 1440,
												"src": "6258:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1429,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6258:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1432,
												"indexed": false,
												"mutability": "mutable",
												"name": "stableBorrowRate",
												"nameLocation": "6293:16:3",
												"nodeType": "VariableDeclaration",
												"scope": 1440,
												"src": "6285:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1431,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6285:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1434,
												"indexed": false,
												"mutability": "mutable",
												"name": "variableBorrowRate",
												"nameLocation": "6323:18:3",
												"nodeType": "VariableDeclaration",
												"scope": 1440,
												"src": "6315:26:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1433,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6315:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1436,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidityIndex",
												"nameLocation": "6355:14:3",
												"nodeType": "VariableDeclaration",
												"scope": 1440,
												"src": "6347:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6347:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1438,
												"indexed": false,
												"mutability": "mutable",
												"name": "variableBorrowIndex",
												"nameLocation": "6383:19:3",
												"nodeType": "VariableDeclaration",
												"scope": 1440,
												"src": "6375:27:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1437,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6375:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6223:183:3"
									},
									"src": "6199:208:3"
								},
								{
									"documentation": {
										"id": 1441,
										"nodeType": "StructuredDocumentation",
										"src": "6411:712:3",
										"text": " @dev Deposits an `amount` of underlying asset into the reserve, receiving in return overlying aTokens.\n - E.g. User deposits 100 USDC and gets in return 100 aUSDC\n @param asset The address of the underlying asset to deposit\n @param amount The amount to be deposited\n @param onBehalfOf The address that will receive the aTokens, same as msg.sender if the user\n   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens\n   is a different wallet\n @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   0 if the action is executed directly by the user, without any middle-man*"
									},
									"functionSelector": "e8eda9df",
									"id": 1452,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "7135:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1443,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "7156:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1452,
												"src": "7148:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1442,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7148:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1445,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7175:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1452,
												"src": "7167:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1444,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7167:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1447,
												"mutability": "mutable",
												"name": "onBehalfOf",
												"nameLocation": "7195:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 1452,
												"src": "7187:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1446,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7187:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1449,
												"mutability": "mutable",
												"name": "referralCode",
												"nameLocation": "7218:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 1452,
												"src": "7211:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1448,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "7211:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7142:92:3"
									},
									"returnParameters": {
										"id": 1451,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7243:0:3"
									},
									"scope": 1677,
									"src": "7126:118:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1453,
										"nodeType": "StructuredDocumentation",
										"src": "7248:665:3",
										"text": " @dev Withdraws an `amount` of underlying asset from the reserve, burning the equivalent aTokens owned\n E.g. User has 100 aUSDC, calls withdraw() and receives 100 USDC, burning the 100 aUSDC\n @param asset The address of the underlying asset to withdraw\n @param amount The underlying amount to be withdrawn\n   - Send the value type(uint256).max in order to withdraw the whole aToken balance\n @param to Address that will receive the underlying, same as msg.sender if the user\n   wants to receive it on his own wallet, or a different address if the beneficiary is a\n   different wallet\n @return The final amount withdrawn*"
									},
									"functionSelector": "69328dec",
									"id": 1464,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "7925:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1455,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "7947:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1464,
												"src": "7939:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7939:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1457,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7966:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1464,
												"src": "7958:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7958:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1459,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7986:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1464,
												"src": "7978:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1458,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7978:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7933:59:3"
									},
									"returnParameters": {
										"id": 1463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1462,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1464,
												"src": "8011:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1461,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8011:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8010:9:3"
									},
									"scope": 1677,
									"src": "7916:104:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1465,
										"nodeType": "StructuredDocumentation",
										"src": "8024:1189:3",
										"text": " @dev Allows users to borrow a specific `amount` of the reserve underlying asset, provided that the borrower\n already deposited enough collateral, or he was given enough allowance by a credit delegator on the\n corresponding debt token (StableDebtToken or VariableDebtToken)\n - E.g. User borrows 100 USDC passing as `onBehalfOf` his own address, receiving the 100 USDC in his wallet\n   and 100 stable/variable debt tokens, depending on the `interestRateMode`\n @param asset The address of the underlying asset to borrow\n @param amount The amount to be borrowed\n @param interestRateMode The interest rate mode at which the user wants to borrow: 1 for Stable, 2 for Variable\n @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   0 if the action is executed directly by the user, without any middle-man\n @param onBehalfOf Address of the user who will receive the debt. Should be the address of the borrower itself\n calling the function if he wants to borrow against his own collateral, or the address of the credit delegator\n if he has been given credit delegation allowance*"
									},
									"functionSelector": "a415bcad",
									"id": 1478,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "borrow",
									"nameLocation": "9225:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1467,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "9245:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1478,
												"src": "9237:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1466,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9237:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1469,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9264:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1478,
												"src": "9256:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1468,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9256:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1471,
												"mutability": "mutable",
												"name": "interestRateMode",
												"nameLocation": "9284:16:3",
												"nodeType": "VariableDeclaration",
												"scope": 1478,
												"src": "9276:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1470,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9276:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1473,
												"mutability": "mutable",
												"name": "referralCode",
												"nameLocation": "9313:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 1478,
												"src": "9306:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1472,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "9306:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1475,
												"mutability": "mutable",
												"name": "onBehalfOf",
												"nameLocation": "9339:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 1478,
												"src": "9331:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1474,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9331:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9231:122:3"
									},
									"returnParameters": {
										"id": 1477,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9362:0:3"
									},
									"scope": 1677,
									"src": "9216:147:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1479,
										"nodeType": "StructuredDocumentation",
										"src": "9367:862:3",
										"text": " @notice Repays a borrowed `amount` on a specific reserve, burning the equivalent debt tokens owned\n - E.g. User repays 100 USDC, burning 100 variable/stable debt tokens of the `onBehalfOf` address\n @param asset The address of the borrowed underlying asset previously borrowed\n @param amount The amount to repay\n - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\n @param rateMode The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\n @param onBehalfOf Address of the user who will get his debt reduced/removed. Should be the address of the\n user calling the function if he wants to reduce/remove his own debt, or the address of any other\n other borrower whose debt should be removed\n @return The final amount repaid*"
									},
									"functionSelector": "573ade81",
									"id": 1492,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "repay",
									"nameLocation": "10241:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1481,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "10260:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1492,
												"src": "10252:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1480,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10252:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1483,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10279:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1492,
												"src": "10271:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1482,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10271:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1485,
												"mutability": "mutable",
												"name": "rateMode",
												"nameLocation": "10299:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1492,
												"src": "10291:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1484,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10291:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1487,
												"mutability": "mutable",
												"name": "onBehalfOf",
												"nameLocation": "10321:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 1492,
												"src": "10313:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10313:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10246:89:3"
									},
									"returnParameters": {
										"id": 1491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1490,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1492,
												"src": "10354:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1489,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10354:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10353:9:3"
									},
									"scope": 1677,
									"src": "10232:131:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1493,
										"nodeType": "StructuredDocumentation",
										"src": "10367:231:3",
										"text": " @dev Allows a borrower to swap his debt between stable and variable mode, or viceversa\n @param asset The address of the underlying asset borrowed\n @param rateMode The rate mode that the user wants to swap to*"
									},
									"functionSelector": "94ba89a2",
									"id": 1500,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapBorrowRateMode",
									"nameLocation": "10610:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1495,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "10637:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1500,
												"src": "10629:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1494,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10629:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1497,
												"mutability": "mutable",
												"name": "rateMode",
												"nameLocation": "10652:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1500,
												"src": "10644:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1496,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10644:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10628:33:3"
									},
									"returnParameters": {
										"id": 1499,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10670:0:3"
									},
									"scope": 1677,
									"src": "10601:70:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1501,
										"nodeType": "StructuredDocumentation",
										"src": "10675:553:3",
										"text": " @dev Rebalances the stable interest rate of a user to the current stable rate defined on the reserve.\n - Users can be rebalanced if the following conditions are satisfied:\n     1. Usage ratio is above 95%\n     2. the current deposit APY is below REBALANCE_UP_THRESHOLD * maxVariableBorrowRate, which means that too much has been\n        borrowed at a stable rate and depositors are not earning enough\n @param asset The address of the underlying asset borrowed\n @param user The address of the user to be rebalanced*"
									},
									"functionSelector": "cd112382",
									"id": 1508,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "rebalanceStableBorrowRate",
									"nameLocation": "11240:25:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1503,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "11274:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "11266:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1502,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11266:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1505,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "11289:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "11281:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1504,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11281:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11265:29:3"
									},
									"returnParameters": {
										"id": 1507,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11303:0:3"
									},
									"scope": 1677,
									"src": "11231:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1509,
										"nodeType": "StructuredDocumentation",
										"src": "11308:266:3",
										"text": " @dev Allows depositors to enable/disable a specific deposited asset as collateral\n @param asset The address of the underlying asset deposited\n @param useAsCollateral `true` if the user wants to use the deposit as collateral, `false` otherwise*"
									},
									"functionSelector": "5a3b74b9",
									"id": 1516,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setUserUseReserveAsCollateral",
									"nameLocation": "11586:29:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1511,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "11624:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1516,
												"src": "11616:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1510,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11616:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1513,
												"mutability": "mutable",
												"name": "useAsCollateral",
												"nameLocation": "11636:15:3",
												"nodeType": "VariableDeclaration",
												"scope": 1516,
												"src": "11631:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1512,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11631:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11615:37:3"
									},
									"returnParameters": {
										"id": 1515,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11661:0:3"
									},
									"scope": 1677,
									"src": "11577:85:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1517,
										"nodeType": "StructuredDocumentation",
										"src": "11666:860:3",
										"text": " @dev Function to liquidate a non-healthy position collateral-wise, with Health Factor below 1\n - The caller (liquidator) covers `debtToCover` amount of debt of the user getting liquidated, and receives\n   a proportionally amount of the `collateralAsset` plus a bonus to cover market risk\n @param collateralAsset The address of the underlying asset used as collateral, to receive as result of the liquidation\n @param debtAsset The address of the underlying borrowed asset to be repaid with the liquidation\n @param user The address of the borrower getting liquidated\n @param debtToCover The debt amount of borrowed `asset` the liquidator wants to cover\n @param receiveAToken `true` if the liquidators wants to receive the collateral aTokens, `false` if he wants\n to receive the underlying collateral asset directly*"
									},
									"functionSelector": "00a718a9",
									"id": 1530,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "liquidationCall",
									"nameLocation": "12538:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1519,
												"mutability": "mutable",
												"name": "collateralAsset",
												"nameLocation": "12567:15:3",
												"nodeType": "VariableDeclaration",
												"scope": 1530,
												"src": "12559:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1518,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12559:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1521,
												"mutability": "mutable",
												"name": "debtAsset",
												"nameLocation": "12596:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 1530,
												"src": "12588:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1520,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12588:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1523,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "12619:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1530,
												"src": "12611:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1522,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12611:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1525,
												"mutability": "mutable",
												"name": "debtToCover",
												"nameLocation": "12637:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 1530,
												"src": "12629:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1524,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12629:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1527,
												"mutability": "mutable",
												"name": "receiveAToken",
												"nameLocation": "12659:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 1530,
												"src": "12654:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1526,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12654:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12553:123:3"
									},
									"returnParameters": {
										"id": 1529,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12685:0:3"
									},
									"scope": 1677,
									"src": "12529:157:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1531,
										"nodeType": "StructuredDocumentation",
										"src": "12690:1376:3",
										"text": " @dev Allows smartcontracts to access the liquidity of the pool within one transaction,\n as long as the amount taken plus a fee is returned.\n IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept into consideration.\n For further details please visit https://developers.aave.com\n @param receiverAddress The address of the contract receiving the funds, implementing the IFlashLoanReceiver interface\n @param assets The addresses of the assets being flash-borrowed\n @param amounts The amounts amounts being flash-borrowed\n @param modes Types of the debt to open if the flash loan is not returned:\n   0 -> Don't open any debt, just revert if funds can't be transferred from the receiver\n   1 -> Open debt at stable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\n   2 -> Open debt at variable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\n @param onBehalfOf The address  that will receive the debt in the case of using on `modes` 1 or 2\n @param params Variadic packed params to pass to the receiver as extra information\n @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   0 if the action is executed directly by the user, without any middle-man*"
									},
									"functionSelector": "ab9c4b5d",
									"id": 1551,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "flashLoan",
									"nameLocation": "14078:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1533,
												"mutability": "mutable",
												"name": "receiverAddress",
												"nameLocation": "14101:15:3",
												"nodeType": "VariableDeclaration",
												"scope": 1551,
												"src": "14093:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1532,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14093:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1536,
												"mutability": "mutable",
												"name": "assets",
												"nameLocation": "14141:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1551,
												"src": "14122:25:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1534,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "14122:7:3",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1535,
													"nodeType": "ArrayTypeName",
													"src": "14122:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1539,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "14172:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1551,
												"src": "14153:26:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1537,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "14153:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1538,
													"nodeType": "ArrayTypeName",
													"src": "14153:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1542,
												"mutability": "mutable",
												"name": "modes",
												"nameLocation": "14204:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1551,
												"src": "14185:24:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1540,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "14185:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1541,
													"nodeType": "ArrayTypeName",
													"src": "14185:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1544,
												"mutability": "mutable",
												"name": "onBehalfOf",
												"nameLocation": "14223:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 1551,
												"src": "14215:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1543,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14215:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1546,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "14254:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1551,
												"src": "14239:21:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1545,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14239:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1548,
												"mutability": "mutable",
												"name": "referralCode",
												"nameLocation": "14273:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 1551,
												"src": "14266:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1547,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "14266:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14087:202:3"
									},
									"returnParameters": {
										"id": 1550,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14298:0:3"
									},
									"scope": 1677,
									"src": "14069:230:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1552,
										"nodeType": "StructuredDocumentation",
										"src": "14303:507:3",
										"text": " @dev Returns the user account data across all the reserves\n @param user The address of the user\n @return totalCollateralETH the total collateral in ETH of the user\n @return totalDebtETH the total debt in ETH of the user\n @return availableBorrowsETH the borrowing power left of the user\n @return currentLiquidationThreshold the liquidation threshold of the user\n @return ltv the loan to value of the user\n @return healthFactor the current health factor of the user*"
									},
									"functionSelector": "bf92857c",
									"id": 1569,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getUserAccountData",
									"nameLocation": "14822:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1554,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "14849:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1569,
												"src": "14841:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1553,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14841:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14840:14:3"
									},
									"returnParameters": {
										"id": 1568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1557,
												"mutability": "mutable",
												"name": "totalCollateralETH",
												"nameLocation": "14905:18:3",
												"nodeType": "VariableDeclaration",
												"scope": 1569,
												"src": "14897:26:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1556,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14897:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1559,
												"mutability": "mutable",
												"name": "totalDebtETH",
												"nameLocation": "14939:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 1569,
												"src": "14931:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1558,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14931:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1561,
												"mutability": "mutable",
												"name": "availableBorrowsETH",
												"nameLocation": "14967:19:3",
												"nodeType": "VariableDeclaration",
												"scope": 1569,
												"src": "14959:27:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1560,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14959:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1563,
												"mutability": "mutable",
												"name": "currentLiquidationThreshold",
												"nameLocation": "15002:27:3",
												"nodeType": "VariableDeclaration",
												"scope": 1569,
												"src": "14994:35:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1562,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14994:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1565,
												"mutability": "mutable",
												"name": "ltv",
												"nameLocation": "15045:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1569,
												"src": "15037:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1564,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15037:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1567,
												"mutability": "mutable",
												"name": "healthFactor",
												"nameLocation": "15064:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 1569,
												"src": "15056:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1566,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15056:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14889:193:3"
									},
									"scope": 1677,
									"src": "14813:270:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7a708e92",
									"id": 1582,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initReserve",
									"nameLocation": "15096:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1571,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "15121:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1582,
												"src": "15113:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1570,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15113:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1573,
												"mutability": "mutable",
												"name": "aTokenAddress",
												"nameLocation": "15142:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 1582,
												"src": "15134:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1572,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15134:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1575,
												"mutability": "mutable",
												"name": "stableDebtAddress",
												"nameLocation": "15169:17:3",
												"nodeType": "VariableDeclaration",
												"scope": 1582,
												"src": "15161:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1574,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15161:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1577,
												"mutability": "mutable",
												"name": "variableDebtAddress",
												"nameLocation": "15200:19:3",
												"nodeType": "VariableDeclaration",
												"scope": 1582,
												"src": "15192:27:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1576,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15192:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1579,
												"mutability": "mutable",
												"name": "interestRateStrategyAddress",
												"nameLocation": "15233:27:3",
												"nodeType": "VariableDeclaration",
												"scope": 1582,
												"src": "15225:35:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1578,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15225:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15107:157:3"
									},
									"returnParameters": {
										"id": 1581,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15273:0:3"
									},
									"scope": 1677,
									"src": "15087:187:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1d2118f9",
									"id": 1589,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setReserveInterestRateStrategyAddress",
									"nameLocation": "15287:37:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1584,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "15333:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1589,
												"src": "15325:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1583,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15325:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1586,
												"mutability": "mutable",
												"name": "rateStrategyAddress",
												"nameLocation": "15350:19:3",
												"nodeType": "VariableDeclaration",
												"scope": 1589,
												"src": "15342:27:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1585,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15342:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15324:46:3"
									},
									"returnParameters": {
										"id": 1588,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15383:0:3"
									},
									"scope": 1677,
									"src": "15278:106:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b8d29276",
									"id": 1596,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setConfiguration",
									"nameLocation": "15397:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1591,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "15422:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1596,
												"src": "15414:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1590,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15414:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1593,
												"mutability": "mutable",
												"name": "configuration",
												"nameLocation": "15439:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 1596,
												"src": "15431:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1592,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15431:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15413:40:3"
									},
									"returnParameters": {
										"id": 1595,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15462:0:3"
									},
									"scope": 1677,
									"src": "15388:75:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1597,
										"nodeType": "StructuredDocumentation",
										"src": "15467:176:3",
										"text": " @dev Returns the configuration of the reserve\n @param asset The address of the underlying asset of the reserve\n @return The configuration of the reserve*"
									},
									"functionSelector": "c44b11f7",
									"id": 1605,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getConfiguration",
									"nameLocation": "15655:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1599,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "15680:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1605,
												"src": "15672:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1598,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15672:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15671:15:3"
									},
									"returnParameters": {
										"id": 1604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1603,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1605,
												"src": "15722:40:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReserveConfigurationMap_$1252_memory_ptr",
													"typeString": "struct DataTypes.ReserveConfigurationMap"
												},
												"typeName": {
													"id": 1602,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1601,
														"name": "DataTypes.ReserveConfigurationMap",
														"nameLocations": [
															"15722:9:3",
															"15732:23:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1252,
														"src": "15722:33:3"
													},
													"referencedDeclaration": 1252,
													"src": "15722:33:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReserveConfigurationMap_$1252_storage_ptr",
														"typeString": "struct DataTypes.ReserveConfigurationMap"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15721:42:3"
									},
									"scope": 1677,
									"src": "15646:118:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1606,
										"nodeType": "StructuredDocumentation",
										"src": "15768:159:3",
										"text": " @dev Returns the configuration of the user across all the reserves\n @param user The user address\n @return The configuration of the user*"
									},
									"functionSelector": "4417a583",
									"id": 1614,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getUserConfiguration",
									"nameLocation": "15939:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1608,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "15968:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1614,
												"src": "15960:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1607,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15960:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15959:14:3"
									},
									"returnParameters": {
										"id": 1613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1612,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1614,
												"src": "16009:37:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserConfigurationMap_$1255_memory_ptr",
													"typeString": "struct DataTypes.UserConfigurationMap"
												},
												"typeName": {
													"id": 1611,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1610,
														"name": "DataTypes.UserConfigurationMap",
														"nameLocations": [
															"16009:9:3",
															"16019:20:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1255,
														"src": "16009:30:3"
													},
													"referencedDeclaration": 1255,
													"src": "16009:30:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserConfigurationMap_$1255_storage_ptr",
														"typeString": "struct DataTypes.UserConfigurationMap"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16008:39:3"
									},
									"scope": 1677,
									"src": "15930:118:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1615,
										"nodeType": "StructuredDocumentation",
										"src": "16052:196:3",
										"text": " @dev Returns the normalized income normalized income of the reserve\n @param asset The address of the underlying asset of the reserve\n @return The reserve's normalized income"
									},
									"functionSelector": "d15e0053",
									"id": 1622,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReserveNormalizedIncome",
									"nameLocation": "16260:26:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1617,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "16295:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1622,
												"src": "16287:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1616,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16287:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16286:15:3"
									},
									"returnParameters": {
										"id": 1621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1620,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1622,
												"src": "16325:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1619,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16325:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16324:9:3"
									},
									"scope": 1677,
									"src": "16251:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1623,
										"nodeType": "StructuredDocumentation",
										"src": "16338:193:3",
										"text": " @dev Returns the normalized variable debt per unit of asset\n @param asset The address of the underlying asset of the reserve\n @return The reserve normalized variable debt"
									},
									"functionSelector": "386497fd",
									"id": 1630,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReserveNormalizedVariableDebt",
									"nameLocation": "16543:32:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1625,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "16584:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1630,
												"src": "16576:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1624,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16576:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16575:15:3"
									},
									"returnParameters": {
										"id": 1629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1628,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1630,
												"src": "16614:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1627,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16614:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16613:9:3"
									},
									"scope": 1677,
									"src": "16534:89:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1631,
										"nodeType": "StructuredDocumentation",
										"src": "16627:178:3",
										"text": " @dev Returns the state and configuration of the reserve\n @param asset The address of the underlying asset of the reserve\n @return The state of the reserve*"
									},
									"functionSelector": "35ea6a75",
									"id": 1639,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReserveData",
									"nameLocation": "16817:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1633,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "16840:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1639,
												"src": "16832:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1632,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16832:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16831:15:3"
									},
									"returnParameters": {
										"id": 1638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1637,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1639,
												"src": "16870:28:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReserveData_$1278_memory_ptr",
													"typeString": "struct DataTypes.ReserveData"
												},
												"typeName": {
													"id": 1636,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1635,
														"name": "DataTypes.ReserveData",
														"nameLocations": [
															"16870:9:3",
															"16880:11:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1278,
														"src": "16870:21:3"
													},
													"referencedDeclaration": 1278,
													"src": "16870:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReserveData_$1278_storage_ptr",
														"typeString": "struct DataTypes.ReserveData"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16869:30:3"
									},
									"scope": 1677,
									"src": "16808:92:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d5ed3933",
									"id": 1654,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "finalizeTransfer",
									"nameLocation": "16913:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1641,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "16943:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1654,
												"src": "16935:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1640,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16935:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1643,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16962:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1654,
												"src": "16954:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16954:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1645,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16980:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1654,
												"src": "16972:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1644,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16972:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1647,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "16996:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1654,
												"src": "16988:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1646,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16988:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1649,
												"mutability": "mutable",
												"name": "balanceFromAfter",
												"nameLocation": "17016:16:3",
												"nodeType": "VariableDeclaration",
												"scope": 1654,
												"src": "17008:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1648,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17008:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1651,
												"mutability": "mutable",
												"name": "balanceToBefore",
												"nameLocation": "17046:15:3",
												"nodeType": "VariableDeclaration",
												"scope": 1654,
												"src": "17038:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1650,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17038:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16929:136:3"
									},
									"returnParameters": {
										"id": 1653,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17074:0:3"
									},
									"scope": 1677,
									"src": "16904:171:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d1946dbc",
									"id": 1660,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReservesList",
									"nameLocation": "17088:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1655,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17103:2:3"
									},
									"returnParameters": {
										"id": 1659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1658,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1660,
												"src": "17129:16:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1656,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "17129:7:3",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1657,
													"nodeType": "ArrayTypeName",
													"src": "17129:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17128:18:3"
									},
									"scope": 1677,
									"src": "17079:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fe65acfe",
									"id": 1666,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressesProvider",
									"nameLocation": "17160:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1661,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17180:2:3"
									},
									"returnParameters": {
										"id": 1665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1664,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1666,
												"src": "17206:29:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ILendingPoolAddressesProvider_$1828",
													"typeString": "contract ILendingPoolAddressesProvider"
												},
												"typeName": {
													"id": 1663,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1662,
														"name": "ILendingPoolAddressesProvider",
														"nameLocations": [
															"17206:29:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1828,
														"src": "17206:29:3"
													},
													"referencedDeclaration": 1828,
													"src": "17206:29:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ILendingPoolAddressesProvider_$1828",
														"typeString": "contract ILendingPoolAddressesProvider"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17205:31:3"
									},
									"scope": 1677,
									"src": "17151:86:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "bedb86fb",
									"id": 1671,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setPause",
									"nameLocation": "17250:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1668,
												"mutability": "mutable",
												"name": "val",
												"nameLocation": "17264:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1671,
												"src": "17259:8:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1667,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17259:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17258:10:3"
									},
									"returnParameters": {
										"id": 1670,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17277:0:3"
									},
									"scope": 1677,
									"src": "17241:37:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5c975abb",
									"id": 1676,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "17291:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1672,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17297:2:3"
									},
									"returnParameters": {
										"id": 1675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1674,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1676,
												"src": "17323:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1673,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17323:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17322:6:3"
									},
									"scope": 1677,
									"src": "17282:47:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1678,
							"src": "223:17108:3",
							"usedErrors": [],
							"usedEvents": [
								1318,
								1329,
								1346,
								1357,
								1366,
								1373,
								1380,
								1387,
								1402,
								1405,
								1408,
								1425,
								1440
							]
						}
					],
					"src": "37:17295:3"
				},
				"id": 3
			},
			"contracts/aave/protocol-v2/contracts/interfaces/ILendingPoolAddressesProvider.sol": {
				"ast": {
					"absolutePath": "contracts/aave/protocol-v2/contracts/interfaces/ILendingPoolAddressesProvider.sol",
					"exportedSymbols": {
						"ILendingPoolAddressesProvider": [
							1828
						]
					},
					"id": 1829,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1679,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ILendingPoolAddressesProvider",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1680,
								"nodeType": "StructuredDocumentation",
								"src": "62:311:4",
								"text": " @title LendingPoolAddressesProvider contract\n @dev Main registry of addresses part of or connected to the protocol, including permissioned roles\n - Acting also as factory of proxies and admin of those, so with right to change its implementations\n - Owned by the Aave Governance\n @author Aave*"
							},
							"fullyImplemented": false,
							"id": 1828,
							"linearizedBaseContracts": [
								1828
							],
							"name": "ILendingPoolAddressesProvider",
							"nameLocation": "384:29:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "5e667c32fd847cf8bce48ab3400175cbf107bdc82b2dea62e3364909dfaee799",
									"id": 1684,
									"name": "MarketIdSet",
									"nameLocation": "424:11:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1682,
												"indexed": false,
												"mutability": "mutable",
												"name": "newMarketId",
												"nameLocation": "443:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 1684,
												"src": "436:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1681,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "436:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "435:20:4"
									},
									"src": "418:38:4"
								},
								{
									"anonymous": false,
									"eventSelector": "c4e6c6cdf28d0edbd8bcf071d724d33cc2e7a30be7d06443925656e9cb492aa4",
									"id": 1688,
									"name": "LendingPoolUpdated",
									"nameLocation": "465:18:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1686,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "500:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 1688,
												"src": "484:26:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1685,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "484:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "483:28:4"
									},
									"src": "459:53:4"
								},
								{
									"anonymous": false,
									"eventSelector": "c20a317155a9e7d84e06b716b4b355d47742ab9f8c5d630e7f556553f582430d",
									"id": 1692,
									"name": "ConfigurationAdminUpdated",
									"nameLocation": "521:25:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1690,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "563:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 1692,
												"src": "547:26:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1689,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "547:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:28:4"
									},
									"src": "515:60:4"
								},
								{
									"anonymous": false,
									"eventSelector": "e19673fc861bfeb894cf2d6b7662505497ef31c0f489b742db24ee3310826916",
									"id": 1696,
									"name": "EmergencyAdminUpdated",
									"nameLocation": "584:21:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1694,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "622:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 1696,
												"src": "606:26:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1693,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "606:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "605:28:4"
									},
									"src": "578:56:4"
								},
								{
									"anonymous": false,
									"eventSelector": "dfabe479bad36782fb1e77fbfddd4e382671713527e4786cfc93a022ae763729",
									"id": 1700,
									"name": "LendingPoolConfiguratorUpdated",
									"nameLocation": "643:30:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1698,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "690:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 1700,
												"src": "674:26:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1697,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "674:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:28:4"
									},
									"src": "637:65:4"
								},
								{
									"anonymous": false,
									"eventSelector": "991888326f0eab3df6084aadb82bee6781b5c9aa75379e8bc50ae86934541638",
									"id": 1704,
									"name": "LendingPoolCollateralManagerUpdated",
									"nameLocation": "711:35:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1702,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "763:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 1704,
												"src": "747:26:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1701,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "747:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "746:28:4"
									},
									"src": "705:70:4"
								},
								{
									"anonymous": false,
									"eventSelector": "efe8ab924ca486283a79dc604baa67add51afb82af1db8ac386ebbba643cdffd",
									"id": 1708,
									"name": "PriceOracleUpdated",
									"nameLocation": "784:18:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1706,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "819:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 1708,
												"src": "803:26:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1705,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "802:28:4"
									},
									"src": "778:53:4"
								},
								{
									"anonymous": false,
									"eventSelector": "5c29179aba6942020a8a2d38f65de02fb6b7f784e7f049ed3a3cab97621859b5",
									"id": 1712,
									"name": "LendingRateOracleUpdated",
									"nameLocation": "840:24:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1710,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "881:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 1712,
												"src": "865:26:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1709,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "865:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "864:28:4"
									},
									"src": "834:59:4"
								},
								{
									"anonymous": false,
									"eventSelector": "1eb35cb4b5bbb23d152f3b4016a5a46c37a07ae930ed0956aba951e231142438",
									"id": 1718,
									"name": "ProxyCreated",
									"nameLocation": "902:12:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1714,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "923:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1718,
												"src": "915:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1713,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "915:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1716,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "943:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 1718,
												"src": "927:26:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1715,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "927:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "914:40:4"
									},
									"src": "896:59:4"
								},
								{
									"anonymous": false,
									"eventSelector": "f2689d5d5cd0c639e137642cae5d40afced201a1a0327e7ac9358461dc9fff31",
									"id": 1726,
									"name": "AddressSet",
									"nameLocation": "964:10:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1720,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "983:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1726,
												"src": "975:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1719,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1722,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "1003:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 1726,
												"src": "987:26:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1721,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "987:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1724,
												"indexed": false,
												"mutability": "mutable",
												"name": "hasProxy",
												"nameLocation": "1020:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1726,
												"src": "1015:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1723,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1015:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "974:55:4"
									},
									"src": "958:72:4"
								},
								{
									"functionSelector": "568ef470",
									"id": 1731,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getMarketId",
									"nameLocation": "1043:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1727,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1054:2:4"
									},
									"returnParameters": {
										"id": 1730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1729,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1731,
												"src": "1080:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1728,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1080:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1079:15:4"
									},
									"scope": 1828,
									"src": "1034:61:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f67b1847",
									"id": 1736,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setMarketId",
									"nameLocation": "1108:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1733,
												"mutability": "mutable",
												"name": "marketId",
												"nameLocation": "1136:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1736,
												"src": "1120:24:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1732,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1120:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1119:26:4"
									},
									"returnParameters": {
										"id": 1735,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1154:0:4"
									},
									"scope": 1828,
									"src": "1099:56:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ca446dd9",
									"id": 1743,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setAddress",
									"nameLocation": "1168:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1738,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1187:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1743,
												"src": "1179:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1737,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1179:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1740,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "1199:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 1743,
												"src": "1191:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1739,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1191:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1178:32:4"
									},
									"returnParameters": {
										"id": 1742,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1219:0:4"
									},
									"scope": 1828,
									"src": "1159:61:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5dcc528c",
									"id": 1750,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setAddressAsProxy",
									"nameLocation": "1233:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1745,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1259:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1750,
												"src": "1251:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1744,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1251:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1747,
												"mutability": "mutable",
												"name": "impl",
												"nameLocation": "1271:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1750,
												"src": "1263:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1746,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1263:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1250:26:4"
									},
									"returnParameters": {
										"id": 1749,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1285:0:4"
									},
									"scope": 1828,
									"src": "1224:62:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "21f8a721",
									"id": 1757,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAddress",
									"nameLocation": "1299:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1752,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1318:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1757,
												"src": "1310:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1751,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1310:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1309:12:4"
									},
									"returnParameters": {
										"id": 1756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1755,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1757,
												"src": "1345:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1345:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1344:9:4"
									},
									"scope": 1828,
									"src": "1290:64:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0261bf8b",
									"id": 1762,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getLendingPool",
									"nameLocation": "1367:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1758,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1381:2:4"
									},
									"returnParameters": {
										"id": 1761,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1760,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1762,
												"src": "1407:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1759,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1407:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1406:9:4"
									},
									"scope": 1828,
									"src": "1358:58:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5aef021f",
									"id": 1767,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setLendingPoolImpl",
									"nameLocation": "1429:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1764,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "1456:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1767,
												"src": "1448:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1763,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1448:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1447:14:4"
									},
									"returnParameters": {
										"id": 1766,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1470:0:4"
									},
									"scope": 1828,
									"src": "1420:51:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "85c858b1",
									"id": 1772,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getLendingPoolConfigurator",
									"nameLocation": "1484:26:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1768,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1510:2:4"
									},
									"returnParameters": {
										"id": 1771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1772,
												"src": "1536:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1769,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1536:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1535:9:4"
									},
									"scope": 1828,
									"src": "1475:70:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c12542df",
									"id": 1777,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setLendingPoolConfiguratorImpl",
									"nameLocation": "1558:30:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1774,
												"mutability": "mutable",
												"name": "configurator",
												"nameLocation": "1597:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1777,
												"src": "1589:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1773,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1589:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1588:22:4"
									},
									"returnParameters": {
										"id": 1776,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1619:0:4"
									},
									"scope": 1828,
									"src": "1549:71:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "712d9171",
									"id": 1782,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getLendingPoolCollateralManager",
									"nameLocation": "1633:31:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1778,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1664:2:4"
									},
									"returnParameters": {
										"id": 1781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1780,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1782,
												"src": "1690:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1779,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1690:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1689:9:4"
									},
									"scope": 1828,
									"src": "1624:75:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "398e5553",
									"id": 1787,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setLendingPoolCollateralManager",
									"nameLocation": "1712:31:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1784,
												"mutability": "mutable",
												"name": "manager",
												"nameLocation": "1752:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1787,
												"src": "1744:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1783,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1744:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1743:17:4"
									},
									"returnParameters": {
										"id": 1786,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1769:0:4"
									},
									"scope": 1828,
									"src": "1703:67:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "aecda378",
									"id": 1792,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPoolAdmin",
									"nameLocation": "1783:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1788,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1795:2:4"
									},
									"returnParameters": {
										"id": 1791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1790,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1792,
												"src": "1821:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1789,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1821:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1820:9:4"
									},
									"scope": 1828,
									"src": "1774:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "283d62ad",
									"id": 1797,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setPoolAdmin",
									"nameLocation": "1843:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1794,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "1864:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1797,
												"src": "1856:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1793,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1856:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1855:15:4"
									},
									"returnParameters": {
										"id": 1796,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1879:0:4"
									},
									"scope": 1828,
									"src": "1834:46:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ddcaa9ea",
									"id": 1802,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getEmergencyAdmin",
									"nameLocation": "1893:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1798,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1910:2:4"
									},
									"returnParameters": {
										"id": 1801,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1800,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1802,
												"src": "1936:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1799,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1936:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1935:9:4"
									},
									"scope": 1828,
									"src": "1884:61:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "35da3394",
									"id": 1807,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setEmergencyAdmin",
									"nameLocation": "1958:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1804,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "1984:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1807,
												"src": "1976:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1803,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1976:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1975:15:4"
									},
									"returnParameters": {
										"id": 1806,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1999:0:4"
									},
									"scope": 1828,
									"src": "1949:51:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fca513a8",
									"id": 1812,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPriceOracle",
									"nameLocation": "2013:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1808,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2027:2:4"
									},
									"returnParameters": {
										"id": 1811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1810,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1812,
												"src": "2053:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1809,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2053:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2052:9:4"
									},
									"scope": 1828,
									"src": "2004:58:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "530e784f",
									"id": 1817,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setPriceOracle",
									"nameLocation": "2075:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1814,
												"mutability": "mutable",
												"name": "priceOracle",
												"nameLocation": "2098:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 1817,
												"src": "2090:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2090:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2089:21:4"
									},
									"returnParameters": {
										"id": 1816,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2119:0:4"
									},
									"scope": 1828,
									"src": "2066:54:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "3618abba",
									"id": 1822,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getLendingRateOracle",
									"nameLocation": "2133:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1818,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2153:2:4"
									},
									"returnParameters": {
										"id": 1821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1820,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1822,
												"src": "2179:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1819,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2179:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2178:9:4"
									},
									"scope": 1828,
									"src": "2124:64:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "820d1274",
									"id": 1827,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setLendingRateOracle",
									"nameLocation": "2201:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1824,
												"mutability": "mutable",
												"name": "lendingRateOracle",
												"nameLocation": "2230:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 1827,
												"src": "2222:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1823,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2222:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2221:27:4"
									},
									"returnParameters": {
										"id": 1826,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2257:0:4"
									},
									"scope": 1828,
									"src": "2192:66:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1829,
							"src": "374:1886:4",
							"usedErrors": [],
							"usedEvents": [
								1684,
								1688,
								1692,
								1696,
								1700,
								1704,
								1708,
								1712,
								1718,
								1726
							]
						}
					],
					"src": "37:2224:4"
				},
				"id": 4
			},
			"contracts/chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol": {
				"ast": {
					"absolutePath": "contracts/chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							1874
						]
					},
					"id": 1875,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1830,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AggregatorV3Interface",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1874,
							"linearizedBaseContracts": [
								1874
							],
							"name": "AggregatorV3Interface",
							"nameLocation": "120:21:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "313ce567",
									"id": 1835,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "155:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1831,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "163:2:5"
									},
									"returnParameters": {
										"id": 1834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1833,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1835,
												"src": "189:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1832,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "189:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "188:7:5"
									},
									"scope": 1874,
									"src": "146:50:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7284e416",
									"id": 1840,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "description",
									"nameLocation": "209:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1836,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "220:2:5"
									},
									"returnParameters": {
										"id": 1839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1838,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1840,
												"src": "246:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1837,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "246:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "245:15:5"
									},
									"scope": 1874,
									"src": "200:61:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "54fd4d50",
									"id": 1845,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "version",
									"nameLocation": "274:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1841,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "281:2:5"
									},
									"returnParameters": {
										"id": 1844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1843,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1845,
												"src": "307:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1842,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "307:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "306:9:5"
									},
									"scope": 1874,
									"src": "265:51:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9a6fc8f5",
									"id": 1860,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoundData",
									"nameLocation": "329:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1847,
												"mutability": "mutable",
												"name": "_roundId",
												"nameLocation": "354:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1860,
												"src": "347:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 1846,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "347:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "341:25:5"
									},
									"returnParameters": {
										"id": 1859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1850,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "397:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1860,
												"src": "390:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 1849,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "390:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1852,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "413:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1860,
												"src": "406:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1851,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "406:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1854,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "429:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1860,
												"src": "421:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1853,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "421:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1856,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "448:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1860,
												"src": "440:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1855,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "440:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1858,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "466:15:5",
												"nodeType": "VariableDeclaration",
												"scope": 1860,
												"src": "459:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 1857,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "459:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "389:93:5"
									},
									"scope": 1874,
									"src": "320:163:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "feaf968c",
									"id": 1873,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "latestRoundData",
									"nameLocation": "496:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1861,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "511:2:5"
									},
									"returnParameters": {
										"id": 1872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1863,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "556:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1873,
												"src": "549:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 1862,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "549:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1865,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "572:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1873,
												"src": "565:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1864,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "565:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1867,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "588:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1873,
												"src": "580:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1866,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "580:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1869,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "607:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1873,
												"src": "599:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1868,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "599:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1871,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "625:15:5",
												"nodeType": "VariableDeclaration",
												"scope": 1873,
												"src": "618:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 1870,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "618:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "548:93:5"
									},
									"scope": 1874,
									"src": "487:155:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1875,
							"src": "110:534:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:613:5"
				},
				"id": 5
			},
			"contracts/openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "contracts/openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							2061
						],
						"IERC721": [
							1991
						]
					},
					"id": 1992,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1876,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:6"
						},
						{
							"absolutePath": "contracts/openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1878,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1992,
							"sourceUnit": 2062,
							"src": "133:62:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1877,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2061,
										"src": "141:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1880,
										"name": "IERC165",
										"nameLocations": [
											"287:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2061,
										"src": "287:7:6"
									},
									"id": 1881,
									"nodeType": "InheritanceSpecifier",
									"src": "287:7:6"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1879,
								"nodeType": "StructuredDocumentation",
								"src": "197:68:6",
								"text": " @dev Required interface of an ERC-721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1991,
							"linearizedBaseContracts": [
								1991,
								2061
							],
							"name": "IERC721",
							"nameLocation": "276:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1882,
										"nodeType": "StructuredDocumentation",
										"src": "301:88:6",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1890,
									"name": "Transfer",
									"nameLocation": "400:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1884,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "425:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1890,
												"src": "409:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1883,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "409:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1886,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "447:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1890,
												"src": "431:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1885,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "431:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1888,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "467:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1890,
												"src": "451:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1887,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "451:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "408:67:6"
									},
									"src": "394:82:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1891,
										"nodeType": "StructuredDocumentation",
										"src": "482:94:6",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1899,
									"name": "Approval",
									"nameLocation": "587:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1893,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "612:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1899,
												"src": "596:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1892,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1895,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "635:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1899,
												"src": "619:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1894,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "619:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1897,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "661:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1899,
												"src": "645:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1896,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "595:74:6"
									},
									"src": "581:89:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1900,
										"nodeType": "StructuredDocumentation",
										"src": "676:117:6",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1908,
									"name": "ApprovalForAll",
									"nameLocation": "804:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1902,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "835:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1908,
												"src": "819:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1901,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "819:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1904,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "858:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1908,
												"src": "842:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1903,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "842:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1906,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "873:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1908,
												"src": "868:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1905,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "868:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:64:6"
									},
									"src": "798:85:6"
								},
								{
									"documentation": {
										"id": 1909,
										"nodeType": "StructuredDocumentation",
										"src": "889:76:6",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1916,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "979:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1912,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1911,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "997:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1916,
												"src": "989:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1910,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "989:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "988:15:6"
									},
									"returnParameters": {
										"id": 1915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1914,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1035:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1916,
												"src": "1027:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1913,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1027:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1026:17:6"
									},
									"scope": 1991,
									"src": "970:74:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1917,
										"nodeType": "StructuredDocumentation",
										"src": "1050:131:6",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1924,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1195:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1919,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1211:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1924,
												"src": "1203:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1918,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1203:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1202:17:6"
									},
									"returnParameters": {
										"id": 1923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1922,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1251:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1924,
												"src": "1243:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1921,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1243:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1242:15:6"
									},
									"scope": 1991,
									"src": "1186:72:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1925,
										"nodeType": "StructuredDocumentation",
										"src": "1264:565:6",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1936,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1843:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1934,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1927,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1868:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1936,
												"src": "1860:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1926,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1860:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1929,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1882:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1936,
												"src": "1874:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1928,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1874:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1931,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1936,
												"src": "1886:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1930,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1933,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1918:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1936,
												"src": "1903:19:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1932,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1903:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1859:64:6"
									},
									"returnParameters": {
										"id": 1935,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1932:0:6"
									},
									"scope": 1991,
									"src": "1834:99:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1937,
										"nodeType": "StructuredDocumentation",
										"src": "1939:706:6",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1946,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2659:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1939,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2684:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1946,
												"src": "2676:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1938,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2676:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1941,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2698:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1946,
												"src": "2690:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1940,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2690:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1943,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2710:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1946,
												"src": "2702:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1942,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2702:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2675:43:6"
									},
									"returnParameters": {
										"id": 1945,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2727:0:6"
									},
									"scope": 1991,
									"src": "2650:78:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1947,
										"nodeType": "StructuredDocumentation",
										"src": "2734:733:6",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1956,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3481:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1949,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3502:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1956,
												"src": "3494:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1948,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3494:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1951,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3516:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1956,
												"src": "3508:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1950,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3508:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1953,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3528:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1956,
												"src": "3520:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1952,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3520:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3493:43:6"
									},
									"returnParameters": {
										"id": 1955,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3545:0:6"
									},
									"scope": 1991,
									"src": "3472:74:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1957,
										"nodeType": "StructuredDocumentation",
										"src": "3552:452:6",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1964,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4018:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1962,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1959,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4034:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1964,
												"src": "4026:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1958,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4026:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1961,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4046:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1964,
												"src": "4038:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1960,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4038:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4025:29:6"
									},
									"returnParameters": {
										"id": 1963,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4063:0:6"
									},
									"scope": 1991,
									"src": "4009:55:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1965,
										"nodeType": "StructuredDocumentation",
										"src": "4070:315:6",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1972,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4399:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1967,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4425:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1972,
												"src": "4417:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1966,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4417:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1969,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4440:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1972,
												"src": "4435:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1968,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4435:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4416:33:6"
									},
									"returnParameters": {
										"id": 1971,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4458:0:6"
									},
									"scope": 1991,
									"src": "4390:69:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1973,
										"nodeType": "StructuredDocumentation",
										"src": "4465:139:6",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1980,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4618:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1975,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4638:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1980,
												"src": "4630:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1974,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4630:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4629:17:6"
									},
									"returnParameters": {
										"id": 1979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1978,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4678:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1980,
												"src": "4670:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1977,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4670:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4669:18:6"
									},
									"scope": 1991,
									"src": "4609:79:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1981,
										"nodeType": "StructuredDocumentation",
										"src": "4694:138:6",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1990,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4846:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1986,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1983,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4871:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1990,
												"src": "4863:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1982,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4863:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1985,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4886:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1990,
												"src": "4878:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1984,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4878:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:33:6"
									},
									"returnParameters": {
										"id": 1989,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1988,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1990,
												"src": "4919:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1987,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4919:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4918:6:6"
									},
									"scope": 1991,
									"src": "4837:88:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1992,
							"src": "266:4661:6",
							"usedErrors": [],
							"usedEvents": [
								1890,
								1899,
								1908
							]
						}
					],
					"src": "108:4820:6"
				},
				"id": 6
			},
			"contracts/openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol": {
				"ast": {
					"absolutePath": "contracts/openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol",
					"exportedSymbols": {
						"IERC165": [
							2061
						],
						"IERC721": [
							1991
						],
						"IERC721Enumerable": [
							2022
						]
					},
					"id": 2023,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1993,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:7"
						},
						{
							"absolutePath": "contracts/openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 1994,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2023,
							"sourceUnit": 1992,
							"src": "58:23:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1996,
										"name": "IERC721",
										"nameLocations": [
											"250:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1991,
										"src": "250:7:7"
									},
									"id": 1997,
									"nodeType": "InheritanceSpecifier",
									"src": "250:7:7"
								}
							],
							"canonicalName": "IERC721Enumerable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1995,
								"nodeType": "StructuredDocumentation",
								"src": "82:136:7",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 2022,
							"linearizedBaseContracts": [
								2022,
								1991,
								2061
							],
							"name": "IERC721Enumerable",
							"nameLocation": "229:17:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1998,
										"nodeType": "StructuredDocumentation",
										"src": "265:82:7",
										"text": " @dev Returns the total amount of tokens stored by the contract."
									},
									"functionSelector": "18160ddd",
									"id": 2003,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "361:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1999,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "372:2:7"
									},
									"returnParameters": {
										"id": 2002,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2001,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2003,
												"src": "398:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2000,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "398:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "397:9:7"
									},
									"scope": 2022,
									"src": "352:55:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2004,
										"nodeType": "StructuredDocumentation",
										"src": "413:171:7",
										"text": " @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
									},
									"functionSelector": "2f745c59",
									"id": 2013,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenOfOwnerByIndex",
									"nameLocation": "598:19:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2006,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "626:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2013,
												"src": "618:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2005,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "618:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2008,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "641:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2013,
												"src": "633:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2007,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "633:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "617:30:7"
									},
									"returnParameters": {
										"id": 2012,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2011,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "679:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2013,
												"src": "671:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2010,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "671:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "670:17:7"
									},
									"scope": 2022,
									"src": "589:99:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2014,
										"nodeType": "StructuredDocumentation",
										"src": "694:164:7",
										"text": " @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n Use along with {totalSupply} to enumerate all tokens."
									},
									"functionSelector": "4f6ccce7",
									"id": 2021,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenByIndex",
									"nameLocation": "872:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2017,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2016,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "893:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2021,
												"src": "885:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2015,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "885:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "884:15:7"
									},
									"returnParameters": {
										"id": 2020,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2019,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2021,
												"src": "923:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2018,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "923:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "922:9:7"
									},
									"scope": 2022,
									"src": "863:69:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2023,
							"src": "219:715:7",
							"usedErrors": [],
							"usedEvents": [
								1890,
								1899,
								1908
							]
						}
					],
					"src": "33:902:7"
				},
				"id": 7
			},
			"contracts/openzeppelin/contracts/token/ERC721/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "contracts/openzeppelin/contracts/token/ERC721/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC165": [
							2061
						],
						"IERC721": [
							1991
						],
						"IERC721Metadata": [
							2049
						]
					},
					"id": 2050,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2024,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:8"
						},
						{
							"absolutePath": "contracts/openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../../../../../contracts/openzeppelin/contracts/token/ERC721/IERC721.sol",
							"id": 2025,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2050,
							"sourceUnit": 1992,
							"src": "58:82:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2027,
										"name": "IERC721",
										"nameLocations": [
											"305:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1991,
										"src": "305:7:8"
									},
									"id": 2028,
									"nodeType": "InheritanceSpecifier",
									"src": "305:7:8"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2026,
								"nodeType": "StructuredDocumentation",
								"src": "142:133:8",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 2049,
							"linearizedBaseContracts": [
								2049,
								1991,
								2061
							],
							"name": "IERC721Metadata",
							"nameLocation": "286:15:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2029,
										"nodeType": "StructuredDocumentation",
										"src": "320:58:8",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 2034,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "392:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2030,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "396:2:8"
									},
									"returnParameters": {
										"id": 2033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2032,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2034,
												"src": "422:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2031,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "422:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "421:15:8"
									},
									"scope": 2049,
									"src": "383:54:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2035,
										"nodeType": "StructuredDocumentation",
										"src": "443:60:8",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 2040,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "517:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2036,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "523:2:8"
									},
									"returnParameters": {
										"id": 2039,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2038,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2040,
												"src": "549:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2037,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "549:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "548:15:8"
									},
									"scope": 2049,
									"src": "508:56:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2041,
										"nodeType": "StructuredDocumentation",
										"src": "570:90:8",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 2048,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "674:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2044,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2043,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "691:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2048,
												"src": "683:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2042,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "682:17:8"
									},
									"returnParameters": {
										"id": 2047,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2046,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2048,
												"src": "723:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2045,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "723:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "722:15:8"
									},
									"scope": 2049,
									"src": "665:73:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2050,
							"src": "276:464:8",
							"usedErrors": [],
							"usedEvents": [
								1890,
								1899,
								1908
							]
						}
					],
					"src": "33:708:8"
				},
				"id": 8
			},
			"contracts/openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "contracts/openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							2061
						]
					},
					"id": 2062,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2051,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "115:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2052,
								"nodeType": "StructuredDocumentation",
								"src": "140:280:9",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 2061,
							"linearizedBaseContracts": [
								2061
							],
							"name": "IERC165",
							"nameLocation": "431:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2053,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:9",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 2060,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2056,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2055,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 2060,
												"src": "817:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2054,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:9"
									},
									"returnParameters": {
										"id": 2059,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2058,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2060,
												"src": "860:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2057,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:9"
									},
									"scope": 2061,
									"src": "790:76:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2062,
							"src": "421:447:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:9"
				},
				"id": 9
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/IERC721Permit.sol": {
				"ast": {
					"absolutePath": "contracts/uniswap/v3-periphery/contracts/interfaces/IERC721Permit.sol",
					"exportedSymbols": {
						"IERC165": [
							2061
						],
						"IERC721": [
							1991
						],
						"IERC721Permit": [
							2096
						]
					},
					"id": 2097,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2063,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:23:10"
						},
						{
							"absolutePath": "contracts/openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../../../../openzeppelin/contracts/token/ERC721/IERC721.sol",
							"id": 2064,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2097,
							"sourceUnit": 1992,
							"src": "70:69:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2066,
										"name": "IERC721",
										"nameLocations": [
											"292:7:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1991,
										"src": "292:7:10"
									},
									"id": 2067,
									"nodeType": "InheritanceSpecifier",
									"src": "292:7:10"
								}
							],
							"canonicalName": "IERC721Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2065,
								"nodeType": "StructuredDocumentation",
								"src": "141:124:10",
								"text": "@title ERC721 with permit\n @notice Extension to ERC721 that includes a permit function for signature based approvals"
							},
							"fullyImplemented": false,
							"id": 2096,
							"linearizedBaseContracts": [
								2096,
								1991,
								2061
							],
							"name": "IERC721Permit",
							"nameLocation": "275:13:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2068,
										"nodeType": "StructuredDocumentation",
										"src": "306:104:10",
										"text": "@notice The permit typehash used in the permit signature\n @return The typehash for the permit"
									},
									"functionSelector": "30adf81f",
									"id": 2073,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "PERMIT_TYPEHASH",
									"nameLocation": "424:15:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2069,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "439:2:10"
									},
									"returnParameters": {
										"id": 2072,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2071,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2073,
												"src": "465:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2070,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "465:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "464:9:10"
									},
									"scope": 2096,
									"src": "415:59:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2074,
										"nodeType": "StructuredDocumentation",
										"src": "480:135:10",
										"text": "@notice The domain separator used in the permit signature\n @return The domain seperator used in encoding of permit signature"
									},
									"functionSelector": "3644e515",
									"id": 2079,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "629:16:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2075,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "645:2:10"
									},
									"returnParameters": {
										"id": 2078,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2077,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2079,
												"src": "671:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2076,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "671:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "670:9:10"
									},
									"scope": 2096,
									"src": "620:60:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2080,
										"nodeType": "StructuredDocumentation",
										"src": "686:605:10",
										"text": "@notice Approve of a specific token ID for spending by spender via signature\n @param spender The account that is being approved\n @param tokenId The ID of the token that is being approved for spending\n @param deadline The deadline timestamp by which the call must be mined for the approve to work\n @param v Must produce valid secp256k1 signature from the holder along with `r` and `s`\n @param r Must produce valid secp256k1 signature from the holder along with `v` and `s`\n @param s Must produce valid secp256k1 signature from the holder along with `r` and `v`"
									},
									"functionSelector": "7ac2ff7b",
									"id": 2095,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "1305:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2093,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2082,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1329:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2095,
												"src": "1321:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2081,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1321:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2084,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1354:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2095,
												"src": "1346:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2083,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1346:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2086,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1379:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2095,
												"src": "1371:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2085,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1371:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2088,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1403:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2095,
												"src": "1397:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2087,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1397:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2090,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1422:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2095,
												"src": "1414:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2089,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1414:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2092,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1441:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2095,
												"src": "1433:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2091,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1433:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1311:137:10"
									},
									"returnParameters": {
										"id": 2094,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1465:0:10"
									},
									"scope": 2096,
									"src": "1296:170:10",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2097,
							"src": "265:1203:10",
							"usedErrors": [],
							"usedEvents": [
								1890,
								1899,
								1908
							]
						}
					],
					"src": "45:1424:10"
				},
				"id": 10
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol": {
				"ast": {
					"absolutePath": "contracts/uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol",
					"exportedSymbols": {
						"IERC165": [
							2061
						],
						"IERC721": [
							1991
						],
						"IERC721Enumerable": [
							2022
						],
						"IERC721Metadata": [
							2049
						],
						"IERC721Permit": [
							2096
						],
						"INonfungiblePositionManager": [
							2294
						],
						"IPeripheryImmutableState": [
							2310
						],
						"IPeripheryPayments": [
							2336
						],
						"IPoolInitializer": [
							2355
						]
					},
					"id": 2295,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2098,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:23:11"
						},
						{
							"id": 2099,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "69:19:11"
						},
						{
							"absolutePath": "contracts/openzeppelin/contracts/token/ERC721/IERC721Metadata.sol",
							"file": "../../../../openzeppelin/contracts/token/ERC721/IERC721Metadata.sol",
							"id": 2100,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2295,
							"sourceUnit": 2050,
							"src": "90:77:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol",
							"file": "../../../../openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol",
							"id": 2101,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2295,
							"sourceUnit": 2023,
							"src": "168:79:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/uniswap/v3-periphery/contracts/interfaces/IPoolInitializer.sol",
							"file": "./IPoolInitializer.sol",
							"id": 2102,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2295,
							"sourceUnit": 2356,
							"src": "249:32:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/uniswap/v3-periphery/contracts/interfaces/IERC721Permit.sol",
							"file": "./IERC721Permit.sol",
							"id": 2103,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2295,
							"sourceUnit": 2097,
							"src": "282:29:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol",
							"file": "./IPeripheryPayments.sol",
							"id": 2104,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2295,
							"sourceUnit": 2337,
							"src": "312:34:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol",
							"file": "./IPeripheryImmutableState.sol",
							"id": 2105,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2295,
							"sourceUnit": 2311,
							"src": "347:40:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2107,
										"name": "IPoolInitializer",
										"nameLocations": [
											"611:16:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2355,
										"src": "611:16:11"
									},
									"id": 2108,
									"nodeType": "InheritanceSpecifier",
									"src": "611:16:11"
								},
								{
									"baseName": {
										"id": 2109,
										"name": "IPeripheryPayments",
										"nameLocations": [
											"633:18:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2336,
										"src": "633:18:11"
									},
									"id": 2110,
									"nodeType": "InheritanceSpecifier",
									"src": "633:18:11"
								},
								{
									"baseName": {
										"id": 2111,
										"name": "IPeripheryImmutableState",
										"nameLocations": [
											"657:24:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2310,
										"src": "657:24:11"
									},
									"id": 2112,
									"nodeType": "InheritanceSpecifier",
									"src": "657:24:11"
								},
								{
									"baseName": {
										"id": 2113,
										"name": "IERC721Metadata",
										"nameLocations": [
											"687:15:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2049,
										"src": "687:15:11"
									},
									"id": 2114,
									"nodeType": "InheritanceSpecifier",
									"src": "687:15:11"
								},
								{
									"baseName": {
										"id": 2115,
										"name": "IERC721Enumerable",
										"nameLocations": [
											"708:17:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2022,
										"src": "708:17:11"
									},
									"id": 2116,
									"nodeType": "InheritanceSpecifier",
									"src": "708:17:11"
								},
								{
									"baseName": {
										"id": 2117,
										"name": "IERC721Permit",
										"nameLocations": [
											"731:13:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2096,
										"src": "731:13:11"
									},
									"id": 2118,
									"nodeType": "InheritanceSpecifier",
									"src": "731:13:11"
								}
							],
							"canonicalName": "INonfungiblePositionManager",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2106,
								"nodeType": "StructuredDocumentation",
								"src": "389:177:11",
								"text": "@title Non-fungible token for positions\n @notice Wraps Uniswap V3 positions in a non-fungible token interface which allows for them to be transferred\n and authorized."
							},
							"fullyImplemented": false,
							"id": 2294,
							"linearizedBaseContracts": [
								2294,
								2096,
								2022,
								2049,
								1991,
								2061,
								2310,
								2336,
								2355
							],
							"name": "INonfungiblePositionManager",
							"nameLocation": "576:27:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 2119,
										"nodeType": "StructuredDocumentation",
										"src": "751:458:11",
										"text": "@notice Emitted when liquidity is increased for a position NFT\n @dev Also emitted when a token is minted\n @param tokenId The ID of the token for which liquidity was increased\n @param liquidity The amount by which liquidity for the NFT position was increased\n @param amount0 The amount of token0 that was paid for the increase in liquidity\n @param amount1 The amount of token1 that was paid for the increase in liquidity"
									},
									"eventSelector": "3067048beee31b25b2f1681f88dac838c8bba36af25bfb2b7cf7473a5847e35f",
									"id": 2129,
									"name": "IncreaseLiquidity",
									"nameLocation": "1220:17:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2121,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1254:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2129,
												"src": "1238:23:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2120,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1238:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2123,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1271:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 2129,
												"src": "1263:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2122,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1263:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2125,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1290:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2129,
												"src": "1282:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1282:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2127,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1307:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2129,
												"src": "1299:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1299:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1237:78:11"
									},
									"src": "1214:102:11"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2130,
										"nodeType": "StructuredDocumentation",
										"src": "1321:419:11",
										"text": "@notice Emitted when liquidity is decreased for a position NFT\n @param tokenId The ID of the token for which liquidity was decreased\n @param liquidity The amount by which liquidity for the NFT position was decreased\n @param amount0 The amount of token0 that was accounted for the decrease in liquidity\n @param amount1 The amount of token1 that was accounted for the decrease in liquidity"
									},
									"eventSelector": "26f6a048ee9138f2c0ce266f322cb99228e8d619ae2bff30c67f8dcf9d2377b4",
									"id": 2140,
									"name": "DecreaseLiquidity",
									"nameLocation": "1751:17:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2132,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1785:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2140,
												"src": "1769:23:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1769:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2134,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1802:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 2140,
												"src": "1794:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2133,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1794:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2136,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1821:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2140,
												"src": "1813:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1813:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2138,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1838:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2140,
												"src": "1830:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1830:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1768:78:11"
									},
									"src": "1745:102:11"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2141,
										"nodeType": "StructuredDocumentation",
										"src": "1852:522:11",
										"text": "@notice Emitted when tokens are collected for a position NFT\n @dev The amounts reported may not be exactly equivalent to the amounts transferred, due to rounding behavior\n @param tokenId The ID of the token for which underlying tokens were collected\n @param recipient The address of the account that received the collected tokens\n @param amount0 The amount of token0 owed to the position that was collected\n @param amount1 The amount of token1 owed to the position that was collected"
									},
									"eventSelector": "40d0efd1a53d60ecbf40971b9daf7dc90178c3aadc7aab1765632738fa8b8f01",
									"id": 2151,
									"name": "Collect",
									"nameLocation": "2385:7:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2143,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2409:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2151,
												"src": "2393:23:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2393:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2145,
												"indexed": false,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2426:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 2151,
												"src": "2418:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2418:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2147,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "2445:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2151,
												"src": "2437:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2437:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2149,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "2462:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2151,
												"src": "2454:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2148,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2454:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2392:78:11"
									},
									"src": "2379:92:11"
								},
								{
									"documentation": {
										"id": 2152,
										"nodeType": "StructuredDocumentation",
										"src": "2477:1157:11",
										"text": "@notice Returns the position information associated with a given token ID.\n @dev Throws if the token ID is not valid.\n @param tokenId The ID of the token that represents the position\n @return nonce The nonce for permits\n @return operator The address that is approved for spending\n @return token0 The address of the token0 for a specific pool\n @return token1 The address of the token1 for a specific pool\n @return fee The fee associated with the pool\n @return tickLower The lower end of the tick range for the position\n @return tickUpper The higher end of the tick range for the position\n @return liquidity The liquidity of the position\n @return feeGrowthInside0LastX128 The fee growth of token0 as of the last action on the individual position\n @return feeGrowthInside1LastX128 The fee growth of token1 as of the last action on the individual position\n @return tokensOwed0 The uncollected amount of token0 owed to the position as of the last computation\n @return tokensOwed1 The uncollected amount of token1 owed to the position as of the last computation"
									},
									"functionSelector": "99fbab88",
									"id": 2181,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "positions",
									"nameLocation": "3648:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2154,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3666:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2181,
												"src": "3658:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3658:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3657:17:11"
									},
									"returnParameters": {
										"id": 2180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2157,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "3742:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2181,
												"src": "3735:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 2156,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "3735:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2159,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3769:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2181,
												"src": "3761:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3761:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2161,
												"mutability": "mutable",
												"name": "token0",
												"nameLocation": "3799:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2181,
												"src": "3791:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3791:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2163,
												"mutability": "mutable",
												"name": "token1",
												"nameLocation": "3827:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2181,
												"src": "3819:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2165,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "3854:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2181,
												"src": "3847:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 2164,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "3847:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2167,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "3877:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 2181,
												"src": "3871:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2166,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3871:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2169,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "3906:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 2181,
												"src": "3900:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2168,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3900:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2171,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "3937:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 2181,
												"src": "3929:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2170,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3929:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2173,
												"mutability": "mutable",
												"name": "feeGrowthInside0LastX128",
												"nameLocation": "3968:24:11",
												"nodeType": "VariableDeclaration",
												"scope": 2181,
												"src": "3960:32:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3960:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2175,
												"mutability": "mutable",
												"name": "feeGrowthInside1LastX128",
												"nameLocation": "4014:24:11",
												"nodeType": "VariableDeclaration",
												"scope": 2181,
												"src": "4006:32:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4006:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2177,
												"mutability": "mutable",
												"name": "tokensOwed0",
												"nameLocation": "4060:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 2181,
												"src": "4052:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2176,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "4052:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2179,
												"mutability": "mutable",
												"name": "tokensOwed1",
												"nameLocation": "4093:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 2181,
												"src": "4085:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2178,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "4085:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3721:393:11"
									},
									"scope": 2294,
									"src": "3639:476:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "INonfungiblePositionManager.MintParams",
									"id": 2204,
									"members": [
										{
											"constant": false,
											"id": 2183,
											"mutability": "mutable",
											"name": "token0",
											"nameLocation": "4157:6:11",
											"nodeType": "VariableDeclaration",
											"scope": 2204,
											"src": "4149:14:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2182,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4149:7:11",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2185,
											"mutability": "mutable",
											"name": "token1",
											"nameLocation": "4181:6:11",
											"nodeType": "VariableDeclaration",
											"scope": 2204,
											"src": "4173:14:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2184,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4173:7:11",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2187,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "4204:3:11",
											"nodeType": "VariableDeclaration",
											"scope": 2204,
											"src": "4197:10:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 2186,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "4197:6:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2189,
											"mutability": "mutable",
											"name": "tickLower",
											"nameLocation": "4223:9:11",
											"nodeType": "VariableDeclaration",
											"scope": 2204,
											"src": "4217:15:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int24",
												"typeString": "int24"
											},
											"typeName": {
												"id": 2188,
												"name": "int24",
												"nodeType": "ElementaryTypeName",
												"src": "4217:5:11",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2191,
											"mutability": "mutable",
											"name": "tickUpper",
											"nameLocation": "4248:9:11",
											"nodeType": "VariableDeclaration",
											"scope": 2204,
											"src": "4242:15:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int24",
												"typeString": "int24"
											},
											"typeName": {
												"id": 2190,
												"name": "int24",
												"nodeType": "ElementaryTypeName",
												"src": "4242:5:11",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2193,
											"mutability": "mutable",
											"name": "amount0Desired",
											"nameLocation": "4275:14:11",
											"nodeType": "VariableDeclaration",
											"scope": 2204,
											"src": "4267:22:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2192,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4267:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2195,
											"mutability": "mutable",
											"name": "amount1Desired",
											"nameLocation": "4307:14:11",
											"nodeType": "VariableDeclaration",
											"scope": 2204,
											"src": "4299:22:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2194,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4299:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2197,
											"mutability": "mutable",
											"name": "amount0Min",
											"nameLocation": "4339:10:11",
											"nodeType": "VariableDeclaration",
											"scope": 2204,
											"src": "4331:18:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2196,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4331:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2199,
											"mutability": "mutable",
											"name": "amount1Min",
											"nameLocation": "4367:10:11",
											"nodeType": "VariableDeclaration",
											"scope": 2204,
											"src": "4359:18:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2198,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4359:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2201,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "4395:9:11",
											"nodeType": "VariableDeclaration",
											"scope": 2204,
											"src": "4387:17:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2200,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4387:7:11",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2203,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "4422:8:11",
											"nodeType": "VariableDeclaration",
											"scope": 2204,
											"src": "4414:16:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2202,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4414:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "MintParams",
									"nameLocation": "4128:10:11",
									"nodeType": "StructDefinition",
									"scope": 2294,
									"src": "4121:316:11",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 2205,
										"nodeType": "StructuredDocumentation",
										"src": "4443:586:11",
										"text": "@notice Creates a new position wrapped in a NFT\n @dev Call this when the pool does exist and is initialized. Note that if the pool is created but not initialized\n a method does not exist, i.e. the pool is assumed to be initialized.\n @param params The params necessary to mint a position, encoded as `MintParams` in calldata\n @return tokenId The ID of the token that represents the minted position\n @return liquidity The amount of liquidity for this position\n @return amount0 The amount of token0\n @return amount1 The amount of token1"
									},
									"functionSelector": "88316456",
									"id": 2219,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "5043:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2208,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "5068:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2219,
												"src": "5048:26:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_MintParams_$2204_calldata_ptr",
													"typeString": "struct INonfungiblePositionManager.MintParams"
												},
												"typeName": {
													"id": 2207,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2206,
														"name": "MintParams",
														"nameLocations": [
															"5048:10:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2204,
														"src": "5048:10:11"
													},
													"referencedDeclaration": 2204,
													"src": "5048:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MintParams_$2204_storage_ptr",
														"typeString": "struct INonfungiblePositionManager.MintParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5047:28:11"
									},
									"returnParameters": {
										"id": 2218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2211,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5147:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2219,
												"src": "5139:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5139:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2213,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "5176:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 2219,
												"src": "5168:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2212,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5168:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2215,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "5207:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2219,
												"src": "5199:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2214,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5199:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2217,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "5236:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2219,
												"src": "5228:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5228:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:128:11"
									},
									"scope": 2294,
									"src": "5034:220:11",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "INonfungiblePositionManager.IncreaseLiquidityParams",
									"id": 2232,
									"members": [
										{
											"constant": false,
											"id": 2221,
											"mutability": "mutable",
											"name": "tokenId",
											"nameLocation": "5309:7:11",
											"nodeType": "VariableDeclaration",
											"scope": 2232,
											"src": "5301:15:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2220,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5301:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2223,
											"mutability": "mutable",
											"name": "amount0Desired",
											"nameLocation": "5334:14:11",
											"nodeType": "VariableDeclaration",
											"scope": 2232,
											"src": "5326:22:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2222,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5326:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2225,
											"mutability": "mutable",
											"name": "amount1Desired",
											"nameLocation": "5366:14:11",
											"nodeType": "VariableDeclaration",
											"scope": 2232,
											"src": "5358:22:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2224,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5358:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2227,
											"mutability": "mutable",
											"name": "amount0Min",
											"nameLocation": "5398:10:11",
											"nodeType": "VariableDeclaration",
											"scope": 2232,
											"src": "5390:18:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2226,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5390:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2229,
											"mutability": "mutable",
											"name": "amount1Min",
											"nameLocation": "5426:10:11",
											"nodeType": "VariableDeclaration",
											"scope": 2232,
											"src": "5418:18:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2228,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5418:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2231,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "5454:8:11",
											"nodeType": "VariableDeclaration",
											"scope": 2232,
											"src": "5446:16:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2230,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5446:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "IncreaseLiquidityParams",
									"nameLocation": "5267:23:11",
									"nodeType": "StructDefinition",
									"scope": 2294,
									"src": "5260:209:11",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 2233,
										"nodeType": "StructuredDocumentation",
										"src": "5475:821:11",
										"text": "@notice Increases the amount of liquidity in a position, with tokens paid by the `msg.sender`\n @param params tokenId The ID of the token for which liquidity is being increased,\n amount0Desired The desired amount of token0 to be spent,\n amount1Desired The desired amount of token1 to be spent,\n amount0Min The minimum amount of token0 to spend, which serves as a slippage check,\n amount1Min The minimum amount of token1 to spend, which serves as a slippage check,\n deadline The time by which the transaction must be included to effect the change\n @return liquidity The new liquidity amount as a result of the increase\n @return amount0 The amount of token0 to acheive resulting liquidity\n @return amount1 The amount of token1 to acheive resulting liquidity"
									},
									"functionSelector": "219f5d17",
									"id": 2245,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "increaseLiquidity",
									"nameLocation": "6310:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2236,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "6361:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2245,
												"src": "6328:39:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_IncreaseLiquidityParams_$2232_calldata_ptr",
													"typeString": "struct INonfungiblePositionManager.IncreaseLiquidityParams"
												},
												"typeName": {
													"id": 2235,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2234,
														"name": "IncreaseLiquidityParams",
														"nameLocations": [
															"6328:23:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2232,
														"src": "6328:23:11"
													},
													"referencedDeclaration": 2232,
													"src": "6328:23:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_IncreaseLiquidityParams_$2232_storage_ptr",
														"typeString": "struct INonfungiblePositionManager.IncreaseLiquidityParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6327:41:11"
									},
									"returnParameters": {
										"id": 2244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2239,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "6440:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 2245,
												"src": "6432:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2238,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "6432:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2241,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "6471:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2245,
												"src": "6463:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6463:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2243,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "6500:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2245,
												"src": "6492:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6492:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6418:99:11"
									},
									"scope": 2294,
									"src": "6301:217:11",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "INonfungiblePositionManager.DecreaseLiquidityParams",
									"id": 2256,
									"members": [
										{
											"constant": false,
											"id": 2247,
											"mutability": "mutable",
											"name": "tokenId",
											"nameLocation": "6573:7:11",
											"nodeType": "VariableDeclaration",
											"scope": 2256,
											"src": "6565:15:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2246,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6565:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2249,
											"mutability": "mutable",
											"name": "liquidity",
											"nameLocation": "6598:9:11",
											"nodeType": "VariableDeclaration",
											"scope": 2256,
											"src": "6590:17:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 2248,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "6590:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2251,
											"mutability": "mutable",
											"name": "amount0Min",
											"nameLocation": "6625:10:11",
											"nodeType": "VariableDeclaration",
											"scope": 2256,
											"src": "6617:18:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2250,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6617:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2253,
											"mutability": "mutable",
											"name": "amount1Min",
											"nameLocation": "6653:10:11",
											"nodeType": "VariableDeclaration",
											"scope": 2256,
											"src": "6645:18:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2252,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6645:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2255,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "6681:8:11",
											"nodeType": "VariableDeclaration",
											"scope": 2256,
											"src": "6673:16:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2254,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6673:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "DecreaseLiquidityParams",
									"nameLocation": "6531:23:11",
									"nodeType": "StructDefinition",
									"scope": 2294,
									"src": "6524:172:11",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 2257,
										"nodeType": "StructuredDocumentation",
										"src": "6702:702:11",
										"text": "@notice Decreases the amount of liquidity in a position and accounts it to the position\n @param params tokenId The ID of the token for which liquidity is being decreased,\n amount The amount by which liquidity will be decreased,\n amount0Min The minimum amount of token0 that should be accounted for the burned liquidity,\n amount1Min The minimum amount of token1 that should be accounted for the burned liquidity,\n deadline The time by which the transaction must be included to effect the change\n @return amount0 The amount of token0 accounted to the position's tokens owed\n @return amount1 The amount of token1 accounted to the position's tokens owed"
									},
									"functionSelector": "0c49ccbe",
									"id": 2267,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseLiquidity",
									"nameLocation": "7418:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2260,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "7469:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2267,
												"src": "7436:39:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_DecreaseLiquidityParams_$2256_calldata_ptr",
													"typeString": "struct INonfungiblePositionManager.DecreaseLiquidityParams"
												},
												"typeName": {
													"id": 2259,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2258,
														"name": "DecreaseLiquidityParams",
														"nameLocations": [
															"7436:23:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2256,
														"src": "7436:23:11"
													},
													"referencedDeclaration": 2256,
													"src": "7436:23:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_DecreaseLiquidityParams_$2256_storage_ptr",
														"typeString": "struct INonfungiblePositionManager.DecreaseLiquidityParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7435:41:11"
									},
									"returnParameters": {
										"id": 2266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2263,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "7535:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2267,
												"src": "7527:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7527:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2265,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "7552:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2267,
												"src": "7544:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7544:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7526:34:11"
									},
									"scope": 2294,
									"src": "7409:152:11",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "INonfungiblePositionManager.CollectParams",
									"id": 2276,
									"members": [
										{
											"constant": false,
											"id": 2269,
											"mutability": "mutable",
											"name": "tokenId",
											"nameLocation": "7606:7:11",
											"nodeType": "VariableDeclaration",
											"scope": 2276,
											"src": "7598:15:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2268,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "7598:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2271,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "7631:9:11",
											"nodeType": "VariableDeclaration",
											"scope": 2276,
											"src": "7623:17:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2270,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "7623:7:11",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2273,
											"mutability": "mutable",
											"name": "amount0Max",
											"nameLocation": "7658:10:11",
											"nodeType": "VariableDeclaration",
											"scope": 2276,
											"src": "7650:18:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 2272,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "7650:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2275,
											"mutability": "mutable",
											"name": "amount1Max",
											"nameLocation": "7686:10:11",
											"nodeType": "VariableDeclaration",
											"scope": 2276,
											"src": "7678:18:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 2274,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "7678:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "CollectParams",
									"nameLocation": "7574:13:11",
									"nodeType": "StructDefinition",
									"scope": 2294,
									"src": "7567:136:11",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 2277,
										"nodeType": "StructuredDocumentation",
										"src": "7709:489:11",
										"text": "@notice Collects up to a maximum amount of fees owed to a specific position to the recipient\n @param params tokenId The ID of the NFT for which tokens are being collected,\n recipient The account that should receive the tokens,\n amount0Max The maximum amount of token0 to collect,\n amount1Max The maximum amount of token1 to collect\n @return amount0 The amount of fees collected in token0\n @return amount1 The amount of fees collected in token1"
									},
									"functionSelector": "fc6f7865",
									"id": 2287,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "collect",
									"nameLocation": "8212:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2280,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "8243:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2287,
												"src": "8220:29:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_CollectParams_$2276_calldata_ptr",
													"typeString": "struct INonfungiblePositionManager.CollectParams"
												},
												"typeName": {
													"id": 2279,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2278,
														"name": "CollectParams",
														"nameLocations": [
															"8220:13:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2276,
														"src": "8220:13:11"
													},
													"referencedDeclaration": 2276,
													"src": "8220:13:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_CollectParams_$2276_storage_ptr",
														"typeString": "struct INonfungiblePositionManager.CollectParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8219:31:11"
									},
									"returnParameters": {
										"id": 2286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2283,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "8285:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2287,
												"src": "8277:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8277:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2285,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "8302:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2287,
												"src": "8294:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8294:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8276:34:11"
									},
									"scope": 2294,
									"src": "8203:108:11",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2288,
										"nodeType": "StructuredDocumentation",
										"src": "8317:213:11",
										"text": "@notice Burns a token ID, which deletes it from the NFT contract. The token must have 0 liquidity and all tokens\n must be collected first.\n @param tokenId The ID of the token that is being burned"
									},
									"functionSelector": "42966c68",
									"id": 2293,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "8544:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2290,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8557:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2293,
												"src": "8549:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8549:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8548:17:11"
									},
									"returnParameters": {
										"id": 2292,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8582:0:11"
									},
									"scope": 2294,
									"src": "8535:48:11",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2295,
							"src": "566:8019:11",
							"usedErrors": [],
							"usedEvents": [
								1890,
								1899,
								1908,
								2129,
								2140,
								2151
							]
						}
					],
					"src": "45:8541:11"
				},
				"id": 11
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol": {
				"ast": {
					"absolutePath": "contracts/uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol",
					"exportedSymbols": {
						"IPeripheryImmutableState": [
							2310
						]
					},
					"id": 2311,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2296,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IPeripheryImmutableState",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2297,
								"nodeType": "StructuredDocumentation",
								"src": "71:91:12",
								"text": "@title Immutable state\n @notice Functions that return immutable state of the router"
							},
							"fullyImplemented": false,
							"id": 2310,
							"linearizedBaseContracts": [
								2310
							],
							"name": "IPeripheryImmutableState",
							"nameLocation": "172:24:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2298,
										"nodeType": "StructuredDocumentation",
										"src": "203:57:12",
										"text": "@return Returns the address of the Uniswap V3 factory"
									},
									"functionSelector": "c45a0155",
									"id": 2303,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nameLocation": "274:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2299,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "281:2:12"
									},
									"returnParameters": {
										"id": 2302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2301,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2303,
												"src": "307:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "307:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "306:9:12"
									},
									"scope": 2310,
									"src": "265:51:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2304,
										"nodeType": "StructuredDocumentation",
										"src": "322:40:12",
										"text": "@return Returns the address of WETH9"
									},
									"functionSelector": "4aa4a4fc",
									"id": 2309,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "WETH9",
									"nameLocation": "376:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "381:2:12"
									},
									"returnParameters": {
										"id": 2308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2307,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2309,
												"src": "407:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "407:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "406:9:12"
									},
									"scope": 2310,
									"src": "367:49:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2311,
							"src": "162:256:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:374:12"
				},
				"id": 12
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol": {
				"ast": {
					"absolutePath": "contracts/uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol",
					"exportedSymbols": {
						"IPeripheryPayments": [
							2336
						]
					},
					"id": 2337,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2312,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IPeripheryPayments",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2313,
								"nodeType": "StructuredDocumentation",
								"src": "71:92:13",
								"text": "@title Periphery Payments\n @notice Functions to ease deposits and withdrawals of ETH"
							},
							"fullyImplemented": false,
							"id": 2336,
							"linearizedBaseContracts": [
								2336
							],
							"name": "IPeripheryPayments",
							"nameLocation": "173:18:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2314,
										"nodeType": "StructuredDocumentation",
										"src": "198:302:13",
										"text": "@notice Unwraps the contract's WETH9 balance and sends it to recipient as ETH.\n @dev The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.\n @param amountMinimum The minimum amount of WETH9 to unwrap\n @param recipient The address receiving ETH"
									},
									"functionSelector": "49404b7c",
									"id": 2321,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "unwrapWETH9",
									"nameLocation": "514:11:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2316,
												"mutability": "mutable",
												"name": "amountMinimum",
												"nameLocation": "534:13:13",
												"nodeType": "VariableDeclaration",
												"scope": 2321,
												"src": "526:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "526:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2318,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "557:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 2321,
												"src": "549:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2317,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "549:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "525:42:13"
									},
									"returnParameters": {
										"id": 2320,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "584:0:13"
									},
									"scope": 2336,
									"src": "505:80:13",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2322,
										"nodeType": "StructuredDocumentation",
										"src": "591:225:13",
										"text": "@notice Refunds any ETH balance held by this contract to the `msg.sender`\n @dev Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps\n that use ether for the input amount"
									},
									"functionSelector": "12210e8a",
									"id": 2325,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "refundETH",
									"nameLocation": "830:9:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2323,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "839:2:13"
									},
									"returnParameters": {
										"id": 2324,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "858:0:13"
									},
									"scope": 2336,
									"src": "821:38:13",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2326,
										"nodeType": "StructuredDocumentation",
										"src": "865:427:13",
										"text": "@notice Transfers the full amount of a token held by this contract to recipient\n @dev The amountMinimum parameter prevents malicious contracts from stealing the token from users\n @param token The contract address of the token which will be transferred to `recipient`\n @param amountMinimum The minimum amount of token required for a transfer\n @param recipient The destination address of the token"
									},
									"functionSelector": "df2ab5bb",
									"id": 2335,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sweepToken",
									"nameLocation": "1306:10:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2328,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1334:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2335,
												"src": "1326:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2327,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1326:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2330,
												"mutability": "mutable",
												"name": "amountMinimum",
												"nameLocation": "1357:13:13",
												"nodeType": "VariableDeclaration",
												"scope": 2335,
												"src": "1349:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2329,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1349:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2332,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1388:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 2335,
												"src": "1380:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1380:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1316:87:13"
									},
									"returnParameters": {
										"id": 2334,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1420:0:13"
									},
									"scope": 2336,
									"src": "1297:124:13",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2337,
							"src": "163:1260:13",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:1379:13"
				},
				"id": 13
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/IPoolInitializer.sol": {
				"ast": {
					"absolutePath": "contracts/uniswap/v3-periphery/contracts/interfaces/IPoolInitializer.sol",
					"exportedSymbols": {
						"IPoolInitializer": [
							2355
						]
					},
					"id": 2356,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2338,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:14"
						},
						{
							"id": 2339,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "70:19:14"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IPoolInitializer",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2340,
								"nodeType": "StructuredDocumentation",
								"src": "91:194:14",
								"text": "@title Creates and initializes V3 Pools\n @notice Provides a method for creating and initializing a pool, if necessary, for bundling with other methods that\n require the pool to exist."
							},
							"fullyImplemented": false,
							"id": 2355,
							"linearizedBaseContracts": [
								2355
							],
							"name": "IPoolInitializer",
							"nameLocation": "295:16:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2341,
										"nodeType": "StructuredDocumentation",
										"src": "318:648:14",
										"text": "@notice Creates a new pool if it does not exist, then initializes if not initialized\n @dev This method can be bundled with others via IMulticall for the first action (e.g. mint) performed against a pool\n @param token0 The contract address of token0 of the pool\n @param token1 The contract address of token1 of the pool\n @param fee The fee amount of the v3 pool for the specified token pair\n @param sqrtPriceX96 The initial square root price of the pool as a Q64.96 value\n @return pool Returns the pool address based on the pair of tokens and fee, will return the newly created pool address if necessary"
									},
									"functionSelector": "13ead562",
									"id": 2354,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createAndInitializePoolIfNecessary",
									"nameLocation": "980:34:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2343,
												"mutability": "mutable",
												"name": "token0",
												"nameLocation": "1032:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2354,
												"src": "1024:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2342,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1024:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2345,
												"mutability": "mutable",
												"name": "token1",
												"nameLocation": "1056:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2354,
												"src": "1048:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2344,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1048:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2347,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "1079:3:14",
												"nodeType": "VariableDeclaration",
												"scope": 2354,
												"src": "1072:10:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 2346,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "1072:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2349,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "1100:12:14",
												"nodeType": "VariableDeclaration",
												"scope": 2354,
												"src": "1092:20:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2348,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1092:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1014:104:14"
									},
									"returnParameters": {
										"id": 2353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2352,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "1153:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 2354,
												"src": "1145:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1145:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1144:14:14"
									},
									"scope": 2355,
									"src": "971:188:14",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2356,
							"src": "285:876:14",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:1117:14"
				},
				"id": 14
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
				"ast": {
					"absolutePath": "contracts/uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
					"exportedSymbols": {
						"ISwapRouter": [
							2455
						],
						"IUniswapV3SwapCallback": [
							2491
						]
					},
					"id": 2456,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2357,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:23:15"
						},
						{
							"id": 2358,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "69:19:15"
						},
						{
							"absolutePath": "contracts/uniswap/v3-periphery/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
							"file": "./callback/IUniswapV3SwapCallback.sol",
							"id": 2359,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2456,
							"sourceUnit": 2492,
							"src": "90:47:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2361,
										"name": "IUniswapV3SwapCallback",
										"nameLocations": [
											"268:22:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2491,
										"src": "268:22:15"
									},
									"id": 2362,
									"nodeType": "InheritanceSpecifier",
									"src": "268:22:15"
								}
							],
							"canonicalName": "ISwapRouter",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2360,
								"nodeType": "StructuredDocumentation",
								"src": "139:104:15",
								"text": "@title Router token swapping functionality\n @notice Functions for swapping tokens via Uniswap V3"
							},
							"fullyImplemented": false,
							"id": 2455,
							"linearizedBaseContracts": [
								2455,
								2491
							],
							"name": "ISwapRouter",
							"nameLocation": "253:11:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ISwapRouter.ExactInputSingleParams",
									"id": 2379,
									"members": [
										{
											"constant": false,
											"id": 2364,
											"mutability": "mutable",
											"name": "tokenIn",
											"nameLocation": "345:7:15",
											"nodeType": "VariableDeclaration",
											"scope": 2379,
											"src": "337:15:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2363,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "337:7:15",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2366,
											"mutability": "mutable",
											"name": "tokenOut",
											"nameLocation": "370:8:15",
											"nodeType": "VariableDeclaration",
											"scope": 2379,
											"src": "362:16:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2365,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "362:7:15",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2368,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "395:3:15",
											"nodeType": "VariableDeclaration",
											"scope": 2379,
											"src": "388:10:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 2367,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "388:6:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2370,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "416:9:15",
											"nodeType": "VariableDeclaration",
											"scope": 2379,
											"src": "408:17:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2369,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "408:7:15",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2372,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "443:8:15",
											"nodeType": "VariableDeclaration",
											"scope": 2379,
											"src": "435:16:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2371,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "435:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2374,
											"mutability": "mutable",
											"name": "amountIn",
											"nameLocation": "469:8:15",
											"nodeType": "VariableDeclaration",
											"scope": 2379,
											"src": "461:16:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2373,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "461:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2376,
											"mutability": "mutable",
											"name": "amountOutMinimum",
											"nameLocation": "495:16:15",
											"nodeType": "VariableDeclaration",
											"scope": 2379,
											"src": "487:24:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2375,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "487:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2378,
											"mutability": "mutable",
											"name": "sqrtPriceLimitX96",
											"nameLocation": "529:17:15",
											"nodeType": "VariableDeclaration",
											"scope": 2379,
											"src": "521:25:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 2377,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "521:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactInputSingleParams",
									"nameLocation": "304:22:15",
									"nodeType": "StructDefinition",
									"scope": 2455,
									"src": "297:256:15",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 2380,
										"nodeType": "StructuredDocumentation",
										"src": "559:250:15",
										"text": "@notice Swaps `amountIn` of one token for as much as possible of another token\n @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n @return amountOut The amount of the received token"
									},
									"functionSelector": "414bf389",
									"id": 2388,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactInputSingle",
									"nameLocation": "823:16:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2383,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "872:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 2388,
												"src": "840:38:15",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactInputSingleParams_$2379_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactInputSingleParams"
												},
												"typeName": {
													"id": 2382,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2381,
														"name": "ExactInputSingleParams",
														"nameLocations": [
															"840:22:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2379,
														"src": "840:22:15"
													},
													"referencedDeclaration": 2379,
													"src": "840:22:15",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputSingleParams_$2379_storage_ptr",
														"typeString": "struct ISwapRouter.ExactInputSingleParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "839:40:15"
									},
									"returnParameters": {
										"id": 2387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2386,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "914:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 2388,
												"src": "906:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2385,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "906:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "905:19:15"
									},
									"scope": 2455,
									"src": "814:111:15",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactInputParams",
									"id": 2399,
									"members": [
										{
											"constant": false,
											"id": 2390,
											"mutability": "mutable",
											"name": "path",
											"nameLocation": "971:4:15",
											"nodeType": "VariableDeclaration",
											"scope": 2399,
											"src": "965:10:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 2389,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "965:5:15",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2392,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "993:9:15",
											"nodeType": "VariableDeclaration",
											"scope": 2399,
											"src": "985:17:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2391,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "985:7:15",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2394,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "1020:8:15",
											"nodeType": "VariableDeclaration",
											"scope": 2399,
											"src": "1012:16:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2393,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1012:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2396,
											"mutability": "mutable",
											"name": "amountIn",
											"nameLocation": "1046:8:15",
											"nodeType": "VariableDeclaration",
											"scope": 2399,
											"src": "1038:16:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2395,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1038:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2398,
											"mutability": "mutable",
											"name": "amountOutMinimum",
											"nameLocation": "1072:16:15",
											"nodeType": "VariableDeclaration",
											"scope": 2399,
											"src": "1064:24:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2397,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1064:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactInputParams",
									"nameLocation": "938:16:15",
									"nodeType": "StructDefinition",
									"scope": 2455,
									"src": "931:164:15",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 2400,
										"nodeType": "StructuredDocumentation",
										"src": "1101:273:15",
										"text": "@notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n @return amountOut The amount of the received token"
									},
									"functionSelector": "c04b8d59",
									"id": 2408,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactInput",
									"nameLocation": "1388:10:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2403,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "1425:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 2408,
												"src": "1399:32:15",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactInputParams_$2399_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactInputParams"
												},
												"typeName": {
													"id": 2402,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2401,
														"name": "ExactInputParams",
														"nameLocations": [
															"1399:16:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2399,
														"src": "1399:16:15"
													},
													"referencedDeclaration": 2399,
													"src": "1399:16:15",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputParams_$2399_storage_ptr",
														"typeString": "struct ISwapRouter.ExactInputParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1398:34:15"
									},
									"returnParameters": {
										"id": 2407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2406,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "1467:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 2408,
												"src": "1459:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2405,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1459:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1458:19:15"
									},
									"scope": 2455,
									"src": "1379:99:15",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactOutputSingleParams",
									"id": 2425,
									"members": [
										{
											"constant": false,
											"id": 2410,
											"mutability": "mutable",
											"name": "tokenIn",
											"nameLocation": "1533:7:15",
											"nodeType": "VariableDeclaration",
											"scope": 2425,
											"src": "1525:15:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2409,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1525:7:15",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2412,
											"mutability": "mutable",
											"name": "tokenOut",
											"nameLocation": "1558:8:15",
											"nodeType": "VariableDeclaration",
											"scope": 2425,
											"src": "1550:16:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2411,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1550:7:15",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2414,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "1583:3:15",
											"nodeType": "VariableDeclaration",
											"scope": 2425,
											"src": "1576:10:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 2413,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "1576:6:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2416,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "1604:9:15",
											"nodeType": "VariableDeclaration",
											"scope": 2425,
											"src": "1596:17:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2415,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1596:7:15",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2418,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "1631:8:15",
											"nodeType": "VariableDeclaration",
											"scope": 2425,
											"src": "1623:16:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2417,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1623:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2420,
											"mutability": "mutable",
											"name": "amountOut",
											"nameLocation": "1657:9:15",
											"nodeType": "VariableDeclaration",
											"scope": 2425,
											"src": "1649:17:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2419,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1649:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2422,
											"mutability": "mutable",
											"name": "amountInMaximum",
											"nameLocation": "1684:15:15",
											"nodeType": "VariableDeclaration",
											"scope": 2425,
											"src": "1676:23:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2421,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1676:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2424,
											"mutability": "mutable",
											"name": "sqrtPriceLimitX96",
											"nameLocation": "1717:17:15",
											"nodeType": "VariableDeclaration",
											"scope": 2425,
											"src": "1709:25:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 2423,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "1709:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactOutputSingleParams",
									"nameLocation": "1491:23:15",
									"nodeType": "StructDefinition",
									"scope": 2455,
									"src": "1484:257:15",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 2426,
										"nodeType": "StructuredDocumentation",
										"src": "1747:250:15",
										"text": "@notice Swaps as little as possible of one token for `amountOut` of another token\n @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n @return amountIn The amount of the input token"
									},
									"functionSelector": "db3e2198",
									"id": 2434,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactOutputSingle",
									"nameLocation": "2011:17:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2429,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "2062:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 2434,
												"src": "2029:39:15",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactOutputSingleParams_$2425_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactOutputSingleParams"
												},
												"typeName": {
													"id": 2428,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2427,
														"name": "ExactOutputSingleParams",
														"nameLocations": [
															"2029:23:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2425,
														"src": "2029:23:15"
													},
													"referencedDeclaration": 2425,
													"src": "2029:23:15",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactOutputSingleParams_$2425_storage_ptr",
														"typeString": "struct ISwapRouter.ExactOutputSingleParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2028:41:15"
									},
									"returnParameters": {
										"id": 2433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2432,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2104:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 2434,
												"src": "2096:16:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2431,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2096:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2095:18:15"
									},
									"scope": 2455,
									"src": "2002:112:15",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactOutputParams",
									"id": 2445,
									"members": [
										{
											"constant": false,
											"id": 2436,
											"mutability": "mutable",
											"name": "path",
											"nameLocation": "2161:4:15",
											"nodeType": "VariableDeclaration",
											"scope": 2445,
											"src": "2155:10:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 2435,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "2155:5:15",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2438,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "2183:9:15",
											"nodeType": "VariableDeclaration",
											"scope": 2445,
											"src": "2175:17:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2437,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2175:7:15",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2440,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "2210:8:15",
											"nodeType": "VariableDeclaration",
											"scope": 2445,
											"src": "2202:16:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2439,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2202:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2442,
											"mutability": "mutable",
											"name": "amountOut",
											"nameLocation": "2236:9:15",
											"nodeType": "VariableDeclaration",
											"scope": 2445,
											"src": "2228:17:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2441,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2228:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2444,
											"mutability": "mutable",
											"name": "amountInMaximum",
											"nameLocation": "2263:15:15",
											"nodeType": "VariableDeclaration",
											"scope": 2445,
											"src": "2255:23:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2443,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2255:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactOutputParams",
									"nameLocation": "2127:17:15",
									"nodeType": "StructDefinition",
									"scope": 2455,
									"src": "2120:165:15",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 2446,
										"nodeType": "StructuredDocumentation",
										"src": "2291:284:15",
										"text": "@notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n @return amountIn The amount of the input token"
									},
									"functionSelector": "f28c0498",
									"id": 2454,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactOutput",
									"nameLocation": "2589:11:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2449,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "2628:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 2454,
												"src": "2601:33:15",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactOutputParams_$2445_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactOutputParams"
												},
												"typeName": {
													"id": 2448,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2447,
														"name": "ExactOutputParams",
														"nameLocations": [
															"2601:17:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2445,
														"src": "2601:17:15"
													},
													"referencedDeclaration": 2445,
													"src": "2601:17:15",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactOutputParams_$2445_storage_ptr",
														"typeString": "struct ISwapRouter.ExactOutputParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2600:35:15"
									},
									"returnParameters": {
										"id": 2453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2452,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2670:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 2454,
												"src": "2662:16:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2451,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2662:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2661:18:15"
									},
									"scope": 2455,
									"src": "2580:100:15",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2456,
							"src": "243:2439:15",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:2638:15"
				},
				"id": 15
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/IUniswapV3Pool.sol": {
				"ast": {
					"absolutePath": "contracts/uniswap/v3-periphery/contracts/interfaces/IUniswapV3Pool.sol",
					"exportedSymbols": {
						"IUniswapV3Pool": [
							2477
						],
						"IUniswapV3PoolActions": [
							2587
						],
						"IUniswapV3PoolDerivedState": [
							2618
						],
						"IUniswapV3PoolEvents": [
							2737
						],
						"IUniswapV3PoolImmutables": [
							2777
						],
						"IUniswapV3PoolOwnerActions": [
							2803
						],
						"IUniswapV3PoolState": [
							2911
						]
					},
					"id": 2478,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2457,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:16"
						},
						{
							"absolutePath": "contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
							"file": "./pool/IUniswapV3PoolImmutables.sol",
							"id": 2458,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2478,
							"sourceUnit": 2778,
							"src": "71:45:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolState.sol",
							"file": "./pool/IUniswapV3PoolState.sol",
							"id": 2459,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2478,
							"sourceUnit": 2912,
							"src": "117:40:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
							"file": "./pool/IUniswapV3PoolDerivedState.sol",
							"id": 2460,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2478,
							"sourceUnit": 2619,
							"src": "158:47:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
							"file": "./pool/IUniswapV3PoolActions.sol",
							"id": 2461,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2478,
							"sourceUnit": 2588,
							"src": "206:42:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
							"file": "./pool/IUniswapV3PoolOwnerActions.sol",
							"id": 2462,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2478,
							"sourceUnit": 2804,
							"src": "249:47:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
							"file": "./pool/IUniswapV3PoolEvents.sol",
							"id": 2463,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2478,
							"sourceUnit": 2738,
							"src": "297:41:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2465,
										"name": "IUniswapV3PoolImmutables",
										"nameLocations": [
											"637:24:16"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2777,
										"src": "637:24:16"
									},
									"id": 2466,
									"nodeType": "InheritanceSpecifier",
									"src": "637:24:16"
								},
								{
									"baseName": {
										"id": 2467,
										"name": "IUniswapV3PoolState",
										"nameLocations": [
											"667:19:16"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2911,
										"src": "667:19:16"
									},
									"id": 2468,
									"nodeType": "InheritanceSpecifier",
									"src": "667:19:16"
								},
								{
									"baseName": {
										"id": 2469,
										"name": "IUniswapV3PoolDerivedState",
										"nameLocations": [
											"692:26:16"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2618,
										"src": "692:26:16"
									},
									"id": 2470,
									"nodeType": "InheritanceSpecifier",
									"src": "692:26:16"
								},
								{
									"baseName": {
										"id": 2471,
										"name": "IUniswapV3PoolActions",
										"nameLocations": [
											"724:21:16"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2587,
										"src": "724:21:16"
									},
									"id": 2472,
									"nodeType": "InheritanceSpecifier",
									"src": "724:21:16"
								},
								{
									"baseName": {
										"id": 2473,
										"name": "IUniswapV3PoolOwnerActions",
										"nameLocations": [
											"751:26:16"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2803,
										"src": "751:26:16"
									},
									"id": 2474,
									"nodeType": "InheritanceSpecifier",
									"src": "751:26:16"
								},
								{
									"baseName": {
										"id": 2475,
										"name": "IUniswapV3PoolEvents",
										"nameLocations": [
											"783:20:16"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2737,
										"src": "783:20:16"
									},
									"id": 2476,
									"nodeType": "InheritanceSpecifier",
									"src": "783:20:16"
								}
							],
							"canonicalName": "IUniswapV3Pool",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2464,
								"nodeType": "StructuredDocumentation",
								"src": "340:265:16",
								"text": "@title The interface for a Uniswap V3 Pool\n @notice A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform\n to the ERC20 specification\n @dev The pool interface is broken up into many smaller pieces"
							},
							"fullyImplemented": false,
							"id": 2477,
							"linearizedBaseContracts": [
								2477,
								2737,
								2803,
								2587,
								2618,
								2911,
								2777
							],
							"name": "IUniswapV3Pool",
							"nameLocation": "615:14:16",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 2478,
							"src": "605:203:16",
							"usedErrors": [],
							"usedEvents": [
								2628,
								2645,
								2660,
								2675,
								2692,
								2707,
								2714,
								2725,
								2736
							]
						}
					],
					"src": "45:764:16"
				},
				"id": 16
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"ast": {
					"absolutePath": "contracts/uniswap/v3-periphery/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
					"exportedSymbols": {
						"IUniswapV3SwapCallback": [
							2491
						]
					},
					"id": 2492,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2479,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:23:17"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3SwapCallback",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2480,
								"nodeType": "StructuredDocumentation",
								"src": "70:144:17",
								"text": "@title Callback for IUniswapV3PoolActions#swap\n @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface"
							},
							"fullyImplemented": false,
							"id": 2491,
							"linearizedBaseContracts": [
								2491
							],
							"name": "IUniswapV3SwapCallback",
							"nameLocation": "224:22:17",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2481,
										"nodeType": "StructuredDocumentation",
										"src": "253:898:17",
										"text": "@notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n @dev In the implementation you must pay the pool tokens owed for the swap.\n The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
									},
									"functionSelector": "fa461e33",
									"id": 2490,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uniswapV3SwapCallback",
									"nameLocation": "1165:21:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2483,
												"mutability": "mutable",
												"name": "amount0Delta",
												"nameLocation": "1203:12:17",
												"nodeType": "VariableDeclaration",
												"scope": 2490,
												"src": "1196:19:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2482,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1196:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2485,
												"mutability": "mutable",
												"name": "amount1Delta",
												"nameLocation": "1232:12:17",
												"nodeType": "VariableDeclaration",
												"scope": 2490,
												"src": "1225:19:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2484,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1225:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2487,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1269:4:17",
												"nodeType": "VariableDeclaration",
												"scope": 2490,
												"src": "1254:19:17",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2486,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1254:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1186:93:17"
									},
									"returnParameters": {
										"id": 2489,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1288:0:17"
									},
									"scope": 2491,
									"src": "1156:133:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2492,
							"src": "214:1077:17",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:1247:17"
				},
				"id": 17
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
				"ast": {
					"absolutePath": "contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
					"exportedSymbols": {
						"IUniswapV3PoolActions": [
							2587
						]
					},
					"id": 2588,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2493,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:18"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolActions",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2494,
								"nodeType": "StructuredDocumentation",
								"src": "71:102:18",
								"text": "@title Permissionless pool actions\n @notice Contains pool methods that can be called by anyone"
							},
							"fullyImplemented": false,
							"id": 2587,
							"linearizedBaseContracts": [
								2587
							],
							"name": "IUniswapV3PoolActions",
							"nameLocation": "183:21:18",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2495,
										"nodeType": "StructuredDocumentation",
										"src": "211:206:18",
										"text": "@notice Sets the initial price for the pool\n @dev Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\n @param sqrtPriceX96 the initial sqrt price of the pool as a Q64.96"
									},
									"functionSelector": "f637731d",
									"id": 2500,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "431:10:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2497,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "450:12:18",
												"nodeType": "VariableDeclaration",
												"scope": 2500,
												"src": "442:20:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2496,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "442:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "441:22:18"
									},
									"returnParameters": {
										"id": 2499,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "472:0:18"
									},
									"scope": 2587,
									"src": "422:51:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2501,
										"nodeType": "StructuredDocumentation",
										"src": "479:1029:18",
										"text": "@notice Adds liquidity for the given recipient/tickLower/tickUpper position\n @dev The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback\n in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends\n on tickLower, tickUpper, the amount of liquidity, and the current price.\n @param recipient The address for which the liquidity will be created\n @param tickLower The lower tick of the position in which to add liquidity\n @param tickUpper The upper tick of the position in which to add liquidity\n @param amount The amount of liquidity to mint\n @param data Any data that should be passed through to the callback\n @return amount0 The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\n @return amount1 The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"
									},
									"functionSelector": "3c8a7d8d",
									"id": 2518,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "1522:4:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2503,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1544:9:18",
												"nodeType": "VariableDeclaration",
												"scope": 2518,
												"src": "1536:17:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2502,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1536:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2505,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "1569:9:18",
												"nodeType": "VariableDeclaration",
												"scope": 2518,
												"src": "1563:15:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2504,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1563:5:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2507,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "1594:9:18",
												"nodeType": "VariableDeclaration",
												"scope": 2518,
												"src": "1588:15:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2506,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1588:5:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2509,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1621:6:18",
												"nodeType": "VariableDeclaration",
												"scope": 2518,
												"src": "1613:14:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2508,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1613:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2511,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1652:4:18",
												"nodeType": "VariableDeclaration",
												"scope": 2518,
												"src": "1637:19:18",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2510,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1637:5:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1526:136:18"
									},
									"returnParameters": {
										"id": 2517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2514,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1689:7:18",
												"nodeType": "VariableDeclaration",
												"scope": 2518,
												"src": "1681:15:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2513,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1681:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2516,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1706:7:18",
												"nodeType": "VariableDeclaration",
												"scope": 2518,
												"src": "1698:15:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2515,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1698:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1680:34:18"
									},
									"scope": 2587,
									"src": "1513:202:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2519,
										"nodeType": "StructuredDocumentation",
										"src": "1721:1053:18",
										"text": "@notice Collects tokens owed to a position\n @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\n Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\n amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\n actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\n @param recipient The address which should receive the fees collected\n @param tickLower The lower tick of the position for which to collect fees\n @param tickUpper The upper tick of the position for which to collect fees\n @param amount0Requested How much token0 should be withdrawn from the fees owed\n @param amount1Requested How much token1 should be withdrawn from the fees owed\n @return amount0 The amount of fees collected in token0\n @return amount1 The amount of fees collected in token1"
									},
									"functionSelector": "4f1eb3d8",
									"id": 2536,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "collect",
									"nameLocation": "2788:7:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2521,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2813:9:18",
												"nodeType": "VariableDeclaration",
												"scope": 2536,
												"src": "2805:17:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2520,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2805:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2523,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "2838:9:18",
												"nodeType": "VariableDeclaration",
												"scope": 2536,
												"src": "2832:15:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2522,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2832:5:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2525,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "2863:9:18",
												"nodeType": "VariableDeclaration",
												"scope": 2536,
												"src": "2857:15:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2524,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2857:5:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2527,
												"mutability": "mutable",
												"name": "amount0Requested",
												"nameLocation": "2890:16:18",
												"nodeType": "VariableDeclaration",
												"scope": 2536,
												"src": "2882:24:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2526,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2882:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2529,
												"mutability": "mutable",
												"name": "amount1Requested",
												"nameLocation": "2924:16:18",
												"nodeType": "VariableDeclaration",
												"scope": 2536,
												"src": "2916:24:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2528,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2916:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2795:151:18"
									},
									"returnParameters": {
										"id": 2535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2532,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "2973:7:18",
												"nodeType": "VariableDeclaration",
												"scope": 2536,
												"src": "2965:15:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2531,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2965:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2534,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "2990:7:18",
												"nodeType": "VariableDeclaration",
												"scope": 2536,
												"src": "2982:15:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2533,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2982:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2964:34:18"
									},
									"scope": 2587,
									"src": "2779:220:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2537,
										"nodeType": "StructuredDocumentation",
										"src": "3005:631:18",
										"text": "@notice Burn liquidity from the sender and account tokens owed for the liquidity to the position\n @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\n @dev Fees must be collected separately via a call to #collect\n @param tickLower The lower tick of the position for which to burn liquidity\n @param tickUpper The upper tick of the position for which to burn liquidity\n @param amount How much liquidity to burn\n @return amount0 The amount of token0 sent to the recipient\n @return amount1 The amount of token1 sent to the recipient"
									},
									"functionSelector": "a34123a7",
									"id": 2550,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "3650:4:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2539,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "3670:9:18",
												"nodeType": "VariableDeclaration",
												"scope": 2550,
												"src": "3664:15:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2538,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3664:5:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2541,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "3695:9:18",
												"nodeType": "VariableDeclaration",
												"scope": 2550,
												"src": "3689:15:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2540,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3689:5:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2543,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3722:6:18",
												"nodeType": "VariableDeclaration",
												"scope": 2550,
												"src": "3714:14:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2542,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3714:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3654:80:18"
									},
									"returnParameters": {
										"id": 2549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2546,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "3761:7:18",
												"nodeType": "VariableDeclaration",
												"scope": 2550,
												"src": "3753:15:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2545,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3753:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2548,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "3778:7:18",
												"nodeType": "VariableDeclaration",
												"scope": 2550,
												"src": "3770:15:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2547,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3770:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3752:34:18"
									},
									"scope": 2587,
									"src": "3641:146:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2551,
										"nodeType": "StructuredDocumentation",
										"src": "3793:1015:18",
										"text": "@notice Swap token0 for token1, or token1 for token0\n @dev The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\n @param recipient The address to receive the output of the swap\n @param zeroForOne The direction of the swap, true for token0 to token1, false for token1 to token0\n @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\n @param sqrtPriceLimitX96 The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\n value after the swap. If one for zero, the price cannot be greater than this value after the swap\n @param data Any data to be passed through to the callback\n @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\n @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive"
									},
									"functionSelector": "128acb08",
									"id": 2568,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nameLocation": "4822:4:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2553,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "4844:9:18",
												"nodeType": "VariableDeclaration",
												"scope": 2568,
												"src": "4836:17:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2552,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4836:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2555,
												"mutability": "mutable",
												"name": "zeroForOne",
												"nameLocation": "4868:10:18",
												"nodeType": "VariableDeclaration",
												"scope": 2568,
												"src": "4863:15:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2554,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2557,
												"mutability": "mutable",
												"name": "amountSpecified",
												"nameLocation": "4895:15:18",
												"nodeType": "VariableDeclaration",
												"scope": 2568,
												"src": "4888:22:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2556,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "4888:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2559,
												"mutability": "mutable",
												"name": "sqrtPriceLimitX96",
												"nameLocation": "4928:17:18",
												"nodeType": "VariableDeclaration",
												"scope": 2568,
												"src": "4920:25:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2558,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "4920:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2561,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4970:4:18",
												"nodeType": "VariableDeclaration",
												"scope": 2568,
												"src": "4955:19:18",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2560,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4955:5:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4826:154:18"
									},
									"returnParameters": {
										"id": 2567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2564,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "5006:7:18",
												"nodeType": "VariableDeclaration",
												"scope": 2568,
												"src": "4999:14:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2563,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "4999:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2566,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "5022:7:18",
												"nodeType": "VariableDeclaration",
												"scope": 2568,
												"src": "5015:14:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2565,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "5015:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4998:32:18"
									},
									"scope": 2587,
									"src": "4813:218:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2569,
										"nodeType": "StructuredDocumentation",
										"src": "5037:657:18",
										"text": "@notice Receive token0 and/or token1 and pay it back, plus a fee, in the callback\n @dev The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallback\n @dev Can be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling\n with 0 amount{0,1} and sending the donation amount(s) from the callback\n @param recipient The address which will receive the token0 and token1 amounts\n @param amount0 The amount of token0 to send\n @param amount1 The amount of token1 to send\n @param data Any data to be passed through to the callback"
									},
									"functionSelector": "490e6cbc",
									"id": 2580,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "flash",
									"nameLocation": "5708:5:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2571,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "5731:9:18",
												"nodeType": "VariableDeclaration",
												"scope": 2580,
												"src": "5723:17:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2570,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5723:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2573,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "5758:7:18",
												"nodeType": "VariableDeclaration",
												"scope": 2580,
												"src": "5750:15:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2572,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5750:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2575,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "5783:7:18",
												"nodeType": "VariableDeclaration",
												"scope": 2580,
												"src": "5775:15:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2574,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5775:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2577,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5815:4:18",
												"nodeType": "VariableDeclaration",
												"scope": 2580,
												"src": "5800:19:18",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2576,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5800:5:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5713:112:18"
									},
									"returnParameters": {
										"id": 2579,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5834:0:18"
									},
									"scope": 2587,
									"src": "5699:136:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2581,
										"nodeType": "StructuredDocumentation",
										"src": "5841:367:18",
										"text": "@notice Increase the maximum number of price and liquidity observations that this pool will store\n @dev This method is no-op if the pool already has an observationCardinalityNext greater than or equal to\n the input observationCardinalityNext.\n @param observationCardinalityNext The desired minimum number of observations for the pool to store"
									},
									"functionSelector": "32148f67",
									"id": 2586,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "increaseObservationCardinalityNext",
									"nameLocation": "6222:34:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2583,
												"mutability": "mutable",
												"name": "observationCardinalityNext",
												"nameLocation": "6264:26:18",
												"nodeType": "VariableDeclaration",
												"scope": 2586,
												"src": "6257:33:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2582,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "6257:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6256:35:18"
									},
									"returnParameters": {
										"id": 2585,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6300:0:18"
									},
									"scope": 2587,
									"src": "6213:88:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2588,
							"src": "173:6130:18",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:6259:18"
				},
				"id": 18
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
				"ast": {
					"absolutePath": "contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
					"exportedSymbols": {
						"IUniswapV3PoolDerivedState": [
							2618
						]
					},
					"id": 2619,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2589,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:19"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolDerivedState",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2590,
								"nodeType": "StructuredDocumentation",
								"src": "71:222:19",
								"text": "@title Pool state that is not stored\n @notice Contains view functions to provide information about the pool that is computed rather than stored on the\n blockchain. The functions here may have variable gas costs."
							},
							"fullyImplemented": false,
							"id": 2618,
							"linearizedBaseContracts": [
								2618
							],
							"name": "IUniswapV3PoolDerivedState",
							"nameLocation": "303:26:19",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2591,
										"nodeType": "StructuredDocumentation",
										"src": "336:1045:19",
										"text": "@notice Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\n @dev To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing\n the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,\n you must call it with secondsAgos = [3600, 0].\n @dev The time weighted average tick represents the geometric time weighted average price of the pool, in\n log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\n @param secondsAgos From how long ago each cumulative tick and liquidity value should be returned\n @return tickCumulatives Cumulative tick values as of each `secondsAgos` from the current block timestamp\n @return secondsPerLiquidityCumulativeX128s Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block\n timestamp"
									},
									"functionSelector": "883bdbfd",
									"id": 2603,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "observe",
									"nameLocation": "1395:7:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2594,
												"mutability": "mutable",
												"name": "secondsAgos",
												"nameLocation": "1421:11:19",
												"nodeType": "VariableDeclaration",
												"scope": 2603,
												"src": "1403:29:19",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
													"typeString": "uint32[]"
												},
												"typeName": {
													"baseType": {
														"id": 2592,
														"name": "uint32",
														"nodeType": "ElementaryTypeName",
														"src": "1403:6:19",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"id": 2593,
													"nodeType": "ArrayTypeName",
													"src": "1403:8:19",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
														"typeString": "uint32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1402:31:19"
									},
									"returnParameters": {
										"id": 2602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2598,
												"mutability": "mutable",
												"name": "tickCumulatives",
												"nameLocation": "1496:15:19",
												"nodeType": "VariableDeclaration",
												"scope": 2603,
												"src": "1481:30:19",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_int56_$dyn_memory_ptr",
													"typeString": "int56[]"
												},
												"typeName": {
													"baseType": {
														"id": 2596,
														"name": "int56",
														"nodeType": "ElementaryTypeName",
														"src": "1481:5:19",
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"id": 2597,
													"nodeType": "ArrayTypeName",
													"src": "1481:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_int56_$dyn_storage_ptr",
														"typeString": "int56[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2601,
												"mutability": "mutable",
												"name": "secondsPerLiquidityCumulativeX128s",
												"nameLocation": "1530:34:19",
												"nodeType": "VariableDeclaration",
												"scope": 2603,
												"src": "1513:51:19",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint160_$dyn_memory_ptr",
													"typeString": "uint160[]"
												},
												"typeName": {
													"baseType": {
														"id": 2599,
														"name": "uint160",
														"nodeType": "ElementaryTypeName",
														"src": "1513:7:19",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"id": 2600,
													"nodeType": "ArrayTypeName",
													"src": "1513:9:19",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint160_$dyn_storage_ptr",
														"typeString": "uint160[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1480:85:19"
									},
									"scope": 2618,
									"src": "1386:180:19",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2604,
										"nodeType": "StructuredDocumentation",
										"src": "1572:771:19",
										"text": "@notice Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\n @dev Snapshots must only be compared to other snapshots, taken over a period for which a position existed.\n I.e., snapshots cannot be compared if a position is not held for the entire period between when the first\n snapshot is taken and the second snapshot is taken.\n @param tickLower The lower tick of the range\n @param tickUpper The upper tick of the range\n @return tickCumulativeInside The snapshot of the tick accumulator for the range\n @return secondsPerLiquidityInsideX128 The snapshot of seconds per liquidity for the range\n @return secondsInside The snapshot of seconds per liquidity for the range"
									},
									"functionSelector": "a38807f2",
									"id": 2617,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "snapshotCumulativesInside",
									"nameLocation": "2357:25:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2606,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "2389:9:19",
												"nodeType": "VariableDeclaration",
												"scope": 2617,
												"src": "2383:15:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2605,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2383:5:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2608,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "2406:9:19",
												"nodeType": "VariableDeclaration",
												"scope": 2617,
												"src": "2400:15:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2607,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2400:5:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2382:34:19"
									},
									"returnParameters": {
										"id": 2616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2611,
												"mutability": "mutable",
												"name": "tickCumulativeInside",
												"nameLocation": "2483:20:19",
												"nodeType": "VariableDeclaration",
												"scope": 2617,
												"src": "2477:26:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 2610,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "2477:5:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2613,
												"mutability": "mutable",
												"name": "secondsPerLiquidityInsideX128",
												"nameLocation": "2525:29:19",
												"nodeType": "VariableDeclaration",
												"scope": 2617,
												"src": "2517:37:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2612,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "2517:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2615,
												"mutability": "mutable",
												"name": "secondsInside",
												"nameLocation": "2575:13:19",
												"nodeType": "VariableDeclaration",
												"scope": 2617,
												"src": "2568:20:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2614,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2568:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2463:135:19"
									},
									"scope": 2618,
									"src": "2348:251:19",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2619,
							"src": "293:2308:19",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:2557:19"
				},
				"id": 19
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
				"ast": {
					"absolutePath": "contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
					"exportedSymbols": {
						"IUniswapV3PoolEvents": [
							2737
						]
					},
					"id": 2738,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2620,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:20"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolEvents",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2621,
								"nodeType": "StructuredDocumentation",
								"src": "71:88:20",
								"text": "@title Events emitted by a pool\n @notice Contains all events emitted by the pool"
							},
							"fullyImplemented": true,
							"id": 2737,
							"linearizedBaseContracts": [
								2737
							],
							"name": "IUniswapV3PoolEvents",
							"nameLocation": "169:20:20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 2622,
										"nodeType": "StructuredDocumentation",
										"src": "196:344:20",
										"text": "@notice Emitted exactly once by a pool when #initialize is first called on the pool\n @dev Mint/Burn/Swap cannot be emitted by the pool before Initialize\n @param sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96\n @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool"
									},
									"eventSelector": "98636036cb66a9c19a37435efc1e90142190214e8abeb821bdba3f2990dd4c95",
									"id": 2628,
									"name": "Initialize",
									"nameLocation": "551:10:20",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2624,
												"indexed": false,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "570:12:20",
												"nodeType": "VariableDeclaration",
												"scope": 2628,
												"src": "562:20:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2623,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "562:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2626,
												"indexed": false,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "590:4:20",
												"nodeType": "VariableDeclaration",
												"scope": 2628,
												"src": "584:10:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2625,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "584:5:20",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "561:34:20"
									},
									"src": "545:51:20"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2629,
										"nodeType": "StructuredDocumentation",
										"src": "602:551:20",
										"text": "@notice Emitted when liquidity is minted for a given position\n @param sender The address that minted the liquidity\n @param owner The owner of the position and recipient of any minted liquidity\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount The amount of liquidity minted to the position range\n @param amount0 How much token0 was required for the minted liquidity\n @param amount1 How much token1 was required for the minted liquidity"
									},
									"eventSelector": "7a53080ba414158be7ec69b987b5fb7d07dee101fe85488f0853ae16239d0bde",
									"id": 2645,
									"name": "Mint",
									"nameLocation": "1164:4:20",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2631,
												"indexed": false,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1186:6:20",
												"nodeType": "VariableDeclaration",
												"scope": 2645,
												"src": "1178:14:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2630,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1178:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2633,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1218:5:20",
												"nodeType": "VariableDeclaration",
												"scope": 2645,
												"src": "1202:21:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2632,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1202:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2635,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "1247:9:20",
												"nodeType": "VariableDeclaration",
												"scope": 2645,
												"src": "1233:23:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2634,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1233:5:20",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2637,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "1280:9:20",
												"nodeType": "VariableDeclaration",
												"scope": 2645,
												"src": "1266:23:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2636,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1266:5:20",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2639,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1307:6:20",
												"nodeType": "VariableDeclaration",
												"scope": 2645,
												"src": "1299:14:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2638,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1299:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2641,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1331:7:20",
												"nodeType": "VariableDeclaration",
												"scope": 2645,
												"src": "1323:15:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2640,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1323:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2643,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1356:7:20",
												"nodeType": "VariableDeclaration",
												"scope": 2645,
												"src": "1348:15:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2642,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1348:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1168:201:20"
									},
									"src": "1158:212:20"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2646,
										"nodeType": "StructuredDocumentation",
										"src": "1376:493:20",
										"text": "@notice Emitted when fees are collected by the owner of a position\n @dev Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\n @param owner The owner of the position for which fees are collected\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount0 The amount of token0 fees collected\n @param amount1 The amount of token1 fees collected"
									},
									"eventSelector": "70935338e69775456a85ddef226c395fb668b63fa0115f5f20610b388e6ca9c0",
									"id": 2660,
									"name": "Collect",
									"nameLocation": "1880:7:20",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2648,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1913:5:20",
												"nodeType": "VariableDeclaration",
												"scope": 2660,
												"src": "1897:21:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2647,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1897:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2650,
												"indexed": false,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1936:9:20",
												"nodeType": "VariableDeclaration",
												"scope": 2660,
												"src": "1928:17:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2649,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1928:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2652,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "1969:9:20",
												"nodeType": "VariableDeclaration",
												"scope": 2660,
												"src": "1955:23:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2651,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1955:5:20",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2654,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "2002:9:20",
												"nodeType": "VariableDeclaration",
												"scope": 2660,
												"src": "1988:23:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2653,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1988:5:20",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2656,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "2029:7:20",
												"nodeType": "VariableDeclaration",
												"scope": 2660,
												"src": "2021:15:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2655,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2021:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2658,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "2054:7:20",
												"nodeType": "VariableDeclaration",
												"scope": 2660,
												"src": "2046:15:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2657,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2046:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1887:180:20"
									},
									"src": "1874:194:20"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2661,
										"nodeType": "StructuredDocumentation",
										"src": "2074:523:20",
										"text": "@notice Emitted when a position's liquidity is removed\n @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\n @param owner The owner of the position for which liquidity is removed\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount The amount of liquidity to remove\n @param amount0 The amount of token0 withdrawn\n @param amount1 The amount of token1 withdrawn"
									},
									"eventSelector": "0c396cd989a39f4459b5fa1aed6a9a8dcdbc45908acfd67e028cd568da98982c",
									"id": 2675,
									"name": "Burn",
									"nameLocation": "2608:4:20",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2663,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2638:5:20",
												"nodeType": "VariableDeclaration",
												"scope": 2675,
												"src": "2622:21:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2662,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2622:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2665,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "2667:9:20",
												"nodeType": "VariableDeclaration",
												"scope": 2675,
												"src": "2653:23:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2664,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2653:5:20",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2667,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "2700:9:20",
												"nodeType": "VariableDeclaration",
												"scope": 2675,
												"src": "2686:23:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2666,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2686:5:20",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2669,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:20",
												"nodeType": "VariableDeclaration",
												"scope": 2675,
												"src": "2719:14:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2668,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2671,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "2751:7:20",
												"nodeType": "VariableDeclaration",
												"scope": 2675,
												"src": "2743:15:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2670,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2743:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2673,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "2776:7:20",
												"nodeType": "VariableDeclaration",
												"scope": 2675,
												"src": "2768:15:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2672,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2612:177:20"
									},
									"src": "2602:188:20"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2676,
										"nodeType": "StructuredDocumentation",
										"src": "2796:600:20",
										"text": "@notice Emitted by the pool for any swaps between token0 and token1\n @param sender The address that initiated the swap call, and that received the callback\n @param recipient The address that received the output of the swap\n @param amount0 The delta of the token0 balance of the pool\n @param amount1 The delta of the token1 balance of the pool\n @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\n @param liquidity The liquidity of the pool after the swap\n @param tick The log base 1.0001 of price of the pool after the swap"
									},
									"eventSelector": "c42079f94a6350d7e6235f29174924f928cc2ac818eb64fed8004e115fbcca67",
									"id": 2692,
									"name": "Swap",
									"nameLocation": "3407:4:20",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2678,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3437:6:20",
												"nodeType": "VariableDeclaration",
												"scope": 2692,
												"src": "3421:22:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2677,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3421:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2680,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3469:9:20",
												"nodeType": "VariableDeclaration",
												"scope": 2692,
												"src": "3453:25:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2679,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3453:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2682,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "3495:7:20",
												"nodeType": "VariableDeclaration",
												"scope": 2692,
												"src": "3488:14:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2681,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3488:6:20",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2684,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "3519:7:20",
												"nodeType": "VariableDeclaration",
												"scope": 2692,
												"src": "3512:14:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2683,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3512:6:20",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2686,
												"indexed": false,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "3544:12:20",
												"nodeType": "VariableDeclaration",
												"scope": 2692,
												"src": "3536:20:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2685,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "3536:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2688,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "3574:9:20",
												"nodeType": "VariableDeclaration",
												"scope": 2692,
												"src": "3566:17:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2687,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3566:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2690,
												"indexed": false,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "3599:4:20",
												"nodeType": "VariableDeclaration",
												"scope": 2692,
												"src": "3593:10:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2689,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3593:5:20",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3411:198:20"
									},
									"src": "3401:209:20"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2693,
										"nodeType": "StructuredDocumentation",
										"src": "3616:562:20",
										"text": "@notice Emitted by the pool for any flashes of token0/token1\n @param sender The address that initiated the swap call, and that received the callback\n @param recipient The address that received the tokens from flash\n @param amount0 The amount of token0 that was flashed\n @param amount1 The amount of token1 that was flashed\n @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\n @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee"
									},
									"eventSelector": "bdbdb71d7860376ba52b25a5028beea23581364a40522f6bcfb86bb1f2dca633",
									"id": 2707,
									"name": "Flash",
									"nameLocation": "4189:5:20",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2695,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4220:6:20",
												"nodeType": "VariableDeclaration",
												"scope": 2707,
												"src": "4204:22:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4204:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2697,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "4252:9:20",
												"nodeType": "VariableDeclaration",
												"scope": 2707,
												"src": "4236:25:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2696,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4236:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2699,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "4279:7:20",
												"nodeType": "VariableDeclaration",
												"scope": 2707,
												"src": "4271:15:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2698,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4271:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2701,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "4304:7:20",
												"nodeType": "VariableDeclaration",
												"scope": 2707,
												"src": "4296:15:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2700,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4296:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2703,
												"indexed": false,
												"mutability": "mutable",
												"name": "paid0",
												"nameLocation": "4329:5:20",
												"nodeType": "VariableDeclaration",
												"scope": 2707,
												"src": "4321:13:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2702,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4321:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2705,
												"indexed": false,
												"mutability": "mutable",
												"name": "paid1",
												"nameLocation": "4352:5:20",
												"nodeType": "VariableDeclaration",
												"scope": 2707,
												"src": "4344:13:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2704,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4344:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4194:169:20"
									},
									"src": "4183:181:20"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2708,
										"nodeType": "StructuredDocumentation",
										"src": "4370:451:20",
										"text": "@notice Emitted by the pool for increases to the number of observations that can be stored\n @dev observationCardinalityNext is not the observation cardinality until an observation is written at the index\n just before a mint/swap/burn.\n @param observationCardinalityNextOld The previous value of the next observation cardinality\n @param observationCardinalityNextNew The updated value of the next observation cardinality"
									},
									"eventSelector": "ac49e518f90a358f652e4400164f05a5d8f7e35e7747279bc3a93dbf584e125a",
									"id": 2714,
									"name": "IncreaseObservationCardinalityNext",
									"nameLocation": "4832:34:20",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2710,
												"indexed": false,
												"mutability": "mutable",
												"name": "observationCardinalityNextOld",
												"nameLocation": "4883:29:20",
												"nodeType": "VariableDeclaration",
												"scope": 2714,
												"src": "4876:36:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2709,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4876:6:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2712,
												"indexed": false,
												"mutability": "mutable",
												"name": "observationCardinalityNextNew",
												"nameLocation": "4929:29:20",
												"nodeType": "VariableDeclaration",
												"scope": 2714,
												"src": "4922:36:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2711,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4922:6:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4866:98:20"
									},
									"src": "4826:139:20"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2715,
										"nodeType": "StructuredDocumentation",
										"src": "4971:370:20",
										"text": "@notice Emitted when the protocol fee is changed by the pool\n @param feeProtocol0Old The previous value of the token0 protocol fee\n @param feeProtocol1Old The previous value of the token1 protocol fee\n @param feeProtocol0New The updated value of the token0 protocol fee\n @param feeProtocol1New The updated value of the token1 protocol fee"
									},
									"eventSelector": "973d8d92bb299f4af6ce49b52a8adb85ae46b9f214c4c4fc06ac77401237b133",
									"id": 2725,
									"name": "SetFeeProtocol",
									"nameLocation": "5352:14:20",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2717,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol0Old",
												"nameLocation": "5373:15:20",
												"nodeType": "VariableDeclaration",
												"scope": 2725,
												"src": "5367:21:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2716,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5367:5:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2719,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol1Old",
												"nameLocation": "5396:15:20",
												"nodeType": "VariableDeclaration",
												"scope": 2725,
												"src": "5390:21:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2718,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5390:5:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2721,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol0New",
												"nameLocation": "5419:15:20",
												"nodeType": "VariableDeclaration",
												"scope": 2725,
												"src": "5413:21:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2720,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5413:5:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2723,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol1New",
												"nameLocation": "5442:15:20",
												"nodeType": "VariableDeclaration",
												"scope": 2725,
												"src": "5436:21:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2722,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5436:5:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5366:92:20"
									},
									"src": "5346:113:20"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2726,
										"nodeType": "StructuredDocumentation",
										"src": "5465:384:20",
										"text": "@notice Emitted when the collected protocol fees are withdrawn by the factory owner\n @param sender The address that collects the protocol fees\n @param recipient The address that receives the collected protocol fees\n @param amount0 The amount of token0 protocol fees that is withdrawn\n @param amount0 The amount of token1 protocol fees that is withdrawn"
									},
									"eventSelector": "596b573906218d3411850b26a6b437d6c4522fdb43d2d2386263f86d50b8b151",
									"id": 2736,
									"name": "CollectProtocol",
									"nameLocation": "5860:15:20",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2728,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5892:6:20",
												"nodeType": "VariableDeclaration",
												"scope": 2736,
												"src": "5876:22:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2727,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5876:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2730,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "5916:9:20",
												"nodeType": "VariableDeclaration",
												"scope": 2736,
												"src": "5900:25:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2729,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5900:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2732,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "5935:7:20",
												"nodeType": "VariableDeclaration",
												"scope": 2736,
												"src": "5927:15:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2731,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5927:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2734,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "5952:7:20",
												"nodeType": "VariableDeclaration",
												"scope": 2736,
												"src": "5944:15:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2733,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5944:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5875:85:20"
									},
									"src": "5854:107:20"
								}
							],
							"scope": 2738,
							"src": "159:5804:20",
							"usedErrors": [],
							"usedEvents": [
								2628,
								2645,
								2660,
								2675,
								2692,
								2707,
								2714,
								2725,
								2736
							]
						}
					],
					"src": "45:5919:20"
				},
				"id": 20
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
				"ast": {
					"absolutePath": "contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
					"exportedSymbols": {
						"IUniswapV3PoolImmutables": [
							2777
						]
					},
					"id": 2778,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2739,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:21"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolImmutables",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2740,
								"nodeType": "StructuredDocumentation",
								"src": "71:153:21",
								"text": "@title Pool state that never changes\n @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values"
							},
							"fullyImplemented": false,
							"id": 2777,
							"linearizedBaseContracts": [
								2777
							],
							"name": "IUniswapV3PoolImmutables",
							"nameLocation": "234:24:21",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2741,
										"nodeType": "StructuredDocumentation",
										"src": "265:138:21",
										"text": "@notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\n @return The contract address"
									},
									"functionSelector": "c45a0155",
									"id": 2746,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nameLocation": "417:7:21",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2742,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "424:2:21"
									},
									"returnParameters": {
										"id": 2745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2744,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2746,
												"src": "450:7:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2743,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "450:7:21",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "449:9:21"
									},
									"scope": 2777,
									"src": "408:51:21",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2747,
										"nodeType": "StructuredDocumentation",
										"src": "465:113:21",
										"text": "@notice The first of the two tokens of the pool, sorted by address\n @return The token contract address"
									},
									"functionSelector": "0dfe1681",
									"id": 2752,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token0",
									"nameLocation": "592:6:21",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2748,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "598:2:21"
									},
									"returnParameters": {
										"id": 2751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2750,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2752,
												"src": "624:7:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2749,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "624:7:21",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "623:9:21"
									},
									"scope": 2777,
									"src": "583:50:21",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2753,
										"nodeType": "StructuredDocumentation",
										"src": "639:114:21",
										"text": "@notice The second of the two tokens of the pool, sorted by address\n @return The token contract address"
									},
									"functionSelector": "d21220a7",
									"id": 2758,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token1",
									"nameLocation": "767:6:21",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2754,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "773:2:21"
									},
									"returnParameters": {
										"id": 2757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2756,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2758,
												"src": "799:7:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2755,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "799:7:21",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "798:9:21"
									},
									"scope": 2777,
									"src": "758:50:21",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2759,
										"nodeType": "StructuredDocumentation",
										"src": "814:84:21",
										"text": "@notice The pool's fee in hundredths of a bip, i.e. 1e-6\n @return The fee"
									},
									"functionSelector": "ddca3f43",
									"id": 2764,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "fee",
									"nameLocation": "912:3:21",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2760,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "915:2:21"
									},
									"returnParameters": {
										"id": 2763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2762,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2764,
												"src": "941:6:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 2761,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "941:6:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "940:8:21"
									},
									"scope": 2777,
									"src": "903:46:21",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2765,
										"nodeType": "StructuredDocumentation",
										"src": "955:358:21",
										"text": "@notice The pool tick spacing\n @dev Ticks can only be used at multiples of this value, minimum of 1 and always positive\n e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ...\n This value is an int24 to avoid casting even though it is always positive.\n @return The tick spacing"
									},
									"functionSelector": "d0c93a7c",
									"id": 2770,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tickSpacing",
									"nameLocation": "1327:11:21",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2766,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1338:2:21"
									},
									"returnParameters": {
										"id": 2769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2768,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2770,
												"src": "1364:5:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2767,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1364:5:21",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1363:7:21"
									},
									"scope": 2777,
									"src": "1318:53:21",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2771,
										"nodeType": "StructuredDocumentation",
										"src": "1377:363:21",
										"text": "@notice The maximum amount of position liquidity that can use any tick in the range\n @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\n also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\n @return The max amount of liquidity per tick"
									},
									"functionSelector": "70cf754a",
									"id": 2776,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "maxLiquidityPerTick",
									"nameLocation": "1754:19:21",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2772,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:2:21"
									},
									"returnParameters": {
										"id": 2775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2774,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2776,
												"src": "1799:7:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2773,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1799:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1798:9:21"
									},
									"scope": 2777,
									"src": "1745:63:21",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2778,
							"src": "224:1586:21",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:1766:21"
				},
				"id": 21
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
				"ast": {
					"absolutePath": "contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
					"exportedSymbols": {
						"IUniswapV3PoolOwnerActions": [
							2803
						]
					},
					"id": 2804,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2779,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:22"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolOwnerActions",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2780,
								"nodeType": "StructuredDocumentation",
								"src": "71:116:22",
								"text": "@title Permissioned pool actions\n @notice Contains pool methods that may only be called by the factory owner"
							},
							"fullyImplemented": false,
							"id": 2803,
							"linearizedBaseContracts": [
								2803
							],
							"name": "IUniswapV3PoolOwnerActions",
							"nameLocation": "197:26:22",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2781,
										"nodeType": "StructuredDocumentation",
										"src": "230:205:22",
										"text": "@notice Set the denominator of the protocol's % share of the fees\n @param feeProtocol0 new protocol fee for token0 of the pool\n @param feeProtocol1 new protocol fee for token1 of the pool"
									},
									"functionSelector": "8206a4d1",
									"id": 2788,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeProtocol",
									"nameLocation": "449:14:22",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2783,
												"mutability": "mutable",
												"name": "feeProtocol0",
												"nameLocation": "470:12:22",
												"nodeType": "VariableDeclaration",
												"scope": 2788,
												"src": "464:18:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2782,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "464:5:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2785,
												"mutability": "mutable",
												"name": "feeProtocol1",
												"nameLocation": "490:12:22",
												"nodeType": "VariableDeclaration",
												"scope": 2788,
												"src": "484:18:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2784,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "484:5:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "463:40:22"
									},
									"returnParameters": {
										"id": 2787,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "512:0:22"
									},
									"scope": 2803,
									"src": "440:73:22",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2789,
										"nodeType": "StructuredDocumentation",
										"src": "519:483:22",
										"text": "@notice Collect the protocol fee accrued to the pool\n @param recipient The address to which collected protocol fees should be sent\n @param amount0Requested The maximum amount of token0 to send, can be 0 to collect fees in only token1\n @param amount1Requested The maximum amount of token1 to send, can be 0 to collect fees in only token0\n @return amount0 The protocol fee collected in token0\n @return amount1 The protocol fee collected in token1"
									},
									"functionSelector": "85b66729",
									"id": 2802,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "collectProtocol",
									"nameLocation": "1016:15:22",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2791,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1049:9:22",
												"nodeType": "VariableDeclaration",
												"scope": 2802,
												"src": "1041:17:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2790,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1041:7:22",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2793,
												"mutability": "mutable",
												"name": "amount0Requested",
												"nameLocation": "1076:16:22",
												"nodeType": "VariableDeclaration",
												"scope": 2802,
												"src": "1068:24:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2792,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1068:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2795,
												"mutability": "mutable",
												"name": "amount1Requested",
												"nameLocation": "1110:16:22",
												"nodeType": "VariableDeclaration",
												"scope": 2802,
												"src": "1102:24:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2794,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1031:101:22"
									},
									"returnParameters": {
										"id": 2801,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2798,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1159:7:22",
												"nodeType": "VariableDeclaration",
												"scope": 2802,
												"src": "1151:15:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2797,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1151:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2800,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1176:7:22",
												"nodeType": "VariableDeclaration",
												"scope": 2802,
												"src": "1168:15:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2799,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1168:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1150:34:22"
									},
									"scope": 2803,
									"src": "1007:178:22",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2804,
							"src": "187:1000:22",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:1143:22"
				},
				"id": 22
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
				"ast": {
					"absolutePath": "contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolState.sol",
					"exportedSymbols": {
						"IUniswapV3PoolState": [
							2911
						]
					},
					"id": 2912,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2805,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:23"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolState",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2806,
								"nodeType": "StructuredDocumentation",
								"src": "71:169:23",
								"text": "@title Pool state that can change\n @notice These methods compose the pool's state, and can change with any frequency including multiple times\n per transaction"
							},
							"fullyImplemented": false,
							"id": 2911,
							"linearizedBaseContracts": [
								2911
							],
							"name": "IUniswapV3PoolState",
							"nameLocation": "250:19:23",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2807,
										"nodeType": "StructuredDocumentation",
										"src": "276:1140:23",
										"text": "@notice The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas\n when accessed externally.\n @return sqrtPriceX96 The current price of the pool as a sqrt(token1/token0) Q64.96 value\n tick The current tick of the pool, i.e. according to the last tick transition that was run.\n This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick\n boundary.\n observationIndex The index of the last oracle observation that was written,\n observationCardinality The current maximum number of observations stored in the pool,\n observationCardinalityNext The next maximum number of observations, to be updated when the observation.\n feeProtocol The protocol fee for both tokens of the pool.\n Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0\n is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee.\n unlocked Whether the pool is currently locked to reentrancy"
									},
									"functionSelector": "3850c7bd",
									"id": 2824,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "slot0",
									"nameLocation": "1430:5:23",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2808,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1435:2:23"
									},
									"returnParameters": {
										"id": 2823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2810,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "1506:12:23",
												"nodeType": "VariableDeclaration",
												"scope": 2824,
												"src": "1498:20:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2809,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1498:7:23",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2812,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "1538:4:23",
												"nodeType": "VariableDeclaration",
												"scope": 2824,
												"src": "1532:10:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2811,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1532:5:23",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2814,
												"mutability": "mutable",
												"name": "observationIndex",
												"nameLocation": "1563:16:23",
												"nodeType": "VariableDeclaration",
												"scope": 2824,
												"src": "1556:23:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2813,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1556:6:23",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2816,
												"mutability": "mutable",
												"name": "observationCardinality",
												"nameLocation": "1600:22:23",
												"nodeType": "VariableDeclaration",
												"scope": 2824,
												"src": "1593:29:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2815,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1593:6:23",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2818,
												"mutability": "mutable",
												"name": "observationCardinalityNext",
												"nameLocation": "1643:26:23",
												"nodeType": "VariableDeclaration",
												"scope": 2824,
												"src": "1636:33:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2817,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1636:6:23",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2820,
												"mutability": "mutable",
												"name": "feeProtocol",
												"nameLocation": "1689:11:23",
												"nodeType": "VariableDeclaration",
												"scope": 2824,
												"src": "1683:17:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2819,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1683:5:23",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2822,
												"mutability": "mutable",
												"name": "unlocked",
												"nameLocation": "1719:8:23",
												"nodeType": "VariableDeclaration",
												"scope": 2824,
												"src": "1714:13:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2821,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1714:4:23",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1484:253:23"
									},
									"scope": 2911,
									"src": "1421:317:23",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2825,
										"nodeType": "StructuredDocumentation",
										"src": "1744:168:23",
										"text": "@notice The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\n @dev This value can overflow the uint256"
									},
									"functionSelector": "f3058399",
									"id": 2830,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeGrowthGlobal0X128",
									"nameLocation": "1926:20:23",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2826,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1946:2:23"
									},
									"returnParameters": {
										"id": 2829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2828,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2830,
												"src": "1972:7:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2827,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1972:7:23",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1971:9:23"
									},
									"scope": 2911,
									"src": "1917:64:23",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2831,
										"nodeType": "StructuredDocumentation",
										"src": "1987:168:23",
										"text": "@notice The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\n @dev This value can overflow the uint256"
									},
									"functionSelector": "46141319",
									"id": 2836,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeGrowthGlobal1X128",
									"nameLocation": "2169:20:23",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2832,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2189:2:23"
									},
									"returnParameters": {
										"id": 2835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2834,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2836,
												"src": "2215:7:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2833,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2215:7:23",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2214:9:23"
									},
									"scope": 2911,
									"src": "2160:64:23",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2837,
										"nodeType": "StructuredDocumentation",
										"src": "2230:147:23",
										"text": "@notice The amounts of token0 and token1 that are owed to the protocol\n @dev Protocol fees will never exceed uint128 max in either token"
									},
									"functionSelector": "1ad8b03b",
									"id": 2844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "protocolFees",
									"nameLocation": "2391:12:23",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2838,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2403:2:23"
									},
									"returnParameters": {
										"id": 2843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2840,
												"mutability": "mutable",
												"name": "token0",
												"nameLocation": "2437:6:23",
												"nodeType": "VariableDeclaration",
												"scope": 2844,
												"src": "2429:14:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2839,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2429:7:23",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2842,
												"mutability": "mutable",
												"name": "token1",
												"nameLocation": "2453:6:23",
												"nodeType": "VariableDeclaration",
												"scope": 2844,
												"src": "2445:14:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2841,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2445:7:23",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2428:32:23"
									},
									"scope": 2911,
									"src": "2382:79:23",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2845,
										"nodeType": "StructuredDocumentation",
										"src": "2467:150:23",
										"text": "@notice The currently in range liquidity available to the pool\n @dev This value has no relationship to the total liquidity across all ticks"
									},
									"functionSelector": "1a686502",
									"id": 2850,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "liquidity",
									"nameLocation": "2631:9:23",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2846,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2640:2:23"
									},
									"returnParameters": {
										"id": 2849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2848,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2850,
												"src": "2666:7:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2847,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2666:7:23",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2665:9:23"
									},
									"scope": 2911,
									"src": "2622:53:23",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2851,
										"nodeType": "StructuredDocumentation",
										"src": "2681:1244:23",
										"text": "@notice Look up information about a specific tick in the pool\n @param tick The tick to look up\n @return liquidityGross the total amount of position liquidity that uses the pool either as tick lower or\n tick upper,\n liquidityNet how much liquidity changes when the pool price crosses the tick,\n feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0,\n feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1,\n tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick\n secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick,\n secondsOutside the seconds spent on the other side of the tick from the current tick,\n initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false.\n Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0.\n In addition, these values are only relative and must be used only in comparison to previous snapshots for\n a specific position."
									},
									"functionSelector": "f30dba93",
									"id": 2872,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ticks",
									"nameLocation": "3939:5:23",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2853,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "3951:4:23",
												"nodeType": "VariableDeclaration",
												"scope": 2872,
												"src": "3945:10:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2852,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3945:5:23",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3944:12:23"
									},
									"returnParameters": {
										"id": 2871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2856,
												"mutability": "mutable",
												"name": "liquidityGross",
												"nameLocation": "4025:14:23",
												"nodeType": "VariableDeclaration",
												"scope": 2872,
												"src": "4017:22:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2855,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "4017:7:23",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2858,
												"mutability": "mutable",
												"name": "liquidityNet",
												"nameLocation": "4060:12:23",
												"nodeType": "VariableDeclaration",
												"scope": 2872,
												"src": "4053:19:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 2857,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "4053:6:23",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2860,
												"mutability": "mutable",
												"name": "feeGrowthOutside0X128",
												"nameLocation": "4094:21:23",
												"nodeType": "VariableDeclaration",
												"scope": 2872,
												"src": "4086:29:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2859,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4086:7:23",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2862,
												"mutability": "mutable",
												"name": "feeGrowthOutside1X128",
												"nameLocation": "4137:21:23",
												"nodeType": "VariableDeclaration",
												"scope": 2872,
												"src": "4129:29:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2861,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4129:7:23",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2864,
												"mutability": "mutable",
												"name": "tickCumulativeOutside",
												"nameLocation": "4178:21:23",
												"nodeType": "VariableDeclaration",
												"scope": 2872,
												"src": "4172:27:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 2863,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "4172:5:23",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2866,
												"mutability": "mutable",
												"name": "secondsPerLiquidityOutsideX128",
												"nameLocation": "4221:30:23",
												"nodeType": "VariableDeclaration",
												"scope": 2872,
												"src": "4213:38:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2865,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "4213:7:23",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2868,
												"mutability": "mutable",
												"name": "secondsOutside",
												"nameLocation": "4272:14:23",
												"nodeType": "VariableDeclaration",
												"scope": 2872,
												"src": "4265:21:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2867,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "4265:6:23",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2870,
												"mutability": "mutable",
												"name": "initialized",
												"nameLocation": "4305:11:23",
												"nodeType": "VariableDeclaration",
												"scope": 2872,
												"src": "4300:16:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2869,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4300:4:23",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:323:23"
									},
									"scope": 2911,
									"src": "3930:397:23",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2873,
										"nodeType": "StructuredDocumentation",
										"src": "4333:99:23",
										"text": "@notice Returns 256 packed tick initialized boolean values. See TickBitmap for more information"
									},
									"functionSelector": "5339c296",
									"id": 2880,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tickBitmap",
									"nameLocation": "4446:10:23",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2875,
												"mutability": "mutable",
												"name": "wordPosition",
												"nameLocation": "4463:12:23",
												"nodeType": "VariableDeclaration",
												"scope": 2880,
												"src": "4457:18:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int16",
													"typeString": "int16"
												},
												"typeName": {
													"id": 2874,
													"name": "int16",
													"nodeType": "ElementaryTypeName",
													"src": "4457:5:23",
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:20:23"
									},
									"returnParameters": {
										"id": 2879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2878,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2880,
												"src": "4500:7:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2877,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4500:7:23",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4499:9:23"
									},
									"scope": 2911,
									"src": "4437:72:23",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2881,
										"nodeType": "StructuredDocumentation",
										"src": "4515:700:23",
										"text": "@notice Returns the information about a position by the position's key\n @param key The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\n @return _liquidity The amount of liquidity in the position,\n Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke,\n Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke,\n Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke,\n Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"
									},
									"functionSelector": "514ea4bf",
									"id": 2896,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "positions",
									"nameLocation": "5229:9:23",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2883,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "5247:3:23",
												"nodeType": "VariableDeclaration",
												"scope": 2896,
												"src": "5239:11:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2882,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5239:7:23",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5238:13:23"
									},
									"returnParameters": {
										"id": 2895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2886,
												"mutability": "mutable",
												"name": "_liquidity",
												"nameLocation": "5320:10:23",
												"nodeType": "VariableDeclaration",
												"scope": 2896,
												"src": "5312:18:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2885,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5312:7:23",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2888,
												"mutability": "mutable",
												"name": "feeGrowthInside0LastX128",
												"nameLocation": "5352:24:23",
												"nodeType": "VariableDeclaration",
												"scope": 2896,
												"src": "5344:32:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2887,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5344:7:23",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2890,
												"mutability": "mutable",
												"name": "feeGrowthInside1LastX128",
												"nameLocation": "5398:24:23",
												"nodeType": "VariableDeclaration",
												"scope": 2896,
												"src": "5390:32:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2889,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5390:7:23",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2892,
												"mutability": "mutable",
												"name": "tokensOwed0",
												"nameLocation": "5444:11:23",
												"nodeType": "VariableDeclaration",
												"scope": 2896,
												"src": "5436:19:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2891,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5436:7:23",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2894,
												"mutability": "mutable",
												"name": "tokensOwed1",
												"nameLocation": "5477:11:23",
												"nodeType": "VariableDeclaration",
												"scope": 2896,
												"src": "5469:19:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2893,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5469:7:23",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5298:200:23"
									},
									"scope": 2911,
									"src": "5220:279:23",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2897,
										"nodeType": "StructuredDocumentation",
										"src": "5505:749:23",
										"text": "@notice Returns data about a specific observation index\n @param index The element of the observations array to fetch\n @dev You most likely want to use #observe() instead of this method to get an observation as of some amount of time\n ago, rather than at a specific index in the array.\n @return blockTimestamp The timestamp of the observation,\n Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp,\n Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp,\n Returns initialized whether the observation has been initialized and the values are safe to use"
									},
									"functionSelector": "252c09d7",
									"id": 2910,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "observations",
									"nameLocation": "6268:12:23",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2899,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "6289:5:23",
												"nodeType": "VariableDeclaration",
												"scope": 2910,
												"src": "6281:13:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2898,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6281:7:23",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6280:15:23"
									},
									"returnParameters": {
										"id": 2909,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2902,
												"mutability": "mutable",
												"name": "blockTimestamp",
												"nameLocation": "6363:14:23",
												"nodeType": "VariableDeclaration",
												"scope": 2910,
												"src": "6356:21:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2901,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "6356:6:23",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2904,
												"mutability": "mutable",
												"name": "tickCumulative",
												"nameLocation": "6397:14:23",
												"nodeType": "VariableDeclaration",
												"scope": 2910,
												"src": "6391:20:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 2903,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "6391:5:23",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2906,
												"mutability": "mutable",
												"name": "secondsPerLiquidityCumulativeX128",
												"nameLocation": "6433:33:23",
												"nodeType": "VariableDeclaration",
												"scope": 2910,
												"src": "6425:41:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2905,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "6425:7:23",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2908,
												"mutability": "mutable",
												"name": "initialized",
												"nameLocation": "6485:11:23",
												"nodeType": "VariableDeclaration",
												"scope": 2910,
												"src": "6480:16:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2907,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6480:4:23",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6342:164:23"
									},
									"scope": 2911,
									"src": "6259:248:23",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2912,
							"src": "240:6269:23",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:6465:23"
				},
				"id": 23
			}
		}
	}
}