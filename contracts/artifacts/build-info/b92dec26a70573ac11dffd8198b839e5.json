{
	"id": "b92dec26a70573ac11dffd8198b839e5",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/MainBot.sol": {
				"content": "// SPDX-License-Identifier: MITs\npragma solidity ^0.8.20;\n\nimport './chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol';\nimport './uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol';\nimport './uniswap/v3-periphery/contracts/interfaces/IUniswapV3Pool.sol';\nimport './uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol';\nimport './uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol';\nimport './uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol';\nimport './aave/protocol-v2/contracts/interfaces/ILendingPool.sol';\nimport './aave/protocol-v2/contracts/interfaces/ILendingPoolAddressesProvider.sol';\n \n\n\ninterface IERC20 {\n    function transfer(address recipient, uint256 amount) external returns (bool);\n    function balanceOf(address account) external view returns (uint256);\n    function approve(address spender, uint256 amount) external returns (bool);\n}\n\ncontract MainBot {\n    address public owner; \n    bool public tradingEnabled;\n    uint256 public initialDeposit;\n    uint256 public maticBalance;\n    uint256 public stablecoinBalance;\n    uint256 public profitThreshold;\n    uint256 public lossThreshold;\n    uint256 public gasCostMultiplier = 3;\n    uint256 public trailingStopLoss = 10;\n    uint256 public nextLogTime;\n    string public currentActivity = \"Initializing\";\n\n    address public POLToken = 0x22B21BedDef74FE62F031D2c5c8F7a9F8a4b304D; // POL on Polygon  [SWAP TOKEN HERE]\n    address public usdtToken = 0x1E4a5963aBFD975d8c9021ce480b42188849D41d; // USDT on Polygon\n    address public usdcToken = 0xA8CE8aee21bC2A48a5EF670afCc9274C7bbbC035; // USDC on Polygon\n    address public quickSwapRouter = 0x1E7E4c855520b2106320952A570a3e5E3E618101; // QuickSwap Router\n    address public priceFeedAddress = 0x5E988c11a4f92155C30D9fb69Ed75597f712B113; // Chainlink MATIC/USD\n\n    address public uniswapRouter = 0x1E7E4c855520b2106320952A570a3e5E3E618101; // Uniswap V3 SwapRouter\n    address public uniswapPositionManager = 0xC36442b4a4522E871399CD717aBDD847Ab11FE88; // Uniswap V3 PositionManager\n    address public aaveLendingPoolAddressesProvider = 0xd05e3E715d945B59290df0ae8eF85c1BdB684744; // AAVE LendingPoolAddressesProvider\n\n    mapping(string => address) public dexRouters;\n\n    event TradeExecuted(address indexed user, string tradeType, uint amountIn, uint amountOut, uint price);\n    event StopLossTriggered(uint currentBalance, uint threshold);\n    event CurrentActivity(string activity);\n    event TestEvent(string message);\n\n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Not the owner\");\n        _;\n    }\n\n    modifier whenTradingEnabled() {\n        require(tradingEnabled, \"Trading is disabled\");\n        _;\n    }\n\n    constructor() {\n        owner = msg.sender;\n        dexRouters[\"QuickSwap\"] = quickSwapRouter;\n        tradingEnabled = false;\n        profitThreshold = 110; // 10% profit\n        lossThreshold = 85; // 85% of initial deposit\n        nextLogTime = block.timestamp;\n    }\n\n    function setController(address controller) external onlyOwner {\n        owner = controller;\n    }\n\n    receive() external payable {\n        initialDeposit += msg.value;\n        maticBalance += (msg.value * 70) / 100;\n        stablecoinBalance += (msg.value * 30) / 100;\n    }\n\n    function adjustTimeframe(uint256 selectedTimeframe) external onlyOwner {\n        if (selectedTimeframe == 900) {\n            // Logic for fast and frequent trades\n        } else if (selectedTimeframe == 86400) {\n            // Logic for long-term trades\n        }\n        emit TradeExecuted(msg.sender, \"Timeframe adjusted\", selectedTimeframe, 0, getPrice());\n    }\n\n    function checkPrice() external view returns (uint256) {\n        uint256 price = getPrice();\n        return price;\n    }\n\n    function initiateTrade(string memory tradeType, uint256 amount) external onlyOwner {\n        emit TradeExecuted(msg.sender, tradeType, amount, 0, getPrice());\n    }\n\n    function convertAllToPOL() external onlyOwner {\n        emit TradeExecuted(msg.sender, \"convert to POL\", 0, 0, getPrice());\n    }\nfunction checkLiquidity(uint256 amountIn, address poolAddress) public view returns (bool sufficientLiquidity) {\n    IUniswapV3Pool pool = IUniswapV3Pool(poolAddress);\n    (uint160 sqrtPriceX96,,,,,,) = pool.slot0();\n    uint256 liquidity = pool.liquidity();\n\n    // Calculate expected output (simplified example, adjust based on your pool and requirements)\n    uint256 amountOut = calculateAmountOut(amountIn, sqrtPriceX96, liquidity);\n\n    uint256 slippage = (amountOut * 1) / 100;\n    sufficientLiquidity = (amountOut >= amountIn - slippage);\n}\n\nfunction calculateAmountOut(uint256 amountIn, uint160 sqrtPriceX96, uint256 liquidity) internal pure returns (uint256) {\n    // Example calculation, adjust as needed for your logic\n    return uint256(amountIn * sqrtPriceX96 / liquidity);\n}\n\n\n    function disableTrading() external onlyOwner {\n        tradingEnabled = false;\n    }\n\n    function withdrawInGwei(uint256 amountInGwei) external onlyOwner {\n        uint256 amountInWei = amountInGwei * 1 gwei;\n        require(address(this).balance >= amountInWei, \"Insufficient balance\");\n        payable(owner).transfer(amountInWei);\n    }\n\nfunction kill() external onlyOwner {\n    payable(msg.sender).transfer(address(this).balance);\n}\n\n    function logCurrentActivity() internal whenTradingEnabled {\n        if (block.timestamp >= nextLogTime) {\n            emit CurrentActivity(currentActivity);\n            nextLogTime = block.timestamp + 60; // 60 seconds interval\n        }\n    }\n\n    function calculateRSI(uint256[] memory prices) internal pure returns (uint256) {\n        uint256 gain = 0;\n        uint256 loss = 0;\n        for (uint256 i = 1; i < prices.length; i++) {\n            if (prices[i] > prices[i - 1]) {\n                gain += (prices[i] - prices[i - 1]);\n            } else {\n                loss += (prices[i - 1] - prices[i]);\n            }\n        }\n        uint256 rs = gain / loss;\n        uint256 rsi = 100 - (100 / (1 + rs));\n        return rsi;\n    }\n\n    function calculateMACD(uint256[] memory prices) internal pure returns (int256) {\n        uint256 emaShort = calculateEMA(prices, 12);\n        uint256 emaLong = calculateEMA(prices, 26);\n        int256 macd = int256(emaShort - emaLong);\n        return macd;\n    }\n\n    function calculateEMA(uint256[] memory prices, uint256 period) internal pure returns (uint256) {\n        uint256 multiplier = 2 / (period + 1);\n        uint256 ema = prices[0];\n        for (uint256 i = 1; i < prices.length; i++) {\n            ema = ((prices[i] - ema) * multiplier) + ema;\n        }\n        return ema;\n    }\n\n    function calculateFibonacci(uint256 high, uint256 low) internal pure returns (uint256[] memory) {\n        uint256[] memory fibLevels = new uint256[](11);\n        fibLevels[0] = low;\n        fibLevels[1] = low + (high - low) * 236 / 1000;\n        fibLevels[2] = low + (high - low) * 382 / 1000;\n        fibLevels[3] = low + (high - low) * 500 / 1000;\n        fibLevels[4] = low + (high - low) * 618 / 1000;\n        fibLevels[5] = low + (high - low) * 786 / 1000;\n        fibLevels[6] = high;\n        fibLevels[7] = high + (high - low) * 618 / 1000;\n        fibLevels[8] = high + (high - low) * 168 / 100;\n        fibLevels[9] = high + (high - low) * 618 / 1000;\n        fibLevels[10] = high + (high - low) * 236 / 100; \n        return fibLevels; } \n        function getPrice() internal view returns (uint256) { \n            AggregatorV3Interface priceFeed = AggregatorV3Interface(priceFeedAddress); \n            (, int price,,,) = priceFeed.latestRoundData(); return uint256(price * 10 ** 10); \n            // Converting to 18 decimal places \n            } \n            }\n\n "
			},
			"contracts/aave/protocol-v2/contracts/interfaces/ILendingPoolAddressesProvider.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\npragma solidity ^0.8.0;\n\n/**\n * @title LendingPoolAddressesProvider contract\n * @dev Main registry of addresses part of or connected to the protocol, including permissioned roles\n * - Acting also as factory of proxies and admin of those, so with right to change its implementations\n * - Owned by the Aave Governance\n * @author Aave\n **/\ninterface ILendingPoolAddressesProvider {\n  event MarketIdSet(string newMarketId);\n  event LendingPoolUpdated(address indexed newAddress);\n  event ConfigurationAdminUpdated(address indexed newAddress);\n  event EmergencyAdminUpdated(address indexed newAddress);\n  event LendingPoolConfiguratorUpdated(address indexed newAddress);\n  event LendingPoolCollateralManagerUpdated(address indexed newAddress);\n  event PriceOracleUpdated(address indexed newAddress);\n  event LendingRateOracleUpdated(address indexed newAddress);\n  event ProxyCreated(bytes32 id, address indexed newAddress);\n  event AddressSet(bytes32 id, address indexed newAddress, bool hasProxy);\n\n  function getMarketId() external view returns (string memory);\n\n  function setMarketId(string calldata marketId) external;\n\n  function setAddress(bytes32 id, address newAddress) external;\n\n  function setAddressAsProxy(bytes32 id, address impl) external;\n\n  function getAddress(bytes32 id) external view returns (address);\n\n  function getLendingPool() external view returns (address);\n\n  function setLendingPoolImpl(address pool) external;\n\n  function getLendingPoolConfigurator() external view returns (address);\n\n  function setLendingPoolConfiguratorImpl(address configurator) external;\n\n  function getLendingPoolCollateralManager() external view returns (address);\n\n  function setLendingPoolCollateralManager(address manager) external;\n\n  function getPoolAdmin() external view returns (address);\n\n  function setPoolAdmin(address admin) external;\n\n  function getEmergencyAdmin() external view returns (address);\n\n  function setEmergencyAdmin(address admin) external;\n\n  function getPriceOracle() external view returns (address);\n\n  function setPriceOracle(address priceOracle) external;\n\n  function getLendingRateOracle() external view returns (address);\n\n  function setLendingRateOracle(address lendingRateOracle) external;\n}\n"
			},
			"contracts/aave/protocol-v2/contracts/interfaces/ILendingPool.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\npragma solidity ^0.8.0;\npragma experimental ABIEncoderV2;\n\nimport {ILendingPoolAddressesProvider} from './ILendingPoolAddressesProvider.sol';\nimport {DataTypes} from './DataTypes.sol';\n\ninterface ILendingPool {\n  /**\n   * @dev Emitted on deposit()\n   * @param reserve The address of the underlying asset of the reserve\n   * @param user The address initiating the deposit\n   * @param onBehalfOf The beneficiary of the deposit, receiving the aTokens\n   * @param amount The amount deposited\n   * @param referral The referral code used\n   **/\n  event Deposit(\n    address indexed reserve,\n    address user,\n    address indexed onBehalfOf,\n    uint256 amount,\n    uint16 indexed referral\n  );\n\n  /**\n   * @dev Emitted on withdraw()\n   * @param reserve The address of the underlyng asset being withdrawn\n   * @param user The address initiating the withdrawal, owner of aTokens\n   * @param to Address that will receive the underlying\n   * @param amount The amount to be withdrawn\n   **/\n  event Withdraw(address indexed reserve, address indexed user, address indexed to, uint256 amount);\n\n  /**\n   * @dev Emitted on borrow() and flashLoan() when debt needs to be opened\n   * @param reserve The address of the underlying asset being borrowed\n   * @param user The address of the user initiating the borrow(), receiving the funds on borrow() or just\n   * initiator of the transaction on flashLoan()\n   * @param onBehalfOf The address that will be getting the debt\n   * @param amount The amount borrowed out\n   * @param borrowRateMode The rate mode: 1 for Stable, 2 for Variable\n   * @param borrowRate The numeric rate at which the user has borrowed\n   * @param referral The referral code used\n   **/\n  event Borrow(\n    address indexed reserve,\n    address user,\n    address indexed onBehalfOf,\n    uint256 amount,\n    uint256 borrowRateMode,\n    uint256 borrowRate,\n    uint16 indexed referral\n  );\n\n  /**\n   * @dev Emitted on repay()\n   * @param reserve The address of the underlying asset of the reserve\n   * @param user The beneficiary of the repayment, getting his debt reduced\n   * @param repayer The address of the user initiating the repay(), providing the funds\n   * @param amount The amount repaid\n   **/\n  event Repay(\n    address indexed reserve,\n    address indexed user,\n    address indexed repayer,\n    uint256 amount\n  );\n\n  /**\n   * @dev Emitted on swapBorrowRateMode()\n   * @param reserve The address of the underlying asset of the reserve\n   * @param user The address of the user swapping his rate mode\n   * @param rateMode The rate mode that the user wants to swap to\n   **/\n  event Swap(address indexed reserve, address indexed user, uint256 rateMode);\n\n  /**\n   * @dev Emitted on setUserUseReserveAsCollateral()\n   * @param reserve The address of the underlying asset of the reserve\n   * @param user The address of the user enabling the usage as collateral\n   **/\n  event ReserveUsedAsCollateralEnabled(address indexed reserve, address indexed user);\n\n  /**\n   * @dev Emitted on setUserUseReserveAsCollateral()\n   * @param reserve The address of the underlying asset of the reserve\n   * @param user The address of the user enabling the usage as collateral\n   **/\n  event ReserveUsedAsCollateralDisabled(address indexed reserve, address indexed user);\n\n  /**\n   * @dev Emitted on rebalanceStableBorrowRate()\n   * @param reserve The address of the underlying asset of the reserve\n   * @param user The address of the user for which the rebalance has been executed\n   **/\n  event RebalanceStableBorrowRate(address indexed reserve, address indexed user);\n\n  /**\n   * @dev Emitted on flashLoan()\n   * @param target The address of the flash loan receiver contract\n   * @param initiator The address initiating the flash loan\n   * @param asset The address of the asset being flash borrowed\n   * @param amount The amount flash borrowed\n   * @param premium The fee flash borrowed\n   * @param referralCode The referral code used\n   **/\n  event FlashLoan(\n    address indexed target,\n    address indexed initiator,\n    address indexed asset,\n    uint256 amount,\n    uint256 premium,\n    uint16 referralCode\n  );\n\n  /**\n   * @dev Emitted when the pause is triggered.\n   */\n  event Paused();\n\n  /**\n   * @dev Emitted when the pause is lifted.\n   */\n  event Unpaused();\n\n  /**\n   * @dev Emitted when a borrower is liquidated. This event is emitted by the LendingPool via\n   * LendingPoolCollateral manager using a DELEGATECALL\n   * This allows to have the events in the generated ABI for LendingPool.\n   * @param collateralAsset The address of the underlying asset used as collateral, to receive as result of the liquidation\n   * @param debtAsset The address of the underlying borrowed asset to be repaid with the liquidation\n   * @param user The address of the borrower getting liquidated\n   * @param debtToCover The debt amount of borrowed `asset` the liquidator wants to cover\n   * @param liquidatedCollateralAmount The amount of collateral received by the liiquidator\n   * @param liquidator The address of the liquidator\n   * @param receiveAToken `true` if the liquidators wants to receive the collateral aTokens, `false` if he wants\n   * to receive the underlying collateral asset directly\n   **/\n  event LiquidationCall(\n    address indexed collateralAsset,\n    address indexed debtAsset,\n    address indexed user,\n    uint256 debtToCover,\n    uint256 liquidatedCollateralAmount,\n    address liquidator,\n    bool receiveAToken\n  );\n\n  /**\n   * @dev Emitted when the state of a reserve is updated. NOTE: This event is actually declared\n   * in the ReserveLogic library and emitted in the updateInterestRates() function. Since the function is internal,\n   * the event will actually be fired by the LendingPool contract. The event is therefore replicated here so it\n   * gets added to the LendingPool ABI\n   * @param reserve The address of the underlying asset of the reserve\n   * @param liquidityRate The new liquidity rate\n   * @param stableBorrowRate The new stable borrow rate\n   * @param variableBorrowRate The new variable borrow rate\n   * @param liquidityIndex The new liquidity index\n   * @param variableBorrowIndex The new variable borrow index\n   **/\n  event ReserveDataUpdated(\n    address indexed reserve,\n    uint256 liquidityRate,\n    uint256 stableBorrowRate,\n    uint256 variableBorrowRate,\n    uint256 liquidityIndex,\n    uint256 variableBorrowIndex\n  );\n\n  /**\n   * @dev Deposits an `amount` of underlying asset into the reserve, receiving in return overlying aTokens.\n   * - E.g. User deposits 100 USDC and gets in return 100 aUSDC\n   * @param asset The address of the underlying asset to deposit\n   * @param amount The amount to be deposited\n   * @param onBehalfOf The address that will receive the aTokens, same as msg.sender if the user\n   *   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens\n   *   is a different wallet\n   * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   *   0 if the action is executed directly by the user, without any middle-man\n   **/\n  function deposit(\n    address asset,\n    uint256 amount,\n    address onBehalfOf,\n    uint16 referralCode\n  ) external;\n\n  /**\n   * @dev Withdraws an `amount` of underlying asset from the reserve, burning the equivalent aTokens owned\n   * E.g. User has 100 aUSDC, calls withdraw() and receives 100 USDC, burning the 100 aUSDC\n   * @param asset The address of the underlying asset to withdraw\n   * @param amount The underlying amount to be withdrawn\n   *   - Send the value type(uint256).max in order to withdraw the whole aToken balance\n   * @param to Address that will receive the underlying, same as msg.sender if the user\n   *   wants to receive it on his own wallet, or a different address if the beneficiary is a\n   *   different wallet\n   * @return The final amount withdrawn\n   **/\n  function withdraw(\n    address asset,\n    uint256 amount,\n    address to\n  ) external returns (uint256);\n\n  /**\n   * @dev Allows users to borrow a specific `amount` of the reserve underlying asset, provided that the borrower\n   * already deposited enough collateral, or he was given enough allowance by a credit delegator on the\n   * corresponding debt token (StableDebtToken or VariableDebtToken)\n   * - E.g. User borrows 100 USDC passing as `onBehalfOf` his own address, receiving the 100 USDC in his wallet\n   *   and 100 stable/variable debt tokens, depending on the `interestRateMode`\n   * @param asset The address of the underlying asset to borrow\n   * @param amount The amount to be borrowed\n   * @param interestRateMode The interest rate mode at which the user wants to borrow: 1 for Stable, 2 for Variable\n   * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   *   0 if the action is executed directly by the user, without any middle-man\n   * @param onBehalfOf Address of the user who will receive the debt. Should be the address of the borrower itself\n   * calling the function if he wants to borrow against his own collateral, or the address of the credit delegator\n   * if he has been given credit delegation allowance\n   **/\n  function borrow(\n    address asset,\n    uint256 amount,\n    uint256 interestRateMode,\n    uint16 referralCode,\n    address onBehalfOf\n  ) external;\n\n  /**\n   * @notice Repays a borrowed `amount` on a specific reserve, burning the equivalent debt tokens owned\n   * - E.g. User repays 100 USDC, burning 100 variable/stable debt tokens of the `onBehalfOf` address\n   * @param asset The address of the borrowed underlying asset previously borrowed\n   * @param amount The amount to repay\n   * - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\n   * @param rateMode The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\n   * @param onBehalfOf Address of the user who will get his debt reduced/removed. Should be the address of the\n   * user calling the function if he wants to reduce/remove his own debt, or the address of any other\n   * other borrower whose debt should be removed\n   * @return The final amount repaid\n   **/\n  function repay(\n    address asset,\n    uint256 amount,\n    uint256 rateMode,\n    address onBehalfOf\n  ) external returns (uint256);\n\n  /**\n   * @dev Allows a borrower to swap his debt between stable and variable mode, or viceversa\n   * @param asset The address of the underlying asset borrowed\n   * @param rateMode The rate mode that the user wants to swap to\n   **/\n  function swapBorrowRateMode(address asset, uint256 rateMode) external;\n\n  /**\n   * @dev Rebalances the stable interest rate of a user to the current stable rate defined on the reserve.\n   * - Users can be rebalanced if the following conditions are satisfied:\n   *     1. Usage ratio is above 95%\n   *     2. the current deposit APY is below REBALANCE_UP_THRESHOLD * maxVariableBorrowRate, which means that too much has been\n   *        borrowed at a stable rate and depositors are not earning enough\n   * @param asset The address of the underlying asset borrowed\n   * @param user The address of the user to be rebalanced\n   **/\n  function rebalanceStableBorrowRate(address asset, address user) external;\n\n  /**\n   * @dev Allows depositors to enable/disable a specific deposited asset as collateral\n   * @param asset The address of the underlying asset deposited\n   * @param useAsCollateral `true` if the user wants to use the deposit as collateral, `false` otherwise\n   **/\n  function setUserUseReserveAsCollateral(address asset, bool useAsCollateral) external;\n\n  /**\n   * @dev Function to liquidate a non-healthy position collateral-wise, with Health Factor below 1\n   * - The caller (liquidator) covers `debtToCover` amount of debt of the user getting liquidated, and receives\n   *   a proportionally amount of the `collateralAsset` plus a bonus to cover market risk\n   * @param collateralAsset The address of the underlying asset used as collateral, to receive as result of the liquidation\n   * @param debtAsset The address of the underlying borrowed asset to be repaid with the liquidation\n   * @param user The address of the borrower getting liquidated\n   * @param debtToCover The debt amount of borrowed `asset` the liquidator wants to cover\n   * @param receiveAToken `true` if the liquidators wants to receive the collateral aTokens, `false` if he wants\n   * to receive the underlying collateral asset directly\n   **/\n  function liquidationCall(\n    address collateralAsset,\n    address debtAsset,\n    address user,\n    uint256 debtToCover,\n    bool receiveAToken\n  ) external;\n\n  /**\n   * @dev Allows smartcontracts to access the liquidity of the pool within one transaction,\n   * as long as the amount taken plus a fee is returned.\n   * IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept into consideration.\n   * For further details please visit https://developers.aave.com\n   * @param receiverAddress The address of the contract receiving the funds, implementing the IFlashLoanReceiver interface\n   * @param assets The addresses of the assets being flash-borrowed\n   * @param amounts The amounts amounts being flash-borrowed\n   * @param modes Types of the debt to open if the flash loan is not returned:\n   *   0 -> Don't open any debt, just revert if funds can't be transferred from the receiver\n   *   1 -> Open debt at stable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\n   *   2 -> Open debt at variable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\n   * @param onBehalfOf The address  that will receive the debt in the case of using on `modes` 1 or 2\n   * @param params Variadic packed params to pass to the receiver as extra information\n   * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   *   0 if the action is executed directly by the user, without any middle-man\n   **/\n  function flashLoan(\n    address receiverAddress,\n    address[] calldata assets,\n    uint256[] calldata amounts,\n    uint256[] calldata modes,\n    address onBehalfOf,\n    bytes calldata params,\n    uint16 referralCode\n  ) external;\n\n  /**\n   * @dev Returns the user account data across all the reserves\n   * @param user The address of the user\n   * @return totalCollateralETH the total collateral in ETH of the user\n   * @return totalDebtETH the total debt in ETH of the user\n   * @return availableBorrowsETH the borrowing power left of the user\n   * @return currentLiquidationThreshold the liquidation threshold of the user\n   * @return ltv the loan to value of the user\n   * @return healthFactor the current health factor of the user\n   **/\n  function getUserAccountData(address user)\n    external\n    view\n    returns (\n      uint256 totalCollateralETH,\n      uint256 totalDebtETH,\n      uint256 availableBorrowsETH,\n      uint256 currentLiquidationThreshold,\n      uint256 ltv,\n      uint256 healthFactor\n    );\n\n  function initReserve(\n    address reserve,\n    address aTokenAddress,\n    address stableDebtAddress,\n    address variableDebtAddress,\n    address interestRateStrategyAddress\n  ) external;\n\n  function setReserveInterestRateStrategyAddress(address reserve, address rateStrategyAddress)\n    external;\n\n  function setConfiguration(address reserve, uint256 configuration) external;\n\n  /**\n   * @dev Returns the configuration of the reserve\n   * @param asset The address of the underlying asset of the reserve\n   * @return The configuration of the reserve\n   **/\n  function getConfiguration(address asset)\n    external\n    view\n    returns (DataTypes.ReserveConfigurationMap memory);\n\n  /**\n   * @dev Returns the configuration of the user across all the reserves\n   * @param user The user address\n   * @return The configuration of the user\n   **/\n  function getUserConfiguration(address user)\n    external\n    view\n    returns (DataTypes.UserConfigurationMap memory);\n\n  /**\n   * @dev Returns the normalized income normalized income of the reserve\n   * @param asset The address of the underlying asset of the reserve\n   * @return The reserve's normalized income\n   */\n  function getReserveNormalizedIncome(address asset) external view returns (uint256);\n\n  /**\n   * @dev Returns the normalized variable debt per unit of asset\n   * @param asset The address of the underlying asset of the reserve\n   * @return The reserve normalized variable debt\n   */\n  function getReserveNormalizedVariableDebt(address asset) external view returns (uint256);\n\n  /**\n   * @dev Returns the state and configuration of the reserve\n   * @param asset The address of the underlying asset of the reserve\n   * @return The state of the reserve\n   **/\n  function getReserveData(address asset) external view returns (DataTypes.ReserveData memory);\n\n  function finalizeTransfer(\n    address asset,\n    address from,\n    address to,\n    uint256 amount,\n    uint256 balanceFromAfter,\n    uint256 balanceToBefore\n  ) external;\n\n  function getReservesList() external view returns (address[] memory);\n\n  function getAddressesProvider() external view returns (ILendingPoolAddressesProvider);\n\n  function setPause(bool val) external;\n\n  function paused() external view returns (bool);\n}\n"
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity ^0.8.0;\npragma abicoder v2;\n\nimport '../../../../openzeppelin/contracts/token/ERC721/IERC721Metadata.sol';\nimport '../../../../openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol';\n\nimport './IPoolInitializer.sol';\nimport './IERC721Permit.sol';\nimport './IPeripheryPayments.sol';\nimport './IPeripheryImmutableState.sol';\n\n/// @title Non-fungible token for positions\n/// @notice Wraps Uniswap V3 positions in a non-fungible token interface which allows for them to be transferred\n/// and authorized.\ninterface INonfungiblePositionManager is\n    IPoolInitializer,\n    IPeripheryPayments,\n    IPeripheryImmutableState,\n    IERC721Metadata,\n    IERC721Enumerable,\n    IERC721Permit\n{\n    /// @notice Emitted when liquidity is increased for a position NFT\n    /// @dev Also emitted when a token is minted\n    /// @param tokenId The ID of the token for which liquidity was increased\n    /// @param liquidity The amount by which liquidity for the NFT position was increased\n    /// @param amount0 The amount of token0 that was paid for the increase in liquidity\n    /// @param amount1 The amount of token1 that was paid for the increase in liquidity\n    event IncreaseLiquidity(uint256 indexed tokenId, uint128 liquidity, uint256 amount0, uint256 amount1);\n    /// @notice Emitted when liquidity is decreased for a position NFT\n    /// @param tokenId The ID of the token for which liquidity was decreased\n    /// @param liquidity The amount by which liquidity for the NFT position was decreased\n    /// @param amount0 The amount of token0 that was accounted for the decrease in liquidity\n    /// @param amount1 The amount of token1 that was accounted for the decrease in liquidity\n    event DecreaseLiquidity(uint256 indexed tokenId, uint128 liquidity, uint256 amount0, uint256 amount1);\n    /// @notice Emitted when tokens are collected for a position NFT\n    /// @dev The amounts reported may not be exactly equivalent to the amounts transferred, due to rounding behavior\n    /// @param tokenId The ID of the token for which underlying tokens were collected\n    /// @param recipient The address of the account that received the collected tokens\n    /// @param amount0 The amount of token0 owed to the position that was collected\n    /// @param amount1 The amount of token1 owed to the position that was collected\n    event Collect(uint256 indexed tokenId, address recipient, uint256 amount0, uint256 amount1);\n\n    /// @notice Returns the position information associated with a given token ID.\n    /// @dev Throws if the token ID is not valid.\n    /// @param tokenId The ID of the token that represents the position\n    /// @return nonce The nonce for permits\n    /// @return operator The address that is approved for spending\n    /// @return token0 The address of the token0 for a specific pool\n    /// @return token1 The address of the token1 for a specific pool\n    /// @return fee The fee associated with the pool\n    /// @return tickLower The lower end of the tick range for the position\n    /// @return tickUpper The higher end of the tick range for the position\n    /// @return liquidity The liquidity of the position\n    /// @return feeGrowthInside0LastX128 The fee growth of token0 as of the last action on the individual position\n    /// @return feeGrowthInside1LastX128 The fee growth of token1 as of the last action on the individual position\n    /// @return tokensOwed0 The uncollected amount of token0 owed to the position as of the last computation\n    /// @return tokensOwed1 The uncollected amount of token1 owed to the position as of the last computation\n    function positions(uint256 tokenId)\n        external\n        view\n        returns (\n            uint96 nonce,\n            address operator,\n            address token0,\n            address token1,\n            uint24 fee,\n            int24 tickLower,\n            int24 tickUpper,\n            uint128 liquidity,\n            uint256 feeGrowthInside0LastX128,\n            uint256 feeGrowthInside1LastX128,\n            uint128 tokensOwed0,\n            uint128 tokensOwed1\n        );\n\n    struct MintParams {\n        address token0;\n        address token1;\n        uint24 fee;\n        int24 tickLower;\n        int24 tickUpper;\n        uint256 amount0Desired;\n        uint256 amount1Desired;\n        uint256 amount0Min;\n        uint256 amount1Min;\n        address recipient;\n        uint256 deadline;\n    }\n\n    /// @notice Creates a new position wrapped in a NFT\n    /// @dev Call this when the pool does exist and is initialized. Note that if the pool is created but not initialized\n    /// a method does not exist, i.e. the pool is assumed to be initialized.\n    /// @param params The params necessary to mint a position, encoded as `MintParams` in calldata\n    /// @return tokenId The ID of the token that represents the minted position\n    /// @return liquidity The amount of liquidity for this position\n    /// @return amount0 The amount of token0\n    /// @return amount1 The amount of token1\n    function mint(MintParams calldata params)\n        external\n        payable\n        returns (\n            uint256 tokenId,\n            uint128 liquidity,\n            uint256 amount0,\n            uint256 amount1\n        );\n\n    struct IncreaseLiquidityParams {\n        uint256 tokenId;\n        uint256 amount0Desired;\n        uint256 amount1Desired;\n        uint256 amount0Min;\n        uint256 amount1Min;\n        uint256 deadline;\n    }\n\n    /// @notice Increases the amount of liquidity in a position, with tokens paid by the `msg.sender`\n    /// @param params tokenId The ID of the token for which liquidity is being increased,\n    /// amount0Desired The desired amount of token0 to be spent,\n    /// amount1Desired The desired amount of token1 to be spent,\n    /// amount0Min The minimum amount of token0 to spend, which serves as a slippage check,\n    /// amount1Min The minimum amount of token1 to spend, which serves as a slippage check,\n    /// deadline The time by which the transaction must be included to effect the change\n    /// @return liquidity The new liquidity amount as a result of the increase\n    /// @return amount0 The amount of token0 to acheive resulting liquidity\n    /// @return amount1 The amount of token1 to acheive resulting liquidity\n    function increaseLiquidity(IncreaseLiquidityParams calldata params)\n        external\n        payable\n        returns (\n            uint128 liquidity,\n            uint256 amount0,\n            uint256 amount1\n        );\n\n    struct DecreaseLiquidityParams {\n        uint256 tokenId;\n        uint128 liquidity;\n        uint256 amount0Min;\n        uint256 amount1Min;\n        uint256 deadline;\n    }\n\n    /// @notice Decreases the amount of liquidity in a position and accounts it to the position\n    /// @param params tokenId The ID of the token for which liquidity is being decreased,\n    /// amount The amount by which liquidity will be decreased,\n    /// amount0Min The minimum amount of token0 that should be accounted for the burned liquidity,\n    /// amount1Min The minimum amount of token1 that should be accounted for the burned liquidity,\n    /// deadline The time by which the transaction must be included to effect the change\n    /// @return amount0 The amount of token0 accounted to the position's tokens owed\n    /// @return amount1 The amount of token1 accounted to the position's tokens owed\n    function decreaseLiquidity(DecreaseLiquidityParams calldata params)\n        external\n        payable\n        returns (uint256 amount0, uint256 amount1);\n\n    struct CollectParams {\n        uint256 tokenId;\n        address recipient;\n        uint128 amount0Max;\n        uint128 amount1Max;\n    }\n\n    /// @notice Collects up to a maximum amount of fees owed to a specific position to the recipient\n    /// @param params tokenId The ID of the NFT for which tokens are being collected,\n    /// recipient The account that should receive the tokens,\n    /// amount0Max The maximum amount of token0 to collect,\n    /// amount1Max The maximum amount of token1 to collect\n    /// @return amount0 The amount of fees collected in token0\n    /// @return amount1 The amount of fees collected in token1\n    function collect(CollectParams calldata params) external payable returns (uint256 amount0, uint256 amount1);\n\n    /// @notice Burns a token ID, which deletes it from the NFT contract. The token must have 0 liquidity and all tokens\n    /// must be collected first.\n    /// @param tokenId The ID of the token that is being burned\n    function burn(uint256 tokenId) external payable;\n}\n"
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.7.5;\n\n/// @title Periphery Payments\n/// @notice Functions to ease deposits and withdrawals of ETH\ninterface IPeripheryPayments {\n    /// @notice Unwraps the contract's WETH9 balance and sends it to recipient as ETH.\n    /// @dev The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.\n    /// @param amountMinimum The minimum amount of WETH9 to unwrap\n    /// @param recipient The address receiving ETH\n    function unwrapWETH9(uint256 amountMinimum, address recipient) external payable;\n\n    /// @notice Refunds any ETH balance held by this contract to the `msg.sender`\n    /// @dev Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps\n    /// that use ether for the input amount\n    function refundETH() external payable;\n\n    /// @notice Transfers the full amount of a token held by this contract to recipient\n    /// @dev The amountMinimum parameter prevents malicious contracts from stealing the token from users\n    /// @param token The contract address of the token which will be transferred to `recipient`\n    /// @param amountMinimum The minimum amount of token required for a transfer\n    /// @param recipient The destination address of the token\n    function sweepToken(\n        address token,\n        uint256 amountMinimum,\n        address recipient\n    ) external payable;\n}\n"
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Immutable state\n/// @notice Functions that return immutable state of the router\ninterface IPeripheryImmutableState {\n    /// @return Returns the address of the Uniswap V3 factory\n    function factory() external view returns (address);\n\n    /// @return Returns the address of WETH9\n    function WETH9() external view returns (address);\n}\n"
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/IUniswapV3Pool.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\nimport './pool/IUniswapV3PoolImmutables.sol';\nimport './pool/IUniswapV3PoolState.sol';\nimport './pool/IUniswapV3PoolDerivedState.sol';\nimport './pool/IUniswapV3PoolActions.sol';\nimport './pool/IUniswapV3PoolOwnerActions.sol';\nimport './pool/IUniswapV3PoolEvents.sol';\n\n/// @title The interface for a Uniswap V3 Pool\n/// @notice A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform\n/// to the ERC20 specification\n/// @dev The pool interface is broken up into many smaller pieces\ninterface IUniswapV3Pool is\n    IUniswapV3PoolImmutables,\n    IUniswapV3PoolState,\n    IUniswapV3PoolDerivedState,\n    IUniswapV3PoolActions,\n    IUniswapV3PoolOwnerActions,\n    IUniswapV3PoolEvents\n{\n\n}\n"
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity ^0.8.0;\npragma abicoder v2;\n\nimport './callback/IUniswapV3SwapCallback.sol';\n\n/// @title Router token swapping functionality\n/// @notice Functions for swapping tokens via Uniswap V3\ninterface ISwapRouter is IUniswapV3SwapCallback {\n    struct ExactInputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 deadline;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another token\n    /// @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInputSingle(ExactInputSingleParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactInputParams {\n        bytes path;\n        address recipient;\n        uint256 deadline;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInput(ExactInputParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactOutputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 deadline;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another token\n    /// @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutputSingle(ExactOutputSingleParams calldata params) external payable returns (uint256 amountIn);\n\n    struct ExactOutputParams {\n        bytes path;\n        address recipient;\n        uint256 deadline;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutput(ExactOutputParams calldata params) external payable returns (uint256 amountIn);\n}\n"
			},
			"contracts/chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n// solhint-disable-next-line interface-starts-with-i\ninterface AggregatorV3Interface {\n  function decimals() external view returns (uint8);\n\n  function description() external view returns (string memory);\n\n  function version() external view returns (uint256);\n\n  function getRoundData(\n    uint80 _roundId\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n\n  function latestRoundData()\n    external\n    view\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n}\n"
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Events emitted by a pool\n/// @notice Contains all events emitted by the pool\ninterface IUniswapV3PoolEvents {\n    /// @notice Emitted exactly once by a pool when #initialize is first called on the pool\n    /// @dev Mint/Burn/Swap cannot be emitted by the pool before Initialize\n    /// @param sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96\n    /// @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\n    event Initialize(uint160 sqrtPriceX96, int24 tick);\n\n    /// @notice Emitted when liquidity is minted for a given position\n    /// @param sender The address that minted the liquidity\n    /// @param owner The owner of the position and recipient of any minted liquidity\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount The amount of liquidity minted to the position range\n    /// @param amount0 How much token0 was required for the minted liquidity\n    /// @param amount1 How much token1 was required for the minted liquidity\n    event Mint(\n        address sender,\n        address indexed owner,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount,\n        uint256 amount0,\n        uint256 amount1\n    );\n\n    /// @notice Emitted when fees are collected by the owner of a position\n    /// @dev Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\n    /// @param owner The owner of the position for which fees are collected\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount0 The amount of token0 fees collected\n    /// @param amount1 The amount of token1 fees collected\n    event Collect(\n        address indexed owner,\n        address recipient,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount0,\n        uint128 amount1\n    );\n\n    /// @notice Emitted when a position's liquidity is removed\n    /// @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\n    /// @param owner The owner of the position for which liquidity is removed\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount The amount of liquidity to remove\n    /// @param amount0 The amount of token0 withdrawn\n    /// @param amount1 The amount of token1 withdrawn\n    event Burn(\n        address indexed owner,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount,\n        uint256 amount0,\n        uint256 amount1\n    );\n\n    /// @notice Emitted by the pool for any swaps between token0 and token1\n    /// @param sender The address that initiated the swap call, and that received the callback\n    /// @param recipient The address that received the output of the swap\n    /// @param amount0 The delta of the token0 balance of the pool\n    /// @param amount1 The delta of the token1 balance of the pool\n    /// @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\n    /// @param liquidity The liquidity of the pool after the swap\n    /// @param tick The log base 1.0001 of price of the pool after the swap\n    event Swap(\n        address indexed sender,\n        address indexed recipient,\n        int256 amount0,\n        int256 amount1,\n        uint160 sqrtPriceX96,\n        uint128 liquidity,\n        int24 tick\n    );\n\n    /// @notice Emitted by the pool for any flashes of token0/token1\n    /// @param sender The address that initiated the swap call, and that received the callback\n    /// @param recipient The address that received the tokens from flash\n    /// @param amount0 The amount of token0 that was flashed\n    /// @param amount1 The amount of token1 that was flashed\n    /// @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\n    /// @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\n    event Flash(\n        address indexed sender,\n        address indexed recipient,\n        uint256 amount0,\n        uint256 amount1,\n        uint256 paid0,\n        uint256 paid1\n    );\n\n    /// @notice Emitted by the pool for increases to the number of observations that can be stored\n    /// @dev observationCardinalityNext is not the observation cardinality until an observation is written at the index\n    /// just before a mint/swap/burn.\n    /// @param observationCardinalityNextOld The previous value of the next observation cardinality\n    /// @param observationCardinalityNextNew The updated value of the next observation cardinality\n    event IncreaseObservationCardinalityNext(\n        uint16 observationCardinalityNextOld,\n        uint16 observationCardinalityNextNew\n    );\n\n    /// @notice Emitted when the protocol fee is changed by the pool\n    /// @param feeProtocol0Old The previous value of the token0 protocol fee\n    /// @param feeProtocol1Old The previous value of the token1 protocol fee\n    /// @param feeProtocol0New The updated value of the token0 protocol fee\n    /// @param feeProtocol1New The updated value of the token1 protocol fee\n    event SetFeeProtocol(uint8 feeProtocol0Old, uint8 feeProtocol1Old, uint8 feeProtocol0New, uint8 feeProtocol1New);\n\n    /// @notice Emitted when the collected protocol fees are withdrawn by the factory owner\n    /// @param sender The address that collects the protocol fees\n    /// @param recipient The address that receives the collected protocol fees\n    /// @param amount0 The amount of token0 protocol fees that is withdrawn\n    /// @param amount0 The amount of token1 protocol fees that is withdrawn\n    event CollectProtocol(address indexed sender, address indexed recipient, uint128 amount0, uint128 amount1);\n}\n"
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Permissioned pool actions\n/// @notice Contains pool methods that may only be called by the factory owner\ninterface IUniswapV3PoolOwnerActions {\n    /// @notice Set the denominator of the protocol's % share of the fees\n    /// @param feeProtocol0 new protocol fee for token0 of the pool\n    /// @param feeProtocol1 new protocol fee for token1 of the pool\n    function setFeeProtocol(uint8 feeProtocol0, uint8 feeProtocol1) external;\n\n    /// @notice Collect the protocol fee accrued to the pool\n    /// @param recipient The address to which collected protocol fees should be sent\n    /// @param amount0Requested The maximum amount of token0 to send, can be 0 to collect fees in only token1\n    /// @param amount1Requested The maximum amount of token1 to send, can be 0 to collect fees in only token0\n    /// @return amount0 The protocol fee collected in token0\n    /// @return amount1 The protocol fee collected in token1\n    function collectProtocol(\n        address recipient,\n        uint128 amount0Requested,\n        uint128 amount1Requested\n    ) external returns (uint128 amount0, uint128 amount1);\n}\n"
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Permissionless pool actions\n/// @notice Contains pool methods that can be called by anyone\ninterface IUniswapV3PoolActions {\n    /// @notice Sets the initial price for the pool\n    /// @dev Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\n    /// @param sqrtPriceX96 the initial sqrt price of the pool as a Q64.96\n    function initialize(uint160 sqrtPriceX96) external;\n\n    /// @notice Adds liquidity for the given recipient/tickLower/tickUpper position\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback\n    /// in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends\n    /// on tickLower, tickUpper, the amount of liquidity, and the current price.\n    /// @param recipient The address for which the liquidity will be created\n    /// @param tickLower The lower tick of the position in which to add liquidity\n    /// @param tickUpper The upper tick of the position in which to add liquidity\n    /// @param amount The amount of liquidity to mint\n    /// @param data Any data that should be passed through to the callback\n    /// @return amount0 The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\n    /// @return amount1 The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\n    function mint(\n        address recipient,\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount,\n        bytes calldata data\n    ) external returns (uint256 amount0, uint256 amount1);\n\n    /// @notice Collects tokens owed to a position\n    /// @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\n    /// Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\n    /// amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\n    /// actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\n    /// @param recipient The address which should receive the fees collected\n    /// @param tickLower The lower tick of the position for which to collect fees\n    /// @param tickUpper The upper tick of the position for which to collect fees\n    /// @param amount0Requested How much token0 should be withdrawn from the fees owed\n    /// @param amount1Requested How much token1 should be withdrawn from the fees owed\n    /// @return amount0 The amount of fees collected in token0\n    /// @return amount1 The amount of fees collected in token1\n    function collect(\n        address recipient,\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount0Requested,\n        uint128 amount1Requested\n    ) external returns (uint128 amount0, uint128 amount1);\n\n    /// @notice Burn liquidity from the sender and account tokens owed for the liquidity to the position\n    /// @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\n    /// @dev Fees must be collected separately via a call to #collect\n    /// @param tickLower The lower tick of the position for which to burn liquidity\n    /// @param tickUpper The upper tick of the position for which to burn liquidity\n    /// @param amount How much liquidity to burn\n    /// @return amount0 The amount of token0 sent to the recipient\n    /// @return amount1 The amount of token1 sent to the recipient\n    function burn(\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount\n    ) external returns (uint256 amount0, uint256 amount1);\n\n    /// @notice Swap token0 for token1, or token1 for token0\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\n    /// @param recipient The address to receive the output of the swap\n    /// @param zeroForOne The direction of the swap, true for token0 to token1, false for token1 to token0\n    /// @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\n    /// @param sqrtPriceLimitX96 The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\n    /// value after the swap. If one for zero, the price cannot be greater than this value after the swap\n    /// @param data Any data to be passed through to the callback\n    /// @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\n    /// @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive\n    function swap(\n        address recipient,\n        bool zeroForOne,\n        int256 amountSpecified,\n        uint160 sqrtPriceLimitX96,\n        bytes calldata data\n    ) external returns (int256 amount0, int256 amount1);\n\n    /// @notice Receive token0 and/or token1 and pay it back, plus a fee, in the callback\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallback\n    /// @dev Can be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling\n    /// with 0 amount{0,1} and sending the donation amount(s) from the callback\n    /// @param recipient The address which will receive the token0 and token1 amounts\n    /// @param amount0 The amount of token0 to send\n    /// @param amount1 The amount of token1 to send\n    /// @param data Any data to be passed through to the callback\n    function flash(\n        address recipient,\n        uint256 amount0,\n        uint256 amount1,\n        bytes calldata data\n    ) external;\n\n    /// @notice Increase the maximum number of price and liquidity observations that this pool will store\n    /// @dev This method is no-op if the pool already has an observationCardinalityNext greater than or equal to\n    /// the input observationCardinalityNext.\n    /// @param observationCardinalityNext The desired minimum number of observations for the pool to store\n    function increaseObservationCardinalityNext(uint16 observationCardinalityNext) external;\n}\n"
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Pool state that is not stored\n/// @notice Contains view functions to provide information about the pool that is computed rather than stored on the\n/// blockchain. The functions here may have variable gas costs.\ninterface IUniswapV3PoolDerivedState {\n    /// @notice Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\n    /// @dev To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing\n    /// the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,\n    /// you must call it with secondsAgos = [3600, 0].\n    /// @dev The time weighted average tick represents the geometric time weighted average price of the pool, in\n    /// log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\n    /// @param secondsAgos From how long ago each cumulative tick and liquidity value should be returned\n    /// @return tickCumulatives Cumulative tick values as of each `secondsAgos` from the current block timestamp\n    /// @return secondsPerLiquidityCumulativeX128s Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block\n    /// timestamp\n    function observe(uint32[] calldata secondsAgos)\n        external\n        view\n        returns (int56[] memory tickCumulatives, uint160[] memory secondsPerLiquidityCumulativeX128s);\n\n    /// @notice Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\n    /// @dev Snapshots must only be compared to other snapshots, taken over a period for which a position existed.\n    /// I.e., snapshots cannot be compared if a position is not held for the entire period between when the first\n    /// snapshot is taken and the second snapshot is taken.\n    /// @param tickLower The lower tick of the range\n    /// @param tickUpper The upper tick of the range\n    /// @return tickCumulativeInside The snapshot of the tick accumulator for the range\n    /// @return secondsPerLiquidityInsideX128 The snapshot of seconds per liquidity for the range\n    /// @return secondsInside The snapshot of seconds per liquidity for the range\n    function snapshotCumulativesInside(int24 tickLower, int24 tickUpper)\n        external\n        view\n        returns (\n            int56 tickCumulativeInside,\n            uint160 secondsPerLiquidityInsideX128,\n            uint32 secondsInside\n        );\n}\n"
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Pool state that can change\n/// @notice These methods compose the pool's state, and can change with any frequency including multiple times\n/// per transaction\ninterface IUniswapV3PoolState {\n    /// @notice The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas\n    /// when accessed externally.\n    /// @return sqrtPriceX96 The current price of the pool as a sqrt(token1/token0) Q64.96 value\n    /// tick The current tick of the pool, i.e. according to the last tick transition that was run.\n    /// This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick\n    /// boundary.\n    /// observationIndex The index of the last oracle observation that was written,\n    /// observationCardinality The current maximum number of observations stored in the pool,\n    /// observationCardinalityNext The next maximum number of observations, to be updated when the observation.\n    /// feeProtocol The protocol fee for both tokens of the pool.\n    /// Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0\n    /// is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee.\n    /// unlocked Whether the pool is currently locked to reentrancy\n    function slot0()\n        external\n        view\n        returns (\n            uint160 sqrtPriceX96,\n            int24 tick,\n            uint16 observationIndex,\n            uint16 observationCardinality,\n            uint16 observationCardinalityNext,\n            uint8 feeProtocol,\n            bool unlocked\n        );\n\n    /// @notice The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\n    /// @dev This value can overflow the uint256\n    function feeGrowthGlobal0X128() external view returns (uint256);\n\n    /// @notice The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\n    /// @dev This value can overflow the uint256\n    function feeGrowthGlobal1X128() external view returns (uint256);\n\n    /// @notice The amounts of token0 and token1 that are owed to the protocol\n    /// @dev Protocol fees will never exceed uint128 max in either token\n    function protocolFees() external view returns (uint128 token0, uint128 token1);\n\n    /// @notice The currently in range liquidity available to the pool\n    /// @dev This value has no relationship to the total liquidity across all ticks\n    function liquidity() external view returns (uint128);\n\n    /// @notice Look up information about a specific tick in the pool\n    /// @param tick The tick to look up\n    /// @return liquidityGross the total amount of position liquidity that uses the pool either as tick lower or\n    /// tick upper,\n    /// liquidityNet how much liquidity changes when the pool price crosses the tick,\n    /// feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0,\n    /// feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1,\n    /// tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick\n    /// secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick,\n    /// secondsOutside the seconds spent on the other side of the tick from the current tick,\n    /// initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false.\n    /// Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0.\n    /// In addition, these values are only relative and must be used only in comparison to previous snapshots for\n    /// a specific position.\n    function ticks(int24 tick)\n        external\n        view\n        returns (\n            uint128 liquidityGross,\n            int128 liquidityNet,\n            uint256 feeGrowthOutside0X128,\n            uint256 feeGrowthOutside1X128,\n            int56 tickCumulativeOutside,\n            uint160 secondsPerLiquidityOutsideX128,\n            uint32 secondsOutside,\n            bool initialized\n        );\n\n    /// @notice Returns 256 packed tick initialized boolean values. See TickBitmap for more information\n    function tickBitmap(int16 wordPosition) external view returns (uint256);\n\n    /// @notice Returns the information about a position by the position's key\n    /// @param key The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\n    /// @return _liquidity The amount of liquidity in the position,\n    /// Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke,\n    /// Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke,\n    /// Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke,\n    /// Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\n    function positions(bytes32 key)\n        external\n        view\n        returns (\n            uint128 _liquidity,\n            uint256 feeGrowthInside0LastX128,\n            uint256 feeGrowthInside1LastX128,\n            uint128 tokensOwed0,\n            uint128 tokensOwed1\n        );\n\n    /// @notice Returns data about a specific observation index\n    /// @param index The element of the observations array to fetch\n    /// @dev You most likely want to use #observe() instead of this method to get an observation as of some amount of time\n    /// ago, rather than at a specific index in the array.\n    /// @return blockTimestamp The timestamp of the observation,\n    /// Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp,\n    /// Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp,\n    /// Returns initialized whether the observation has been initialized and the values are safe to use\n    function observations(uint256 index)\n        external\n        view\n        returns (\n            uint32 blockTimestamp,\n            int56 tickCumulative,\n            uint160 secondsPerLiquidityCumulativeX128,\n            bool initialized\n        );\n}\n"
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Pool state that never changes\n/// @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values\ninterface IUniswapV3PoolImmutables {\n    /// @notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\n    /// @return The contract address\n    function factory() external view returns (address);\n\n    /// @notice The first of the two tokens of the pool, sorted by address\n    /// @return The token contract address\n    function token0() external view returns (address);\n\n    /// @notice The second of the two tokens of the pool, sorted by address\n    /// @return The token contract address\n    function token1() external view returns (address);\n\n    /// @notice The pool's fee in hundredths of a bip, i.e. 1e-6\n    /// @return The fee\n    function fee() external view returns (uint24);\n\n    /// @notice The pool tick spacing\n    /// @dev Ticks can only be used at multiples of this value, minimum of 1 and always positive\n    /// e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ...\n    /// This value is an int24 to avoid casting even though it is always positive.\n    /// @return The tick spacing\n    function tickSpacing() external view returns (int24);\n\n    /// @notice The maximum amount of position liquidity that can use any tick in the range\n    /// @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\n    /// also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\n    /// @return The max amount of liquidity per tick\n    function maxLiquidityPerTick() external view returns (uint128);\n}\n"
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity ^0.8.0;\n\n/// @title Callback for IUniswapV3PoolActions#swap\n/// @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface\ninterface IUniswapV3SwapCallback {\n    /// @notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n    /// @dev In the implementation you must pay the pool tokens owed for the swap.\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n    /// amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n    /// @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n    /// @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n    /// @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call\n    function uniswapV3SwapCallback(\n        int256 amount0Delta,\n        int256 amount1Delta,\n        bytes calldata data\n    ) external;\n}\n"
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/IERC721Permit.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity ^0.8.0;\n\nimport '../../../../openzeppelin/contracts/token/ERC721/IERC721.sol';\n\n/// @title ERC721 with permit\n/// @notice Extension to ERC721 that includes a permit function for signature based approvals\ninterface IERC721Permit is IERC721 {\n    /// @notice The permit typehash used in the permit signature\n    /// @return The typehash for the permit\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\n\n    /// @notice The domain separator used in the permit signature\n    /// @return The domain seperator used in encoding of permit signature\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n\n    /// @notice Approve of a specific token ID for spending by spender via signature\n    /// @param spender The account that is being approved\n    /// @param tokenId The ID of the token that is being approved for spending\n    /// @param deadline The deadline timestamp by which the call must be mined for the approve to work\n    /// @param v Must produce valid secp256k1 signature from the holder along with `r` and `s`\n    /// @param r Must produce valid secp256k1 signature from the holder along with `v` and `s`\n    /// @param s Must produce valid secp256k1 signature from the holder along with `r` and `v`\n    function permit(\n        address spender,\n        uint256 tokenId,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external payable;\n}\n"
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/IPoolInitializer.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.7.5;\npragma abicoder v2;\n\n/// @title Creates and initializes V3 Pools\n/// @notice Provides a method for creating and initializing a pool, if necessary, for bundling with other methods that\n/// require the pool to exist.\ninterface IPoolInitializer {\n    /// @notice Creates a new pool if it does not exist, then initializes if not initialized\n    /// @dev This method can be bundled with others via IMulticall for the first action (e.g. mint) performed against a pool\n    /// @param token0 The contract address of token0 of the pool\n    /// @param token1 The contract address of token1 of the pool\n    /// @param fee The fee amount of the v3 pool for the specified token pair\n    /// @param sqrtPriceX96 The initial square root price of the pool as a Q64.96 value\n    /// @return pool Returns the pool address based on the pair of tokens and fee, will return the newly created pool address if necessary\n    function createAndInitializePoolIfNecessary(\n        address token0,\n        address token1,\n        uint24 fee,\n        uint160 sqrtPriceX96\n    ) external payable returns (address pool);\n}\n"
			},
			"contracts/openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport './IERC721.sol';\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Enumerable is IERC721 {\n\n    /**\n     * @dev Returns the total amount of tokens stored by the contract.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\n     */\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256 tokenId);\n\n    /**\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n     * Use along with {totalSupply} to enumerate all tokens.\n     */\n    function tokenByIndex(uint256 index) external view returns (uint256);\n}\n"
			},
			"contracts/openzeppelin/contracts/token/ERC721/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../../../../../contracts/openzeppelin/contracts/token/ERC721/IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
			},
			"contracts/aave/protocol-v2/contracts/interfaces/DataTypes.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nlibrary DataTypes {\n    struct ReserveConfigurationMap {\n        uint256 data;\n    }\n\n    struct UserConfigurationMap {\n        uint256 data;\n    }\n\n    struct ReserveData {\n        uint256 totalLiquidity;\n        uint256 availableLiquidity;\n        uint256 totalStableDebt;\n        uint256 totalVariableDebt;\n        uint256 liquidityRate;\n        uint256 variableBorrowRate;\n        uint256 stableBorrowRate;\n        uint256 averageStableBorrowRate;\n        uint256 liquidityIndex;\n        uint256 variableBorrowIndex;\n        uint40 lastUpdateTimestamp;\n    }\n\n    struct UserReserveData {\n        uint256 currentATokenBalance;\n        uint256 currentStableDebt;\n        uint256 currentVariableDebt;\n        uint256 principalStableDebt;\n        uint256 scaledVariableDebt;\n        uint256 stableBorrowRate;\n        uint256 liquidityRate;\n        uint40 stableRateLastUpdated;\n        bool usageAsCollateralEnabled;\n    }\n}\n"
			},
			"contracts/openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"contracts/openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "shanghai"
		}
	},
	"output": {
		"contracts": {
			"contracts/MainBot.sol": {
				"IERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"transfer(address,uint256)": "a9059cbb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MainBot.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MainBot.sol\":{\"keccak256\":\"0x66347abd18f346bc32084336597fb9f31bb8d69d8a1edf96ffba302c489768e4\",\"license\":\"MITs\",\"urls\":[\"bzz-raw://3e7570cffe867a979714202aa0d7fcbcdb38b0fc4c4092bd162918cd91623729\",\"dweb:/ipfs/QmQE2QZQbaRywtAhkZA1PMgcL3rn6aUZpB5pD1vbVgtu5P\"]},\"contracts/aave/protocol-v2/contracts/interfaces/DataTypes.sol\":{\"keccak256\":\"0x81caed3fbb24bd8721c85094546ee31f033209a1dc5b8aa4d8ce094388666cb4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4ab7c3612816908da41df1a0f62bde806a9fe088198dcd7b70f6a8f31c7d131\",\"dweb:/ipfs/QmRNtcEwyFdiJmbJ1oyDiDZ3foyrHchCMo1MYjAXYR7zdd\"]},\"contracts/aave/protocol-v2/contracts/interfaces/ILendingPool.sol\":{\"keccak256\":\"0xbcbeb7a9a1bc100bae12891df6265691103d76f71e7eed72902d2024f05f654b\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://898ea64e297442bb3bc7c7215786ae6453dce7900200f836041ff9ed7867f4e0\",\"dweb:/ipfs/QmTuSyHSYg7PNo6eRDe1ATJZ2UxDxwFJUshJRnT22co19a\"]},\"contracts/aave/protocol-v2/contracts/interfaces/ILendingPoolAddressesProvider.sol\":{\"keccak256\":\"0x219d7db359e51dfd51b0a454dc284c44671b6ce6543b7f383ef0aec4534c7ea0\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://f09e938d9d6edadd398245b27e15eb0df96f20dd5104f523a10cfe4a9329ba92\",\"dweb:/ipfs/QmNhjFNzjeKkqUNe9SJnxiuH8wAQYVp9MX6mAGBzeESpyz\"]},\"contracts/chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x257a8d28fa83d3d942547c8e129ef465e4b5f3f31171e7be4739a4c98da6b4f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d39e11b1dc7b9b8ccdabbc9be442ab7cda4a81c748f57e316dcb1bcb4a28bf9\",\"dweb:/ipfs/QmaG6vz6W6iEUBsbHSBob5mdcitYxWjoygxREHpsJHfWrS\"]},\"contracts/openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x3c504de1aed405d34ff26733c7b6edc9fd9fd4f9aac504f541a4238dd50bf1d2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e373cc851a65ef3f01bb825f59c3c9cdb1969adab8ec871dd1f197423f6b9ed\",\"dweb:/ipfs/QmWNM3TyZgfxTKJsfqk7ZJk7DmZr29iab3f8T4c1itiynm\"]},\"contracts/openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol\":{\"keccak256\":\"0x49ae5d944b6f25701d67ef1d76cbce766f062bf1958a34b13543f539d7882850\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://851181789f63ce009fa30ddabd8ef159d90733216d5d1f2f9e13d16688f67489\",\"dweb:/ipfs/QmdT4okvCWQC1eSYNFfyqjUkJBAiWbSZMwAazzEuizBJSb\"]},\"contracts/openzeppelin/contracts/token/ERC721/IERC721Metadata.sol\":{\"keccak256\":\"0xfd743e54fb2a27413f703a389d1d78b003d957eaebbcfa15051d89793cf5136a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07683e02a762080a63f5ccec780488e5b87f79ded66d4c1e27f5cd62c1b5f8cb\",\"dweb:/ipfs/QmNtAngsTxV2c2XAKrqAo7PUUpXz1J69LNzwkEun4QTX7w\"]},\"contracts/openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x1e96fdc714c1d5e754ad716c7cb4ac8daa28856879f2d40bb428720adac47b69\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1725af76c335db636686b0b8f36dfdcfa15d40993509ed80c6e579dfd3e1c2f3\",\"dweb:/ipfs/QmcT6Bp635CWdmxQnv84bicV4eaD46cY1ywZNgriSusJXw\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/IERC721Permit.sol\":{\"keccak256\":\"0x9915ccd225c6840a809606b1a929404b0299bff8d7cbb6bc8439c5dfd74046d2\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f0cdf83091593d05e85f50c1c40cf17c8c1eb6aeaac87cb9f8c91e8e31cf162c\",\"dweb:/ipfs/QmZxxuzCfsPLnARKERZj2fvy2mEvyQWJd9uDWpFwj4UkJa\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol\":{\"keccak256\":\"0x631739110217293c69ff6fc6ca4499fcabe8774fb17de93a5546dabe6e207034\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://9f61686e40280404bb22e20c5c380ed8dd4467c8c5c164762566233146cc2e26\",\"dweb:/ipfs/QmbA6qoN6NJvnj3vTRFA5ozNLdnWqtK5iJjqzcR1NS3qJk\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol\":{\"keccak256\":\"0x7affcfeb5127c0925a71d6a65345e117c33537523aeca7bc98085ead8452519d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e16b291294210e71cb0f20cd0afe62ae2dc6878d627f5ccc19c4dc9cd80aec3f\",\"dweb:/ipfs/QmQGitSyBr26nour81BZmpmDMyJpvZRqHQZvnCD1Acb127\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol\":{\"keccak256\":\"0xb547e10f1e69bed03621a62b73a503e260643066c6b4054867a4d1fef47eb274\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f9a90f58f5fd5fb42f7811f4094113b532f307b14a73764c91f977590747f407\",\"dweb:/ipfs/QmSeNH2mfiDMKf3Q6V2sqtNxx1s72JNuA1VVxRM9HoMqYp\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/IPoolInitializer.sol\":{\"keccak256\":\"0x9d7695e8d94c22cc5fcced602017aabb988de89981ea7bee29ea629d5328a862\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://61b50933026ee1017db2a6273af8cedc3238c95dca58880db0918dbdbb2f064f\",\"dweb:/ipfs/QmUebR26pqG25d18aBELKz8aFFKkmHa8PxntzXTA7o9Ldu\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0xfa925dc6086cfc426967d6b47a651ade9bb30a747359c0d006912c59d88b5c4a\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ec22f5863805d4afbf740bbba06c07fe4572ba993e4936a234222c61b3d1dd6e\",\"dweb:/ipfs/QmNyC92QbbjjG5V67GNfiXbSN6Ehi7637uFQXkWwKXR3s6\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5\",\"dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0xe75caaf5ab5dad796a807a0db3ce9d5aeeadf3cc062aaa17f701134bbd085f53\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://21ae8e8c7af183532964bc81889b695801f868d903af91d18d02a77d793e14fb\",\"dweb:/ipfs/QmfDr8ugPEdbxtTCs6fut61Euf3adBvS2aNyFyC5CFAFGy\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"MainBot": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "activity",
									"type": "string"
								}
							],
							"name": "CurrentActivity",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "currentBalance",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "threshold",
									"type": "uint256"
								}
							],
							"name": "StopLossTriggered",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "message",
									"type": "string"
								}
							],
							"name": "TestEvent",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "tradeType",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "TradeExecuted",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "POLToken",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "aaveLendingPoolAddressesProvider",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "selectedTimeframe",
									"type": "uint256"
								}
							],
							"name": "adjustTimeframe",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "poolAddress",
									"type": "address"
								}
							],
							"name": "checkLiquidity",
							"outputs": [
								{
									"internalType": "bool",
									"name": "sufficientLiquidity",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "checkPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "convertAllToPOL",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "currentActivity",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"name": "dexRouters",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "disableTrading",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "gasCostMultiplier",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initialDeposit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "tradeType",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "initiateTrade",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "kill",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lossThreshold",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maticBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nextLogTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "priceFeedAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "profitThreshold",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "quickSwapRouter",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "controller",
									"type": "address"
								}
							],
							"name": "setController",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stablecoinBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tradingEnabled",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "trailingStopLoss",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "uniswapPositionManager",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "uniswapRouter",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "usdcToken",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "usdtToken",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountInGwei",
									"type": "uint256"
								}
							],
							"name": "withdrawInGwei",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/MainBot.sol\":944:7753  contract MainBot {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/MainBot.sol\":1237:1238  3 */\n  0x03\n    /* \"contracts/MainBot.sol\":1202:1238  uint256 public gasCostMultiplier = 3 */\n  0x06\n  sstore\n    /* \"contracts/MainBot.sol\":1278:1280  10 */\n  0x0a\n    /* \"contracts/MainBot.sol\":1244:1280  uint256 public trailingStopLoss = 10 */\n  0x07\n  sstore\n    /* \"contracts/MainBot.sol\":1318:1364  string public currentActivity = \"Initializing\" */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0c\n  dup2\n  mstore\n  0x20\n  add\n  0x496e697469616c697a696e670000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  0x09\n  swap1\n  dup2\n  tag_1\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_1:\n  pop\n    /* \"contracts/MainBot.sol\":1397:1439  0x22B21BedDef74FE62F031D2c5c8F7a9F8a4b304D */\n  0x22b21beddef74fe62f031d2c5c8f7a9f8a4b304d\n    /* \"contracts/MainBot.sol\":1371:1439  address public POLToken = 0x22B21BedDef74FE62F031D2c5c8F7a9F8a4b304D */\n  0x0a\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/MainBot.sol\":1509:1551  0x1E4a5963aBFD975d8c9021ce480b42188849D41d */\n  0x1e4a5963abfd975d8c9021ce480b42188849d41d\n    /* \"contracts/MainBot.sol\":1482:1551  address public usdtToken = 0x1E4a5963aBFD975d8c9021ce480b42188849D41d */\n  0x0b\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/MainBot.sol\":1603:1645  0xA8CE8aee21bC2A48a5EF670afCc9274C7bbbC035 */\n  0xa8ce8aee21bc2a48a5ef670afcc9274c7bbbc035\n    /* \"contracts/MainBot.sol\":1576:1645  address public usdcToken = 0xA8CE8aee21bC2A48a5EF670afCc9274C7bbbC035 */\n  0x0c\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/MainBot.sol\":1703:1745  0x1E7E4c855520b2106320952A570a3e5E3E618101 */\n  0x1e7e4c855520b2106320952a570a3e5e3e618101\n    /* \"contracts/MainBot.sol\":1670:1745  address public quickSwapRouter = 0x1E7E4c855520b2106320952A570a3e5E3E618101 */\n  0x0d\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/MainBot.sol\":1805:1847  0x5E988c11a4f92155C30D9fb69Ed75597f712B113 */\n  0x5e988c11a4f92155c30d9fb69ed75597f712b113\n    /* \"contracts/MainBot.sol\":1771:1847  address public priceFeedAddress = 0x5E988c11a4f92155C30D9fb69Ed75597f712B113 */\n  0x0e\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/MainBot.sol\":1908:1950  0x1E7E4c855520b2106320952A570a3e5E3E618101 */\n  0x1e7e4c855520b2106320952a570a3e5e3e618101\n    /* \"contracts/MainBot.sol\":1877:1950  address public uniswapRouter = 0x1E7E4c855520b2106320952A570a3e5E3E618101 */\n  0x0f\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/MainBot.sol\":2021:2063  0xC36442b4a4522E871399CD717aBDD847Ab11FE88 */\n  0xc36442b4a4522e871399cd717abdd847ab11fe88\n    /* \"contracts/MainBot.sol\":1981:2063  address public uniswapPositionManager = 0xC36442b4a4522E871399CD717aBDD847Ab11FE88 */\n  0x10\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/MainBot.sol\":2149:2191  0xd05e3E715d945B59290df0ae8eF85c1BdB684744 */\n  0xd05e3e715d945b59290df0ae8ef85c1bdb684744\n    /* \"contracts/MainBot.sol\":2099:2191  address public aaveLendingPoolAddressesProvider = 0xd05e3E715d945B59290df0ae8eF85c1BdB684744 */\n  0x11\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/MainBot.sol\":2752:3022  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_3\n  jumpi\n  0x00\n  dup1\n  revert\ntag_3:\n  pop\n    /* \"contracts/MainBot.sol\":2784:2794  msg.sender */\n  caller\n    /* \"contracts/MainBot.sol\":2776:2781  owner */\n  0x00\n  dup1\n    /* \"contracts/MainBot.sol\":2776:2794  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/MainBot.sol\":2830:2845  quickSwapRouter */\n  0x0d\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/MainBot.sol\":2804:2814  dexRouters */\n  0x12\n    /* \"contracts/MainBot.sol\":2804:2827  dexRouters[\"QuickSwap\"] */\n  mload(0x40)\n  tag_6\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  keccak256\n  0x00\n    /* \"contracts/MainBot.sol\":2804:2845  dexRouters[\"QuickSwap\"] = quickSwapRouter */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/MainBot.sol\":2872:2877  false */\n  0x00\n    /* \"contracts/MainBot.sol\":2855:2869  tradingEnabled */\n  dup1\n  0x14\n    /* \"contracts/MainBot.sol\":2855:2877  tradingEnabled = false */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/MainBot.sol\":2905:2908  110 */\n  0x6e\n    /* \"contracts/MainBot.sol\":2887:2902  profitThreshold */\n  0x04\n    /* \"contracts/MainBot.sol\":2887:2908  profitThreshold = 110 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/MainBot.sol\":2948:2950  85 */\n  0x55\n    /* \"contracts/MainBot.sol\":2932:2945  lossThreshold */\n  0x05\n    /* \"contracts/MainBot.sol\":2932:2950  lossThreshold = 85 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/MainBot.sol\":3000:3015  block.timestamp */\n  timestamp\n    /* \"contracts/MainBot.sol\":2986:2997  nextLogTime */\n  0x08\n    /* \"contracts/MainBot.sol\":2986:3015  nextLogTime = block.timestamp */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/MainBot.sol\":944:7753  contract MainBot {... */\n  jump(tag_8)\n    /* \"#utility.yul\":7:106   */\ntag_9:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_10:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_11:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_12:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_37\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_37:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_38\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_39\n  tag_11\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":714:798   */\ntag_38:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_13:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_14:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_15:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_16:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_44\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_15\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":1429:1468   */\n  tag_45\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_15\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_17:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_18:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_19:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_49\n    /* \"#utility.yul\":1818:1852   */\n  tag_50\n    /* \"#utility.yul\":1827:1851   */\n  tag_51\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_17\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":1818:1852   */\n  tag_18\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":1800:1853   */\n  tag_17\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_20:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_21:\n    /* \"#utility.yul\":2056:2095   */\n  tag_54\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_19\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":2117:2208   */\n  tag_55\n    /* \"#utility.yul\":2166:2207   */\n  tag_56\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_20\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_16\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_22:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_23:\n    /* \"#utility.yul\":2377:2409   */\n  tag_59\n  tag_22\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":2418:2483   */\n  tag_60\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_21\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_24:\n    /* \"#utility.yul\":2555:2675   */\ntag_62:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_64\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_65\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_23\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_62)\ntag_64:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_25:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_67\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_68\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_13\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":2906:2935   */\n  tag_69\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_14\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_70\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_70:\n    /* \"#utility.yul\":3133:3213   */\n  tag_71\n    /* \"#utility.yul\":3189:3211   */\n  tag_72\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_14\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_24\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_67:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_26:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_27:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_75\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_26\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_28:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_77\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_27\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_2:\n    /* \"#utility.yul\":3950:3987   */\n  tag_79\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_9\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_80\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_81\n  tag_10\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":4038:4094   */\ntag_80:\n    /* \"#utility.yul\":4118:4156   */\n  tag_82\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_12\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":4203:4270   */\n  tag_83\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_25\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_85\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_86\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_86:\n    /* \"#utility.yul\":5144:5211   */\n  tag_87\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_28\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_84)\n    /* \"#utility.yul\":4365:4983   */\ntag_85:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_88\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_13\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_89:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_91\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_89)\ntag_91:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_92\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_93\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_27\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_92:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_84:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5234:5382   */\ntag_29:\n    /* \"#utility.yul\":5336:5347   */\n  0x00\n    /* \"#utility.yul\":5373:5376   */\n  dup2\n    /* \"#utility.yul\":5358:5376   */\n  swap1\n  pop\n    /* \"#utility.yul\":5234:5382   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5388:5547   */\ntag_30:\n    /* \"#utility.yul\":5528:5539   */\n  0x517569636b537761700000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":5524:5525   */\n  0x00\n    /* \"#utility.yul\":5516:5522   */\n  dup3\n    /* \"#utility.yul\":5512:5526   */\n  add\n    /* \"#utility.yul\":5505:5540   */\n  mstore\n    /* \"#utility.yul\":5388:5547   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5553:5953   */\ntag_31:\n    /* \"#utility.yul\":5713:5716   */\n  0x00\n    /* \"#utility.yul\":5734:5818   */\n  tag_97\n    /* \"#utility.yul\":5816:5817   */\n  0x09\n    /* \"#utility.yul\":5811:5814   */\n  dup4\n    /* \"#utility.yul\":5734:5818   */\n  tag_29\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":5727:5818   */\n  swap2\n  pop\n    /* \"#utility.yul\":5827:5920   */\n  tag_98\n    /* \"#utility.yul\":5916:5919   */\n  dup3\n    /* \"#utility.yul\":5827:5920   */\n  tag_30\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":5945:5946   */\n  0x09\n    /* \"#utility.yul\":5940:5943   */\n  dup3\n    /* \"#utility.yul\":5936:5947   */\n  add\n    /* \"#utility.yul\":5929:5947   */\n  swap1\n  pop\n    /* \"#utility.yul\":5553:5953   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5959:6340   */\ntag_7:\n    /* \"#utility.yul\":6144:6147   */\n  0x00\n    /* \"#utility.yul\":6166:6314   */\n  tag_100\n    /* \"#utility.yul\":6310:6313   */\n  dup3\n    /* \"#utility.yul\":6166:6314   */\n  tag_31\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":6159:6314   */\n  swap2\n  pop\n    /* \"#utility.yul\":6331:6334   */\n  dup2\n    /* \"#utility.yul\":6324:6334   */\n  swap1\n  pop\n    /* \"#utility.yul\":5959:6340   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"contracts/MainBot.sol\":944:7753  contract MainBot {... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/MainBot.sol\":944:7753  contract MainBot {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x869665e9\n      gt\n      tag_32\n      jumpi\n      dup1\n      0xb3ce56a2\n      gt\n      tag_33\n      jumpi\n      dup1\n      0xe189eb42\n      gt\n      tag_34\n      jumpi\n      dup1\n      0xe189eb42\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xe5047b30\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xf1a107fe\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xf974821a\n      eq\n      tag_31\n      jumpi\n      jump(tag_2)\n    tag_34:\n      dup1\n      0xb3ce56a2\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xc0fc247f\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xe037f889\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xe0abca0b\n      eq\n      tag_27\n      jumpi\n      jump(tag_2)\n    tag_33:\n      dup1\n      0x92eefe9b\n      gt\n      tag_35\n      jumpi\n      dup1\n      0x92eefe9b\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x9d8ef1e1\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xa30fb905\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xa98ad46c\n      eq\n      tag_23\n      jumpi\n      jump(tag_2)\n    tag_35:\n      dup1\n      0x869665e9\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x8fc3047d\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_32:\n      dup1\n      0x41c0e1b5\n      gt\n      tag_36\n      jumpi\n      dup1\n      0x5e7ffa67\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x5e7ffa67\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x64aabb9e\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x6d546cdd\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x735de9f7\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_37:\n      dup1\n      0x41c0e1b5\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x457f3cb0\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x4ada218b\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_36:\n      dup1\n      0x1bf41362\n      gt\n      tag_38\n      jumpi\n      dup1\n      0x1bf41362\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x238f9b7a\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x26c403ed\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x3fb47a3b\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_38:\n      dup1\n      0x11eac855\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1458d9d8\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x17700f01\n      eq\n      tag_5\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"contracts/MainBot.sol\":3186:3195  msg.value */\n      callvalue\n        /* \"contracts/MainBot.sol\":3168:3182  initialDeposit */\n      0x01\n      0x00\n        /* \"contracts/MainBot.sol\":3168:3195  initialDeposit += msg.value */\n      dup3\n      dup3\n      sload\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/MainBot.sol\":3240:3243  100 */\n      0x64\n        /* \"contracts/MainBot.sol\":3234:3236  70 */\n      0x46\n        /* \"contracts/MainBot.sol\":3222:3231  msg.value */\n      callvalue\n        /* \"contracts/MainBot.sol\":3222:3236  msg.value * 70 */\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n        /* \"contracts/MainBot.sol\":3221:3243  (msg.value * 70) / 100 */\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n        /* \"contracts/MainBot.sol\":3205:3217  maticBalance */\n      0x02\n      0x00\n        /* \"contracts/MainBot.sol\":3205:3243  maticBalance += (msg.value * 70) / 100 */\n      dup3\n      dup3\n      sload\n      tag_47\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_47:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/MainBot.sol\":3293:3296  100 */\n      0x64\n        /* \"contracts/MainBot.sol\":3287:3289  30 */\n      0x1e\n        /* \"contracts/MainBot.sol\":3275:3284  msg.value */\n      callvalue\n        /* \"contracts/MainBot.sol\":3275:3289  msg.value * 30 */\n      tag_48\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_48:\n        /* \"contracts/MainBot.sol\":3274:3296  (msg.value * 30) / 100 */\n      tag_49\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_49:\n        /* \"contracts/MainBot.sol\":3253:3270  stablecoinBalance */\n      0x03\n      0x00\n        /* \"contracts/MainBot.sol\":3253:3296  stablecoinBalance += (msg.value * 30) / 100 */\n      dup3\n      dup3\n      sload\n      tag_50\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_50:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      stop\n        /* \"contracts/MainBot.sol\":944:7753  contract MainBot {... */\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/MainBot.sol\":1576:1645  address public usdcToken = 0xA8CE8aee21bC2A48a5EF670afCc9274C7bbbC035 */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_51\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n      pop\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MainBot.sol\":1061:1088  uint256 public maticBalance */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_56\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_56:\n      pop\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MainBot.sol\":4899:4983  function disableTrading() external onlyOwner {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_61\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_61:\n      pop\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n      stop\n        /* \"contracts/MainBot.sol\":1286:1312  uint256 public nextLogTime */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_64\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_64:\n      pop\n      tag_65\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MainBot.sol\":2099:2191  address public aaveLendingPoolAddressesProvider = 0xd05e3E715d945B59290df0ae8eF85c1BdB684744 */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n      pop\n      tag_69\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      tag_71\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MainBot.sol\":3805:3969  function initiateTrade(string memory tradeType, uint256 amount) external onlyOwner {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_72\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_72:\n      pop\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n      tag_76\n      jump\t// in\n    tag_73:\n      stop\n        /* \"contracts/MainBot.sol\":4105:4651  function checkLiquidity(uint256 amountIn, address poolAddress) public view returns (bool sufficientLiquidity) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_77\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_77:\n      pop\n      tag_78\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_79\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      tag_81\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      tag_82\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MainBot.sol\":5241:5336  function kill() external onlyOwner {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_84\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_84:\n      pop\n      tag_85\n      tag_86\n      jump\t// in\n    tag_85:\n      stop\n        /* \"contracts/MainBot.sol\":4989:5239  function withdrawInGwei(uint256 amountInGwei) external onlyOwner {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_87\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_87:\n      pop\n      tag_88\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_89\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n      tag_91\n      jump\t// in\n    tag_88:\n      stop\n        /* \"contracts/MainBot.sol\":994:1020  bool public tradingEnabled */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_92\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_92:\n      pop\n      tag_93\n      tag_94\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      tag_95\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MainBot.sol\":2235:2279  mapping(string => address) public dexRouters */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_96\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_96:\n      pop\n      tag_97\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_98\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_98:\n      tag_100\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      tag_101\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MainBot.sol\":1094:1126  uint256 public stablecoinBalance */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_102\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_102:\n      pop\n      tag_103\n      tag_104\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      tag_105\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MainBot.sol\":1318:1364  string public currentActivity = \"Initializing\" */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_106\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_106:\n      pop\n      tag_107\n      tag_108\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      tag_109\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MainBot.sol\":1877:1950  address public uniswapRouter = 0x1E7E4c855520b2106320952A570a3e5E3E618101 */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_111\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_111:\n      pop\n      tag_112\n      tag_113\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      tag_114\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MainBot.sol\":3309:3674  function adjustTimeframe(uint256 selectedTimeframe) external onlyOwner {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_115\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_115:\n      pop\n      tag_116\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_117\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_117:\n      tag_118\n      jump\t// in\n    tag_116:\n      stop\n        /* \"contracts/MainBot.sol\":967:987  address public owner */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_119\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_119:\n      pop\n      tag_120\n      tag_121\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      tag_122\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MainBot.sol\":3680:3799  function checkPrice() external view returns (uint256) {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_123\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_123:\n      pop\n      tag_124\n      tag_125\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      tag_126\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_126:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MainBot.sol\":3028:3125  function setController(address controller) external onlyOwner {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_127\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_127:\n      pop\n      tag_128\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_129\n      swap2\n      swap1\n      tag_130\n      jump\t// in\n    tag_129:\n      tag_131\n      jump\t// in\n    tag_128:\n      stop\n        /* \"contracts/MainBot.sol\":3975:4104  function convertAllToPOL() external onlyOwner {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_132\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_132:\n      pop\n      tag_133\n      tag_134\n      jump\t// in\n    tag_133:\n      stop\n        /* \"contracts/MainBot.sol\":1202:1238  uint256 public gasCostMultiplier = 3 */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_135\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_135:\n      pop\n      tag_136\n      tag_137\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      tag_138\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_138:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MainBot.sol\":1482:1551  address public usdtToken = 0x1E4a5963aBFD975d8c9021ce480b42188849D41d */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_139\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_139:\n      pop\n      tag_140\n      tag_141\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      tag_142\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_142:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MainBot.sol\":1244:1280  uint256 public trailingStopLoss = 10 */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_143\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_143:\n      pop\n      tag_144\n      tag_145\n      jump\t// in\n    tag_144:\n      mload(0x40)\n      tag_146\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_146:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MainBot.sol\":1168:1196  uint256 public lossThreshold */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_147\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_147:\n      pop\n      tag_148\n      tag_149\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      tag_150\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MainBot.sol\":1026:1055  uint256 public initialDeposit */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_151\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_151:\n      pop\n      tag_152\n      tag_153\n      jump\t// in\n    tag_152:\n      mload(0x40)\n      tag_154\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_154:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MainBot.sol\":1771:1847  address public priceFeedAddress = 0x5E988c11a4f92155C30D9fb69Ed75597f712B113 */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_155\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_155:\n      pop\n      tag_156\n      tag_157\n      jump\t// in\n    tag_156:\n      mload(0x40)\n      tag_158\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_158:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MainBot.sol\":1670:1745  address public quickSwapRouter = 0x1E7E4c855520b2106320952A570a3e5E3E618101 */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_159\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_159:\n      pop\n      tag_160\n      tag_161\n      jump\t// in\n    tag_160:\n      mload(0x40)\n      tag_162\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_162:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MainBot.sol\":1981:2063  address public uniswapPositionManager = 0xC36442b4a4522E871399CD717aBDD847Ab11FE88 */\n    tag_29:\n      callvalue\n      dup1\n      iszero\n      tag_163\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_163:\n      pop\n      tag_164\n      tag_165\n      jump\t// in\n    tag_164:\n      mload(0x40)\n      tag_166\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_166:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MainBot.sol\":1371:1439  address public POLToken = 0x22B21BedDef74FE62F031D2c5c8F7a9F8a4b304D */\n    tag_30:\n      callvalue\n      dup1\n      iszero\n      tag_167\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_167:\n      pop\n      tag_168\n      tag_169\n      jump\t// in\n    tag_168:\n      mload(0x40)\n      tag_170\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_170:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MainBot.sol\":1132:1162  uint256 public profitThreshold */\n    tag_31:\n      callvalue\n      dup1\n      iszero\n      tag_171\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_171:\n      pop\n      tag_172\n      tag_173\n      jump\t// in\n    tag_172:\n      mload(0x40)\n      tag_174\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_174:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MainBot.sol\":1576:1645  address public usdcToken = 0xA8CE8aee21bC2A48a5EF670afCc9274C7bbbC035 */\n    tag_53:\n      0x0c\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/MainBot.sol\":1061:1088  uint256 public maticBalance */\n    tag_58:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"contracts/MainBot.sol\":4899:4983  function disableTrading() external onlyOwner {... */\n    tag_63:\n        /* \"contracts/MainBot.sol\":2595:2600  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MainBot.sol\":2581:2600  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MainBot.sol\":2581:2591  msg.sender */\n      caller\n        /* \"contracts/MainBot.sol\":2581:2600  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/MainBot.sol\":2573:2618  require(msg.sender == owner, \"Not the owner\") */\n      tag_176\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_177\n      swap1\n      tag_178\n      jump\t// in\n    tag_177:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_176:\n        /* \"contracts/MainBot.sol\":4971:4976  false */\n      0x00\n        /* \"contracts/MainBot.sol\":4954:4968  tradingEnabled */\n      dup1\n      0x14\n        /* \"contracts/MainBot.sol\":4954:4976  tradingEnabled = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/MainBot.sol\":4899:4983  function disableTrading() external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/MainBot.sol\":1286:1312  uint256 public nextLogTime */\n    tag_66:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"contracts/MainBot.sol\":2099:2191  address public aaveLendingPoolAddressesProvider = 0xd05e3E715d945B59290df0ae8eF85c1BdB684744 */\n    tag_70:\n      0x11\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/MainBot.sol\":3805:3969  function initiateTrade(string memory tradeType, uint256 amount) external onlyOwner {... */\n    tag_76:\n        /* \"contracts/MainBot.sol\":2595:2600  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MainBot.sol\":2581:2600  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MainBot.sol\":2581:2591  msg.sender */\n      caller\n        /* \"contracts/MainBot.sol\":2581:2600  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/MainBot.sol\":2573:2618  require(msg.sender == owner, \"Not the owner\") */\n      tag_181\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_182\n      swap1\n      tag_178\n      jump\t// in\n    tag_182:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_181:\n        /* \"contracts/MainBot.sol\":3917:3927  msg.sender */\n      caller\n        /* \"contracts/MainBot.sol\":3903:3962  TradeExecuted(msg.sender, tradeType, amount, 0, getPrice()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x030fdcd4f0c28c5dbcbc3f59aa8e2260c7f58ac45be2a2dca652999af89c33e0\n        /* \"contracts/MainBot.sol\":3929:3938  tradeType */\n      dup4\n        /* \"contracts/MainBot.sol\":3940:3946  amount */\n      dup4\n        /* \"contracts/MainBot.sol\":3948:3949  0 */\n      0x00\n        /* \"contracts/MainBot.sol\":3951:3961  getPrice() */\n      tag_184\n        /* \"contracts/MainBot.sol\":3951:3959  getPrice */\n      tag_185\n        /* \"contracts/MainBot.sol\":3951:3961  getPrice() */\n      jump\t// in\n    tag_184:\n        /* \"contracts/MainBot.sol\":3903:3962  TradeExecuted(msg.sender, tradeType, amount, 0, getPrice()) */\n      mload(0x40)\n      tag_186\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_186:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/MainBot.sol\":3805:3969  function initiateTrade(string memory tradeType, uint256 amount) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MainBot.sol\":4105:4651  function checkLiquidity(uint256 amountIn, address poolAddress) public view returns (bool sufficientLiquidity) {... */\n    tag_81:\n        /* \"contracts/MainBot.sol\":4189:4213  bool sufficientLiquidity */\n      0x00\n        /* \"contracts/MainBot.sol\":4221:4240  IUniswapV3Pool pool */\n      dup1\n        /* \"contracts/MainBot.sol\":4258:4269  poolAddress */\n      dup3\n        /* \"contracts/MainBot.sol\":4221:4270  IUniswapV3Pool pool = IUniswapV3Pool(poolAddress) */\n      swap1\n      pop\n        /* \"contracts/MainBot.sol\":4277:4297  uint160 sqrtPriceX96 */\n      0x00\n        /* \"contracts/MainBot.sol\":4307:4311  pool */\n      dup2\n        /* \"contracts/MainBot.sol\":4307:4317  pool.slot0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x3850c7bd\n        /* \"contracts/MainBot.sol\":4307:4319  pool.slot0() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0xe0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_190\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_190:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_191\n      swap2\n      swap1\n      tag_192\n      jump\t// in\n    tag_191:\n        /* \"contracts/MainBot.sol\":4276:4319  (uint160 sqrtPriceX96,,,,,,) = pool.slot0() */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/MainBot.sol\":4325:4342  uint256 liquidity */\n      0x00\n        /* \"contracts/MainBot.sol\":4345:4349  pool */\n      dup3\n        /* \"contracts/MainBot.sol\":4345:4359  pool.liquidity */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x1a686502\n        /* \"contracts/MainBot.sol\":4345:4361  pool.liquidity() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_194\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_194:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_195\n      swap2\n      swap1\n      tag_196\n      jump\t// in\n    tag_195:\n        /* \"contracts/MainBot.sol\":4325:4361  uint256 liquidity = pool.liquidity() */\n      0xffffffffffffffffffffffffffffffff\n      and\n      swap1\n      pop\n        /* \"contracts/MainBot.sol\":4466:4483  uint256 amountOut */\n      0x00\n        /* \"contracts/MainBot.sol\":4486:4539  calculateAmountOut(amountIn, sqrtPriceX96, liquidity) */\n      tag_197\n        /* \"contracts/MainBot.sol\":4505:4513  amountIn */\n      dup8\n        /* \"contracts/MainBot.sol\":4515:4527  sqrtPriceX96 */\n      dup5\n        /* \"contracts/MainBot.sol\":4529:4538  liquidity */\n      dup5\n        /* \"contracts/MainBot.sol\":4486:4504  calculateAmountOut */\n      tag_198\n        /* \"contracts/MainBot.sol\":4486:4539  calculateAmountOut(amountIn, sqrtPriceX96, liquidity) */\n      jump\t// in\n    tag_197:\n        /* \"contracts/MainBot.sol\":4466:4539  uint256 amountOut = calculateAmountOut(amountIn, sqrtPriceX96, liquidity) */\n      swap1\n      pop\n        /* \"contracts/MainBot.sol\":4546:4562  uint256 slippage */\n      0x00\n        /* \"contracts/MainBot.sol\":4583:4586  100 */\n      0x64\n        /* \"contracts/MainBot.sol\":4578:4579  1 */\n      0x01\n        /* \"contracts/MainBot.sol\":4566:4575  amountOut */\n      dup4\n        /* \"contracts/MainBot.sol\":4566:4579  amountOut * 1 */\n      tag_199\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_199:\n        /* \"contracts/MainBot.sol\":4565:4586  (amountOut * 1) / 100 */\n      tag_200\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_200:\n        /* \"contracts/MainBot.sol\":4546:4586  uint256 slippage = (amountOut * 1) / 100 */\n      swap1\n      pop\n        /* \"contracts/MainBot.sol\":4639:4647  slippage */\n      dup1\n        /* \"contracts/MainBot.sol\":4628:4636  amountIn */\n      dup9\n        /* \"contracts/MainBot.sol\":4628:4647  amountIn - slippage */\n      tag_201\n      swap2\n      swap1\n      tag_202\n      jump\t// in\n    tag_201:\n        /* \"contracts/MainBot.sol\":4615:4624  amountOut */\n      dup3\n        /* \"contracts/MainBot.sol\":4615:4647  amountOut >= amountIn - slippage */\n      lt\n      iszero\n        /* \"contracts/MainBot.sol\":4592:4648  sufficientLiquidity = (amountOut >= amountIn - slippage) */\n      swap6\n      pop\n        /* \"contracts/MainBot.sol\":4215:4651  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/MainBot.sol\":4105:4651  function checkLiquidity(uint256 amountIn, address poolAddress) public view returns (bool sufficientLiquidity) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MainBot.sol\":5241:5336  function kill() external onlyOwner {... */\n    tag_86:\n        /* \"contracts/MainBot.sol\":2595:2600  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MainBot.sol\":2581:2600  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MainBot.sol\":2581:2591  msg.sender */\n      caller\n        /* \"contracts/MainBot.sol\":2581:2600  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/MainBot.sol\":2573:2618  require(msg.sender == owner, \"Not the owner\") */\n      tag_204\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_205\n      swap1\n      tag_178\n      jump\t// in\n    tag_205:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_204:\n        /* \"contracts/MainBot.sol\":5290:5300  msg.sender */\n      caller\n        /* \"contracts/MainBot.sol\":5282:5310  payable(msg.sender).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MainBot.sol\":5282:5333  payable(msg.sender).transfer(address(this).balance) */\n      0x08fc\n        /* \"contracts/MainBot.sol\":5311:5332  address(this).balance */\n      selfbalance\n        /* \"contracts/MainBot.sol\":5282:5333  payable(msg.sender).transfer(address(this).balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_208\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_208:\n      pop\n        /* \"contracts/MainBot.sol\":5241:5336  function kill() external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/MainBot.sol\":4989:5239  function withdrawInGwei(uint256 amountInGwei) external onlyOwner {... */\n    tag_91:\n        /* \"contracts/MainBot.sol\":2595:2600  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MainBot.sol\":2581:2600  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MainBot.sol\":2581:2591  msg.sender */\n      caller\n        /* \"contracts/MainBot.sol\":2581:2600  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/MainBot.sol\":2573:2618  require(msg.sender == owner, \"Not the owner\") */\n      tag_210\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_211\n      swap1\n      tag_178\n      jump\t// in\n    tag_211:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_210:\n        /* \"contracts/MainBot.sol\":5064:5083  uint256 amountInWei */\n      0x00\n        /* \"contracts/MainBot.sol\":5101:5107  1 gwei */\n      0x3b9aca00\n        /* \"contracts/MainBot.sol\":5086:5098  amountInGwei */\n      dup3\n        /* \"contracts/MainBot.sol\":5086:5107  amountInGwei * 1 gwei */\n      tag_213\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_213:\n        /* \"contracts/MainBot.sol\":5064:5107  uint256 amountInWei = amountInGwei * 1 gwei */\n      swap1\n      pop\n        /* \"contracts/MainBot.sol\":5150:5161  amountInWei */\n      dup1\n        /* \"contracts/MainBot.sol\":5125:5146  address(this).balance */\n      selfbalance\n        /* \"contracts/MainBot.sol\":5125:5161  address(this).balance >= amountInWei */\n      lt\n      iszero\n        /* \"contracts/MainBot.sol\":5117:5186  require(address(this).balance >= amountInWei, \"Insufficient balance\") */\n      tag_214\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_215\n      swap1\n      tag_216\n      jump\t// in\n    tag_215:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_214:\n        /* \"contracts/MainBot.sol\":5204:5209  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MainBot.sol\":5196:5219  payable(owner).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MainBot.sol\":5196:5232  payable(owner).transfer(amountInWei) */\n      0x08fc\n        /* \"contracts/MainBot.sol\":5220:5231  amountInWei */\n      dup3\n        /* \"contracts/MainBot.sol\":5196:5232  payable(owner).transfer(amountInWei) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_218\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_218:\n      pop\n        /* \"contracts/MainBot.sol\":5054:5239  {... */\n      pop\n        /* \"contracts/MainBot.sol\":4989:5239  function withdrawInGwei(uint256 amountInGwei) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/MainBot.sol\":994:1020  bool public tradingEnabled */\n    tag_94:\n      0x00\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/MainBot.sol\":2235:2279  mapping(string => address) public dexRouters */\n    tag_100:\n      0x12\n      dup2\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      dup3\n      add\n      dup1\n      mload\n      dup5\n      dup3\n      mstore\n      0x20\n      dup4\n      add\n      0x20\n      dup6\n      add\n      keccak256\n      dup2\n      dup4\n      mstore\n      dup1\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/MainBot.sol\":1094:1126  uint256 public stablecoinBalance */\n    tag_104:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"contracts/MainBot.sol\":1318:1364  string public currentActivity = \"Initializing\" */\n    tag_108:\n      0x09\n      dup1\n      sload\n      tag_219\n      swap1\n      tag_220\n      jump\t// in\n    tag_219:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_221\n      swap1\n      tag_220\n      jump\t// in\n    tag_221:\n      dup1\n      iszero\n      tag_222\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_223\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_222)\n    tag_223:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_224:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_224\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_222:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/MainBot.sol\":1877:1950  address public uniswapRouter = 0x1E7E4c855520b2106320952A570a3e5E3E618101 */\n    tag_113:\n      0x0f\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/MainBot.sol\":3309:3674  function adjustTimeframe(uint256 selectedTimeframe) external onlyOwner {... */\n    tag_118:\n        /* \"contracts/MainBot.sol\":2595:2600  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MainBot.sol\":2581:2600  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MainBot.sol\":2581:2591  msg.sender */\n      caller\n        /* \"contracts/MainBot.sol\":2581:2600  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/MainBot.sol\":2573:2618  require(msg.sender == owner, \"Not the owner\") */\n      tag_226\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_227\n      swap1\n      tag_178\n      jump\t// in\n    tag_227:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_226:\n        /* \"contracts/MainBot.sol\":3600:3610  msg.sender */\n      caller\n        /* \"contracts/MainBot.sol\":3586:3667  TradeExecuted(msg.sender, \"Timeframe adjusted\", selectedTimeframe, 0, getPrice()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x030fdcd4f0c28c5dbcbc3f59aa8e2260c7f58ac45be2a2dca652999af89c33e0\n        /* \"contracts/MainBot.sol\":3634:3651  selectedTimeframe */\n      dup3\n        /* \"contracts/MainBot.sol\":3653:3654  0 */\n      0x00\n        /* \"contracts/MainBot.sol\":3656:3666  getPrice() */\n      tag_232\n        /* \"contracts/MainBot.sol\":3656:3664  getPrice */\n      tag_185\n        /* \"contracts/MainBot.sol\":3656:3666  getPrice() */\n      jump\t// in\n    tag_232:\n        /* \"contracts/MainBot.sol\":3586:3667  TradeExecuted(msg.sender, \"Timeframe adjusted\", selectedTimeframe, 0, getPrice()) */\n      mload(0x40)\n      tag_233\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_234\n      jump\t// in\n    tag_233:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/MainBot.sol\":3309:3674  function adjustTimeframe(uint256 selectedTimeframe) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/MainBot.sol\":967:987  address public owner */\n    tag_121:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/MainBot.sol\":3680:3799  function checkPrice() external view returns (uint256) {... */\n    tag_125:\n        /* \"contracts/MainBot.sol\":3725:3732  uint256 */\n      0x00\n        /* \"contracts/MainBot.sol\":3744:3757  uint256 price */\n      dup1\n        /* \"contracts/MainBot.sol\":3760:3770  getPrice() */\n      tag_236\n        /* \"contracts/MainBot.sol\":3760:3768  getPrice */\n      tag_185\n        /* \"contracts/MainBot.sol\":3760:3770  getPrice() */\n      jump\t// in\n    tag_236:\n        /* \"contracts/MainBot.sol\":3744:3770  uint256 price = getPrice() */\n      swap1\n      pop\n        /* \"contracts/MainBot.sol\":3787:3792  price */\n      dup1\n        /* \"contracts/MainBot.sol\":3780:3792  return price */\n      swap2\n      pop\n      pop\n        /* \"contracts/MainBot.sol\":3680:3799  function checkPrice() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/MainBot.sol\":3028:3125  function setController(address controller) external onlyOwner {... */\n    tag_131:\n        /* \"contracts/MainBot.sol\":2595:2600  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MainBot.sol\":2581:2600  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MainBot.sol\":2581:2591  msg.sender */\n      caller\n        /* \"contracts/MainBot.sol\":2581:2600  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/MainBot.sol\":2573:2618  require(msg.sender == owner, \"Not the owner\") */\n      tag_238\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_239\n      swap1\n      tag_178\n      jump\t// in\n    tag_239:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_238:\n        /* \"contracts/MainBot.sol\":3108:3118  controller */\n      dup1\n        /* \"contracts/MainBot.sol\":3100:3105  owner */\n      0x00\n      dup1\n        /* \"contracts/MainBot.sol\":3100:3118  owner = controller */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/MainBot.sol\":3028:3125  function setController(address controller) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/MainBot.sol\":3975:4104  function convertAllToPOL() external onlyOwner {... */\n    tag_134:\n        /* \"contracts/MainBot.sol\":2595:2600  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MainBot.sol\":2581:2600  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MainBot.sol\":2581:2591  msg.sender */\n      caller\n        /* \"contracts/MainBot.sol\":2581:2600  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/MainBot.sol\":2573:2618  require(msg.sender == owner, \"Not the owner\") */\n      tag_242\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_243\n      swap1\n      tag_178\n      jump\t// in\n    tag_243:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_242:\n        /* \"contracts/MainBot.sol\":4050:4060  msg.sender */\n      caller\n        /* \"contracts/MainBot.sol\":4036:4097  TradeExecuted(msg.sender, \"convert to POL\", 0, 0, getPrice()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x030fdcd4f0c28c5dbcbc3f59aa8e2260c7f58ac45be2a2dca652999af89c33e0\n        /* \"contracts/MainBot.sol\":4080:4081  0 */\n      0x00\n        /* \"contracts/MainBot.sol\":4083:4084  0 */\n      dup1\n        /* \"contracts/MainBot.sol\":4086:4096  getPrice() */\n      tag_245\n        /* \"contracts/MainBot.sol\":4086:4094  getPrice */\n      tag_185\n        /* \"contracts/MainBot.sol\":4086:4096  getPrice() */\n      jump\t// in\n    tag_245:\n        /* \"contracts/MainBot.sol\":4036:4097  TradeExecuted(msg.sender, \"convert to POL\", 0, 0, getPrice()) */\n      mload(0x40)\n      tag_246\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_247\n      jump\t// in\n    tag_246:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/MainBot.sol\":3975:4104  function convertAllToPOL() external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/MainBot.sol\":1202:1238  uint256 public gasCostMultiplier = 3 */\n    tag_137:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"contracts/MainBot.sol\":1482:1551  address public usdtToken = 0x1E4a5963aBFD975d8c9021ce480b42188849D41d */\n    tag_141:\n      0x0b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/MainBot.sol\":1244:1280  uint256 public trailingStopLoss = 10 */\n    tag_145:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"contracts/MainBot.sol\":1168:1196  uint256 public lossThreshold */\n    tag_149:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"contracts/MainBot.sol\":1026:1055  uint256 public initialDeposit */\n    tag_153:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"contracts/MainBot.sol\":1771:1847  address public priceFeedAddress = 0x5E988c11a4f92155C30D9fb69Ed75597f712B113 */\n    tag_157:\n      0x0e\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/MainBot.sol\":1670:1745  address public quickSwapRouter = 0x1E7E4c855520b2106320952A570a3e5E3E618101 */\n    tag_161:\n      0x0d\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/MainBot.sol\":1981:2063  address public uniswapPositionManager = 0xC36442b4a4522E871399CD717aBDD847Ab11FE88 */\n    tag_165:\n      0x10\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/MainBot.sol\":1371:1439  address public POLToken = 0x22B21BedDef74FE62F031D2c5c8F7a9F8a4b304D */\n    tag_169:\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/MainBot.sol\":1132:1162  uint256 public profitThreshold */\n    tag_173:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"contracts/MainBot.sol\":7439:7738  function getPrice() internal view returns (uint256) { ... */\n    tag_185:\n        /* \"contracts/MainBot.sol\":7482:7489  uint256 */\n      0x00\n        /* \"contracts/MainBot.sol\":7506:7537  AggregatorV3Interface priceFeed */\n      dup1\n        /* \"contracts/MainBot.sol\":7562:7578  priceFeedAddress */\n      0x0e\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MainBot.sol\":7506:7579  AggregatorV3Interface priceFeed = AggregatorV3Interface(priceFeedAddress) */\n      swap1\n      pop\n        /* \"contracts/MainBot.sol\":7597:7606  int price */\n      0x00\n        /* \"contracts/MainBot.sol\":7613:7622  priceFeed */\n      dup2\n        /* \"contracts/MainBot.sol\":7613:7638  priceFeed.latestRoundData */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfeaf968c\n        /* \"contracts/MainBot.sol\":7613:7640  priceFeed.latestRoundData() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0xa0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_250\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_250:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_251\n      swap2\n      swap1\n      tag_252\n      jump\t// in\n    tag_251:\n        /* \"contracts/MainBot.sol\":7594:7640  (, int price,,,) = priceFeed.latestRoundData() */\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"contracts/MainBot.sol\":7665:7673  10 ** 10 */\n      0x02540be400\n        /* \"contracts/MainBot.sol\":7657:7662  price */\n      dup2\n        /* \"contracts/MainBot.sol\":7657:7673  price * 10 ** 10 */\n      tag_253\n      swap2\n      swap1\n      tag_254\n      jump\t// in\n    tag_253:\n        /* \"contracts/MainBot.sol\":7642:7674  return uint256(price * 10 ** 10) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/MainBot.sol\":7439:7738  function getPrice() internal view returns (uint256) { ... */\n      swap1\n      jump\t// out\n        /* \"contracts/MainBot.sol\":4653:4892  function calculateAmountOut(uint256 amountIn, uint160 sqrtPriceX96, uint256 liquidity) internal pure returns (uint256) {... */\n    tag_198:\n        /* \"contracts/MainBot.sol\":4763:4770  uint256 */\n      0x00\n        /* \"contracts/MainBot.sol\":4879:4888  liquidity */\n      dup2\n        /* \"contracts/MainBot.sol\":4864:4876  sqrtPriceX96 */\n      dup4\n        /* \"contracts/MainBot.sol\":4853:4876  amountIn * sqrtPriceX96 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MainBot.sol\":4853:4861  amountIn */\n      dup6\n        /* \"contracts/MainBot.sol\":4853:4876  amountIn * sqrtPriceX96 */\n      tag_256\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_256:\n        /* \"contracts/MainBot.sol\":4853:4888  amountIn * sqrtPriceX96 / liquidity */\n      tag_257\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_257:\n        /* \"contracts/MainBot.sol\":4838:4889  return uint256(amountIn * sqrtPriceX96 / liquidity) */\n      swap1\n      pop\n        /* \"contracts/MainBot.sol\":4653:4892  function calculateAmountOut(uint256 amountIn, uint160 sqrtPriceX96, uint256 liquidity) internal pure returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_258:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:270   */\n    tag_259:\n        /* \"#utility.yul\":138:215   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":135:136   */\n      0x00\n        /* \"#utility.yul\":128:216   */\n      mstore\n        /* \"#utility.yul\":235:239   */\n      0x11\n        /* \"#utility.yul\":232:233   */\n      0x04\n        /* \"#utility.yul\":225:240   */\n      mstore\n        /* \"#utility.yul\":259:263   */\n      0x24\n        /* \"#utility.yul\":256:257   */\n      0x00\n        /* \"#utility.yul\":249:264   */\n      revert\n        /* \"#utility.yul\":276:467   */\n    tag_42:\n        /* \"#utility.yul\":316:319   */\n      0x00\n        /* \"#utility.yul\":335:355   */\n      tag_328\n        /* \"#utility.yul\":353:354   */\n      dup3\n        /* \"#utility.yul\":335:355   */\n      tag_258\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":330:355   */\n      swap2\n      pop\n        /* \"#utility.yul\":369:389   */\n      tag_329\n        /* \"#utility.yul\":387:388   */\n      dup4\n        /* \"#utility.yul\":369:389   */\n      tag_258\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":364:389   */\n      swap3\n      pop\n        /* \"#utility.yul\":412:413   */\n      dup3\n        /* \"#utility.yul\":409:410   */\n      dup3\n        /* \"#utility.yul\":405:414   */\n      add\n        /* \"#utility.yul\":398:414   */\n      swap1\n      pop\n        /* \"#utility.yul\":433:436   */\n      dup1\n        /* \"#utility.yul\":430:431   */\n      dup3\n        /* \"#utility.yul\":427:437   */\n      gt\n        /* \"#utility.yul\":424:460   */\n      iszero\n      tag_330\n      jumpi\n        /* \"#utility.yul\":440:458   */\n      tag_331\n      tag_259\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":424:460   */\n    tag_330:\n        /* \"#utility.yul\":276:467   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":473:883   */\n    tag_44:\n        /* \"#utility.yul\":513:520   */\n      0x00\n        /* \"#utility.yul\":536:556   */\n      tag_333\n        /* \"#utility.yul\":554:555   */\n      dup3\n        /* \"#utility.yul\":536:556   */\n      tag_258\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":531:556   */\n      swap2\n      pop\n        /* \"#utility.yul\":570:590   */\n      tag_334\n        /* \"#utility.yul\":588:589   */\n      dup4\n        /* \"#utility.yul\":570:590   */\n      tag_258\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":565:590   */\n      swap3\n      pop\n        /* \"#utility.yul\":625:626   */\n      dup3\n        /* \"#utility.yul\":622:623   */\n      dup3\n        /* \"#utility.yul\":618:627   */\n      mul\n        /* \"#utility.yul\":647:677   */\n      tag_335\n        /* \"#utility.yul\":665:676   */\n      dup2\n        /* \"#utility.yul\":647:677   */\n      tag_258\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":636:677   */\n      swap2\n      pop\n        /* \"#utility.yul\":826:827   */\n      dup3\n        /* \"#utility.yul\":817:824   */\n      dup3\n        /* \"#utility.yul\":813:828   */\n      div\n        /* \"#utility.yul\":810:811   */\n      dup5\n        /* \"#utility.yul\":807:829   */\n      eq\n        /* \"#utility.yul\":787:788   */\n      dup4\n        /* \"#utility.yul\":780:789   */\n      iszero\n        /* \"#utility.yul\":760:843   */\n      or\n        /* \"#utility.yul\":737:876   */\n      tag_336\n      jumpi\n        /* \"#utility.yul\":856:874   */\n      tag_337\n      tag_259\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":737:876   */\n    tag_336:\n        /* \"#utility.yul\":521:883   */\n      pop\n        /* \"#utility.yul\":473:883   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":889:1069   */\n    tag_260:\n        /* \"#utility.yul\":937:1014   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":934:935   */\n      0x00\n        /* \"#utility.yul\":927:1015   */\n      mstore\n        /* \"#utility.yul\":1034:1038   */\n      0x12\n        /* \"#utility.yul\":1031:1032   */\n      0x04\n        /* \"#utility.yul\":1024:1039   */\n      mstore\n        /* \"#utility.yul\":1058:1062   */\n      0x24\n        /* \"#utility.yul\":1055:1056   */\n      0x00\n        /* \"#utility.yul\":1048:1063   */\n      revert\n        /* \"#utility.yul\":1075:1260   */\n    tag_46:\n        /* \"#utility.yul\":1115:1116   */\n      0x00\n        /* \"#utility.yul\":1132:1152   */\n      tag_340\n        /* \"#utility.yul\":1150:1151   */\n      dup3\n        /* \"#utility.yul\":1132:1152   */\n      tag_258\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":1127:1152   */\n      swap2\n      pop\n        /* \"#utility.yul\":1166:1186   */\n      tag_341\n        /* \"#utility.yul\":1184:1185   */\n      dup4\n        /* \"#utility.yul\":1166:1186   */\n      tag_258\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":1161:1186   */\n      swap3\n      pop\n        /* \"#utility.yul\":1205:1206   */\n      dup3\n        /* \"#utility.yul\":1195:1230   */\n      tag_342\n      jumpi\n        /* \"#utility.yul\":1210:1228   */\n      tag_343\n      tag_260\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":1195:1230   */\n    tag_342:\n        /* \"#utility.yul\":1252:1253   */\n      dup3\n        /* \"#utility.yul\":1249:1250   */\n      dup3\n        /* \"#utility.yul\":1245:1254   */\n      div\n        /* \"#utility.yul\":1240:1254   */\n      swap1\n      pop\n        /* \"#utility.yul\":1075:1260   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1266:1392   */\n    tag_261:\n        /* \"#utility.yul\":1303:1310   */\n      0x00\n        /* \"#utility.yul\":1343:1385   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1336:1341   */\n      dup3\n        /* \"#utility.yul\":1332:1386   */\n      and\n        /* \"#utility.yul\":1321:1386   */\n      swap1\n      pop\n        /* \"#utility.yul\":1266:1392   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1398:1494   */\n    tag_262:\n        /* \"#utility.yul\":1435:1442   */\n      0x00\n        /* \"#utility.yul\":1464:1488   */\n      tag_346\n        /* \"#utility.yul\":1482:1487   */\n      dup3\n        /* \"#utility.yul\":1464:1488   */\n      tag_261\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":1453:1488   */\n      swap1\n      pop\n        /* \"#utility.yul\":1398:1494   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1500:1618   */\n    tag_263:\n        /* \"#utility.yul\":1587:1611   */\n      tag_348\n        /* \"#utility.yul\":1605:1610   */\n      dup2\n        /* \"#utility.yul\":1587:1611   */\n      tag_262\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":1582:1585   */\n      dup3\n        /* \"#utility.yul\":1575:1612   */\n      mstore\n        /* \"#utility.yul\":1500:1618   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1624:1846   */\n    tag_55:\n        /* \"#utility.yul\":1717:1721   */\n      0x00\n        /* \"#utility.yul\":1755:1757   */\n      0x20\n        /* \"#utility.yul\":1744:1753   */\n      dup3\n        /* \"#utility.yul\":1740:1758   */\n      add\n        /* \"#utility.yul\":1732:1758   */\n      swap1\n      pop\n        /* \"#utility.yul\":1768:1839   */\n      tag_350\n        /* \"#utility.yul\":1836:1837   */\n      0x00\n        /* \"#utility.yul\":1825:1834   */\n      dup4\n        /* \"#utility.yul\":1821:1838   */\n      add\n        /* \"#utility.yul\":1812:1818   */\n      dup5\n        /* \"#utility.yul\":1768:1839   */\n      tag_263\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":1624:1846   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1852:1970   */\n    tag_264:\n        /* \"#utility.yul\":1939:1963   */\n      tag_352\n        /* \"#utility.yul\":1957:1962   */\n      dup2\n        /* \"#utility.yul\":1939:1963   */\n      tag_258\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":1934:1937   */\n      dup3\n        /* \"#utility.yul\":1927:1964   */\n      mstore\n        /* \"#utility.yul\":1852:1970   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1976:2198   */\n    tag_60:\n        /* \"#utility.yul\":2069:2073   */\n      0x00\n        /* \"#utility.yul\":2107:2109   */\n      0x20\n        /* \"#utility.yul\":2096:2105   */\n      dup3\n        /* \"#utility.yul\":2092:2110   */\n      add\n        /* \"#utility.yul\":2084:2110   */\n      swap1\n      pop\n        /* \"#utility.yul\":2120:2191   */\n      tag_354\n        /* \"#utility.yul\":2188:2189   */\n      0x00\n        /* \"#utility.yul\":2177:2186   */\n      dup4\n        /* \"#utility.yul\":2173:2190   */\n      add\n        /* \"#utility.yul\":2164:2170   */\n      dup5\n        /* \"#utility.yul\":2120:2191   */\n      tag_264\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":1976:2198   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2204:2279   */\n    tag_265:\n        /* \"#utility.yul\":2237:2243   */\n      0x00\n        /* \"#utility.yul\":2270:2272   */\n      0x40\n        /* \"#utility.yul\":2264:2273   */\n      mload\n        /* \"#utility.yul\":2254:2273   */\n      swap1\n      pop\n        /* \"#utility.yul\":2204:2279   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":2285:2402   */\n    tag_266:\n        /* \"#utility.yul\":2394:2395   */\n      0x00\n        /* \"#utility.yul\":2391:2392   */\n      dup1\n        /* \"#utility.yul\":2384:2396   */\n      revert\n        /* \"#utility.yul\":2408:2525   */\n    tag_267:\n        /* \"#utility.yul\":2517:2518   */\n      0x00\n        /* \"#utility.yul\":2514:2515   */\n      dup1\n        /* \"#utility.yul\":2507:2519   */\n      revert\n        /* \"#utility.yul\":2531:2648   */\n    tag_268:\n        /* \"#utility.yul\":2640:2641   */\n      0x00\n        /* \"#utility.yul\":2637:2638   */\n      dup1\n        /* \"#utility.yul\":2630:2642   */\n      revert\n        /* \"#utility.yul\":2654:2771   */\n    tag_269:\n        /* \"#utility.yul\":2763:2764   */\n      0x00\n        /* \"#utility.yul\":2760:2761   */\n      dup1\n        /* \"#utility.yul\":2753:2765   */\n      revert\n        /* \"#utility.yul\":2777:2879   */\n    tag_270:\n        /* \"#utility.yul\":2818:2824   */\n      0x00\n        /* \"#utility.yul\":2869:2871   */\n      0x1f\n        /* \"#utility.yul\":2865:2872   */\n      not\n        /* \"#utility.yul\":2860:2862   */\n      0x1f\n        /* \"#utility.yul\":2853:2858   */\n      dup4\n        /* \"#utility.yul\":2849:2863   */\n      add\n        /* \"#utility.yul\":2845:2873   */\n      and\n        /* \"#utility.yul\":2835:2873   */\n      swap1\n      pop\n        /* \"#utility.yul\":2777:2879   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2885:3065   */\n    tag_271:\n        /* \"#utility.yul\":2933:3010   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2930:2931   */\n      0x00\n        /* \"#utility.yul\":2923:3011   */\n      mstore\n        /* \"#utility.yul\":3030:3034   */\n      0x41\n        /* \"#utility.yul\":3027:3028   */\n      0x04\n        /* \"#utility.yul\":3020:3035   */\n      mstore\n        /* \"#utility.yul\":3054:3058   */\n      0x24\n        /* \"#utility.yul\":3051:3052   */\n      0x00\n        /* \"#utility.yul\":3044:3059   */\n      revert\n        /* \"#utility.yul\":3071:3352   */\n    tag_272:\n        /* \"#utility.yul\":3154:3181   */\n      tag_363\n        /* \"#utility.yul\":3176:3180   */\n      dup3\n        /* \"#utility.yul\":3154:3181   */\n      tag_270\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":3146:3152   */\n      dup2\n        /* \"#utility.yul\":3142:3182   */\n      add\n        /* \"#utility.yul\":3284:3290   */\n      dup2\n        /* \"#utility.yul\":3272:3282   */\n      dup2\n        /* \"#utility.yul\":3269:3291   */\n      lt\n        /* \"#utility.yul\":3248:3266   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3236:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3267   */\n      gt\n        /* \"#utility.yul\":3230:3292   */\n      or\n        /* \"#utility.yul\":3227:3315   */\n      iszero\n      tag_364\n      jumpi\n        /* \"#utility.yul\":3295:3313   */\n      tag_365\n      tag_271\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":3227:3315   */\n    tag_364:\n        /* \"#utility.yul\":3335:3345   */\n      dup1\n        /* \"#utility.yul\":3331:3333   */\n      0x40\n        /* \"#utility.yul\":3324:3346   */\n      mstore\n        /* \"#utility.yul\":3114:3352   */\n      pop\n        /* \"#utility.yul\":3071:3352   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3358:3487   */\n    tag_273:\n        /* \"#utility.yul\":3392:3398   */\n      0x00\n        /* \"#utility.yul\":3419:3439   */\n      tag_367\n      tag_265\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":3409:3439   */\n      swap1\n      pop\n        /* \"#utility.yul\":3448:3481   */\n      tag_368\n        /* \"#utility.yul\":3476:3480   */\n      dup3\n        /* \"#utility.yul\":3468:3474   */\n      dup3\n        /* \"#utility.yul\":3448:3481   */\n      tag_272\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":3358:3487   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3493:3801   */\n    tag_274:\n        /* \"#utility.yul\":3555:3559   */\n      0x00\n        /* \"#utility.yul\":3645:3663   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3637:3643   */\n      dup3\n        /* \"#utility.yul\":3634:3664   */\n      gt\n        /* \"#utility.yul\":3631:3687   */\n      iszero\n      tag_370\n      jumpi\n        /* \"#utility.yul\":3667:3685   */\n      tag_371\n      tag_271\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":3631:3687   */\n    tag_370:\n        /* \"#utility.yul\":3705:3734   */\n      tag_372\n        /* \"#utility.yul\":3727:3733   */\n      dup3\n        /* \"#utility.yul\":3705:3734   */\n      tag_270\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":3697:3734   */\n      swap1\n      pop\n        /* \"#utility.yul\":3789:3793   */\n      0x20\n        /* \"#utility.yul\":3783:3787   */\n      dup2\n        /* \"#utility.yul\":3779:3794   */\n      add\n        /* \"#utility.yul\":3771:3794   */\n      swap1\n      pop\n        /* \"#utility.yul\":3493:3801   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3807:3953   */\n    tag_275:\n        /* \"#utility.yul\":3904:3910   */\n      dup3\n        /* \"#utility.yul\":3899:3902   */\n      dup2\n        /* \"#utility.yul\":3894:3897   */\n      dup4\n        /* \"#utility.yul\":3881:3911   */\n      calldatacopy\n        /* \"#utility.yul\":3945:3946   */\n      0x00\n        /* \"#utility.yul\":3936:3942   */\n      dup4\n        /* \"#utility.yul\":3931:3934   */\n      dup4\n        /* \"#utility.yul\":3927:3943   */\n      add\n        /* \"#utility.yul\":3920:3947   */\n      mstore\n        /* \"#utility.yul\":3807:3953   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3959:4384   */\n    tag_276:\n        /* \"#utility.yul\":4037:4042   */\n      0x00\n        /* \"#utility.yul\":4062:4128   */\n      tag_375\n        /* \"#utility.yul\":4078:4127   */\n      tag_376\n        /* \"#utility.yul\":4120:4126   */\n      dup5\n        /* \"#utility.yul\":4078:4127   */\n      tag_274\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":4062:4128   */\n      tag_273\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":4053:4128   */\n      swap1\n      pop\n        /* \"#utility.yul\":4151:4157   */\n      dup3\n        /* \"#utility.yul\":4144:4149   */\n      dup2\n        /* \"#utility.yul\":4137:4158   */\n      mstore\n        /* \"#utility.yul\":4189:4193   */\n      0x20\n        /* \"#utility.yul\":4182:4187   */\n      dup2\n        /* \"#utility.yul\":4178:4194   */\n      add\n        /* \"#utility.yul\":4227:4230   */\n      dup5\n        /* \"#utility.yul\":4218:4224   */\n      dup5\n        /* \"#utility.yul\":4213:4216   */\n      dup5\n        /* \"#utility.yul\":4209:4225   */\n      add\n        /* \"#utility.yul\":4206:4231   */\n      gt\n        /* \"#utility.yul\":4203:4315   */\n      iszero\n      tag_377\n      jumpi\n        /* \"#utility.yul\":4234:4313   */\n      tag_378\n      tag_269\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":4203:4315   */\n    tag_377:\n        /* \"#utility.yul\":4324:4378   */\n      tag_379\n        /* \"#utility.yul\":4371:4377   */\n      dup5\n        /* \"#utility.yul\":4366:4369   */\n      dup3\n        /* \"#utility.yul\":4361:4364   */\n      dup6\n        /* \"#utility.yul\":4324:4378   */\n      tag_275\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":4043:4384   */\n      pop\n        /* \"#utility.yul\":3959:4384   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4404:4744   */\n    tag_277:\n        /* \"#utility.yul\":4460:4465   */\n      0x00\n        /* \"#utility.yul\":4509:4512   */\n      dup3\n        /* \"#utility.yul\":4502:4506   */\n      0x1f\n        /* \"#utility.yul\":4494:4500   */\n      dup4\n        /* \"#utility.yul\":4490:4507   */\n      add\n        /* \"#utility.yul\":4486:4513   */\n      slt\n        /* \"#utility.yul\":4476:4598   */\n      tag_381\n      jumpi\n        /* \"#utility.yul\":4517:4596   */\n      tag_382\n      tag_268\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":4476:4598   */\n    tag_381:\n        /* \"#utility.yul\":4634:4640   */\n      dup2\n        /* \"#utility.yul\":4621:4641   */\n      calldataload\n        /* \"#utility.yul\":4659:4738   */\n      tag_383\n        /* \"#utility.yul\":4734:4737   */\n      dup5\n        /* \"#utility.yul\":4726:4732   */\n      dup3\n        /* \"#utility.yul\":4719:4723   */\n      0x20\n        /* \"#utility.yul\":4711:4717   */\n      dup7\n        /* \"#utility.yul\":4707:4724   */\n      add\n        /* \"#utility.yul\":4659:4738   */\n      tag_276\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":4650:4738   */\n      swap2\n      pop\n        /* \"#utility.yul\":4466:4744   */\n      pop\n        /* \"#utility.yul\":4404:4744   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4750:4872   */\n    tag_278:\n        /* \"#utility.yul\":4823:4847   */\n      tag_385\n        /* \"#utility.yul\":4841:4846   */\n      dup2\n        /* \"#utility.yul\":4823:4847   */\n      tag_258\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":4816:4821   */\n      dup2\n        /* \"#utility.yul\":4813:4848   */\n      eq\n        /* \"#utility.yul\":4803:4866   */\n      tag_386\n      jumpi\n        /* \"#utility.yul\":4862:4863   */\n      0x00\n        /* \"#utility.yul\":4859:4860   */\n      dup1\n        /* \"#utility.yul\":4852:4864   */\n      revert\n        /* \"#utility.yul\":4803:4866   */\n    tag_386:\n        /* \"#utility.yul\":4750:4872   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4878:5017   */\n    tag_279:\n        /* \"#utility.yul\":4924:4929   */\n      0x00\n        /* \"#utility.yul\":4962:4968   */\n      dup2\n        /* \"#utility.yul\":4949:4969   */\n      calldataload\n        /* \"#utility.yul\":4940:4969   */\n      swap1\n      pop\n        /* \"#utility.yul\":4978:5011   */\n      tag_388\n        /* \"#utility.yul\":5005:5010   */\n      dup2\n        /* \"#utility.yul\":4978:5011   */\n      tag_278\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":4878:5017   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5023:5677   */\n    tag_75:\n        /* \"#utility.yul\":5101:5107   */\n      0x00\n        /* \"#utility.yul\":5109:5115   */\n      dup1\n        /* \"#utility.yul\":5158:5160   */\n      0x40\n        /* \"#utility.yul\":5146:5155   */\n      dup4\n        /* \"#utility.yul\":5137:5144   */\n      dup6\n        /* \"#utility.yul\":5133:5156   */\n      sub\n        /* \"#utility.yul\":5129:5161   */\n      slt\n        /* \"#utility.yul\":5126:5245   */\n      iszero\n      tag_390\n      jumpi\n        /* \"#utility.yul\":5164:5243   */\n      tag_391\n      tag_266\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":5126:5245   */\n    tag_390:\n        /* \"#utility.yul\":5312:5313   */\n      0x00\n        /* \"#utility.yul\":5301:5310   */\n      dup4\n        /* \"#utility.yul\":5297:5314   */\n      add\n        /* \"#utility.yul\":5284:5315   */\n      calldataload\n        /* \"#utility.yul\":5342:5360   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5334:5340   */\n      dup2\n        /* \"#utility.yul\":5331:5361   */\n      gt\n        /* \"#utility.yul\":5328:5445   */\n      iszero\n      tag_392\n      jumpi\n        /* \"#utility.yul\":5364:5443   */\n      tag_393\n      tag_267\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":5328:5445   */\n    tag_392:\n        /* \"#utility.yul\":5469:5532   */\n      tag_394\n        /* \"#utility.yul\":5524:5531   */\n      dup6\n        /* \"#utility.yul\":5515:5521   */\n      dup3\n        /* \"#utility.yul\":5504:5513   */\n      dup7\n        /* \"#utility.yul\":5500:5522   */\n      add\n        /* \"#utility.yul\":5469:5532   */\n      tag_277\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":5459:5532   */\n      swap3\n      pop\n        /* \"#utility.yul\":5255:5542   */\n      pop\n        /* \"#utility.yul\":5581:5583   */\n      0x20\n        /* \"#utility.yul\":5607:5660   */\n      tag_395\n        /* \"#utility.yul\":5652:5659   */\n      dup6\n        /* \"#utility.yul\":5643:5649   */\n      dup3\n        /* \"#utility.yul\":5632:5641   */\n      dup7\n        /* \"#utility.yul\":5628:5650   */\n      add\n        /* \"#utility.yul\":5607:5660   */\n      tag_279\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":5597:5660   */\n      swap2\n      pop\n        /* \"#utility.yul\":5552:5670   */\n      pop\n        /* \"#utility.yul\":5023:5677   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5683:5805   */\n    tag_280:\n        /* \"#utility.yul\":5756:5780   */\n      tag_397\n        /* \"#utility.yul\":5774:5779   */\n      dup2\n        /* \"#utility.yul\":5756:5780   */\n      tag_262\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":5749:5754   */\n      dup2\n        /* \"#utility.yul\":5746:5781   */\n      eq\n        /* \"#utility.yul\":5736:5799   */\n      tag_398\n      jumpi\n        /* \"#utility.yul\":5795:5796   */\n      0x00\n        /* \"#utility.yul\":5792:5793   */\n      dup1\n        /* \"#utility.yul\":5785:5797   */\n      revert\n        /* \"#utility.yul\":5736:5799   */\n    tag_398:\n        /* \"#utility.yul\":5683:5805   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5811:5950   */\n    tag_281:\n        /* \"#utility.yul\":5857:5862   */\n      0x00\n        /* \"#utility.yul\":5895:5901   */\n      dup2\n        /* \"#utility.yul\":5882:5902   */\n      calldataload\n        /* \"#utility.yul\":5873:5902   */\n      swap1\n      pop\n        /* \"#utility.yul\":5911:5944   */\n      tag_400\n        /* \"#utility.yul\":5938:5943   */\n      dup2\n        /* \"#utility.yul\":5911:5944   */\n      tag_280\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":5811:5950   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5956:6430   */\n    tag_80:\n        /* \"#utility.yul\":6024:6030   */\n      0x00\n        /* \"#utility.yul\":6032:6038   */\n      dup1\n        /* \"#utility.yul\":6081:6083   */\n      0x40\n        /* \"#utility.yul\":6069:6078   */\n      dup4\n        /* \"#utility.yul\":6060:6067   */\n      dup6\n        /* \"#utility.yul\":6056:6079   */\n      sub\n        /* \"#utility.yul\":6052:6084   */\n      slt\n        /* \"#utility.yul\":6049:6168   */\n      iszero\n      tag_402\n      jumpi\n        /* \"#utility.yul\":6087:6166   */\n      tag_403\n      tag_266\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":6049:6168   */\n    tag_402:\n        /* \"#utility.yul\":6207:6208   */\n      0x00\n        /* \"#utility.yul\":6232:6285   */\n      tag_404\n        /* \"#utility.yul\":6277:6284   */\n      dup6\n        /* \"#utility.yul\":6268:6274   */\n      dup3\n        /* \"#utility.yul\":6257:6266   */\n      dup7\n        /* \"#utility.yul\":6253:6275   */\n      add\n        /* \"#utility.yul\":6232:6285   */\n      tag_279\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":6222:6285   */\n      swap3\n      pop\n        /* \"#utility.yul\":6178:6295   */\n      pop\n        /* \"#utility.yul\":6334:6336   */\n      0x20\n        /* \"#utility.yul\":6360:6413   */\n      tag_405\n        /* \"#utility.yul\":6405:6412   */\n      dup6\n        /* \"#utility.yul\":6396:6402   */\n      dup3\n        /* \"#utility.yul\":6385:6394   */\n      dup7\n        /* \"#utility.yul\":6381:6403   */\n      add\n        /* \"#utility.yul\":6360:6413   */\n      tag_281\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":6350:6413   */\n      swap2\n      pop\n        /* \"#utility.yul\":6305:6423   */\n      pop\n        /* \"#utility.yul\":5956:6430   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6436:6526   */\n    tag_282:\n        /* \"#utility.yul\":6470:6477   */\n      0x00\n        /* \"#utility.yul\":6513:6518   */\n      dup2\n        /* \"#utility.yul\":6506:6519   */\n      iszero\n        /* \"#utility.yul\":6499:6520   */\n      iszero\n        /* \"#utility.yul\":6488:6520   */\n      swap1\n      pop\n        /* \"#utility.yul\":6436:6526   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6532:6641   */\n    tag_283:\n        /* \"#utility.yul\":6613:6634   */\n      tag_408\n        /* \"#utility.yul\":6628:6633   */\n      dup2\n        /* \"#utility.yul\":6613:6634   */\n      tag_282\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":6608:6611   */\n      dup3\n        /* \"#utility.yul\":6601:6635   */\n      mstore\n        /* \"#utility.yul\":6532:6641   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6647:6857   */\n    tag_83:\n        /* \"#utility.yul\":6734:6738   */\n      0x00\n        /* \"#utility.yul\":6772:6774   */\n      0x20\n        /* \"#utility.yul\":6761:6770   */\n      dup3\n        /* \"#utility.yul\":6757:6775   */\n      add\n        /* \"#utility.yul\":6749:6775   */\n      swap1\n      pop\n        /* \"#utility.yul\":6785:6850   */\n      tag_410\n        /* \"#utility.yul\":6847:6848   */\n      0x00\n        /* \"#utility.yul\":6836:6845   */\n      dup4\n        /* \"#utility.yul\":6832:6849   */\n      add\n        /* \"#utility.yul\":6823:6829   */\n      dup5\n        /* \"#utility.yul\":6785:6850   */\n      tag_283\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":6647:6857   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6863:7192   */\n    tag_90:\n        /* \"#utility.yul\":6922:6928   */\n      0x00\n        /* \"#utility.yul\":6971:6973   */\n      0x20\n        /* \"#utility.yul\":6959:6968   */\n      dup3\n        /* \"#utility.yul\":6950:6957   */\n      dup5\n        /* \"#utility.yul\":6946:6969   */\n      sub\n        /* \"#utility.yul\":6942:6974   */\n      slt\n        /* \"#utility.yul\":6939:7058   */\n      iszero\n      tag_412\n      jumpi\n        /* \"#utility.yul\":6977:7056   */\n      tag_413\n      tag_266\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":6939:7058   */\n    tag_412:\n        /* \"#utility.yul\":7097:7098   */\n      0x00\n        /* \"#utility.yul\":7122:7175   */\n      tag_414\n        /* \"#utility.yul\":7167:7174   */\n      dup5\n        /* \"#utility.yul\":7158:7164   */\n      dup3\n        /* \"#utility.yul\":7147:7156   */\n      dup6\n        /* \"#utility.yul\":7143:7165   */\n      add\n        /* \"#utility.yul\":7122:7175   */\n      tag_279\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":7112:7175   */\n      swap2\n      pop\n        /* \"#utility.yul\":7068:7185   */\n      pop\n        /* \"#utility.yul\":6863:7192   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7198:7707   */\n    tag_99:\n        /* \"#utility.yul\":7267:7273   */\n      0x00\n        /* \"#utility.yul\":7316:7318   */\n      0x20\n        /* \"#utility.yul\":7304:7313   */\n      dup3\n        /* \"#utility.yul\":7295:7302   */\n      dup5\n        /* \"#utility.yul\":7291:7314   */\n      sub\n        /* \"#utility.yul\":7287:7319   */\n      slt\n        /* \"#utility.yul\":7284:7403   */\n      iszero\n      tag_416\n      jumpi\n        /* \"#utility.yul\":7322:7401   */\n      tag_417\n      tag_266\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":7284:7403   */\n    tag_416:\n        /* \"#utility.yul\":7470:7471   */\n      0x00\n        /* \"#utility.yul\":7459:7468   */\n      dup3\n        /* \"#utility.yul\":7455:7472   */\n      add\n        /* \"#utility.yul\":7442:7473   */\n      calldataload\n        /* \"#utility.yul\":7500:7518   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7492:7498   */\n      dup2\n        /* \"#utility.yul\":7489:7519   */\n      gt\n        /* \"#utility.yul\":7486:7603   */\n      iszero\n      tag_418\n      jumpi\n        /* \"#utility.yul\":7522:7601   */\n      tag_419\n      tag_267\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":7486:7603   */\n    tag_418:\n        /* \"#utility.yul\":7627:7690   */\n      tag_420\n        /* \"#utility.yul\":7682:7689   */\n      dup5\n        /* \"#utility.yul\":7673:7679   */\n      dup3\n        /* \"#utility.yul\":7662:7671   */\n      dup6\n        /* \"#utility.yul\":7658:7680   */\n      add\n        /* \"#utility.yul\":7627:7690   */\n      tag_277\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":7617:7690   */\n      swap2\n      pop\n        /* \"#utility.yul\":7413:7700   */\n      pop\n        /* \"#utility.yul\":7198:7707   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7713:7812   */\n    tag_284:\n        /* \"#utility.yul\":7765:7771   */\n      0x00\n        /* \"#utility.yul\":7799:7804   */\n      dup2\n        /* \"#utility.yul\":7793:7805   */\n      mload\n        /* \"#utility.yul\":7783:7805   */\n      swap1\n      pop\n        /* \"#utility.yul\":7713:7812   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7818:7987   */\n    tag_285:\n        /* \"#utility.yul\":7902:7913   */\n      0x00\n        /* \"#utility.yul\":7936:7942   */\n      dup3\n        /* \"#utility.yul\":7931:7934   */\n      dup3\n        /* \"#utility.yul\":7924:7943   */\n      mstore\n        /* \"#utility.yul\":7976:7980   */\n      0x20\n        /* \"#utility.yul\":7971:7974   */\n      dup3\n        /* \"#utility.yul\":7967:7981   */\n      add\n        /* \"#utility.yul\":7952:7981   */\n      swap1\n      pop\n        /* \"#utility.yul\":7818:7987   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7993:8239   */\n    tag_286:\n        /* \"#utility.yul\":8074:8075   */\n      0x00\n        /* \"#utility.yul\":8084:8197   */\n    tag_424:\n        /* \"#utility.yul\":8098:8104   */\n      dup4\n        /* \"#utility.yul\":8095:8096   */\n      dup2\n        /* \"#utility.yul\":8092:8105   */\n      lt\n        /* \"#utility.yul\":8084:8197   */\n      iszero\n      tag_426\n      jumpi\n        /* \"#utility.yul\":8183:8184   */\n      dup1\n        /* \"#utility.yul\":8178:8181   */\n      dup3\n        /* \"#utility.yul\":8174:8185   */\n      add\n        /* \"#utility.yul\":8168:8186   */\n      mload\n        /* \"#utility.yul\":8164:8165   */\n      dup2\n        /* \"#utility.yul\":8159:8162   */\n      dup5\n        /* \"#utility.yul\":8155:8166   */\n      add\n        /* \"#utility.yul\":8148:8187   */\n      mstore\n        /* \"#utility.yul\":8120:8122   */\n      0x20\n        /* \"#utility.yul\":8117:8118   */\n      dup2\n        /* \"#utility.yul\":8113:8123   */\n      add\n        /* \"#utility.yul\":8108:8123   */\n      swap1\n      pop\n        /* \"#utility.yul\":8084:8197   */\n      jump(tag_424)\n    tag_426:\n        /* \"#utility.yul\":8231:8232   */\n      0x00\n        /* \"#utility.yul\":8222:8228   */\n      dup5\n        /* \"#utility.yul\":8217:8220   */\n      dup5\n        /* \"#utility.yul\":8213:8229   */\n      add\n        /* \"#utility.yul\":8206:8233   */\n      mstore\n        /* \"#utility.yul\":8055:8239   */\n      pop\n        /* \"#utility.yul\":7993:8239   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8245:8622   */\n    tag_287:\n        /* \"#utility.yul\":8333:8336   */\n      0x00\n        /* \"#utility.yul\":8361:8400   */\n      tag_428\n        /* \"#utility.yul\":8394:8399   */\n      dup3\n        /* \"#utility.yul\":8361:8400   */\n      tag_284\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":8416:8487   */\n      tag_429\n        /* \"#utility.yul\":8480:8486   */\n      dup2\n        /* \"#utility.yul\":8475:8478   */\n      dup6\n        /* \"#utility.yul\":8416:8487   */\n      tag_285\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":8409:8487   */\n      swap4\n      pop\n        /* \"#utility.yul\":8496:8561   */\n      tag_430\n        /* \"#utility.yul\":8554:8560   */\n      dup2\n        /* \"#utility.yul\":8549:8552   */\n      dup6\n        /* \"#utility.yul\":8542:8546   */\n      0x20\n        /* \"#utility.yul\":8535:8540   */\n      dup7\n        /* \"#utility.yul\":8531:8547   */\n      add\n        /* \"#utility.yul\":8496:8561   */\n      tag_286\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":8586:8615   */\n      tag_431\n        /* \"#utility.yul\":8608:8614   */\n      dup2\n        /* \"#utility.yul\":8586:8615   */\n      tag_270\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":8581:8584   */\n      dup5\n        /* \"#utility.yul\":8577:8616   */\n      add\n        /* \"#utility.yul\":8570:8616   */\n      swap2\n      pop\n        /* \"#utility.yul\":8337:8622   */\n      pop\n        /* \"#utility.yul\":8245:8622   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8628:8941   */\n    tag_110:\n        /* \"#utility.yul\":8741:8745   */\n      0x00\n        /* \"#utility.yul\":8779:8781   */\n      0x20\n        /* \"#utility.yul\":8768:8777   */\n      dup3\n        /* \"#utility.yul\":8764:8782   */\n      add\n        /* \"#utility.yul\":8756:8782   */\n      swap1\n      pop\n        /* \"#utility.yul\":8828:8837   */\n      dup2\n        /* \"#utility.yul\":8822:8826   */\n      dup2\n        /* \"#utility.yul\":8818:8838   */\n      sub\n        /* \"#utility.yul\":8814:8815   */\n      0x00\n        /* \"#utility.yul\":8803:8812   */\n      dup4\n        /* \"#utility.yul\":8799:8816   */\n      add\n        /* \"#utility.yul\":8792:8839   */\n      mstore\n        /* \"#utility.yul\":8856:8934   */\n      tag_433\n        /* \"#utility.yul\":8929:8933   */\n      dup2\n        /* \"#utility.yul\":8920:8926   */\n      dup5\n        /* \"#utility.yul\":8856:8934   */\n      tag_287\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":8848:8934   */\n      swap1\n      pop\n        /* \"#utility.yul\":8628:8941   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8947:9276   */\n    tag_130:\n        /* \"#utility.yul\":9006:9012   */\n      0x00\n        /* \"#utility.yul\":9055:9057   */\n      0x20\n        /* \"#utility.yul\":9043:9052   */\n      dup3\n        /* \"#utility.yul\":9034:9041   */\n      dup5\n        /* \"#utility.yul\":9030:9053   */\n      sub\n        /* \"#utility.yul\":9026:9058   */\n      slt\n        /* \"#utility.yul\":9023:9142   */\n      iszero\n      tag_435\n      jumpi\n        /* \"#utility.yul\":9061:9140   */\n      tag_436\n      tag_266\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":9023:9142   */\n    tag_435:\n        /* \"#utility.yul\":9181:9182   */\n      0x00\n        /* \"#utility.yul\":9206:9259   */\n      tag_437\n        /* \"#utility.yul\":9251:9258   */\n      dup5\n        /* \"#utility.yul\":9242:9248   */\n      dup3\n        /* \"#utility.yul\":9231:9240   */\n      dup6\n        /* \"#utility.yul\":9227:9249   */\n      add\n        /* \"#utility.yul\":9206:9259   */\n      tag_281\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":9196:9259   */\n      swap2\n      pop\n        /* \"#utility.yul\":9152:9269   */\n      pop\n        /* \"#utility.yul\":8947:9276   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9282:9445   */\n    tag_288:\n        /* \"#utility.yul\":9422:9437   */\n      0x4e6f7420746865206f776e657200000000000000000000000000000000000000\n        /* \"#utility.yul\":9418:9419   */\n      0x00\n        /* \"#utility.yul\":9410:9416   */\n      dup3\n        /* \"#utility.yul\":9406:9420   */\n      add\n        /* \"#utility.yul\":9399:9438   */\n      mstore\n        /* \"#utility.yul\":9282:9445   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9451:9817   */\n    tag_289:\n        /* \"#utility.yul\":9593:9596   */\n      0x00\n        /* \"#utility.yul\":9614:9681   */\n      tag_440\n        /* \"#utility.yul\":9678:9680   */\n      0x0d\n        /* \"#utility.yul\":9673:9676   */\n      dup4\n        /* \"#utility.yul\":9614:9681   */\n      tag_285\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":9607:9681   */\n      swap2\n      pop\n        /* \"#utility.yul\":9690:9783   */\n      tag_441\n        /* \"#utility.yul\":9779:9782   */\n      dup3\n        /* \"#utility.yul\":9690:9783   */\n      tag_288\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":9808:9810   */\n      0x20\n        /* \"#utility.yul\":9803:9806   */\n      dup3\n        /* \"#utility.yul\":9799:9811   */\n      add\n        /* \"#utility.yul\":9792:9811   */\n      swap1\n      pop\n        /* \"#utility.yul\":9451:9817   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9823:10242   */\n    tag_178:\n        /* \"#utility.yul\":9989:9993   */\n      0x00\n        /* \"#utility.yul\":10027:10029   */\n      0x20\n        /* \"#utility.yul\":10016:10025   */\n      dup3\n        /* \"#utility.yul\":10012:10030   */\n      add\n        /* \"#utility.yul\":10004:10030   */\n      swap1\n      pop\n        /* \"#utility.yul\":10076:10085   */\n      dup2\n        /* \"#utility.yul\":10070:10074   */\n      dup2\n        /* \"#utility.yul\":10066:10086   */\n      sub\n        /* \"#utility.yul\":10062:10063   */\n      0x00\n        /* \"#utility.yul\":10051:10060   */\n      dup4\n        /* \"#utility.yul\":10047:10064   */\n      add\n        /* \"#utility.yul\":10040:10087   */\n      mstore\n        /* \"#utility.yul\":10104:10235   */\n      tag_443\n        /* \"#utility.yul\":10230:10234   */\n      dup2\n        /* \"#utility.yul\":10104:10235   */\n      tag_289\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":10096:10235   */\n      swap1\n      pop\n        /* \"#utility.yul\":9823:10242   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10248:10333   */\n    tag_290:\n        /* \"#utility.yul\":10293:10300   */\n      0x00\n        /* \"#utility.yul\":10322:10327   */\n      dup2\n        /* \"#utility.yul\":10311:10327   */\n      swap1\n      pop\n        /* \"#utility.yul\":10248:10333   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10339:10399   */\n    tag_291:\n        /* \"#utility.yul\":10367:10370   */\n      0x00\n        /* \"#utility.yul\":10388:10393   */\n      dup2\n        /* \"#utility.yul\":10381:10393   */\n      swap1\n      pop\n        /* \"#utility.yul\":10339:10399   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10405:10563   */\n    tag_292:\n        /* \"#utility.yul\":10463:10472   */\n      0x00\n        /* \"#utility.yul\":10496:10557   */\n      tag_447\n        /* \"#utility.yul\":10514:10556   */\n      tag_448\n        /* \"#utility.yul\":10523:10555   */\n      tag_449\n        /* \"#utility.yul\":10549:10554   */\n      dup5\n        /* \"#utility.yul\":10523:10555   */\n      tag_290\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":10514:10556   */\n      tag_291\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":10496:10557   */\n      tag_258\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":10483:10557   */\n      swap1\n      pop\n        /* \"#utility.yul\":10405:10563   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10569:10716   */\n    tag_293:\n        /* \"#utility.yul\":10664:10709   */\n      tag_451\n        /* \"#utility.yul\":10703:10708   */\n      dup2\n        /* \"#utility.yul\":10664:10709   */\n      tag_292\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":10659:10662   */\n      dup3\n        /* \"#utility.yul\":10652:10710   */\n      mstore\n        /* \"#utility.yul\":10569:10716   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10722:11382   */\n    tag_187:\n        /* \"#utility.yul\":10927:10931   */\n      0x00\n        /* \"#utility.yul\":10965:10968   */\n      0x80\n        /* \"#utility.yul\":10954:10963   */\n      dup3\n        /* \"#utility.yul\":10950:10969   */\n      add\n        /* \"#utility.yul\":10942:10969   */\n      swap1\n      pop\n        /* \"#utility.yul\":11015:11024   */\n      dup2\n        /* \"#utility.yul\":11009:11013   */\n      dup2\n        /* \"#utility.yul\":11005:11025   */\n      sub\n        /* \"#utility.yul\":11001:11002   */\n      0x00\n        /* \"#utility.yul\":10990:10999   */\n      dup4\n        /* \"#utility.yul\":10986:11003   */\n      add\n        /* \"#utility.yul\":10979:11026   */\n      mstore\n        /* \"#utility.yul\":11043:11121   */\n      tag_453\n        /* \"#utility.yul\":11116:11120   */\n      dup2\n        /* \"#utility.yul\":11107:11113   */\n      dup8\n        /* \"#utility.yul\":11043:11121   */\n      tag_287\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":11035:11121   */\n      swap1\n      pop\n        /* \"#utility.yul\":11131:11203   */\n      tag_454\n        /* \"#utility.yul\":11199:11201   */\n      0x20\n        /* \"#utility.yul\":11188:11197   */\n      dup4\n        /* \"#utility.yul\":11184:11202   */\n      add\n        /* \"#utility.yul\":11175:11181   */\n      dup7\n        /* \"#utility.yul\":11131:11203   */\n      tag_264\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":11213:11293   */\n      tag_455\n        /* \"#utility.yul\":11289:11291   */\n      0x40\n        /* \"#utility.yul\":11278:11287   */\n      dup4\n        /* \"#utility.yul\":11274:11292   */\n      add\n        /* \"#utility.yul\":11265:11271   */\n      dup6\n        /* \"#utility.yul\":11213:11293   */\n      tag_293\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":11303:11375   */\n      tag_456\n        /* \"#utility.yul\":11371:11373   */\n      0x60\n        /* \"#utility.yul\":11360:11369   */\n      dup4\n        /* \"#utility.yul\":11356:11374   */\n      add\n        /* \"#utility.yul\":11347:11353   */\n      dup5\n        /* \"#utility.yul\":11303:11375   */\n      tag_264\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":10722:11382   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11388:11510   */\n    tag_294:\n        /* \"#utility.yul\":11461:11485   */\n      tag_458\n        /* \"#utility.yul\":11479:11484   */\n      dup2\n        /* \"#utility.yul\":11461:11485   */\n      tag_261\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":11454:11459   */\n      dup2\n        /* \"#utility.yul\":11451:11486   */\n      eq\n        /* \"#utility.yul\":11441:11504   */\n      tag_459\n      jumpi\n        /* \"#utility.yul\":11500:11501   */\n      0x00\n        /* \"#utility.yul\":11497:11498   */\n      dup1\n        /* \"#utility.yul\":11490:11502   */\n      revert\n        /* \"#utility.yul\":11441:11504   */\n    tag_459:\n        /* \"#utility.yul\":11388:11510   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11516:11659   */\n    tag_295:\n        /* \"#utility.yul\":11573:11578   */\n      0x00\n        /* \"#utility.yul\":11604:11610   */\n      dup2\n        /* \"#utility.yul\":11598:11611   */\n      mload\n        /* \"#utility.yul\":11589:11611   */\n      swap1\n      pop\n        /* \"#utility.yul\":11620:11653   */\n      tag_461\n        /* \"#utility.yul\":11647:11652   */\n      dup2\n        /* \"#utility.yul\":11620:11653   */\n      tag_294\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":11516:11659   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11665:11755   */\n    tag_296:\n        /* \"#utility.yul\":11700:11707   */\n      0x00\n        /* \"#utility.yul\":11743:11748   */\n      dup2\n        /* \"#utility.yul\":11740:11741   */\n      0x02\n        /* \"#utility.yul\":11729:11749   */\n      signextend\n        /* \"#utility.yul\":11718:11749   */\n      swap1\n      pop\n        /* \"#utility.yul\":11665:11755   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11761:11879   */\n    tag_297:\n        /* \"#utility.yul\":11832:11854   */\n      tag_464\n        /* \"#utility.yul\":11848:11853   */\n      dup2\n        /* \"#utility.yul\":11832:11854   */\n      tag_296\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":11825:11830   */\n      dup2\n        /* \"#utility.yul\":11822:11855   */\n      eq\n        /* \"#utility.yul\":11812:11873   */\n      tag_465\n      jumpi\n        /* \"#utility.yul\":11869:11870   */\n      0x00\n        /* \"#utility.yul\":11866:11867   */\n      dup1\n        /* \"#utility.yul\":11859:11871   */\n      revert\n        /* \"#utility.yul\":11812:11873   */\n    tag_465:\n        /* \"#utility.yul\":11761:11879   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11885:12024   */\n    tag_298:\n        /* \"#utility.yul\":11940:11945   */\n      0x00\n        /* \"#utility.yul\":11971:11977   */\n      dup2\n        /* \"#utility.yul\":11965:11978   */\n      mload\n        /* \"#utility.yul\":11956:11978   */\n      swap1\n      pop\n        /* \"#utility.yul\":11987:12018   */\n      tag_467\n        /* \"#utility.yul\":12012:12017   */\n      dup2\n        /* \"#utility.yul\":11987:12018   */\n      tag_297\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":11885:12024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12030:12119   */\n    tag_299:\n        /* \"#utility.yul\":12066:12073   */\n      0x00\n        /* \"#utility.yul\":12106:12112   */\n      0xffff\n        /* \"#utility.yul\":12099:12104   */\n      dup3\n        /* \"#utility.yul\":12095:12113   */\n      and\n        /* \"#utility.yul\":12084:12113   */\n      swap1\n      pop\n        /* \"#utility.yul\":12030:12119   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12125:12245   */\n    tag_300:\n        /* \"#utility.yul\":12197:12220   */\n      tag_470\n        /* \"#utility.yul\":12214:12219   */\n      dup2\n        /* \"#utility.yul\":12197:12220   */\n      tag_299\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":12190:12195   */\n      dup2\n        /* \"#utility.yul\":12187:12221   */\n      eq\n        /* \"#utility.yul\":12177:12239   */\n      tag_471\n      jumpi\n        /* \"#utility.yul\":12235:12236   */\n      0x00\n        /* \"#utility.yul\":12232:12233   */\n      dup1\n        /* \"#utility.yul\":12225:12237   */\n      revert\n        /* \"#utility.yul\":12177:12239   */\n    tag_471:\n        /* \"#utility.yul\":12125:12245   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12251:12392   */\n    tag_301:\n        /* \"#utility.yul\":12307:12312   */\n      0x00\n        /* \"#utility.yul\":12338:12344   */\n      dup2\n        /* \"#utility.yul\":12332:12345   */\n      mload\n        /* \"#utility.yul\":12323:12345   */\n      swap1\n      pop\n        /* \"#utility.yul\":12354:12386   */\n      tag_473\n        /* \"#utility.yul\":12380:12385   */\n      dup2\n        /* \"#utility.yul\":12354:12386   */\n      tag_300\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":12251:12392   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12398:12484   */\n    tag_302:\n        /* \"#utility.yul\":12433:12440   */\n      0x00\n        /* \"#utility.yul\":12473:12477   */\n      0xff\n        /* \"#utility.yul\":12466:12471   */\n      dup3\n        /* \"#utility.yul\":12462:12478   */\n      and\n        /* \"#utility.yul\":12451:12478   */\n      swap1\n      pop\n        /* \"#utility.yul\":12398:12484   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12490:12608   */\n    tag_303:\n        /* \"#utility.yul\":12561:12583   */\n      tag_476\n        /* \"#utility.yul\":12577:12582   */\n      dup2\n        /* \"#utility.yul\":12561:12583   */\n      tag_302\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":12554:12559   */\n      dup2\n        /* \"#utility.yul\":12551:12584   */\n      eq\n        /* \"#utility.yul\":12541:12602   */\n      tag_477\n      jumpi\n        /* \"#utility.yul\":12598:12599   */\n      0x00\n        /* \"#utility.yul\":12595:12596   */\n      dup1\n        /* \"#utility.yul\":12588:12600   */\n      revert\n        /* \"#utility.yul\":12541:12602   */\n    tag_477:\n        /* \"#utility.yul\":12490:12608   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12614:12753   */\n    tag_304:\n        /* \"#utility.yul\":12669:12674   */\n      0x00\n        /* \"#utility.yul\":12700:12706   */\n      dup2\n        /* \"#utility.yul\":12694:12707   */\n      mload\n        /* \"#utility.yul\":12685:12707   */\n      swap1\n      pop\n        /* \"#utility.yul\":12716:12747   */\n      tag_479\n        /* \"#utility.yul\":12741:12746   */\n      dup2\n        /* \"#utility.yul\":12716:12747   */\n      tag_303\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":12614:12753   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12759:12875   */\n    tag_305:\n        /* \"#utility.yul\":12829:12850   */\n      tag_481\n        /* \"#utility.yul\":12844:12849   */\n      dup2\n        /* \"#utility.yul\":12829:12850   */\n      tag_282\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":12822:12827   */\n      dup2\n        /* \"#utility.yul\":12819:12851   */\n      eq\n        /* \"#utility.yul\":12809:12869   */\n      tag_482\n      jumpi\n        /* \"#utility.yul\":12865:12866   */\n      0x00\n        /* \"#utility.yul\":12862:12863   */\n      dup1\n        /* \"#utility.yul\":12855:12867   */\n      revert\n        /* \"#utility.yul\":12809:12869   */\n    tag_482:\n        /* \"#utility.yul\":12759:12875   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12881:13018   */\n    tag_306:\n        /* \"#utility.yul\":12935:12940   */\n      0x00\n        /* \"#utility.yul\":12966:12972   */\n      dup2\n        /* \"#utility.yul\":12960:12973   */\n      mload\n        /* \"#utility.yul\":12951:12973   */\n      swap1\n      pop\n        /* \"#utility.yul\":12982:13012   */\n      tag_484\n        /* \"#utility.yul\":13006:13011   */\n      dup2\n        /* \"#utility.yul\":12982:13012   */\n      tag_305\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":12881:13018   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13024:14295   */\n    tag_192:\n        /* \"#utility.yul\":13138:13144   */\n      0x00\n        /* \"#utility.yul\":13146:13152   */\n      dup1\n        /* \"#utility.yul\":13154:13160   */\n      0x00\n        /* \"#utility.yul\":13162:13168   */\n      dup1\n        /* \"#utility.yul\":13170:13176   */\n      0x00\n        /* \"#utility.yul\":13178:13184   */\n      dup1\n        /* \"#utility.yul\":13186:13192   */\n      0x00\n        /* \"#utility.yul\":13235:13238   */\n      0xe0\n        /* \"#utility.yul\":13223:13232   */\n      dup9\n        /* \"#utility.yul\":13214:13221   */\n      dup11\n        /* \"#utility.yul\":13210:13233   */\n      sub\n        /* \"#utility.yul\":13206:13239   */\n      slt\n        /* \"#utility.yul\":13203:13323   */\n      iszero\n      tag_486\n      jumpi\n        /* \"#utility.yul\":13242:13321   */\n      tag_487\n      tag_266\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":13203:13323   */\n    tag_486:\n        /* \"#utility.yul\":13362:13363   */\n      0x00\n        /* \"#utility.yul\":13387:13451   */\n      tag_488\n        /* \"#utility.yul\":13443:13450   */\n      dup11\n        /* \"#utility.yul\":13434:13440   */\n      dup3\n        /* \"#utility.yul\":13423:13432   */\n      dup12\n        /* \"#utility.yul\":13419:13441   */\n      add\n        /* \"#utility.yul\":13387:13451   */\n      tag_295\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":13377:13451   */\n      swap8\n      pop\n        /* \"#utility.yul\":13333:13461   */\n      pop\n        /* \"#utility.yul\":13500:13502   */\n      0x20\n        /* \"#utility.yul\":13526:13588   */\n      tag_489\n        /* \"#utility.yul\":13580:13587   */\n      dup11\n        /* \"#utility.yul\":13571:13577   */\n      dup3\n        /* \"#utility.yul\":13560:13569   */\n      dup12\n        /* \"#utility.yul\":13556:13578   */\n      add\n        /* \"#utility.yul\":13526:13588   */\n      tag_298\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":13516:13588   */\n      swap7\n      pop\n        /* \"#utility.yul\":13471:13598   */\n      pop\n        /* \"#utility.yul\":13637:13639   */\n      0x40\n        /* \"#utility.yul\":13663:13726   */\n      tag_490\n        /* \"#utility.yul\":13718:13725   */\n      dup11\n        /* \"#utility.yul\":13709:13715   */\n      dup3\n        /* \"#utility.yul\":13698:13707   */\n      dup12\n        /* \"#utility.yul\":13694:13716   */\n      add\n        /* \"#utility.yul\":13663:13726   */\n      tag_301\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":13653:13726   */\n      swap6\n      pop\n        /* \"#utility.yul\":13608:13736   */\n      pop\n        /* \"#utility.yul\":13775:13777   */\n      0x60\n        /* \"#utility.yul\":13801:13864   */\n      tag_491\n        /* \"#utility.yul\":13856:13863   */\n      dup11\n        /* \"#utility.yul\":13847:13853   */\n      dup3\n        /* \"#utility.yul\":13836:13845   */\n      dup12\n        /* \"#utility.yul\":13832:13854   */\n      add\n        /* \"#utility.yul\":13801:13864   */\n      tag_301\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":13791:13864   */\n      swap5\n      pop\n        /* \"#utility.yul\":13746:13874   */\n      pop\n        /* \"#utility.yul\":13913:13916   */\n      0x80\n        /* \"#utility.yul\":13940:14003   */\n      tag_492\n        /* \"#utility.yul\":13995:14002   */\n      dup11\n        /* \"#utility.yul\":13986:13992   */\n      dup3\n        /* \"#utility.yul\":13975:13984   */\n      dup12\n        /* \"#utility.yul\":13971:13993   */\n      add\n        /* \"#utility.yul\":13940:14003   */\n      tag_301\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":13930:14003   */\n      swap4\n      pop\n        /* \"#utility.yul\":13884:14013   */\n      pop\n        /* \"#utility.yul\":14052:14055   */\n      0xa0\n        /* \"#utility.yul\":14079:14141   */\n      tag_493\n        /* \"#utility.yul\":14133:14140   */\n      dup11\n        /* \"#utility.yul\":14124:14130   */\n      dup3\n        /* \"#utility.yul\":14113:14122   */\n      dup12\n        /* \"#utility.yul\":14109:14131   */\n      add\n        /* \"#utility.yul\":14079:14141   */\n      tag_304\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":14069:14141   */\n      swap3\n      pop\n        /* \"#utility.yul\":14023:14151   */\n      pop\n        /* \"#utility.yul\":14190:14193   */\n      0xc0\n        /* \"#utility.yul\":14217:14278   */\n      tag_494\n        /* \"#utility.yul\":14270:14277   */\n      dup11\n        /* \"#utility.yul\":14261:14267   */\n      dup3\n        /* \"#utility.yul\":14250:14259   */\n      dup12\n        /* \"#utility.yul\":14246:14268   */\n      add\n        /* \"#utility.yul\":14217:14278   */\n      tag_306\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":14207:14278   */\n      swap2\n      pop\n        /* \"#utility.yul\":14161:14288   */\n      pop\n        /* \"#utility.yul\":13024:14295   */\n      swap3\n      swap6\n      swap9\n      swap2\n      swap5\n      swap8\n      pop\n      swap3\n      swap6\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14301:14419   */\n    tag_307:\n        /* \"#utility.yul\":14338:14345   */\n      0x00\n        /* \"#utility.yul\":14378:14412   */\n      0xffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":14371:14376   */\n      dup3\n        /* \"#utility.yul\":14367:14413   */\n      and\n        /* \"#utility.yul\":14356:14413   */\n      swap1\n      pop\n        /* \"#utility.yul\":14301:14419   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14425:14547   */\n    tag_308:\n        /* \"#utility.yul\":14498:14522   */\n      tag_497\n        /* \"#utility.yul\":14516:14521   */\n      dup2\n        /* \"#utility.yul\":14498:14522   */\n      tag_307\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":14491:14496   */\n      dup2\n        /* \"#utility.yul\":14488:14523   */\n      eq\n        /* \"#utility.yul\":14478:14541   */\n      tag_498\n      jumpi\n        /* \"#utility.yul\":14537:14538   */\n      0x00\n        /* \"#utility.yul\":14534:14535   */\n      dup1\n        /* \"#utility.yul\":14527:14539   */\n      revert\n        /* \"#utility.yul\":14478:14541   */\n    tag_498:\n        /* \"#utility.yul\":14425:14547   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14553:14696   */\n    tag_309:\n        /* \"#utility.yul\":14610:14615   */\n      0x00\n        /* \"#utility.yul\":14641:14647   */\n      dup2\n        /* \"#utility.yul\":14635:14648   */\n      mload\n        /* \"#utility.yul\":14626:14648   */\n      swap1\n      pop\n        /* \"#utility.yul\":14657:14690   */\n      tag_500\n        /* \"#utility.yul\":14684:14689   */\n      dup2\n        /* \"#utility.yul\":14657:14690   */\n      tag_308\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":14553:14696   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14702:15053   */\n    tag_196:\n        /* \"#utility.yul\":14772:14778   */\n      0x00\n        /* \"#utility.yul\":14821:14823   */\n      0x20\n        /* \"#utility.yul\":14809:14818   */\n      dup3\n        /* \"#utility.yul\":14800:14807   */\n      dup5\n        /* \"#utility.yul\":14796:14819   */\n      sub\n        /* \"#utility.yul\":14792:14824   */\n      slt\n        /* \"#utility.yul\":14789:14908   */\n      iszero\n      tag_502\n      jumpi\n        /* \"#utility.yul\":14827:14906   */\n      tag_503\n      tag_266\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":14789:14908   */\n    tag_502:\n        /* \"#utility.yul\":14947:14948   */\n      0x00\n        /* \"#utility.yul\":14972:15036   */\n      tag_504\n        /* \"#utility.yul\":15028:15035   */\n      dup5\n        /* \"#utility.yul\":15019:15025   */\n      dup3\n        /* \"#utility.yul\":15008:15017   */\n      dup6\n        /* \"#utility.yul\":15004:15026   */\n      add\n        /* \"#utility.yul\":14972:15036   */\n      tag_309\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":14962:15036   */\n      swap2\n      pop\n        /* \"#utility.yul\":14918:15046   */\n      pop\n        /* \"#utility.yul\":14702:15053   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15059:15253   */\n    tag_202:\n        /* \"#utility.yul\":15099:15103   */\n      0x00\n        /* \"#utility.yul\":15119:15139   */\n      tag_506\n        /* \"#utility.yul\":15137:15138   */\n      dup3\n        /* \"#utility.yul\":15119:15139   */\n      tag_258\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":15114:15139   */\n      swap2\n      pop\n        /* \"#utility.yul\":15153:15173   */\n      tag_507\n        /* \"#utility.yul\":15171:15172   */\n      dup4\n        /* \"#utility.yul\":15153:15173   */\n      tag_258\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":15148:15173   */\n      swap3\n      pop\n        /* \"#utility.yul\":15197:15198   */\n      dup3\n        /* \"#utility.yul\":15194:15195   */\n      dup3\n        /* \"#utility.yul\":15190:15199   */\n      sub\n        /* \"#utility.yul\":15182:15199   */\n      swap1\n      pop\n        /* \"#utility.yul\":15221:15222   */\n      dup2\n        /* \"#utility.yul\":15215:15219   */\n      dup2\n        /* \"#utility.yul\":15212:15223   */\n      gt\n        /* \"#utility.yul\":15209:15246   */\n      iszero\n      tag_508\n      jumpi\n        /* \"#utility.yul\":15226:15244   */\n      tag_509\n      tag_259\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":15209:15246   */\n    tag_508:\n        /* \"#utility.yul\":15059:15253   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15259:15429   */\n    tag_310:\n        /* \"#utility.yul\":15399:15421   */\n      0x496e73756666696369656e742062616c616e6365000000000000000000000000\n        /* \"#utility.yul\":15395:15396   */\n      0x00\n        /* \"#utility.yul\":15387:15393   */\n      dup3\n        /* \"#utility.yul\":15383:15397   */\n      add\n        /* \"#utility.yul\":15376:15422   */\n      mstore\n        /* \"#utility.yul\":15259:15429   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15435:15801   */\n    tag_311:\n        /* \"#utility.yul\":15577:15580   */\n      0x00\n        /* \"#utility.yul\":15598:15665   */\n      tag_512\n        /* \"#utility.yul\":15662:15664   */\n      0x14\n        /* \"#utility.yul\":15657:15660   */\n      dup4\n        /* \"#utility.yul\":15598:15665   */\n      tag_285\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":15591:15665   */\n      swap2\n      pop\n        /* \"#utility.yul\":15674:15767   */\n      tag_513\n        /* \"#utility.yul\":15763:15766   */\n      dup3\n        /* \"#utility.yul\":15674:15767   */\n      tag_310\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":15792:15794   */\n      0x20\n        /* \"#utility.yul\":15787:15790   */\n      dup3\n        /* \"#utility.yul\":15783:15795   */\n      add\n        /* \"#utility.yul\":15776:15795   */\n      swap1\n      pop\n        /* \"#utility.yul\":15435:15801   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15807:16226   */\n    tag_216:\n        /* \"#utility.yul\":15973:15977   */\n      0x00\n        /* \"#utility.yul\":16011:16013   */\n      0x20\n        /* \"#utility.yul\":16000:16009   */\n      dup3\n        /* \"#utility.yul\":15996:16014   */\n      add\n        /* \"#utility.yul\":15988:16014   */\n      swap1\n      pop\n        /* \"#utility.yul\":16060:16069   */\n      dup2\n        /* \"#utility.yul\":16054:16058   */\n      dup2\n        /* \"#utility.yul\":16050:16070   */\n      sub\n        /* \"#utility.yul\":16046:16047   */\n      0x00\n        /* \"#utility.yul\":16035:16044   */\n      dup4\n        /* \"#utility.yul\":16031:16048   */\n      add\n        /* \"#utility.yul\":16024:16071   */\n      mstore\n        /* \"#utility.yul\":16088:16219   */\n      tag_515\n        /* \"#utility.yul\":16214:16218   */\n      dup2\n        /* \"#utility.yul\":16088:16219   */\n      tag_311\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":16080:16219   */\n      swap1\n      pop\n        /* \"#utility.yul\":15807:16226   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16232:16412   */\n    tag_312:\n        /* \"#utility.yul\":16280:16357   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16277:16278   */\n      0x00\n        /* \"#utility.yul\":16270:16358   */\n      mstore\n        /* \"#utility.yul\":16377:16381   */\n      0x22\n        /* \"#utility.yul\":16374:16375   */\n      0x04\n        /* \"#utility.yul\":16367:16382   */\n      mstore\n        /* \"#utility.yul\":16401:16405   */\n      0x24\n        /* \"#utility.yul\":16398:16399   */\n      0x00\n        /* \"#utility.yul\":16391:16406   */\n      revert\n        /* \"#utility.yul\":16418:16738   */\n    tag_220:\n        /* \"#utility.yul\":16462:16468   */\n      0x00\n        /* \"#utility.yul\":16499:16500   */\n      0x02\n        /* \"#utility.yul\":16493:16497   */\n      dup3\n        /* \"#utility.yul\":16489:16501   */\n      div\n        /* \"#utility.yul\":16479:16501   */\n      swap1\n      pop\n        /* \"#utility.yul\":16546:16547   */\n      0x01\n        /* \"#utility.yul\":16540:16544   */\n      dup3\n        /* \"#utility.yul\":16536:16548   */\n      and\n        /* \"#utility.yul\":16567:16585   */\n      dup1\n        /* \"#utility.yul\":16557:16638   */\n      tag_518\n      jumpi\n        /* \"#utility.yul\":16623:16627   */\n      0x7f\n        /* \"#utility.yul\":16615:16621   */\n      dup3\n        /* \"#utility.yul\":16611:16628   */\n      and\n        /* \"#utility.yul\":16601:16628   */\n      swap2\n      pop\n        /* \"#utility.yul\":16557:16638   */\n    tag_518:\n        /* \"#utility.yul\":16685:16687   */\n      0x20\n        /* \"#utility.yul\":16677:16683   */\n      dup3\n        /* \"#utility.yul\":16674:16688   */\n      lt\n        /* \"#utility.yul\":16654:16672   */\n      dup2\n        /* \"#utility.yul\":16651:16689   */\n      sub\n        /* \"#utility.yul\":16648:16732   */\n      tag_519\n      jumpi\n        /* \"#utility.yul\":16704:16722   */\n      tag_520\n      tag_312\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":16648:16732   */\n    tag_519:\n        /* \"#utility.yul\":16469:16738   */\n      pop\n        /* \"#utility.yul\":16418:16738   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16744:16912   */\n    tag_313:\n        /* \"#utility.yul\":16884:16904   */\n      0x54696d656672616d652061646a75737465640000000000000000000000000000\n        /* \"#utility.yul\":16880:16881   */\n      0x00\n        /* \"#utility.yul\":16872:16878   */\n      dup3\n        /* \"#utility.yul\":16868:16882   */\n      add\n        /* \"#utility.yul\":16861:16905   */\n      mstore\n        /* \"#utility.yul\":16744:16912   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16918:17284   */\n    tag_314:\n        /* \"#utility.yul\":17060:17063   */\n      0x00\n        /* \"#utility.yul\":17081:17148   */\n      tag_523\n        /* \"#utility.yul\":17145:17147   */\n      0x12\n        /* \"#utility.yul\":17140:17143   */\n      dup4\n        /* \"#utility.yul\":17081:17148   */\n      tag_285\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":17074:17148   */\n      swap2\n      pop\n        /* \"#utility.yul\":17157:17250   */\n      tag_524\n        /* \"#utility.yul\":17246:17249   */\n      dup3\n        /* \"#utility.yul\":17157:17250   */\n      tag_313\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":17275:17277   */\n      0x20\n        /* \"#utility.yul\":17270:17273   */\n      dup3\n        /* \"#utility.yul\":17266:17278   */\n      add\n        /* \"#utility.yul\":17259:17278   */\n      swap1\n      pop\n        /* \"#utility.yul\":16918:17284   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17290:18056   */\n    tag_234:\n        /* \"#utility.yul\":17548:17552   */\n      0x00\n        /* \"#utility.yul\":17586:17589   */\n      0x80\n        /* \"#utility.yul\":17575:17584   */\n      dup3\n        /* \"#utility.yul\":17571:17590   */\n      add\n        /* \"#utility.yul\":17563:17590   */\n      swap1\n      pop\n        /* \"#utility.yul\":17636:17645   */\n      dup2\n        /* \"#utility.yul\":17630:17634   */\n      dup2\n        /* \"#utility.yul\":17626:17646   */\n      sub\n        /* \"#utility.yul\":17622:17623   */\n      0x00\n        /* \"#utility.yul\":17611:17620   */\n      dup4\n        /* \"#utility.yul\":17607:17624   */\n      add\n        /* \"#utility.yul\":17600:17647   */\n      mstore\n        /* \"#utility.yul\":17664:17795   */\n      tag_526\n        /* \"#utility.yul\":17790:17794   */\n      dup2\n        /* \"#utility.yul\":17664:17795   */\n      tag_314\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":17656:17795   */\n      swap1\n      pop\n        /* \"#utility.yul\":17805:17877   */\n      tag_527\n        /* \"#utility.yul\":17873:17875   */\n      0x20\n        /* \"#utility.yul\":17862:17871   */\n      dup4\n        /* \"#utility.yul\":17858:17876   */\n      add\n        /* \"#utility.yul\":17849:17855   */\n      dup7\n        /* \"#utility.yul\":17805:17877   */\n      tag_264\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":17887:17967   */\n      tag_528\n        /* \"#utility.yul\":17963:17965   */\n      0x40\n        /* \"#utility.yul\":17952:17961   */\n      dup4\n        /* \"#utility.yul\":17948:17966   */\n      add\n        /* \"#utility.yul\":17939:17945   */\n      dup6\n        /* \"#utility.yul\":17887:17967   */\n      tag_293\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":17977:18049   */\n      tag_529\n        /* \"#utility.yul\":18045:18047   */\n      0x60\n        /* \"#utility.yul\":18034:18043   */\n      dup4\n        /* \"#utility.yul\":18030:18048   */\n      add\n        /* \"#utility.yul\":18021:18027   */\n      dup5\n        /* \"#utility.yul\":17977:18049   */\n      tag_264\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":17290:18056   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18062:18226   */\n    tag_315:\n        /* \"#utility.yul\":18202:18218   */\n      0x636f6e7665727420746f20504f4c000000000000000000000000000000000000\n        /* \"#utility.yul\":18198:18199   */\n      0x00\n        /* \"#utility.yul\":18190:18196   */\n      dup3\n        /* \"#utility.yul\":18186:18200   */\n      add\n        /* \"#utility.yul\":18179:18219   */\n      mstore\n        /* \"#utility.yul\":18062:18226   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18232:18598   */\n    tag_316:\n        /* \"#utility.yul\":18374:18377   */\n      0x00\n        /* \"#utility.yul\":18395:18462   */\n      tag_532\n        /* \"#utility.yul\":18459:18461   */\n      0x0e\n        /* \"#utility.yul\":18454:18457   */\n      dup4\n        /* \"#utility.yul\":18395:18462   */\n      tag_285\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":18388:18462   */\n      swap2\n      pop\n        /* \"#utility.yul\":18471:18564   */\n      tag_533\n        /* \"#utility.yul\":18560:18563   */\n      dup3\n        /* \"#utility.yul\":18471:18564   */\n      tag_315\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":18589:18591   */\n      0x20\n        /* \"#utility.yul\":18584:18587   */\n      dup3\n        /* \"#utility.yul\":18580:18592   */\n      add\n        /* \"#utility.yul\":18573:18592   */\n      swap1\n      pop\n        /* \"#utility.yul\":18232:18598   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18604:19386   */\n    tag_247:\n        /* \"#utility.yul\":18870:18874   */\n      0x00\n        /* \"#utility.yul\":18908:18911   */\n      0x80\n        /* \"#utility.yul\":18897:18906   */\n      dup3\n        /* \"#utility.yul\":18893:18912   */\n      add\n        /* \"#utility.yul\":18885:18912   */\n      swap1\n      pop\n        /* \"#utility.yul\":18958:18967   */\n      dup2\n        /* \"#utility.yul\":18952:18956   */\n      dup2\n        /* \"#utility.yul\":18948:18968   */\n      sub\n        /* \"#utility.yul\":18944:18945   */\n      0x00\n        /* \"#utility.yul\":18933:18942   */\n      dup4\n        /* \"#utility.yul\":18929:18946   */\n      add\n        /* \"#utility.yul\":18922:18969   */\n      mstore\n        /* \"#utility.yul\":18986:19117   */\n      tag_535\n        /* \"#utility.yul\":19112:19116   */\n      dup2\n        /* \"#utility.yul\":18986:19117   */\n      tag_316\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":18978:19117   */\n      swap1\n      pop\n        /* \"#utility.yul\":19127:19207   */\n      tag_536\n        /* \"#utility.yul\":19203:19205   */\n      0x20\n        /* \"#utility.yul\":19192:19201   */\n      dup4\n        /* \"#utility.yul\":19188:19206   */\n      add\n        /* \"#utility.yul\":19179:19185   */\n      dup7\n        /* \"#utility.yul\":19127:19207   */\n      tag_293\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":19217:19297   */\n      tag_537\n        /* \"#utility.yul\":19293:19295   */\n      0x40\n        /* \"#utility.yul\":19282:19291   */\n      dup4\n        /* \"#utility.yul\":19278:19296   */\n      add\n        /* \"#utility.yul\":19269:19275   */\n      dup6\n        /* \"#utility.yul\":19217:19297   */\n      tag_293\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":19307:19379   */\n      tag_538\n        /* \"#utility.yul\":19375:19377   */\n      0x60\n        /* \"#utility.yul\":19364:19373   */\n      dup4\n        /* \"#utility.yul\":19360:19378   */\n      add\n        /* \"#utility.yul\":19351:19357   */\n      dup5\n        /* \"#utility.yul\":19307:19379   */\n      tag_264\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":18604:19386   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19392:19497   */\n    tag_317:\n        /* \"#utility.yul\":19428:19435   */\n      0x00\n        /* \"#utility.yul\":19468:19490   */\n      0xffffffffffffffffffff\n        /* \"#utility.yul\":19461:19466   */\n      dup3\n        /* \"#utility.yul\":19457:19491   */\n      and\n        /* \"#utility.yul\":19446:19491   */\n      swap1\n      pop\n        /* \"#utility.yul\":19392:19497   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19503:19623   */\n    tag_318:\n        /* \"#utility.yul\":19575:19598   */\n      tag_541\n        /* \"#utility.yul\":19592:19597   */\n      dup2\n        /* \"#utility.yul\":19575:19598   */\n      tag_317\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":19568:19573   */\n      dup2\n        /* \"#utility.yul\":19565:19599   */\n      eq\n        /* \"#utility.yul\":19555:19617   */\n      tag_542\n      jumpi\n        /* \"#utility.yul\":19613:19614   */\n      0x00\n        /* \"#utility.yul\":19610:19611   */\n      dup1\n        /* \"#utility.yul\":19603:19615   */\n      revert\n        /* \"#utility.yul\":19555:19617   */\n    tag_542:\n        /* \"#utility.yul\":19503:19623   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19629:19770   */\n    tag_319:\n        /* \"#utility.yul\":19685:19690   */\n      0x00\n        /* \"#utility.yul\":19716:19722   */\n      dup2\n        /* \"#utility.yul\":19710:19723   */\n      mload\n        /* \"#utility.yul\":19701:19723   */\n      swap1\n      pop\n        /* \"#utility.yul\":19732:19764   */\n      tag_544\n        /* \"#utility.yul\":19758:19763   */\n      dup2\n        /* \"#utility.yul\":19732:19764   */\n      tag_318\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":19629:19770   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19776:19852   */\n    tag_320:\n        /* \"#utility.yul\":19812:19819   */\n      0x00\n        /* \"#utility.yul\":19841:19846   */\n      dup2\n        /* \"#utility.yul\":19830:19846   */\n      swap1\n      pop\n        /* \"#utility.yul\":19776:19852   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19858:19978   */\n    tag_321:\n        /* \"#utility.yul\":19930:19953   */\n      tag_547\n        /* \"#utility.yul\":19947:19952   */\n      dup2\n        /* \"#utility.yul\":19930:19953   */\n      tag_320\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":19923:19928   */\n      dup2\n        /* \"#utility.yul\":19920:19954   */\n      eq\n        /* \"#utility.yul\":19910:19972   */\n      tag_548\n      jumpi\n        /* \"#utility.yul\":19968:19969   */\n      0x00\n        /* \"#utility.yul\":19965:19966   */\n      dup1\n        /* \"#utility.yul\":19958:19970   */\n      revert\n        /* \"#utility.yul\":19910:19972   */\n    tag_548:\n        /* \"#utility.yul\":19858:19978   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19984:20125   */\n    tag_322:\n        /* \"#utility.yul\":20040:20045   */\n      0x00\n        /* \"#utility.yul\":20071:20077   */\n      dup2\n        /* \"#utility.yul\":20065:20078   */\n      mload\n        /* \"#utility.yul\":20056:20078   */\n      swap1\n      pop\n        /* \"#utility.yul\":20087:20119   */\n      tag_550\n        /* \"#utility.yul\":20113:20118   */\n      dup2\n        /* \"#utility.yul\":20087:20119   */\n      tag_321\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":19984:20125   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20131:20274   */\n    tag_323:\n        /* \"#utility.yul\":20188:20193   */\n      0x00\n        /* \"#utility.yul\":20219:20225   */\n      dup2\n        /* \"#utility.yul\":20213:20226   */\n      mload\n        /* \"#utility.yul\":20204:20226   */\n      swap1\n      pop\n        /* \"#utility.yul\":20235:20268   */\n      tag_552\n        /* \"#utility.yul\":20262:20267   */\n      dup2\n        /* \"#utility.yul\":20235:20268   */\n      tag_278\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":20131:20274   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20280:21251   */\n    tag_252:\n        /* \"#utility.yul\":20383:20389   */\n      0x00\n        /* \"#utility.yul\":20391:20397   */\n      dup1\n        /* \"#utility.yul\":20399:20405   */\n      0x00\n        /* \"#utility.yul\":20407:20413   */\n      dup1\n        /* \"#utility.yul\":20415:20421   */\n      0x00\n        /* \"#utility.yul\":20464:20467   */\n      0xa0\n        /* \"#utility.yul\":20452:20461   */\n      dup7\n        /* \"#utility.yul\":20443:20450   */\n      dup9\n        /* \"#utility.yul\":20439:20462   */\n      sub\n        /* \"#utility.yul\":20435:20468   */\n      slt\n        /* \"#utility.yul\":20432:20552   */\n      iszero\n      tag_554\n      jumpi\n        /* \"#utility.yul\":20471:20550   */\n      tag_555\n      tag_266\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":20432:20552   */\n    tag_554:\n        /* \"#utility.yul\":20591:20592   */\n      0x00\n        /* \"#utility.yul\":20616:20679   */\n      tag_556\n        /* \"#utility.yul\":20671:20678   */\n      dup9\n        /* \"#utility.yul\":20662:20668   */\n      dup3\n        /* \"#utility.yul\":20651:20660   */\n      dup10\n        /* \"#utility.yul\":20647:20669   */\n      add\n        /* \"#utility.yul\":20616:20679   */\n      tag_319\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":20606:20679   */\n      swap6\n      pop\n        /* \"#utility.yul\":20562:20689   */\n      pop\n        /* \"#utility.yul\":20728:20730   */\n      0x20\n        /* \"#utility.yul\":20754:20817   */\n      tag_557\n        /* \"#utility.yul\":20809:20816   */\n      dup9\n        /* \"#utility.yul\":20800:20806   */\n      dup3\n        /* \"#utility.yul\":20789:20798   */\n      dup10\n        /* \"#utility.yul\":20785:20807   */\n      add\n        /* \"#utility.yul\":20754:20817   */\n      tag_322\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":20744:20817   */\n      swap5\n      pop\n        /* \"#utility.yul\":20699:20827   */\n      pop\n        /* \"#utility.yul\":20866:20868   */\n      0x40\n        /* \"#utility.yul\":20892:20956   */\n      tag_558\n        /* \"#utility.yul\":20948:20955   */\n      dup9\n        /* \"#utility.yul\":20939:20945   */\n      dup3\n        /* \"#utility.yul\":20928:20937   */\n      dup10\n        /* \"#utility.yul\":20924:20946   */\n      add\n        /* \"#utility.yul\":20892:20956   */\n      tag_323\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":20882:20956   */\n      swap4\n      pop\n        /* \"#utility.yul\":20837:20966   */\n      pop\n        /* \"#utility.yul\":21005:21007   */\n      0x60\n        /* \"#utility.yul\":21031:21095   */\n      tag_559\n        /* \"#utility.yul\":21087:21094   */\n      dup9\n        /* \"#utility.yul\":21078:21084   */\n      dup3\n        /* \"#utility.yul\":21067:21076   */\n      dup10\n        /* \"#utility.yul\":21063:21085   */\n      add\n        /* \"#utility.yul\":21031:21095   */\n      tag_323\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":21021:21095   */\n      swap3\n      pop\n        /* \"#utility.yul\":20976:21105   */\n      pop\n        /* \"#utility.yul\":21144:21147   */\n      0x80\n        /* \"#utility.yul\":21171:21234   */\n      tag_560\n        /* \"#utility.yul\":21226:21233   */\n      dup9\n        /* \"#utility.yul\":21217:21223   */\n      dup3\n        /* \"#utility.yul\":21206:21215   */\n      dup10\n        /* \"#utility.yul\":21202:21224   */\n      add\n        /* \"#utility.yul\":21171:21234   */\n      tag_319\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":21161:21234   */\n      swap2\n      pop\n        /* \"#utility.yul\":21115:21244   */\n      pop\n        /* \"#utility.yul\":20280:21251   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21257:21813   */\n    tag_254:\n        /* \"#utility.yul\":21296:21303   */\n      0x00\n        /* \"#utility.yul\":21319:21338   */\n      tag_562\n        /* \"#utility.yul\":21336:21337   */\n      dup3\n        /* \"#utility.yul\":21319:21338   */\n      tag_320\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":21314:21338   */\n      swap2\n      pop\n        /* \"#utility.yul\":21352:21371   */\n      tag_563\n        /* \"#utility.yul\":21369:21370   */\n      dup4\n        /* \"#utility.yul\":21352:21371   */\n      tag_320\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":21347:21371   */\n      swap3\n      pop\n        /* \"#utility.yul\":21406:21407   */\n      dup3\n        /* \"#utility.yul\":21403:21404   */\n      dup3\n        /* \"#utility.yul\":21399:21408   */\n      mul\n        /* \"#utility.yul\":21428:21457   */\n      tag_564\n        /* \"#utility.yul\":21445:21456   */\n      dup2\n        /* \"#utility.yul\":21428:21457   */\n      tag_320\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":21417:21457   */\n      swap2\n      pop\n        /* \"#utility.yul\":21515:21581   */\n      0x8000000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":21512:21513   */\n      dup5\n        /* \"#utility.yul\":21509:21582   */\n      eq\n        /* \"#utility.yul\":21505:21506   */\n      0x00\n        /* \"#utility.yul\":21502:21503   */\n      dup5\n        /* \"#utility.yul\":21498:21507   */\n      slt\n        /* \"#utility.yul\":21494:21583   */\n      and\n        /* \"#utility.yul\":21491:21606   */\n      iszero\n      tag_565\n      jumpi\n        /* \"#utility.yul\":21586:21604   */\n      tag_566\n      tag_259\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":21491:21606   */\n    tag_565:\n        /* \"#utility.yul\":21756:21757   */\n      dup3\n        /* \"#utility.yul\":21747:21754   */\n      dup3\n        /* \"#utility.yul\":21742:21758   */\n      sdiv\n        /* \"#utility.yul\":21739:21740   */\n      dup5\n        /* \"#utility.yul\":21736:21759   */\n      eq\n        /* \"#utility.yul\":21716:21717   */\n      dup4\n        /* \"#utility.yul\":21709:21718   */\n      iszero\n        /* \"#utility.yul\":21689:21773   */\n      or\n        /* \"#utility.yul\":21666:21806   */\n      tag_567\n      jumpi\n        /* \"#utility.yul\":21786:21804   */\n      tag_568\n      tag_259\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":21666:21806   */\n    tag_567:\n        /* \"#utility.yul\":21304:21813   */\n      pop\n        /* \"#utility.yul\":21257:21813   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220449b0f1b43c11ef172abf98154ebaca74aaeb32ca045a166e6cb450e31ad443a64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_167": {
									"entryPoint": null,
									"id": 167,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_594d562b07e5639baeda43f9427a7d73488025602cf4b19cc0e4cec02e1718f8_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 1902,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_594d562b07e5639baeda43f9427a7d73488025602cf4b19cc0e4cec02e1718f8__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 1940,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1164,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1012,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 1852,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1473,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 1294,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1435,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1312,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1624,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1182,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1112,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1595,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1303,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1565,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 1067,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1022,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1351,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 1197,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1553,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1407,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_594d562b07e5639baeda43f9427a7d73488025602cf4b19cc0e4cec02e1718f8": {
									"entryPoint": 1862,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1209,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1360,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1403,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:6343:23",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:40:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:23",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:23"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "87:12:23"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:23"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "49:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "59:6:23",
														"type": ""
													}
												],
												"src": "7:99:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "140:152:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "157:1:23",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "160:77:23",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "150:88:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "150:88:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "254:1:23",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "257:4:23",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "247:15:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "247:15:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "278:1:23",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "281:4:23",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "271:15:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "271:15:23"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "326:152:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "343:1:23",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "346:77:23",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "336:88:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "336:88:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "440:1:23",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "443:4:23",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "433:15:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "433:15:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "464:1:23",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "467:4:23",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "457:15:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "457:15:23"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "535:269:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "545:22:23",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "565:1:23",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "555:12:23"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:23"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:23",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "612:1:23",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "602:12:23"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "580:18:23",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "653:51:23",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "667:27:23",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:23"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "689:4:23",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:23"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:23"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:23"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "626:26:23"
															},
															"nodeType": "YulIf",
															"src": "623:81:23"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "756:42:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "751:2:23",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:23"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "717:38:23"
															},
															"nodeType": "YulIf",
															"src": "714:84:23"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "519:4:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "528:6:23",
														"type": ""
													}
												],
												"src": "484:320:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "864:87:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "874:11:23",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "882:3:23"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "902:1:23",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "895:14:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "895:14:23"
														},
														{
															"nodeType": "YulAssignment",
															"src": "918:26:23",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "936:1:23",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "939:4:23",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "926:18:23"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:23"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "851:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "859:4:23",
														"type": ""
													}
												],
												"src": "810:141:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1001:49:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1011:33:23",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:23",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "1021:23:23"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:23"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "984:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "994:6:23",
														"type": ""
													}
												],
												"src": "957:93:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1109:54:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1119:37:23",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:23"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:23"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "1140:16:23"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:23"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "1084:4:23",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1090:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "1100:8:23",
														"type": ""
													}
												],
												"src": "1056:107:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1245:317:23",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:23",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:23",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "1272:18:23"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:23",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:23",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:23",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "1311:97:23"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:23",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1417:51:23",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:23"
																	},
																	{
																		"name": "toInsert",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:23"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "1429:39:23"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:23"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1477:30:23",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:23"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:23"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "1486:21:23"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:23"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1516:40:23",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:23"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:23"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:23"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "1526:30:23"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:23"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1206:5:23",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nodeType": "YulTypedName",
														"src": "1213:10:23",
														"type": ""
													},
													{
														"name": "toInsert",
														"nodeType": "YulTypedName",
														"src": "1225:8:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "1238:6:23",
														"type": ""
													}
												],
												"src": "1169:393:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1613:32:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1623:16:23",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1634:5:23"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:23"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1595:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1605:7:23",
														"type": ""
													}
												],
												"src": "1568:77:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1683:28:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1693:12:23",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1700:5:23"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:23"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1669:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "1679:3:23",
														"type": ""
													}
												],
												"src": "1651:60:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1777:82:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1787:66:23",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:23"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:23"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:23"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "1800:53:23"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:23"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1757:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "1767:9:23",
														"type": ""
													}
												],
												"src": "1717:142:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1912:28:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1922:12:23",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1929:5:23"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:23"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1898:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "1908:3:23",
														"type": ""
													}
												],
												"src": "1865:75:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2022:193:23",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:23",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:23"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "2056:39:23"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:23",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:23"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:23"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:23"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:23"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:23"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:23"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:23"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "2104:105:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:23"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "1999:4:23",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2005:6:23",
														"type": ""
													},
													{
														"name": "value_0",
														"nodeType": "YulTypedName",
														"src": "2013:7:23",
														"type": ""
													}
												],
												"src": "1946:269:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2270:24:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2280:8:23",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2287:1:23",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:23"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "2266:3:23",
														"type": ""
													}
												],
												"src": "2221:73:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2353:136:23",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:23",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "2377:32:23"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:23",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:23"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:23"
																	},
																	{
																		"name": "zero_0",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:23"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "2418:65:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:23"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "2339:4:23",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2345:6:23",
														"type": ""
													}
												],
												"src": "2300:189:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2545:136:23",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2612:63:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:23"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:23",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:23"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:23"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "2562:14:23"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2577:26:23",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2579:22:23",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:23"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:23",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:23"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:23"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2559:2:23",
																"statements": []
															},
															"src": "2555:120:23"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "2533:5:23",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2540:3:23",
														"type": ""
													}
												],
												"src": "2495:186:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2766:464:23",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2792:431:23",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:23",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:23"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:23"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:23",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:23",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:23"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:23"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:23"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:23"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:23"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:23",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "3093:27:23",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "3095:23:23",
																					"value": {
																						"name": "dataArea",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:23"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:23"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:23"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:23",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:23"
																		},
																		"nodeType": "YulIf",
																		"src": "3071:49:23"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:23"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:23"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:23"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:23"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:23"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:23"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:23"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:23",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "2780:11:23"
															},
															"nodeType": "YulIf",
															"src": "2777:446:23"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2742:5:23",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2749:3:23",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "2754:10:23",
														"type": ""
													}
												],
												"src": "2687:543:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3299:54:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3309:37:23",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:23"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:23"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "3330:16:23"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:23"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "3274:4:23",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3280:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "3290:8:23",
														"type": ""
													}
												],
												"src": "3236:117:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3410:118:23",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:23",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:23",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:23"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:23"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:23",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:23"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:23"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "3432:56:23"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:23",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3497:25:23",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:23"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:23"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "3507:15:23"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:23"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3387:4:23",
														"type": ""
													},
													{
														"name": "bytes",
														"nodeType": "YulTypedName",
														"src": "3393:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "3403:6:23",
														"type": ""
													}
												],
												"src": "3359:169:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3614:214:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3747:37:23",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:23"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:23"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "3755:29:23"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:23"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3793:29:23",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:23"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:23",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:23"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:23"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "3801:21:23"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:23"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3595:4:23",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "3601:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "3609:4:23",
														"type": ""
													}
												],
												"src": "3533:295:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3925:1303:23",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:23",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:23"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "3950:37:23"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:23",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4072:22:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:23",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "4041:30:23"
															},
															"nodeType": "YulIf",
															"src": "4038:56:23"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:23",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:23"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:23"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "4118:38:23"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:23",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:23"
																	},
																	{
																		"name": "oldLen",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:23"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:23"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "4203:67:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:23"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:23",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4297:1:23",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:23",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4308:17:23",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4321:4:23",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:23"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4372:611:23",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:23",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:23"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:23",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:23"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:23"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:23"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:23"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:23",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:23",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:23"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:23"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:23"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:23",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:23",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:23",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:23",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "4569:163:23",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:23"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:23"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:23"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:23"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:23"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:23"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:23"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:23"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:23"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:23"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "4646:24:23",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:23"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:23",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:23"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:23"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:23"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "4687:31:23",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:23"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:23",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:23"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:23"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:23"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:23"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:23"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:23"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:23"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "4547:21:23",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "4549:17:23",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:23"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:23",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:23"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:23"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:23"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "4528:3:23",
																					"statements": []
																				},
																				"src": "4524:208:23"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "4768:156:23",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:23",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:23"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:23"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:23"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:23"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:23"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:23"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:23",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:23"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:23"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:23"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:23",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:23"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:23"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:23"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:23"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:23"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:23"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:23"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:23"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:23"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:23"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:23"
																				},
																				"nodeType": "YulIf",
																				"src": "4745:179:23"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:23"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:23"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:23",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:23"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:23"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:23",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:23"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:23"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:23"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:23"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:23"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "4365:618:23",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:23",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5000:222:23",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:23",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:23",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:23",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "5051:67:23",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "5069:35:23",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:23"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:23"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:23"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:23"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:23"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:23"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:23"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:23"
																				},
																				"nodeType": "YulIf",
																				"src": "5041:77:23"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:23"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:23"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:23"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:23"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:23"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:23"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:23"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:23"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "4992:230:23",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:23",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "4342:14:23"
															},
															"nodeType": "YulSwitch",
															"src": "4335:887:23"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "3914:4:23",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "3920:3:23",
														"type": ""
													}
												],
												"src": "3833:1395:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5348:34:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5358:18:23",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "5373:3:23"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "5358:11:23"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5320:3:23",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5325:6:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "5336:11:23",
														"type": ""
													}
												],
												"src": "5234:148:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5494:53:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5516:6:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5524:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5512:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5512:14:23"
																	},
																	{
																		"hexValue": "517569636b53776170",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5528:11:23",
																		"type": "",
																		"value": "QuickSwap"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5505:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "5505:35:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5505:35:23"
														}
													]
												},
												"name": "store_literal_in_memory_594d562b07e5639baeda43f9427a7d73488025602cf4b19cc0e4cec02e1718f8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5486:6:23",
														"type": ""
													}
												],
												"src": "5388:159:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5717:236:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5727:91:23",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5811:3:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5816:1:23",
																		"type": "",
																		"value": "9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5734:76:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "5734:84:23"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5727:3:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5916:3:23"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_594d562b07e5639baeda43f9427a7d73488025602cf4b19cc0e4cec02e1718f8",
																	"nodeType": "YulIdentifier",
																	"src": "5827:88:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "5827:93:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5827:93:23"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5929:18:23",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5940:3:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5945:1:23",
																		"type": "",
																		"value": "9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5936:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "5936:11:23"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5929:3:23"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_594d562b07e5639baeda43f9427a7d73488025602cf4b19cc0e4cec02e1718f8_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5705:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5713:3:23",
														"type": ""
													}
												],
												"src": "5553:400:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6148:192:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6159:155:23",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6310:3:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_594d562b07e5639baeda43f9427a7d73488025602cf4b19cc0e4cec02e1718f8_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6166:142:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "6166:148:23"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6159:3:23"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6324:10:23",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "6331:3:23"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6324:3:23"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_594d562b07e5639baeda43f9427a7d73488025602cf4b19cc0e4cec02e1718f8__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6135:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6144:3:23",
														"type": ""
													}
												],
												"src": "5959:381:23"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_594d562b07e5639baeda43f9427a7d73488025602cf4b19cc0e4cec02e1718f8(memPtr) {\n\n        mstore(add(memPtr, 0), \"QuickSwap\")\n\n    }\n\n    function abi_encode_t_stringliteral_594d562b07e5639baeda43f9427a7d73488025602cf4b19cc0e4cec02e1718f8_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 9)\n        store_literal_in_memory_594d562b07e5639baeda43f9427a7d73488025602cf4b19cc0e4cec02e1718f8(pos)\n        end := add(pos, 9)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_594d562b07e5639baeda43f9427a7d73488025602cf4b19cc0e4cec02e1718f8__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_594d562b07e5639baeda43f9427a7d73488025602cf4b19cc0e4cec02e1718f8_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n}\n",
									"id": 23,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040526003600655600a6007556040518060400160405280600c81526020017f496e697469616c697a696e6700000000000000000000000000000000000000008152506009908162000054919062000658565b507322b21beddef74fe62f031d2c5c8f7a9f8a4b304d600a5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550731e4a5963abfd975d8c9021ce480b42188849d41d600b5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073a8ce8aee21bc2a48a5ef670afcc9274c7bbbc035600c5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550731e7e4c855520b2106320952a570a3e5e3e618101600d5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550735e988c11a4f92155c30d9fb69ed75597f712b113600e5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550731e7e4c855520b2106320952a570a3e5e3e618101600f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073c36442b4a4522e871399cd717abdd847ab11fe8860105f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073d05e3e715d945b59290df0ae8ef85c1bdb68474460115f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801562000301575f80fd5b50335f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600d5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166012604051620003739062000794565b90815260200160405180910390205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505f8060146101000a81548160ff021916908315150217905550606e600481905550605560058190555042600881905550620007aa565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806200047057607f821691505b6020821081036200048657620004856200042b565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302620004ea7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620004ad565b620004f68683620004ad565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f620005406200053a62000534846200050e565b62000517565b6200050e565b9050919050565b5f819050919050565b6200055b8362000520565b620005736200056a8262000547565b848454620004b9565b825550505050565b5f90565b620005896200057b565b6200059681848462000550565b505050565b5b81811015620005bd57620005b15f826200057f565b6001810190506200059c565b5050565b601f8211156200060c57620005d6816200048c565b620005e1846200049e565b81016020851015620005f1578190505b6200060962000600856200049e565b8301826200059b565b50505b505050565b5f82821c905092915050565b5f6200062e5f198460080262000611565b1980831691505092915050565b5f6200064883836200061d565b9150826002028217905092915050565b6200066382620003f4565b67ffffffffffffffff8111156200067f576200067e620003fe565b5b6200068b825462000458565b62000698828285620005c1565b5f60209050601f831160018114620006ce575f8415620006b9578287015190505b620006c585826200063b565b86555062000734565b601f198416620006de866200048c565b5f5b828110156200070757848901518255600182019150602085019450602081019050620006e0565b8683101562000727578489015162000723601f8916826200061d565b8355505b6001600288020188555050505b505050505050565b5f81905092915050565b7f517569636b5377617000000000000000000000000000000000000000000000005f82015250565b5f6200077c6009836200073c565b9150620007898262000746565b600982019050919050565b5f620007a0826200076e565b9150819050919050565b611dc180620007b85f395ff3fe6080604052600436106101c5575f3560e01c8063869665e9116100f6578063b3ce56a211610094578063e189eb4211610063578063e189eb4214610641578063e5047b301461066b578063f1a107fe14610695578063f974821a146106bf57610243565b8063b3ce56a214610599578063c0fc247f146105c3578063e037f889146105ed578063e0abca0b1461061757610243565b806392eefe9b116100d057806392eefe9b146105075780639d8ef1e11461052f578063a30fb90514610545578063a98ad46c1461056f57610243565b8063869665e91461048b5780638da5cb5b146104b35780638fc3047d146104dd57610243565b806341c0e1b5116101635780635e7ffa671161013d5780635e7ffa67146103d157806364aabb9e1461040d5780636d546cdd14610437578063735de9f71461046157610243565b806341c0e1b514610369578063457f3cb01461037f5780634ada218b146103a757610243565b80631bf413621161019f5780631bf41362146102b1578063238f9b7a146102db57806326c403ed146103055780633fb47a3b1461032d57610243565b806311eac855146102475780631458d9d81461027157806317700f011461029b57610243565b36610243573460015f8282546101db9190611210565b9250508190555060646046346101f19190611243565b6101fb91906112b1565b60025f82825461020b9190611210565b925050819055506064601e346102219190611243565b61022b91906112b1565b60035f82825461023b9190611210565b925050819055005b5f80fd5b348015610252575f80fd5b5061025b6106e9565b6040516102689190611320565b60405180910390f35b34801561027c575f80fd5b5061028561070e565b6040516102929190611348565b60405180910390f35b3480156102a6575f80fd5b506102af610714565b005b3480156102bc575f80fd5b506102c56107bc565b6040516102d29190611348565b60405180910390f35b3480156102e6575f80fd5b506102ef6107c2565b6040516102fc9190611320565b60405180910390f35b348015610310575f80fd5b5061032b600480360381019061032691906114d8565b6107e7565b005b348015610338575f80fd5b50610353600480360381019061034e919061155c565b6108d3565b60405161036091906115b4565b60405180910390f35b348015610374575f80fd5b5061037d610a16565b005b34801561038a575f80fd5b506103a560048036038101906103a091906115cd565b610ae9565b005b3480156103b2575f80fd5b506103bb610c33565b6040516103c891906115b4565b60405180910390f35b3480156103dc575f80fd5b506103f760048036038101906103f291906115f8565b610c45565b6040516104049190611320565b60405180910390f35b348015610418575f80fd5b50610421610c8d565b60405161042e9190611348565b60405180910390f35b348015610442575f80fd5b5061044b610c93565b60405161045891906116b9565b60405180910390f35b34801561046c575f80fd5b50610475610d1f565b6040516104829190611320565b60405180910390f35b348015610496575f80fd5b506104b160048036038101906104ac91906115cd565b610d44565b005b3480156104be575f80fd5b506104c7610e2d565b6040516104d49190611320565b60405180910390f35b3480156104e8575f80fd5b506104f1610e50565b6040516104fe9190611348565b60405180910390f35b348015610512575f80fd5b5061052d600480360381019061052891906116d9565b610e63565b005b34801561053a575f80fd5b50610543610f32565b005b348015610550575f80fd5b5061055961101a565b6040516105669190611348565b60405180910390f35b34801561057a575f80fd5b50610583611020565b6040516105909190611320565b60405180910390f35b3480156105a4575f80fd5b506105ad611045565b6040516105ba9190611348565b60405180910390f35b3480156105ce575f80fd5b506105d761104b565b6040516105e49190611348565b60405180910390f35b3480156105f8575f80fd5b50610601611051565b60405161060e9190611348565b60405180910390f35b348015610622575f80fd5b5061062b611057565b6040516106389190611320565b60405180910390f35b34801561064c575f80fd5b5061065561107c565b6040516106629190611320565b60405180910390f35b348015610676575f80fd5b5061067f6110a1565b60405161068c9190611320565b60405180910390f35b3480156106a0575f80fd5b506106a96110c6565b6040516106b69190611320565b60405180910390f35b3480156106ca575f80fd5b506106d36110eb565b6040516106e09190611348565b60405180910390f35b600c5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025481565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146107a1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107989061174e565b60405180910390fd5b5f8060146101000a81548160ff021916908315150217905550565b60085481565b60115f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610874576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086b9061174e565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f030fdcd4f0c28c5dbcbc3f59aa8e2260c7f58ac45be2a2dca652999af89c33e083835f6108b76110f1565b6040516108c794939291906117ae565b60405180910390a25050565b5f808290505f8173ffffffffffffffffffffffffffffffffffffffff16633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015610922573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061094691906118ef565b50505050505090505f8273ffffffffffffffffffffffffffffffffffffffff16631a6865026040518163ffffffff1660e01b8152600401602060405180830381865afa158015610998573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109bc91906119d1565b6fffffffffffffffffffffffffffffffff1690505f6109dc8784846111a3565b90505f60646001836109ee9190611243565b6109f891906112b1565b90508088610a0691906119fc565b8210159550505050505092915050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610aa3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9a9061174e565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc4790811502906040515f60405180830381858888f19350505050158015610ae6573d5f803e3d5ffd5b50565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b76576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b6d9061174e565b60405180910390fd5b5f633b9aca0082610b879190611243565b905080471015610bcc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bc390611a79565b60405180910390fd5b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f19350505050158015610c2e573d5f803e3d5ffd5b505050565b5f60149054906101000a900460ff1681565b6012818051602081018201805184825260208301602085012081835280955050505050505f915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60035481565b60098054610ca090611ac4565b80601f0160208091040260200160405190810160405280929190818152602001828054610ccc90611ac4565b8015610d175780601f10610cee57610100808354040283529160200191610d17565b820191905f5260205f20905b815481529060010190602001808311610cfa57829003601f168201915b505050505081565b600f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610dd1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dc89061174e565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f030fdcd4f0c28c5dbcbc3f59aa8e2260c7f58ac45be2a2dca652999af89c33e0825f610e136110f1565b604051610e2293929190611b3e565b60405180910390a250565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f80610e5a6110f1565b90508091505090565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ef0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ee79061174e565b60405180910390fd5b805f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610fbf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fb69061174e565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f030fdcd4f0c28c5dbcbc3f59aa8e2260c7f58ac45be2a2dca652999af89c33e05f806110016110f1565b60405161101093929190611bd0565b60405180910390a2565b60065481565b600b5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60075481565b60055481565b60015481565b600e5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600d5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60105f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600a5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60045481565b5f80600e5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505f8173ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015611161573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111859190611c9e565b5050509150506402540be4008161119c9190611d15565b9250505090565b5f818373ffffffffffffffffffffffffffffffffffffffff16856111c79190611243565b6111d191906112b1565b90509392505050565b5f819050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61121a826111da565b9150611225836111da565b925082820190508082111561123d5761123c6111e3565b5b92915050565b5f61124d826111da565b9150611258836111da565b9250828202611266816111da565b9150828204841483151761127d5761127c6111e3565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6112bb826111da565b91506112c6836111da565b9250826112d6576112d5611284565b5b828204905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61130a826112e1565b9050919050565b61131a81611300565b82525050565b5f6020820190506113335f830184611311565b92915050565b611342816111da565b82525050565b5f60208201905061135b5f830184611339565b92915050565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6113c08261137a565b810181811067ffffffffffffffff821117156113df576113de61138a565b5b80604052505050565b5f6113f1611361565b90506113fd82826113b7565b919050565b5f67ffffffffffffffff82111561141c5761141b61138a565b5b6114258261137a565b9050602081019050919050565b828183375f83830152505050565b5f61145261144d84611402565b6113e8565b90508281526020810184848401111561146e5761146d611376565b5b611479848285611432565b509392505050565b5f82601f83011261149557611494611372565b5b81356114a5848260208601611440565b91505092915050565b6114b7816111da565b81146114c1575f80fd5b50565b5f813590506114d2816114ae565b92915050565b5f80604083850312156114ee576114ed61136a565b5b5f83013567ffffffffffffffff81111561150b5761150a61136e565b5b61151785828601611481565b9250506020611528858286016114c4565b9150509250929050565b61153b81611300565b8114611545575f80fd5b50565b5f8135905061155681611532565b92915050565b5f80604083850312156115725761157161136a565b5b5f61157f858286016114c4565b925050602061159085828601611548565b9150509250929050565b5f8115159050919050565b6115ae8161159a565b82525050565b5f6020820190506115c75f8301846115a5565b92915050565b5f602082840312156115e2576115e161136a565b5b5f6115ef848285016114c4565b91505092915050565b5f6020828403121561160d5761160c61136a565b5b5f82013567ffffffffffffffff81111561162a5761162961136e565b5b61163684828501611481565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b8381101561167657808201518184015260208101905061165b565b5f8484015250505050565b5f61168b8261163f565b6116958185611649565b93506116a5818560208601611659565b6116ae8161137a565b840191505092915050565b5f6020820190508181035f8301526116d18184611681565b905092915050565b5f602082840312156116ee576116ed61136a565b5b5f6116fb84828501611548565b91505092915050565b7f4e6f7420746865206f776e6572000000000000000000000000000000000000005f82015250565b5f611738600d83611649565b915061174382611704565b602082019050919050565b5f6020820190508181035f8301526117658161172c565b9050919050565b5f819050919050565b5f819050919050565b5f61179861179361178e8461176c565b611775565b6111da565b9050919050565b6117a88161177e565b82525050565b5f6080820190508181035f8301526117c68187611681565b90506117d56020830186611339565b6117e2604083018561179f565b6117ef6060830184611339565b95945050505050565b611801816112e1565b811461180b575f80fd5b50565b5f8151905061181c816117f8565b92915050565b5f8160020b9050919050565b61183781611822565b8114611841575f80fd5b50565b5f815190506118528161182e565b92915050565b5f61ffff82169050919050565b61186e81611858565b8114611878575f80fd5b50565b5f8151905061188981611865565b92915050565b5f60ff82169050919050565b6118a48161188f565b81146118ae575f80fd5b50565b5f815190506118bf8161189b565b92915050565b6118ce8161159a565b81146118d8575f80fd5b50565b5f815190506118e9816118c5565b92915050565b5f805f805f805f60e0888a03121561190a5761190961136a565b5b5f6119178a828b0161180e565b97505060206119288a828b01611844565b96505060406119398a828b0161187b565b955050606061194a8a828b0161187b565b945050608061195b8a828b0161187b565b93505060a061196c8a828b016118b1565b92505060c061197d8a828b016118db565b91505092959891949750929550565b5f6fffffffffffffffffffffffffffffffff82169050919050565b6119b08161198c565b81146119ba575f80fd5b50565b5f815190506119cb816119a7565b92915050565b5f602082840312156119e6576119e561136a565b5b5f6119f3848285016119bd565b91505092915050565b5f611a06826111da565b9150611a11836111da565b9250828203905081811115611a2957611a286111e3565b5b92915050565b7f496e73756666696369656e742062616c616e63650000000000000000000000005f82015250565b5f611a63601483611649565b9150611a6e82611a2f565b602082019050919050565b5f6020820190508181035f830152611a9081611a57565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611adb57607f821691505b602082108103611aee57611aed611a97565b5b50919050565b7f54696d656672616d652061646a757374656400000000000000000000000000005f82015250565b5f611b28601283611649565b9150611b3382611af4565b602082019050919050565b5f6080820190508181035f830152611b5581611b1c565b9050611b646020830186611339565b611b71604083018561179f565b611b7e6060830184611339565b949350505050565b7f636f6e7665727420746f20504f4c0000000000000000000000000000000000005f82015250565b5f611bba600e83611649565b9150611bc582611b86565b602082019050919050565b5f6080820190508181035f830152611be781611bae565b9050611bf6602083018661179f565b611c03604083018561179f565b611c106060830184611339565b949350505050565b5f69ffffffffffffffffffff82169050919050565b611c3681611c18565b8114611c40575f80fd5b50565b5f81519050611c5181611c2d565b92915050565b5f819050919050565b611c6981611c57565b8114611c73575f80fd5b50565b5f81519050611c8481611c60565b92915050565b5f81519050611c98816114ae565b92915050565b5f805f805f60a08688031215611cb757611cb661136a565b5b5f611cc488828901611c43565b9550506020611cd588828901611c76565b9450506040611ce688828901611c8a565b9350506060611cf788828901611c8a565b9250506080611d0888828901611c43565b9150509295509295909350565b5f611d1f82611c57565b9150611d2a83611c57565b9250828202611d3881611c57565b91507f800000000000000000000000000000000000000000000000000000000000000084145f84121615611d6f57611d6e6111e3565b5b8282058414831517611d8457611d836111e3565b5b509291505056fea2646970667358221220449b0f1b43c11ef172abf98154ebaca74aaeb32ca045a166e6cb450e31ad443a64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x3 PUSH1 0x6 SSTORE PUSH1 0xA PUSH1 0x7 SSTORE PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x496E697469616C697A696E670000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x9 SWAP1 DUP2 PUSH3 0x54 SWAP2 SWAP1 PUSH3 0x658 JUMP JUMPDEST POP PUSH20 0x22B21BEDDEF74FE62F031D2C5C8F7A9F8A4B304D PUSH1 0xA PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0x1E4A5963ABFD975D8C9021CE480B42188849D41D PUSH1 0xB PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0xA8CE8AEE21BC2A48A5EF670AFCC9274C7BBBC035 PUSH1 0xC PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0x1E7E4C855520B2106320952A570A3E5E3E618101 PUSH1 0xD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0x5E988C11A4F92155C30D9FB69ED75597F712B113 PUSH1 0xE PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0x1E7E4C855520B2106320952A570A3E5E3E618101 PUSH1 0xF PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0xC36442B4A4522E871399CD717ABDD847AB11FE88 PUSH1 0x10 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0xD05E3E715D945B59290DF0AE8EF85C1BDB684744 PUSH1 0x11 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH3 0x301 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLER PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x12 PUSH1 0x40 MLOAD PUSH3 0x373 SWAP1 PUSH3 0x794 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH0 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x6E PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH1 0x55 PUSH1 0x5 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH3 0x7AA JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x470 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x486 JUMPI PUSH3 0x485 PUSH3 0x42B JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0x4EA PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x4AD JUMP JUMPDEST PUSH3 0x4F6 DUP7 DUP4 PUSH3 0x4AD JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x540 PUSH3 0x53A PUSH3 0x534 DUP5 PUSH3 0x50E JUMP JUMPDEST PUSH3 0x517 JUMP JUMPDEST PUSH3 0x50E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x55B DUP4 PUSH3 0x520 JUMP JUMPDEST PUSH3 0x573 PUSH3 0x56A DUP3 PUSH3 0x547 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x4B9 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0x589 PUSH3 0x57B JUMP JUMPDEST PUSH3 0x596 DUP2 DUP5 DUP5 PUSH3 0x550 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x5BD JUMPI PUSH3 0x5B1 PUSH0 DUP3 PUSH3 0x57F JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x59C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x60C JUMPI PUSH3 0x5D6 DUP2 PUSH3 0x48C JUMP JUMPDEST PUSH3 0x5E1 DUP5 PUSH3 0x49E JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x5F1 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x609 PUSH3 0x600 DUP6 PUSH3 0x49E JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x59B JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x62E PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x611 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x648 DUP4 DUP4 PUSH3 0x61D JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x663 DUP3 PUSH3 0x3F4 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x67F JUMPI PUSH3 0x67E PUSH3 0x3FE JUMP JUMPDEST JUMPDEST PUSH3 0x68B DUP3 SLOAD PUSH3 0x458 JUMP JUMPDEST PUSH3 0x698 DUP3 DUP3 DUP6 PUSH3 0x5C1 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x6CE JUMPI PUSH0 DUP5 ISZERO PUSH3 0x6B9 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x6C5 DUP6 DUP3 PUSH3 0x63B JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x734 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x6DE DUP7 PUSH3 0x48C JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x707 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x6E0 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x727 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x723 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x61D JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x517569636B537761700000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH3 0x77C PUSH1 0x9 DUP4 PUSH3 0x73C JUMP JUMPDEST SWAP2 POP PUSH3 0x789 DUP3 PUSH3 0x746 JUMP JUMPDEST PUSH1 0x9 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x7A0 DUP3 PUSH3 0x76E JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DC1 DUP1 PUSH3 0x7B8 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1C5 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x869665E9 GT PUSH2 0xF6 JUMPI DUP1 PUSH4 0xB3CE56A2 GT PUSH2 0x94 JUMPI DUP1 PUSH4 0xE189EB42 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xE189EB42 EQ PUSH2 0x641 JUMPI DUP1 PUSH4 0xE5047B30 EQ PUSH2 0x66B JUMPI DUP1 PUSH4 0xF1A107FE EQ PUSH2 0x695 JUMPI DUP1 PUSH4 0xF974821A EQ PUSH2 0x6BF JUMPI PUSH2 0x243 JUMP JUMPDEST DUP1 PUSH4 0xB3CE56A2 EQ PUSH2 0x599 JUMPI DUP1 PUSH4 0xC0FC247F EQ PUSH2 0x5C3 JUMPI DUP1 PUSH4 0xE037F889 EQ PUSH2 0x5ED JUMPI DUP1 PUSH4 0xE0ABCA0B EQ PUSH2 0x617 JUMPI PUSH2 0x243 JUMP JUMPDEST DUP1 PUSH4 0x92EEFE9B GT PUSH2 0xD0 JUMPI DUP1 PUSH4 0x92EEFE9B EQ PUSH2 0x507 JUMPI DUP1 PUSH4 0x9D8EF1E1 EQ PUSH2 0x52F JUMPI DUP1 PUSH4 0xA30FB905 EQ PUSH2 0x545 JUMPI DUP1 PUSH4 0xA98AD46C EQ PUSH2 0x56F JUMPI PUSH2 0x243 JUMP JUMPDEST DUP1 PUSH4 0x869665E9 EQ PUSH2 0x48B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4B3 JUMPI DUP1 PUSH4 0x8FC3047D EQ PUSH2 0x4DD JUMPI PUSH2 0x243 JUMP JUMPDEST DUP1 PUSH4 0x41C0E1B5 GT PUSH2 0x163 JUMPI DUP1 PUSH4 0x5E7FFA67 GT PUSH2 0x13D JUMPI DUP1 PUSH4 0x5E7FFA67 EQ PUSH2 0x3D1 JUMPI DUP1 PUSH4 0x64AABB9E EQ PUSH2 0x40D JUMPI DUP1 PUSH4 0x6D546CDD EQ PUSH2 0x437 JUMPI DUP1 PUSH4 0x735DE9F7 EQ PUSH2 0x461 JUMPI PUSH2 0x243 JUMP JUMPDEST DUP1 PUSH4 0x41C0E1B5 EQ PUSH2 0x369 JUMPI DUP1 PUSH4 0x457F3CB0 EQ PUSH2 0x37F JUMPI DUP1 PUSH4 0x4ADA218B EQ PUSH2 0x3A7 JUMPI PUSH2 0x243 JUMP JUMPDEST DUP1 PUSH4 0x1BF41362 GT PUSH2 0x19F JUMPI DUP1 PUSH4 0x1BF41362 EQ PUSH2 0x2B1 JUMPI DUP1 PUSH4 0x238F9B7A EQ PUSH2 0x2DB JUMPI DUP1 PUSH4 0x26C403ED EQ PUSH2 0x305 JUMPI DUP1 PUSH4 0x3FB47A3B EQ PUSH2 0x32D JUMPI PUSH2 0x243 JUMP JUMPDEST DUP1 PUSH4 0x11EAC855 EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0x1458D9D8 EQ PUSH2 0x271 JUMPI DUP1 PUSH4 0x17700F01 EQ PUSH2 0x29B JUMPI PUSH2 0x243 JUMP JUMPDEST CALLDATASIZE PUSH2 0x243 JUMPI CALLVALUE PUSH1 0x1 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0x1210 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x64 PUSH1 0x46 CALLVALUE PUSH2 0x1F1 SWAP2 SWAP1 PUSH2 0x1243 JUMP JUMPDEST PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0x12B1 JUMP JUMPDEST PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x20B SWAP2 SWAP1 PUSH2 0x1210 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x64 PUSH1 0x1E CALLVALUE PUSH2 0x221 SWAP2 SWAP1 PUSH2 0x1243 JUMP JUMPDEST PUSH2 0x22B SWAP2 SWAP1 PUSH2 0x12B1 JUMP JUMPDEST PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x23B SWAP2 SWAP1 PUSH2 0x1210 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x252 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x25B PUSH2 0x6E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x268 SWAP2 SWAP1 PUSH2 0x1320 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x285 PUSH2 0x70E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x292 SWAP2 SWAP1 PUSH2 0x1348 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AF PUSH2 0x714 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C5 PUSH2 0x7BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D2 SWAP2 SWAP1 PUSH2 0x1348 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EF PUSH2 0x7C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FC SWAP2 SWAP1 PUSH2 0x1320 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x310 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x32B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x326 SWAP2 SWAP1 PUSH2 0x14D8 JUMP JUMPDEST PUSH2 0x7E7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x338 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x353 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34E SWAP2 SWAP1 PUSH2 0x155C JUMP JUMPDEST PUSH2 0x8D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x360 SWAP2 SWAP1 PUSH2 0x15B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x374 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x37D PUSH2 0xA16 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A0 SWAP2 SWAP1 PUSH2 0x15CD JUMP JUMPDEST PUSH2 0xAE9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3BB PUSH2 0xC33 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C8 SWAP2 SWAP1 PUSH2 0x15B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F2 SWAP2 SWAP1 PUSH2 0x15F8 JUMP JUMPDEST PUSH2 0xC45 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x404 SWAP2 SWAP1 PUSH2 0x1320 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x418 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x421 PUSH2 0xC8D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x42E SWAP2 SWAP1 PUSH2 0x1348 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x442 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x44B PUSH2 0xC93 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x458 SWAP2 SWAP1 PUSH2 0x16B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x475 PUSH2 0xD1F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x482 SWAP2 SWAP1 PUSH2 0x1320 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x496 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4AC SWAP2 SWAP1 PUSH2 0x15CD JUMP JUMPDEST PUSH2 0xD44 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C7 PUSH2 0xE2D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D4 SWAP2 SWAP1 PUSH2 0x1320 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4F1 PUSH2 0xE50 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4FE SWAP2 SWAP1 PUSH2 0x1348 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x512 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x52D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x528 SWAP2 SWAP1 PUSH2 0x16D9 JUMP JUMPDEST PUSH2 0xE63 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x53A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x543 PUSH2 0xF32 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x550 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x559 PUSH2 0x101A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x566 SWAP2 SWAP1 PUSH2 0x1348 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x57A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x583 PUSH2 0x1020 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x590 SWAP2 SWAP1 PUSH2 0x1320 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5AD PUSH2 0x1045 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5BA SWAP2 SWAP1 PUSH2 0x1348 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5CE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5D7 PUSH2 0x104B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5E4 SWAP2 SWAP1 PUSH2 0x1348 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x601 PUSH2 0x1051 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x60E SWAP2 SWAP1 PUSH2 0x1348 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x622 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x62B PUSH2 0x1057 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x638 SWAP2 SWAP1 PUSH2 0x1320 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x64C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x655 PUSH2 0x107C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x662 SWAP2 SWAP1 PUSH2 0x1320 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x676 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x67F PUSH2 0x10A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x68C SWAP2 SWAP1 PUSH2 0x1320 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6A0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x6A9 PUSH2 0x10C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6B6 SWAP2 SWAP1 PUSH2 0x1320 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6CA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x6D3 PUSH2 0x10EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6E0 SWAP2 SWAP1 PUSH2 0x1348 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0xC PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7A1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x798 SWAP1 PUSH2 0x174E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x11 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x874 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x86B SWAP1 PUSH2 0x174E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x30FDCD4F0C28C5DBCBC3F59AA8E2260C7F58AC45BE2A2DCA652999AF89C33E0 DUP4 DUP4 PUSH0 PUSH2 0x8B7 PUSH2 0x10F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8C7 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x17AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP1 POP PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3850C7BD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xE0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x922 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x946 SWAP2 SWAP1 PUSH2 0x18EF JUMP JUMPDEST POP POP POP POP POP POP SWAP1 POP PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1A686502 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x998 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9BC SWAP2 SWAP1 PUSH2 0x19D1 JUMP JUMPDEST PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 PUSH2 0x9DC DUP8 DUP5 DUP5 PUSH2 0x11A3 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x64 PUSH1 0x1 DUP4 PUSH2 0x9EE SWAP2 SWAP1 PUSH2 0x1243 JUMP JUMPDEST PUSH2 0x9F8 SWAP2 SWAP1 PUSH2 0x12B1 JUMP JUMPDEST SWAP1 POP DUP1 DUP9 PUSH2 0xA06 SWAP2 SWAP1 PUSH2 0x19FC JUMP JUMPDEST DUP3 LT ISZERO SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xAA3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA9A SWAP1 PUSH2 0x174E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xAE6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB76 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB6D SWAP1 PUSH2 0x174E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH4 0x3B9ACA00 DUP3 PUSH2 0xB87 SWAP2 SWAP1 PUSH2 0x1243 JUMP JUMPDEST SWAP1 POP DUP1 SELFBALANCE LT ISZERO PUSH2 0xBCC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC3 SWAP1 PUSH2 0x1A79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xC2E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x12 DUP2 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP3 ADD DUP1 MLOAD DUP5 DUP3 MSTORE PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP6 ADD KECCAK256 DUP2 DUP4 MSTORE DUP1 SWAP6 POP POP POP POP POP POP PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH2 0xCA0 SWAP1 PUSH2 0x1AC4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xCCC SWAP1 PUSH2 0x1AC4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD17 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xCEE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD17 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xCFA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0xF PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDD1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDC8 SWAP1 PUSH2 0x174E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x30FDCD4F0C28C5DBCBC3F59AA8E2260C7F58AC45BE2A2DCA652999AF89C33E0 DUP3 PUSH0 PUSH2 0xE13 PUSH2 0x10F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE22 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xE5A PUSH2 0x10F1 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xEF0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEE7 SWAP1 PUSH2 0x174E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFBF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFB6 SWAP1 PUSH2 0x174E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x30FDCD4F0C28C5DBCBC3F59AA8E2260C7F58AC45BE2A2DCA652999AF89C33E0 PUSH0 DUP1 PUSH2 0x1001 PUSH2 0x10F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1010 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1BD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xE PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x10 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0xE PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1161 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1185 SWAP2 SWAP1 PUSH2 0x1C9E JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH5 0x2540BE400 DUP2 PUSH2 0x119C SWAP2 SWAP1 PUSH2 0x1D15 JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH2 0x11C7 SWAP2 SWAP1 PUSH2 0x1243 JUMP JUMPDEST PUSH2 0x11D1 SWAP2 SWAP1 PUSH2 0x12B1 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x121A DUP3 PUSH2 0x11DA JUMP JUMPDEST SWAP2 POP PUSH2 0x1225 DUP4 PUSH2 0x11DA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x123D JUMPI PUSH2 0x123C PUSH2 0x11E3 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x124D DUP3 PUSH2 0x11DA JUMP JUMPDEST SWAP2 POP PUSH2 0x1258 DUP4 PUSH2 0x11DA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1266 DUP2 PUSH2 0x11DA JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x127D JUMPI PUSH2 0x127C PUSH2 0x11E3 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x12BB DUP3 PUSH2 0x11DA JUMP JUMPDEST SWAP2 POP PUSH2 0x12C6 DUP4 PUSH2 0x11DA JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x12D6 JUMPI PUSH2 0x12D5 PUSH2 0x1284 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x130A DUP3 PUSH2 0x12E1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x131A DUP2 PUSH2 0x1300 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1333 PUSH0 DUP4 ADD DUP5 PUSH2 0x1311 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1342 DUP2 PUSH2 0x11DA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x135B PUSH0 DUP4 ADD DUP5 PUSH2 0x1339 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x13C0 DUP3 PUSH2 0x137A JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x13DF JUMPI PUSH2 0x13DE PUSH2 0x138A JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x13F1 PUSH2 0x1361 JUMP JUMPDEST SWAP1 POP PUSH2 0x13FD DUP3 DUP3 PUSH2 0x13B7 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x141C JUMPI PUSH2 0x141B PUSH2 0x138A JUMP JUMPDEST JUMPDEST PUSH2 0x1425 DUP3 PUSH2 0x137A JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1452 PUSH2 0x144D DUP5 PUSH2 0x1402 JUMP JUMPDEST PUSH2 0x13E8 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x146E JUMPI PUSH2 0x146D PUSH2 0x1376 JUMP JUMPDEST JUMPDEST PUSH2 0x1479 DUP5 DUP3 DUP6 PUSH2 0x1432 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1495 JUMPI PUSH2 0x1494 PUSH2 0x1372 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x14A5 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1440 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x14B7 DUP2 PUSH2 0x11DA JUMP JUMPDEST DUP2 EQ PUSH2 0x14C1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14D2 DUP2 PUSH2 0x14AE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14EE JUMPI PUSH2 0x14ED PUSH2 0x136A JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x150B JUMPI PUSH2 0x150A PUSH2 0x136E JUMP JUMPDEST JUMPDEST PUSH2 0x1517 DUP6 DUP3 DUP7 ADD PUSH2 0x1481 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1528 DUP6 DUP3 DUP7 ADD PUSH2 0x14C4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x153B DUP2 PUSH2 0x1300 JUMP JUMPDEST DUP2 EQ PUSH2 0x1545 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1556 DUP2 PUSH2 0x1532 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1572 JUMPI PUSH2 0x1571 PUSH2 0x136A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x157F DUP6 DUP3 DUP7 ADD PUSH2 0x14C4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1590 DUP6 DUP3 DUP7 ADD PUSH2 0x1548 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15AE DUP2 PUSH2 0x159A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15C7 PUSH0 DUP4 ADD DUP5 PUSH2 0x15A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15E2 JUMPI PUSH2 0x15E1 PUSH2 0x136A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x15EF DUP5 DUP3 DUP6 ADD PUSH2 0x14C4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x160D JUMPI PUSH2 0x160C PUSH2 0x136A JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x162A JUMPI PUSH2 0x1629 PUSH2 0x136E JUMP JUMPDEST JUMPDEST PUSH2 0x1636 DUP5 DUP3 DUP6 ADD PUSH2 0x1481 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1676 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x165B JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x168B DUP3 PUSH2 0x163F JUMP JUMPDEST PUSH2 0x1695 DUP2 DUP6 PUSH2 0x1649 JUMP JUMPDEST SWAP4 POP PUSH2 0x16A5 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1659 JUMP JUMPDEST PUSH2 0x16AE DUP2 PUSH2 0x137A JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x16D1 DUP2 DUP5 PUSH2 0x1681 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16EE JUMPI PUSH2 0x16ED PUSH2 0x136A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16FB DUP5 DUP3 DUP6 ADD PUSH2 0x1548 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420746865206F776E657200000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1738 PUSH1 0xD DUP4 PUSH2 0x1649 JUMP JUMPDEST SWAP2 POP PUSH2 0x1743 DUP3 PUSH2 0x1704 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1765 DUP2 PUSH2 0x172C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1798 PUSH2 0x1793 PUSH2 0x178E DUP5 PUSH2 0x176C JUMP JUMPDEST PUSH2 0x1775 JUMP JUMPDEST PUSH2 0x11DA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17A8 DUP2 PUSH2 0x177E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x17C6 DUP2 DUP8 PUSH2 0x1681 JUMP JUMPDEST SWAP1 POP PUSH2 0x17D5 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1339 JUMP JUMPDEST PUSH2 0x17E2 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x179F JUMP JUMPDEST PUSH2 0x17EF PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1339 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1801 DUP2 PUSH2 0x12E1 JUMP JUMPDEST DUP2 EQ PUSH2 0x180B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x181C DUP2 PUSH2 0x17F8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x2 SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1837 DUP2 PUSH2 0x1822 JUMP JUMPDEST DUP2 EQ PUSH2 0x1841 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1852 DUP2 PUSH2 0x182E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x186E DUP2 PUSH2 0x1858 JUMP JUMPDEST DUP2 EQ PUSH2 0x1878 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1889 DUP2 PUSH2 0x1865 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18A4 DUP2 PUSH2 0x188F JUMP JUMPDEST DUP2 EQ PUSH2 0x18AE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x18BF DUP2 PUSH2 0x189B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x18CE DUP2 PUSH2 0x159A JUMP JUMPDEST DUP2 EQ PUSH2 0x18D8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x18E9 DUP2 PUSH2 0x18C5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x190A JUMPI PUSH2 0x1909 PUSH2 0x136A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1917 DUP11 DUP3 DUP12 ADD PUSH2 0x180E JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x1928 DUP11 DUP3 DUP12 ADD PUSH2 0x1844 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x1939 DUP11 DUP3 DUP12 ADD PUSH2 0x187B JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x194A DUP11 DUP3 DUP12 ADD PUSH2 0x187B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x195B DUP11 DUP3 DUP12 ADD PUSH2 0x187B JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x196C DUP11 DUP3 DUP12 ADD PUSH2 0x18B1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x197D DUP11 DUP3 DUP12 ADD PUSH2 0x18DB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH0 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19B0 DUP2 PUSH2 0x198C JUMP JUMPDEST DUP2 EQ PUSH2 0x19BA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x19CB DUP2 PUSH2 0x19A7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19E6 JUMPI PUSH2 0x19E5 PUSH2 0x136A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x19F3 DUP5 DUP3 DUP6 ADD PUSH2 0x19BD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1A06 DUP3 PUSH2 0x11DA JUMP JUMPDEST SWAP2 POP PUSH2 0x1A11 DUP4 PUSH2 0x11DA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1A29 JUMPI PUSH2 0x1A28 PUSH2 0x11E3 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1A63 PUSH1 0x14 DUP4 PUSH2 0x1649 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A6E DUP3 PUSH2 0x1A2F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A90 DUP2 PUSH2 0x1A57 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1ADB JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1AEE JUMPI PUSH2 0x1AED PUSH2 0x1A97 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x54696D656672616D652061646A75737465640000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B28 PUSH1 0x12 DUP4 PUSH2 0x1649 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B33 DUP3 PUSH2 0x1AF4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B55 DUP2 PUSH2 0x1B1C JUMP JUMPDEST SWAP1 POP PUSH2 0x1B64 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1339 JUMP JUMPDEST PUSH2 0x1B71 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x179F JUMP JUMPDEST PUSH2 0x1B7E PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1339 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x636F6E7665727420746F20504F4C000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1BBA PUSH1 0xE DUP4 PUSH2 0x1649 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BC5 DUP3 PUSH2 0x1B86 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1BE7 DUP2 PUSH2 0x1BAE JUMP JUMPDEST SWAP1 POP PUSH2 0x1BF6 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x179F JUMP JUMPDEST PUSH2 0x1C03 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x179F JUMP JUMPDEST PUSH2 0x1C10 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1339 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C36 DUP2 PUSH2 0x1C18 JUMP JUMPDEST DUP2 EQ PUSH2 0x1C40 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1C51 DUP2 PUSH2 0x1C2D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C69 DUP2 PUSH2 0x1C57 JUMP JUMPDEST DUP2 EQ PUSH2 0x1C73 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1C84 DUP2 PUSH2 0x1C60 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1C98 DUP2 PUSH2 0x14AE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1CB7 JUMPI PUSH2 0x1CB6 PUSH2 0x136A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CC4 DUP9 DUP3 DUP10 ADD PUSH2 0x1C43 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1CD5 DUP9 DUP3 DUP10 ADD PUSH2 0x1C76 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1CE6 DUP9 DUP3 DUP10 ADD PUSH2 0x1C8A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x1CF7 DUP9 DUP3 DUP10 ADD PUSH2 0x1C8A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x1D08 DUP9 DUP3 DUP10 ADD PUSH2 0x1C43 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D1F DUP3 PUSH2 0x1C57 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D2A DUP4 PUSH2 0x1C57 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1D38 DUP2 PUSH2 0x1C57 JUMP JUMPDEST SWAP2 POP PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP5 EQ PUSH0 DUP5 SLT AND ISZERO PUSH2 0x1D6F JUMPI PUSH2 0x1D6E PUSH2 0x11E3 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SDIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1D84 JUMPI PUSH2 0x1D83 PUSH2 0x11E3 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PREVRANDAO SWAP12 0xF SHL NUMBER 0xC1 0x1E CALL PUSH19 0xABF98154EBACA74AAEB32CA045A166E6CB450E BALANCE 0xAD PREVRANDAO GASPRICE PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "944:6809:0:-:0;;;1237:1;1202:36;;1278:2;1244:36;;1318:46;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1397:42;1371:68;;;;;;;;;;;;;;;;;;;;1509:42;1482:69;;;;;;;;;;;;;;;;;;;;1603:42;1576:69;;;;;;;;;;;;;;;;;;;;1703:42;1670:75;;;;;;;;;;;;;;;;;;;;1805:42;1771:76;;;;;;;;;;;;;;;;;;;;1908:42;1877:73;;;;;;;;;;;;;;;;;;;;2021:42;1981:82;;;;;;;;;;;;;;;;;;;;2149:42;2099:92;;;;;;;;;;;;;;;;;;;;2752:270;;;;;;;;;;2784:10;2776:5;;:18;;;;;;;;;;;;;;;;;;2830:15;;;;;;;;;;;2804:10;:23;;;;;:::i;:::-;;;;;;;;;;;;;;:41;;;;;;;;;;;;;;;;;;2872:5;2855:14;;:22;;;;;;;;;;;;;;;;;;2905:3;2887:15;:21;;;;2948:2;2932:13;:18;;;;3000:15;2986:11;:29;;;;944:6809;;7:99:23;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;5234:148::-;5336:11;5373:3;5358:18;;5234:148;;;;:::o;5388:159::-;5528:11;5524:1;5516:6;5512:14;5505:35;5388:159;:::o;5553:400::-;5713:3;5734:84;5816:1;5811:3;5734:84;:::i;:::-;5727:91;;5827:93;5916:3;5827:93;:::i;:::-;5945:1;5940:3;5936:11;5929:18;;5553:400;;;:::o;5959:381::-;6144:3;6166:148;6310:3;6166:148;:::i;:::-;6159:155;;6331:3;6324:10;;5959:381;;;:::o;944:6809:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@POLToken_63": {
									"entryPoint": 4294,
									"id": 63,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_208": {
									"entryPoint": null,
									"id": 208,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@aaveLendingPoolAddressesProvider_84": {
									"entryPoint": 1986,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@adjustTimeframe_236": {
									"entryPoint": 3396,
									"id": 236,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@calculateAmountOut_361": {
									"entryPoint": 4515,
									"id": 361,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@checkLiquidity_340": {
									"entryPoint": 2259,
									"id": 340,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@checkPrice_249": {
									"entryPoint": 3664,
									"id": 249,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@convertAllToPOL_285": {
									"entryPoint": 3890,
									"id": 285,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@currentActivity_60": {
									"entryPoint": 3219,
									"id": 60,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@dexRouters_88": {
									"entryPoint": 3141,
									"id": 88,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@disableTrading_371": {
									"entryPoint": 1812,
									"id": 371,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@gasCostMultiplier_52": {
									"entryPoint": 4122,
									"id": 52,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getPrice_822": {
									"entryPoint": 4337,
									"id": 822,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@initialDeposit_41": {
									"entryPoint": 4177,
									"id": 41,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@initiateTrade_269": {
									"entryPoint": 2023,
									"id": 269,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@kill_423": {
									"entryPoint": 2582,
									"id": 423,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@lossThreshold_49": {
									"entryPoint": 4171,
									"id": 49,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@maticBalance_43": {
									"entryPoint": 1806,
									"id": 43,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@nextLogTime_57": {
									"entryPoint": 1980,
									"id": 57,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_37": {
									"entryPoint": 3629,
									"id": 37,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@priceFeedAddress_75": {
									"entryPoint": 4183,
									"id": 75,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@profitThreshold_47": {
									"entryPoint": 4331,
									"id": 47,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@quickSwapRouter_72": {
									"entryPoint": 4220,
									"id": 72,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setController_179": {
									"entryPoint": 3683,
									"id": 179,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stablecoinBalance_45": {
									"entryPoint": 3213,
									"id": 45,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tradingEnabled_39": {
									"entryPoint": 3123,
									"id": 39,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@trailingStopLoss_55": {
									"entryPoint": 4165,
									"id": 55,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@uniswapPositionManager_81": {
									"entryPoint": 4257,
									"id": 81,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@uniswapRouter_78": {
									"entryPoint": 3359,
									"id": 78,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@usdcToken_69": {
									"entryPoint": 1769,
									"id": 69,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@usdtToken_66": {
									"entryPoint": 4128,
									"id": 66,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdrawInGwei_404": {
									"entryPoint": 2793,
									"id": 404,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 5184,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 5448,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 6363,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_int24_fromMemory": {
									"entryPoint": 6212,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_int256_fromMemory": {
									"entryPoint": 7286,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 5249,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint128_fromMemory": {
									"entryPoint": 6589,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint160_fromMemory": {
									"entryPoint": 6158,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint16_fromMemory": {
									"entryPoint": 6267,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5316,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 7306,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint80_fromMemory": {
									"entryPoint": 7235,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint8_fromMemory": {
									"entryPoint": 6321,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5849,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr": {
									"entryPoint": 5624,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_uint256": {
									"entryPoint": 5336,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint128_fromMemory": {
									"entryPoint": 6609,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint160t_int24t_uint16t_uint16t_uint16t_uint8t_bool_fromMemory": {
									"entryPoint": 6383,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 7
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5581,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_address": {
									"entryPoint": 5468,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory": {
									"entryPoint": 7326,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4881,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5541,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_rational_0_by_1_to_t_uint256_fromStack": {
									"entryPoint": 6047,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5761,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6743,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5932,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7638e8c8903c5fa61ebf97e2b2f70e2c3ee679b62e1042ef4e4240a60c0694d0_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6940,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f548031c271626835f64bb759a80cb1c7ee3cbb01af72f7702986b2084fa7f35_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7086,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4921,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4896,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5556,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5817,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr_t_uint256_t_rational_0_by_1_t_uint256__to_t_string_memory_ptr_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 6062,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6777,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5966,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7638e8c8903c5fa61ebf97e2b2f70e2c3ee679b62e1042ef4e4240a60c0694d0_t_uint256_t_rational_0_by_1_t_uint256__to_t_string_memory_ptr_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 6974,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f548031c271626835f64bb759a80cb1c7ee3cbb01af72f7702986b2084fa7f35_t_rational_0_by_1_t_rational_0_by_1_t_uint256__to_t_string_memory_ptr_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 7120,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4936,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 5096,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 4961,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 5122,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5695,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5705,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4624,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 4785,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_int256": {
									"entryPoint": 7445,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 4675,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 6652,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4864,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5530,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_int24": {
									"entryPoint": 6178,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_int256": {
									"entryPoint": 7255,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_0_by_1": {
									"entryPoint": 5996,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint128": {
									"entryPoint": 6540,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint16": {
									"entryPoint": 6232,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4833,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4570,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 6287,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint80": {
									"entryPoint": 7192,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_0_by_1_to_t_uint256": {
									"entryPoint": 6014,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 5170,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5721,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 6852,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 5047,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 6005,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4579,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 4740,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 6807,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 5002,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 4978,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 4982,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 4974,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4970,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4986,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5": {
									"entryPoint": 6703,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5": {
									"entryPoint": 5892,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7638e8c8903c5fa61ebf97e2b2f70e2c3ee679b62e1042ef4e4240a60c0694d0": {
									"entryPoint": 6900,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f548031c271626835f64bb759a80cb1c7ee3cbb01af72f7702986b2084fa7f35": {
									"entryPoint": 7046,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5426,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 6341,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_int24": {
									"entryPoint": 6190,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_int256": {
									"entryPoint": 7264,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint128": {
									"entryPoint": 6567,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint16": {
									"entryPoint": 6245,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint160": {
									"entryPoint": 6136,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5294,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint8": {
									"entryPoint": 6299,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint80": {
									"entryPoint": 7213,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:21816:23",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:32:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:16:23",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "73:5:23"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:23"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:23",
														"type": ""
													}
												],
												"src": "7:77:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "118:152:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "135:1:23",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "138:77:23",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "128:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "128:88:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "128:88:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "232:1:23",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "235:4:23",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "225:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "225:15:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "225:15:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "256:1:23",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "259:4:23",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "249:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "249:15:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "249:15:23"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "90:180:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "320:147:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "330:25:23",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "353:1:23"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "335:17:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "335:20:23"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "330:1:23"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "364:25:23",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "387:1:23"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "369:17:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "369:20:23"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "364:1:23"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "398:16:23",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "409:1:23"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "412:1:23"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "405:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "405:9:23"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "398:3:23"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "438:22:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "440:16:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "440:18:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "440:18:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "430:1:23"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "433:3:23"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "427:2:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "427:10:23"
															},
															"nodeType": "YulIf",
															"src": "424:36:23"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "307:1:23",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "310:1:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "316:3:23",
														"type": ""
													}
												],
												"src": "276:191:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "521:362:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "531:25:23",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "554:1:23"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "536:17:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "536:20:23"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "531:1:23"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "565:25:23",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "588:1:23"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "570:17:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "570:20:23"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "565:1:23"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "599:28:23",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "622:1:23"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "625:1:23"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "618:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "618:9:23"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "603:11:23",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "636:41:23",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "665:11:23"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "647:17:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "647:30:23"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "636:7:23"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "854:22:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "856:16:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "856:18:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "856:18:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "787:1:23"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "780:6:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "780:9:23"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "810:1:23"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "817:7:23"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "826:1:23"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "813:3:23"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "813:15:23"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "807:2:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "807:22:23"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "760:2:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "760:83:23"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "740:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "740:113:23"
															},
															"nodeType": "YulIf",
															"src": "737:139:23"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "504:1:23",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "507:1:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "513:7:23",
														"type": ""
													}
												],
												"src": "473:410:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "917:152:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "934:1:23",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "937:77:23",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "927:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "927:88:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "927:88:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1031:1:23",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1034:4:23",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1024:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "1024:15:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1024:15:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1055:1:23",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1058:4:23",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1048:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "1048:15:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1048:15:23"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "889:180:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1117:143:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1127:25:23",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1150:1:23"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1132:17:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "1132:20:23"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "1127:1:23"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1161:25:23",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1184:1:23"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1166:17:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "1166:20:23"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "1161:1:23"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1208:22:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "1210:16:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1210:18:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1210:18:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1205:1:23"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1198:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "1198:9:23"
															},
															"nodeType": "YulIf",
															"src": "1195:35:23"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1240:14:23",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1249:1:23"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1252:1:23"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "1245:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "1245:9:23"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "1240:1:23"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1106:1:23",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1109:1:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "1115:1:23",
														"type": ""
													}
												],
												"src": "1075:185:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1311:81:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1321:65:23",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1336:5:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1343:42:23",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1332:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "1332:54:23"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1321:7:23"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1293:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1303:7:23",
														"type": ""
													}
												],
												"src": "1266:126:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1443:51:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1453:35:23",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1482:5:23"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1464:17:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "1464:24:23"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1453:7:23"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1425:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1435:7:23",
														"type": ""
													}
												],
												"src": "1398:96:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1565:53:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1582:3:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1605:5:23"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1587:17:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1587:24:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1575:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "1575:37:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1575:37:23"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1553:5:23",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1560:3:23",
														"type": ""
													}
												],
												"src": "1500:118:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1722:124:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1732:26:23",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1744:9:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1755:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1740:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "1740:18:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1732:4:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1812:6:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1825:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1836:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1821:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1821:17:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1768:43:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "1768:71:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1768:71:23"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1694:9:23",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1706:6:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1717:4:23",
														"type": ""
													}
												],
												"src": "1624:222:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1917:53:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1934:3:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1957:5:23"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1939:17:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1939:24:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1927:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "1927:37:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1927:37:23"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1905:5:23",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1912:3:23",
														"type": ""
													}
												],
												"src": "1852:118:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2074:124:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2084:26:23",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2096:9:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2107:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2092:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "2092:18:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2084:4:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2164:6:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2177:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2188:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2173:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2173:17:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2120:43:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "2120:71:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2120:71:23"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2046:9:23",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2058:6:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2069:4:23",
														"type": ""
													}
												],
												"src": "1976:222:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2244:35:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2254:19:23",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2270:2:23",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2264:5:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "2264:9:23"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "2254:6:23"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2237:6:23",
														"type": ""
													}
												],
												"src": "2204:75:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2374:28:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2391:1:23",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2394:1:23",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2384:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "2384:12:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2384:12:23"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "2285:117:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2497:28:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2514:1:23",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2517:1:23",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2507:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "2507:12:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2507:12:23"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "2408:117:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2620:28:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2637:1:23",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2640:1:23",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2630:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "2630:12:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2630:12:23"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "2531:117:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2743:28:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2760:1:23",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2763:1:23",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2753:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "2753:12:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2753:12:23"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "2654:117:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2825:54:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2835:38:23",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2853:5:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2860:2:23",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2849:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2849:14:23"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2869:2:23",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2865:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2865:7:23"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2845:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "2845:28:23"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "2835:6:23"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2808:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "2818:6:23",
														"type": ""
													}
												],
												"src": "2777:102:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2913:152:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2930:1:23",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2933:77:23",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2923:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "2923:88:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2923:88:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3027:1:23",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3030:4:23",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3020:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "3020:15:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3020:15:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3051:1:23",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3054:4:23",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3044:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "3044:15:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3044:15:23"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "2885:180:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3114:238:23",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3124:58:23",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3146:6:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "3176:4:23"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "3154:21:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3154:27:23"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3142:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "3142:40:23"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "3128:10:23",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3293:22:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3295:16:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3295:18:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3295:18:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3236:10:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3248:18:23",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3233:2:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3233:34:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3272:10:23"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3284:6:23"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "3269:2:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3269:22:23"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "3230:2:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "3230:62:23"
															},
															"nodeType": "YulIf",
															"src": "3227:88:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3331:2:23",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "3335:10:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3324:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "3324:22:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3324:22:23"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3100:6:23",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "3108:4:23",
														"type": ""
													}
												],
												"src": "3071:281:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3399:88:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3409:30:23",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "3419:18:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "3419:20:23"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "3409:6:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3468:6:23"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "3476:4:23"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "3448:19:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "3448:33:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3448:33:23"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "3383:4:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3392:6:23",
														"type": ""
													}
												],
												"src": "3358:129:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3560:241:23",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3665:22:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3667:16:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3667:18:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3667:18:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3637:6:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3645:18:23",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3634:2:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "3634:30:23"
															},
															"nodeType": "YulIf",
															"src": "3631:56:23"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3697:37:23",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3727:6:23"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "3705:21:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "3705:29:23"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "3697:4:23"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3771:23:23",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "3783:4:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3789:4:23",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3779:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "3779:15:23"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "3771:4:23"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3544:6:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "3555:4:23",
														"type": ""
													}
												],
												"src": "3493:308:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3871:82:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "3894:3:23"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "3899:3:23"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3904:6:23"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "3881:12:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "3881:30:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3881:30:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "3931:3:23"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3936:6:23"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3927:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3927:16:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3945:1:23",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3920:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "3920:27:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3920:27:23"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "3853:3:23",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "3858:3:23",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3863:6:23",
														"type": ""
													}
												],
												"src": "3807:146:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4043:341:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4053:75:23",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4120:6:23"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "4078:41:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4078:49:23"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "4062:15:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "4062:66:23"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "4053:5:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "4144:5:23"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4151:6:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4137:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "4137:21:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4137:21:23"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4167:27:23",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "4182:5:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4189:4:23",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4178:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "4178:16:23"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "4171:3:23",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4232:83:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "4234:77:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4234:79:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4234:79:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "4213:3:23"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4218:6:23"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4209:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4209:16:23"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "4227:3:23"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4206:2:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "4206:25:23"
															},
															"nodeType": "YulIf",
															"src": "4203:112:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "4361:3:23"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "4366:3:23"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4371:6:23"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "4324:36:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "4324:54:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4324:54:23"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "4016:3:23",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4021:6:23",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4029:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "4037:5:23",
														"type": ""
													}
												],
												"src": "3959:425:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4466:278:23",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4515:83:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "4517:77:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4517:79:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4517:79:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4494:6:23"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4502:4:23",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4490:3:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4490:17:23"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "4509:3:23"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "4486:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4486:27:23"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4479:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "4479:35:23"
															},
															"nodeType": "YulIf",
															"src": "4476:122:23"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4607:34:23",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4634:6:23"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4621:12:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "4621:20:23"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4611:6:23",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4650:88:23",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4711:6:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4719:4:23",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4707:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4707:17:23"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4726:6:23"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "4734:3:23"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "4659:47:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "4659:79:23"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "4650:5:23"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4444:6:23",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4452:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "4460:5:23",
														"type": ""
													}
												],
												"src": "4404:340:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4793:79:23",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4850:16:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4859:1:23",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4862:1:23",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4852:6:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4852:12:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4852:12:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4816:5:23"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4841:5:23"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "4823:17:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4823:24:23"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4813:2:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4813:35:23"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4806:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "4806:43:23"
															},
															"nodeType": "YulIf",
															"src": "4803:63:23"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4786:5:23",
														"type": ""
													}
												],
												"src": "4750:122:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4930:87:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4940:29:23",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4962:6:23"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4949:12:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "4949:20:23"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4940:5:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5005:5:23"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4978:26:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "4978:33:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4978:33:23"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4908:6:23",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4916:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4924:5:23",
														"type": ""
													}
												],
												"src": "4878:139:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5116:561:23",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5162:83:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5164:77:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5164:79:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5164:79:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5137:7:23"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5146:9:23"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5133:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5133:23:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5158:2:23",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5129:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "5129:32:23"
															},
															"nodeType": "YulIf",
															"src": "5126:119:23"
														},
														{
															"nodeType": "YulBlock",
															"src": "5255:287:23",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5270:45:23",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5301:9:23"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5312:1:23",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5297:3:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5297:17:23"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "5284:12:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5284:31:23"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5274:6:23",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5362:83:23",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "5364:77:23"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5364:79:23"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "5364:79:23"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5334:6:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5342:18:23",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5331:2:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5331:30:23"
																	},
																	"nodeType": "YulIf",
																	"src": "5328:117:23"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5459:73:23",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5504:9:23"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5515:6:23"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5500:3:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5500:22:23"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5524:7:23"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "5469:30:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5469:63:23"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5459:6:23"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5552:118:23",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5567:16:23",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5581:2:23",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5571:6:23",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5597:63:23",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5632:9:23"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5643:6:23"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5628:3:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5628:22:23"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5652:7:23"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5607:20:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5607:53:23"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5597:6:23"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5078:9:23",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5089:7:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5101:6:23",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5109:6:23",
														"type": ""
													}
												],
												"src": "5023:654:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5726:79:23",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5783:16:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5792:1:23",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5795:1:23",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5785:6:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5785:12:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5785:12:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5749:5:23"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5774:5:23"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "5756:17:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5756:24:23"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5746:2:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5746:35:23"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5739:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "5739:43:23"
															},
															"nodeType": "YulIf",
															"src": "5736:63:23"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5719:5:23",
														"type": ""
													}
												],
												"src": "5683:122:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5863:87:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5873:29:23",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5895:6:23"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5882:12:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "5882:20:23"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "5873:5:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5938:5:23"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "5911:26:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "5911:33:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5911:33:23"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5841:6:23",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5849:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5857:5:23",
														"type": ""
													}
												],
												"src": "5811:139:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6039:391:23",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6085:83:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6087:77:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6087:79:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6087:79:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6060:7:23"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6069:9:23"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6056:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6056:23:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6081:2:23",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6052:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "6052:32:23"
															},
															"nodeType": "YulIf",
															"src": "6049:119:23"
														},
														{
															"nodeType": "YulBlock",
															"src": "6178:117:23",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6193:15:23",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6207:1:23",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6197:6:23",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6222:63:23",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6257:9:23"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6268:6:23"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6253:3:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6253:22:23"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6277:7:23"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6232:20:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6232:53:23"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6222:6:23"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6305:118:23",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6320:16:23",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6334:2:23",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6324:6:23",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6350:63:23",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6385:9:23"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6396:6:23"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6381:3:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6381:22:23"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6405:7:23"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6360:20:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6360:53:23"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6350:6:23"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6001:9:23",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6012:7:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6024:6:23",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6032:6:23",
														"type": ""
													}
												],
												"src": "5956:474:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6478:48:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6488:32:23",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6513:5:23"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "6506:6:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6506:13:23"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6499:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "6499:21:23"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "6488:7:23"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6460:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "6470:7:23",
														"type": ""
													}
												],
												"src": "6436:90:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6591:50:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6608:3:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6628:5:23"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "6613:14:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6613:21:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6601:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "6601:34:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6601:34:23"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6579:5:23",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6586:3:23",
														"type": ""
													}
												],
												"src": "6532:109:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6739:118:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6749:26:23",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6761:9:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6772:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6757:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "6757:18:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6749:4:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6823:6:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6836:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6847:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6832:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6832:17:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6785:37:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "6785:65:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6785:65:23"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6711:9:23",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6723:6:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6734:4:23",
														"type": ""
													}
												],
												"src": "6647:210:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6929:263:23",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6975:83:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6977:77:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6977:79:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6977:79:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6950:7:23"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6959:9:23"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6946:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6946:23:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6971:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6942:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "6942:32:23"
															},
															"nodeType": "YulIf",
															"src": "6939:119:23"
														},
														{
															"nodeType": "YulBlock",
															"src": "7068:117:23",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7083:15:23",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7097:1:23",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7087:6:23",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7112:63:23",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7147:9:23"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7158:6:23"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7143:3:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7143:22:23"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7167:7:23"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "7122:20:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7122:53:23"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7112:6:23"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6899:9:23",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6910:7:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6922:6:23",
														"type": ""
													}
												],
												"src": "6863:329:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7274:433:23",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7320:83:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "7322:77:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7322:79:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7322:79:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7295:7:23"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7304:9:23"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7291:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7291:23:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7316:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7287:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "7287:32:23"
															},
															"nodeType": "YulIf",
															"src": "7284:119:23"
														},
														{
															"nodeType": "YulBlock",
															"src": "7413:287:23",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7428:45:23",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7459:9:23"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7470:1:23",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7455:3:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7455:17:23"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "7442:12:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7442:31:23"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7432:6:23",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "7520:83:23",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "7522:77:23"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7522:79:23"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "7522:79:23"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "7492:6:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7500:18:23",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "7489:2:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7489:30:23"
																	},
																	"nodeType": "YulIf",
																	"src": "7486:117:23"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7617:73:23",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7662:9:23"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7673:6:23"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7658:3:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7658:22:23"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7682:7:23"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "7627:30:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7627:63:23"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7617:6:23"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7244:9:23",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7255:7:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7267:6:23",
														"type": ""
													}
												],
												"src": "7198:509:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7772:40:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7783:22:23",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7799:5:23"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7793:5:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "7793:12:23"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "7783:6:23"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7755:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7765:6:23",
														"type": ""
													}
												],
												"src": "7713:99:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7914:73:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7931:3:23"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7936:6:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7924:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "7924:19:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7924:19:23"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7952:29:23",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7971:3:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7976:4:23",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7967:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "7967:14:23"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "7952:11:23"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7886:3:23",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7891:6:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "7902:11:23",
														"type": ""
													}
												],
												"src": "7818:169:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8055:184:23",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8065:10:23",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "8074:1:23",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "8069:1:23",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8134:63:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "8159:3:23"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "8164:1:23"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "8155:3:23"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8155:11:23"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "8178:3:23"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "8183:1:23"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "8174:3:23"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8174:11:23"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "8168:5:23"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8168:18:23"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8148:6:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8148:39:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8148:39:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "8095:1:23"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8098:6:23"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "8092:2:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "8092:13:23"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "8106:19:23",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "8108:15:23",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "8117:1:23"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8120:2:23",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "8113:3:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8113:10:23"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "8108:1:23"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "8088:3:23",
																"statements": []
															},
															"src": "8084:113:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "8217:3:23"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8222:6:23"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8213:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8213:16:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8231:1:23",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8206:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "8206:27:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8206:27:23"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "8037:3:23",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "8042:3:23",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8047:6:23",
														"type": ""
													}
												],
												"src": "7993:246:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8337:285:23",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8347:53:23",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8394:5:23"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "8361:32:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "8361:39:23"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "8351:6:23",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8409:78:23",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8475:3:23"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8480:6:23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8416:58:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "8416:71:23"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8409:3:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8535:5:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8542:4:23",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8531:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8531:16:23"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8549:3:23"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8554:6:23"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "8496:34:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "8496:65:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8496:65:23"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8570:46:23",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8581:3:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8608:6:23"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "8586:21:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8586:29:23"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8577:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "8577:39:23"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8570:3:23"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8318:5:23",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8325:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8333:3:23",
														"type": ""
													}
												],
												"src": "8245:377:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8746:195:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8756:26:23",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8768:9:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8779:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8764:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "8764:18:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8756:4:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8803:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8814:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8799:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8799:17:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8822:4:23"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8828:9:23"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8818:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8818:20:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8792:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "8792:47:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8792:47:23"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8848:86:23",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8920:6:23"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8929:4:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8856:63:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "8856:78:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8848:4:23"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8718:9:23",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8730:6:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8741:4:23",
														"type": ""
													}
												],
												"src": "8628:313:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9013:263:23",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9059:83:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "9061:77:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9061:79:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9061:79:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9034:7:23"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9043:9:23"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9030:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9030:23:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9055:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9026:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "9026:32:23"
															},
															"nodeType": "YulIf",
															"src": "9023:119:23"
														},
														{
															"nodeType": "YulBlock",
															"src": "9152:117:23",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9167:15:23",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9181:1:23",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9171:6:23",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9196:63:23",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9231:9:23"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9242:6:23"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9227:3:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9227:22:23"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9251:7:23"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9206:20:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9206:53:23"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "9196:6:23"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8983:9:23",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8994:7:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9006:6:23",
														"type": ""
													}
												],
												"src": "8947:329:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9388:57:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9410:6:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9418:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9406:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9406:14:23"
																	},
																	{
																		"hexValue": "4e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9422:15:23",
																		"type": "",
																		"value": "Not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9399:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "9399:39:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9399:39:23"
														}
													]
												},
												"name": "store_literal_in_memory_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9380:6:23",
														"type": ""
													}
												],
												"src": "9282:163:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9597:220:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9607:74:23",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9673:3:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9678:2:23",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9614:58:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "9614:67:23"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9607:3:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9779:3:23"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5",
																	"nodeType": "YulIdentifier",
																	"src": "9690:88:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "9690:93:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9690:93:23"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9792:19:23",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9803:3:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9808:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9799:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "9799:12:23"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9792:3:23"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9585:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9593:3:23",
														"type": ""
													}
												],
												"src": "9451:366:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9994:248:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10004:26:23",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10016:9:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10027:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10012:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "10012:18:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10004:4:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10051:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10062:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10047:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10047:17:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10070:4:23"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10076:9:23"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10066:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10066:20:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10040:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "10040:47:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10040:47:23"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10096:139:23",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10230:4:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10104:124:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "10104:131:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10096:4:23"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9974:9:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9989:4:23",
														"type": ""
													}
												],
												"src": "9823:419:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10301:32:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10311:16:23",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "10322:5:23"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10311:7:23"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_0_by_1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10283:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10293:7:23",
														"type": ""
													}
												],
												"src": "10248:85:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10371:28:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10381:12:23",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "10388:5:23"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "10381:3:23"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10357:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "10367:3:23",
														"type": ""
													}
												],
												"src": "10339:60:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10473:90:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10483:74:23",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "10549:5:23"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_0_by_1",
																					"nodeType": "YulIdentifier",
																					"src": "10523:25:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10523:32:23"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "10514:8:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10514:42:23"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10496:17:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "10496:61:23"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "10483:9:23"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_0_by_1_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10453:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "10463:9:23",
														"type": ""
													}
												],
												"src": "10405:158:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10642:74:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10659:3:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10703:5:23"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_0_by_1_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "10664:38:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10664:45:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10652:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "10652:58:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10652:58:23"
														}
													]
												},
												"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10630:5:23",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10637:3:23",
														"type": ""
													}
												],
												"src": "10569:147:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10932:450:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10942:27:23",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10954:9:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10965:3:23",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10950:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "10950:19:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10942:4:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10990:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11001:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10986:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10986:17:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11009:4:23"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11015:9:23"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11005:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11005:20:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10979:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "10979:47:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10979:47:23"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11035:86:23",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11107:6:23"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11116:4:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11043:63:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "11043:78:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11035:4:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "11175:6:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11188:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11199:2:23",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11184:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11184:18:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11131:43:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "11131:72:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11131:72:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "11265:6:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11278:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11289:2:23",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11274:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11274:18:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11213:51:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "11213:80:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11213:80:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "11347:6:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11360:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11371:2:23",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11356:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11356:18:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11303:43:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "11303:72:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11303:72:23"
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr_t_uint256_t_rational_0_by_1_t_uint256__to_t_string_memory_ptr_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10880:9:23",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "10892:6:23",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "10900:6:23",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10908:6:23",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10916:6:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10927:4:23",
														"type": ""
													}
												],
												"src": "10722:660:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11431:79:23",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11488:16:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11497:1:23",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11500:1:23",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "11490:6:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11490:12:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11490:12:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11454:5:23"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "11479:5:23"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nodeType": "YulIdentifier",
																					"src": "11461:17:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11461:24:23"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "11451:2:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11451:35:23"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11444:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "11444:43:23"
															},
															"nodeType": "YulIf",
															"src": "11441:63:23"
														}
													]
												},
												"name": "validator_revert_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11424:5:23",
														"type": ""
													}
												],
												"src": "11388:122:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11579:80:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11589:22:23",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "11604:6:23"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11598:5:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "11598:13:23"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "11589:5:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11647:5:23"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "11620:26:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "11620:33:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11620:33:23"
														}
													]
												},
												"name": "abi_decode_t_uint160_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "11557:6:23",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11565:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11573:5:23",
														"type": ""
													}
												],
												"src": "11516:143:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11708:47:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11718:31:23",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11740:1:23",
																		"type": "",
																		"value": "2"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11743:5:23"
																	}
																],
																"functionName": {
																	"name": "signextend",
																	"nodeType": "YulIdentifier",
																	"src": "11729:10:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "11729:20:23"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11718:7:23"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int24",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11690:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11700:7:23",
														"type": ""
													}
												],
												"src": "11665:90:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11802:77:23",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11857:16:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11866:1:23",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11869:1:23",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "11859:6:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11859:12:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11859:12:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11825:5:23"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "11848:5:23"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_int24",
																					"nodeType": "YulIdentifier",
																					"src": "11832:15:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11832:22:23"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "11822:2:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11822:33:23"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11815:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "11815:41:23"
															},
															"nodeType": "YulIf",
															"src": "11812:61:23"
														}
													]
												},
												"name": "validator_revert_t_int24",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11795:5:23",
														"type": ""
													}
												],
												"src": "11761:118:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11946:78:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11956:22:23",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "11971:6:23"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11965:5:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "11965:13:23"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "11956:5:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12012:5:23"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_int24",
																	"nodeType": "YulIdentifier",
																	"src": "11987:24:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "11987:31:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11987:31:23"
														}
													]
												},
												"name": "abi_decode_t_int24_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "11924:6:23",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11932:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11940:5:23",
														"type": ""
													}
												],
												"src": "11885:139:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12074:45:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12084:29:23",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12099:5:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12106:6:23",
																		"type": "",
																		"value": "0xffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "12095:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "12095:18:23"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "12084:7:23"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12056:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "12066:7:23",
														"type": ""
													}
												],
												"src": "12030:89:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12167:78:23",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12223:16:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12232:1:23",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12235:1:23",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "12225:6:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12225:12:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12225:12:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12190:5:23"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "12214:5:23"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint16",
																					"nodeType": "YulIdentifier",
																					"src": "12197:16:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12197:23:23"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "12187:2:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12187:34:23"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12180:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "12180:42:23"
															},
															"nodeType": "YulIf",
															"src": "12177:62:23"
														}
													]
												},
												"name": "validator_revert_t_uint16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12160:5:23",
														"type": ""
													}
												],
												"src": "12125:120:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12313:79:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12323:22:23",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "12338:6:23"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "12332:5:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "12332:13:23"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "12323:5:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12380:5:23"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint16",
																	"nodeType": "YulIdentifier",
																	"src": "12354:25:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "12354:32:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12354:32:23"
														}
													]
												},
												"name": "abi_decode_t_uint16_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "12291:6:23",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12299:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12307:5:23",
														"type": ""
													}
												],
												"src": "12251:141:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12441:43:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12451:27:23",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12466:5:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12473:4:23",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "12462:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "12462:16:23"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "12451:7:23"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12423:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "12433:7:23",
														"type": ""
													}
												],
												"src": "12398:86:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12531:77:23",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12586:16:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12595:1:23",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12598:1:23",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "12588:6:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12588:12:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12588:12:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12554:5:23"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "12577:5:23"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint8",
																					"nodeType": "YulIdentifier",
																					"src": "12561:15:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12561:22:23"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "12551:2:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12551:33:23"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12544:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "12544:41:23"
															},
															"nodeType": "YulIf",
															"src": "12541:61:23"
														}
													]
												},
												"name": "validator_revert_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12524:5:23",
														"type": ""
													}
												],
												"src": "12490:118:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12675:78:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12685:22:23",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "12700:6:23"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "12694:5:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "12694:13:23"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "12685:5:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12741:5:23"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "12716:24:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "12716:31:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12716:31:23"
														}
													]
												},
												"name": "abi_decode_t_uint8_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "12653:6:23",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12661:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12669:5:23",
														"type": ""
													}
												],
												"src": "12614:139:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12799:76:23",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12853:16:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12862:1:23",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12865:1:23",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "12855:6:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12855:12:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12855:12:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12822:5:23"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "12844:5:23"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "12829:14:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12829:21:23"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "12819:2:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12819:32:23"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12812:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "12812:40:23"
															},
															"nodeType": "YulIf",
															"src": "12809:60:23"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12792:5:23",
														"type": ""
													}
												],
												"src": "12759:116:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12941:77:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12951:22:23",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "12966:6:23"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "12960:5:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "12960:13:23"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "12951:5:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13006:5:23"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "12982:23:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "12982:30:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12982:30:23"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "12919:6:23",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12927:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12935:5:23",
														"type": ""
													}
												],
												"src": "12881:137:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13193:1102:23",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13240:83:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "13242:77:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13242:79:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13242:79:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "13214:7:23"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13223:9:23"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13210:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13210:23:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13235:3:23",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "13206:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "13206:33:23"
															},
															"nodeType": "YulIf",
															"src": "13203:120:23"
														},
														{
															"nodeType": "YulBlock",
															"src": "13333:128:23",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "13348:15:23",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13362:1:23",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "13352:6:23",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "13377:74:23",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "13423:9:23"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "13434:6:23"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "13419:3:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13419:22:23"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "13443:7:23"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint160_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "13387:31:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13387:64:23"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "13377:6:23"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "13471:127:23",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "13486:16:23",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13500:2:23",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "13490:6:23",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "13516:72:23",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "13560:9:23"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "13571:6:23"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "13556:3:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13556:22:23"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "13580:7:23"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int24_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "13526:29:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13526:62:23"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "13516:6:23"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "13608:128:23",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "13623:16:23",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13637:2:23",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "13627:6:23",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "13653:73:23",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "13698:9:23"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "13709:6:23"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "13694:3:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13694:22:23"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "13718:7:23"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint16_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "13663:30:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13663:63:23"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "13653:6:23"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "13746:128:23",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "13761:16:23",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13775:2:23",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "13765:6:23",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "13791:73:23",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "13836:9:23"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "13847:6:23"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "13832:3:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13832:22:23"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "13856:7:23"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint16_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "13801:30:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13801:63:23"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "13791:6:23"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "13884:129:23",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "13899:17:23",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13913:3:23",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "13903:6:23",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "13930:73:23",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "13975:9:23"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "13986:6:23"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "13971:3:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13971:22:23"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "13995:7:23"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint16_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "13940:30:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13940:63:23"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "13930:6:23"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "14023:128:23",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "14038:17:23",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14052:3:23",
																		"type": "",
																		"value": "160"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "14042:6:23",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "14069:72:23",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "14113:9:23"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "14124:6:23"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "14109:3:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14109:22:23"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "14133:7:23"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint8_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "14079:29:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14079:62:23"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nodeType": "YulIdentifier",
																			"src": "14069:6:23"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "14161:127:23",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "14176:17:23",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14190:3:23",
																		"type": "",
																		"value": "192"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "14180:6:23",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "14207:71:23",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "14250:9:23"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "14261:6:23"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "14246:3:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14246:22:23"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "14270:7:23"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "14217:28:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14217:61:23"
																	},
																	"variableNames": [
																		{
																			"name": "value6",
																			"nodeType": "YulIdentifier",
																			"src": "14207:6:23"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint160t_int24t_uint16t_uint16t_uint16t_uint8t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13115:9:23",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "13126:7:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13138:6:23",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "13146:6:23",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "13154:6:23",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "13162:6:23",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "13170:6:23",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "13178:6:23",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "13186:6:23",
														"type": ""
													}
												],
												"src": "13024:1271:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14346:73:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14356:57:23",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14371:5:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14378:34:23",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "14367:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "14367:46:23"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "14356:7:23"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint128",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14328:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "14338:7:23",
														"type": ""
													}
												],
												"src": "14301:118:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14468:79:23",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14525:16:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14534:1:23",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14537:1:23",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "14527:6:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14527:12:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14527:12:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14491:5:23"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "14516:5:23"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint128",
																					"nodeType": "YulIdentifier",
																					"src": "14498:17:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14498:24:23"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "14488:2:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14488:35:23"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14481:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "14481:43:23"
															},
															"nodeType": "YulIf",
															"src": "14478:63:23"
														}
													]
												},
												"name": "validator_revert_t_uint128",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14461:5:23",
														"type": ""
													}
												],
												"src": "14425:122:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14616:80:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14626:22:23",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "14641:6:23"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14635:5:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "14635:13:23"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "14626:5:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14684:5:23"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint128",
																	"nodeType": "YulIdentifier",
																	"src": "14657:26:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "14657:33:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14657:33:23"
														}
													]
												},
												"name": "abi_decode_t_uint128_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "14594:6:23",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14602:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14610:5:23",
														"type": ""
													}
												],
												"src": "14553:143:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14779:274:23",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14825:83:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "14827:77:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14827:79:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14827:79:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "14800:7:23"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14809:9:23"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14796:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14796:23:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14821:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "14792:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "14792:32:23"
															},
															"nodeType": "YulIf",
															"src": "14789:119:23"
														},
														{
															"nodeType": "YulBlock",
															"src": "14918:128:23",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "14933:15:23",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14947:1:23",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "14937:6:23",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "14962:74:23",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "15008:9:23"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "15019:6:23"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "15004:3:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15004:22:23"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "15028:7:23"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint128_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "14972:31:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14972:64:23"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "14962:6:23"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint128_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14749:9:23",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "14760:7:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14772:6:23",
														"type": ""
													}
												],
												"src": "14702:351:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15104:149:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15114:25:23",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15137:1:23"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "15119:17:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "15119:20:23"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "15114:1:23"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "15148:25:23",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15171:1:23"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "15153:17:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "15153:20:23"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "15148:1:23"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "15182:17:23",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15194:1:23"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15197:1:23"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "15190:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "15190:9:23"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "15182:4:23"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15224:22:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "15226:16:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15226:18:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15226:18:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "15215:4:23"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15221:1:23"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "15212:2:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "15212:11:23"
															},
															"nodeType": "YulIf",
															"src": "15209:37:23"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "15090:1:23",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "15093:1:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "15099:4:23",
														"type": ""
													}
												],
												"src": "15059:194:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15365:64:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15387:6:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15395:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15383:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15383:14:23"
																	},
																	{
																		"hexValue": "496e73756666696369656e742062616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15399:22:23",
																		"type": "",
																		"value": "Insufficient balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15376:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "15376:46:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15376:46:23"
														}
													]
												},
												"name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "15357:6:23",
														"type": ""
													}
												],
												"src": "15259:170:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15581:220:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15591:74:23",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15657:3:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15662:2:23",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15598:58:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "15598:67:23"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15591:3:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15763:3:23"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																	"nodeType": "YulIdentifier",
																	"src": "15674:88:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "15674:93:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15674:93:23"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15776:19:23",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15787:3:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15792:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15783:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "15783:12:23"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15776:3:23"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15569:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15577:3:23",
														"type": ""
													}
												],
												"src": "15435:366:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15978:248:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15988:26:23",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16000:9:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16011:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15996:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "15996:18:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15988:4:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16035:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16046:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16031:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16031:17:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16054:4:23"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16060:9:23"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16050:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16050:20:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16024:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "16024:47:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16024:47:23"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16080:139:23",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16214:4:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16088:124:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "16088:131:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16080:4:23"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15958:9:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15973:4:23",
														"type": ""
													}
												],
												"src": "15807:419:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16260:152:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16277:1:23",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16280:77:23",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16270:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "16270:88:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16270:88:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16374:1:23",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16377:4:23",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16367:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "16367:15:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16367:15:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16398:1:23",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16401:4:23",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "16391:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "16391:15:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16391:15:23"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "16232:180:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16469:269:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16479:22:23",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "16493:4:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16499:1:23",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "16489:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "16489:12:23"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "16479:6:23"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16510:38:23",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "16540:4:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16546:1:23",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "16536:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "16536:12:23"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "16514:18:23",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16587:51:23",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "16601:27:23",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "16615:6:23"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16623:4:23",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "16611:3:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16611:17:23"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "16601:6:23"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "16567:18:23"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "16560:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "16560:26:23"
															},
															"nodeType": "YulIf",
															"src": "16557:81:23"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16690:42:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "16704:16:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16704:18:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16704:18:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "16654:18:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "16677:6:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16685:2:23",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "16674:2:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16674:14:23"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "16651:2:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "16651:38:23"
															},
															"nodeType": "YulIf",
															"src": "16648:84:23"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "16453:4:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "16462:6:23",
														"type": ""
													}
												],
												"src": "16418:320:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16850:62:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16872:6:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16880:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16868:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16868:14:23"
																	},
																	{
																		"hexValue": "54696d656672616d652061646a7573746564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16884:20:23",
																		"type": "",
																		"value": "Timeframe adjusted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16861:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "16861:44:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16861:44:23"
														}
													]
												},
												"name": "store_literal_in_memory_7638e8c8903c5fa61ebf97e2b2f70e2c3ee679b62e1042ef4e4240a60c0694d0",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16842:6:23",
														"type": ""
													}
												],
												"src": "16744:168:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17064:220:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17074:74:23",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17140:3:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17145:2:23",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17081:58:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "17081:67:23"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "17074:3:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17246:3:23"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7638e8c8903c5fa61ebf97e2b2f70e2c3ee679b62e1042ef4e4240a60c0694d0",
																	"nodeType": "YulIdentifier",
																	"src": "17157:88:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "17157:93:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17157:93:23"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17259:19:23",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17270:3:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17275:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17266:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "17266:12:23"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "17259:3:23"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7638e8c8903c5fa61ebf97e2b2f70e2c3ee679b62e1042ef4e4240a60c0694d0_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17052:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17060:3:23",
														"type": ""
													}
												],
												"src": "16918:366:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17553:503:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17563:27:23",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17575:9:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17586:3:23",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17571:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "17571:19:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17563:4:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17611:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17622:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17607:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17607:17:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17630:4:23"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17636:9:23"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17626:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17626:20:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17600:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "17600:47:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17600:47:23"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17656:139:23",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17790:4:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7638e8c8903c5fa61ebf97e2b2f70e2c3ee679b62e1042ef4e4240a60c0694d0_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17664:124:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "17664:131:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17656:4:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "17849:6:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17862:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17873:2:23",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17858:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17858:18:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17805:43:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "17805:72:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17805:72:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "17939:6:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17952:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17963:2:23",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17948:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17948:18:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17887:51:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "17887:80:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17887:80:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "18021:6:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18034:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18045:2:23",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18030:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18030:18:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17977:43:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "17977:72:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17977:72:23"
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7638e8c8903c5fa61ebf97e2b2f70e2c3ee679b62e1042ef4e4240a60c0694d0_t_uint256_t_rational_0_by_1_t_uint256__to_t_string_memory_ptr_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17509:9:23",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "17521:6:23",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "17529:6:23",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "17537:6:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17548:4:23",
														"type": ""
													}
												],
												"src": "17290:766:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18168:58:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18190:6:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18198:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18186:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18186:14:23"
																	},
																	{
																		"hexValue": "636f6e7665727420746f20504f4c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18202:16:23",
																		"type": "",
																		"value": "convert to POL"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18179:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "18179:40:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18179:40:23"
														}
													]
												},
												"name": "store_literal_in_memory_f548031c271626835f64bb759a80cb1c7ee3cbb01af72f7702986b2084fa7f35",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "18160:6:23",
														"type": ""
													}
												],
												"src": "18062:164:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18378:220:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18388:74:23",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18454:3:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18459:2:23",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18395:58:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "18395:67:23"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "18388:3:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18560:3:23"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f548031c271626835f64bb759a80cb1c7ee3cbb01af72f7702986b2084fa7f35",
																	"nodeType": "YulIdentifier",
																	"src": "18471:88:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "18471:93:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18471:93:23"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18573:19:23",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18584:3:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18589:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18580:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "18580:12:23"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "18573:3:23"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f548031c271626835f64bb759a80cb1c7ee3cbb01af72f7702986b2084fa7f35_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18366:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "18374:3:23",
														"type": ""
													}
												],
												"src": "18232:366:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18875:511:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18885:27:23",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18897:9:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18908:3:23",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18893:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "18893:19:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18885:4:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18933:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18944:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18929:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18929:17:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "18952:4:23"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18958:9:23"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18948:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18948:20:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18922:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "18922:47:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18922:47:23"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18978:139:23",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "19112:4:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f548031c271626835f64bb759a80cb1c7ee3cbb01af72f7702986b2084fa7f35_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18986:124:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "18986:131:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18978:4:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "19179:6:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19192:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19203:2:23",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19188:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19188:18:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19127:51:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "19127:80:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19127:80:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "19269:6:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19282:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19293:2:23",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19278:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19278:18:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19217:51:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "19217:80:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19217:80:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "19351:6:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19364:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19375:2:23",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19360:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19360:18:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19307:43:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "19307:72:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19307:72:23"
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f548031c271626835f64bb759a80cb1c7ee3cbb01af72f7702986b2084fa7f35_t_rational_0_by_1_t_rational_0_by_1_t_uint256__to_t_string_memory_ptr_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18831:9:23",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "18843:6:23",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "18851:6:23",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "18859:6:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18870:4:23",
														"type": ""
													}
												],
												"src": "18604:782:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19436:61:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19446:45:23",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "19461:5:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19468:22:23",
																		"type": "",
																		"value": "0xffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "19457:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "19457:34:23"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "19446:7:23"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint80",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19418:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "19428:7:23",
														"type": ""
													}
												],
												"src": "19392:105:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19545:78:23",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19601:16:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19610:1:23",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19613:1:23",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "19603:6:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19603:12:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19603:12:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "19568:5:23"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "19592:5:23"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint80",
																					"nodeType": "YulIdentifier",
																					"src": "19575:16:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19575:23:23"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "19565:2:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19565:34:23"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "19558:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "19558:42:23"
															},
															"nodeType": "YulIf",
															"src": "19555:62:23"
														}
													]
												},
												"name": "validator_revert_t_uint80",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19538:5:23",
														"type": ""
													}
												],
												"src": "19503:120:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19691:79:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19701:22:23",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "19716:6:23"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "19710:5:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "19710:13:23"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "19701:5:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "19758:5:23"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint80",
																	"nodeType": "YulIdentifier",
																	"src": "19732:25:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "19732:32:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19732:32:23"
														}
													]
												},
												"name": "abi_decode_t_uint80_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "19669:6:23",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "19677:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19685:5:23",
														"type": ""
													}
												],
												"src": "19629:141:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19820:32:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19830:16:23",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "19841:5:23"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "19830:7:23"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19802:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "19812:7:23",
														"type": ""
													}
												],
												"src": "19776:76:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19900:78:23",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19956:16:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19965:1:23",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19968:1:23",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "19958:6:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19958:12:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19958:12:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "19923:5:23"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "19947:5:23"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_int256",
																					"nodeType": "YulIdentifier",
																					"src": "19930:16:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19930:23:23"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "19920:2:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19920:34:23"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "19913:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "19913:42:23"
															},
															"nodeType": "YulIf",
															"src": "19910:62:23"
														}
													]
												},
												"name": "validator_revert_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19893:5:23",
														"type": ""
													}
												],
												"src": "19858:120:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20046:79:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20056:22:23",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "20071:6:23"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "20065:5:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "20065:13:23"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "20056:5:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20113:5:23"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_int256",
																	"nodeType": "YulIdentifier",
																	"src": "20087:25:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "20087:32:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20087:32:23"
														}
													]
												},
												"name": "abi_decode_t_int256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "20024:6:23",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "20032:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20040:5:23",
														"type": ""
													}
												],
												"src": "19984:141:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20194:80:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20204:22:23",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "20219:6:23"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "20213:5:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "20213:13:23"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "20204:5:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20262:5:23"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "20235:26:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "20235:33:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20235:33:23"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "20172:6:23",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "20180:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20188:5:23",
														"type": ""
													}
												],
												"src": "20131:143:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20422:829:23",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20469:83:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "20471:77:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20471:79:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20471:79:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "20443:7:23"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20452:9:23"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20439:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20439:23:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20464:3:23",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "20435:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "20435:33:23"
															},
															"nodeType": "YulIf",
															"src": "20432:120:23"
														},
														{
															"nodeType": "YulBlock",
															"src": "20562:127:23",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "20577:15:23",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20591:1:23",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "20581:6:23",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "20606:73:23",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "20651:9:23"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "20662:6:23"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "20647:3:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20647:22:23"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "20671:7:23"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint80_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "20616:30:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20616:63:23"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "20606:6:23"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "20699:128:23",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "20714:16:23",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20728:2:23",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "20718:6:23",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "20744:73:23",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "20789:9:23"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "20800:6:23"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "20785:3:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20785:22:23"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "20809:7:23"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "20754:30:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20754:63:23"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "20744:6:23"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "20837:129:23",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "20852:16:23",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20866:2:23",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "20856:6:23",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "20882:74:23",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "20928:9:23"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "20939:6:23"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "20924:3:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20924:22:23"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "20948:7:23"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "20892:31:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20892:64:23"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "20882:6:23"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "20976:129:23",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "20991:16:23",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21005:2:23",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "20995:6:23",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "21021:74:23",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "21067:9:23"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "21078:6:23"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "21063:3:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "21063:22:23"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "21087:7:23"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "21031:31:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21031:64:23"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "21021:6:23"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "21115:129:23",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "21130:17:23",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21144:3:23",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "21134:6:23",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "21161:73:23",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "21206:9:23"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "21217:6:23"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "21202:3:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "21202:22:23"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "21226:7:23"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint80_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "21171:30:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21171:63:23"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "21161:6:23"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20360:9:23",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "20371:7:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "20383:6:23",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "20391:6:23",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "20399:6:23",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "20407:6:23",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "20415:6:23",
														"type": ""
													}
												],
												"src": "20280:971:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21304:509:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21314:24:23",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "21336:1:23"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nodeType": "YulIdentifier",
																	"src": "21319:16:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "21319:19:23"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "21314:1:23"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "21347:24:23",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "21369:1:23"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nodeType": "YulIdentifier",
																	"src": "21352:16:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "21352:19:23"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "21347:1:23"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "21380:28:23",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "21403:1:23"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "21406:1:23"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "21399:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "21399:9:23"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "21384:11:23",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "21417:40:23",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "21445:11:23"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nodeType": "YulIdentifier",
																	"src": "21428:16:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "21428:29:23"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "21417:7:23"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21584:22:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "21586:16:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21586:18:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "21586:18:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "21502:1:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21505:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "21498:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21498:9:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "21512:1:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21515:66:23",
																				"type": "",
																				"value": "0x8000000000000000000000000000000000000000000000000000000000000000"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "21509:2:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21509:73:23"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "21494:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "21494:89:23"
															},
															"nodeType": "YulIf",
															"src": "21491:115:23"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21784:22:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "21786:16:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21786:18:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "21786:18:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "21716:1:23"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "21709:6:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "21709:9:23"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "21739:1:23"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "21747:7:23"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "21756:1:23"
																							}
																						],
																						"functionName": {
																							"name": "sdiv",
																							"nodeType": "YulIdentifier",
																							"src": "21742:4:23"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "21742:16:23"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "21736:2:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "21736:23:23"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "21689:2:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21689:84:23"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "21669:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "21669:114:23"
															},
															"nodeType": "YulIf",
															"src": "21666:140:23"
														}
													]
												},
												"name": "checked_mul_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "21287:1:23",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "21290:1:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "21296:7:23",
														"type": ""
													}
												],
												"src": "21257:556:23"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_rational_0_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_rational_0_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_rational_0_by_1(value)))\n    }\n\n    function abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_0_by_1_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr_t_uint256_t_rational_0_by_1_t_uint256__to_t_string_memory_ptr_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function validator_revert_t_uint160(value) {\n        if iszero(eq(value, cleanup_t_uint160(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint160_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint160(value)\n    }\n\n    function cleanup_t_int24(value) -> cleaned {\n        cleaned := signextend(2, value)\n    }\n\n    function validator_revert_t_int24(value) {\n        if iszero(eq(value, cleanup_t_int24(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int24_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int24(value)\n    }\n\n    function cleanup_t_uint16(value) -> cleaned {\n        cleaned := and(value, 0xffff)\n    }\n\n    function validator_revert_t_uint16(value) {\n        if iszero(eq(value, cleanup_t_uint16(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint16_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint16(value)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_uint160t_int24t_uint16t_uint16t_uint16t_uint8t_bool_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint160_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int24_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint16_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint16_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint16_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_uint8_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint128(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_uint128(value) {\n        if iszero(eq(value, cleanup_t_uint128(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint128_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint128(value)\n    }\n\n    function abi_decode_tuple_t_uint128_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint128_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_7638e8c8903c5fa61ebf97e2b2f70e2c3ee679b62e1042ef4e4240a60c0694d0(memPtr) {\n\n        mstore(add(memPtr, 0), \"Timeframe adjusted\")\n\n    }\n\n    function abi_encode_t_stringliteral_7638e8c8903c5fa61ebf97e2b2f70e2c3ee679b62e1042ef4e4240a60c0694d0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_7638e8c8903c5fa61ebf97e2b2f70e2c3ee679b62e1042ef4e4240a60c0694d0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7638e8c8903c5fa61ebf97e2b2f70e2c3ee679b62e1042ef4e4240a60c0694d0_t_uint256_t_rational_0_by_1_t_uint256__to_t_string_memory_ptr_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7638e8c8903c5fa61ebf97e2b2f70e2c3ee679b62e1042ef4e4240a60c0694d0_to_t_string_memory_ptr_fromStack( tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 32))\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value1,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 96))\n\n    }\n\n    function store_literal_in_memory_f548031c271626835f64bb759a80cb1c7ee3cbb01af72f7702986b2084fa7f35(memPtr) {\n\n        mstore(add(memPtr, 0), \"convert to POL\")\n\n    }\n\n    function abi_encode_t_stringliteral_f548031c271626835f64bb759a80cb1c7ee3cbb01af72f7702986b2084fa7f35_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_f548031c271626835f64bb759a80cb1c7ee3cbb01af72f7702986b2084fa7f35(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f548031c271626835f64bb759a80cb1c7ee3cbb01af72f7702986b2084fa7f35_t_rational_0_by_1_t_rational_0_by_1_t_uint256__to_t_string_memory_ptr_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f548031c271626835f64bb759a80cb1c7ee3cbb01af72f7702986b2084fa7f35_to_t_string_memory_ptr_fromStack( tail)\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value0,  add(headStart, 32))\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value1,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 96))\n\n    }\n\n    function cleanup_t_uint80(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffff)\n    }\n\n    function validator_revert_t_uint80(value) {\n        if iszero(eq(value, cleanup_t_uint80(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint80_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint80(value)\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function checked_mul_t_int256(x, y) -> product {\n        x := cleanup_t_int256(x)\n        y := cleanup_t_int256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_int256(product_raw)\n\n        // special case\n        if and(slt(x, 0), eq(y, 0x8000000000000000000000000000000000000000000000000000000000000000)) { panic_error_0x11() }\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, sdiv(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 23,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106101c5575f3560e01c8063869665e9116100f6578063b3ce56a211610094578063e189eb4211610063578063e189eb4214610641578063e5047b301461066b578063f1a107fe14610695578063f974821a146106bf57610243565b8063b3ce56a214610599578063c0fc247f146105c3578063e037f889146105ed578063e0abca0b1461061757610243565b806392eefe9b116100d057806392eefe9b146105075780639d8ef1e11461052f578063a30fb90514610545578063a98ad46c1461056f57610243565b8063869665e91461048b5780638da5cb5b146104b35780638fc3047d146104dd57610243565b806341c0e1b5116101635780635e7ffa671161013d5780635e7ffa67146103d157806364aabb9e1461040d5780636d546cdd14610437578063735de9f71461046157610243565b806341c0e1b514610369578063457f3cb01461037f5780634ada218b146103a757610243565b80631bf413621161019f5780631bf41362146102b1578063238f9b7a146102db57806326c403ed146103055780633fb47a3b1461032d57610243565b806311eac855146102475780631458d9d81461027157806317700f011461029b57610243565b36610243573460015f8282546101db9190611210565b9250508190555060646046346101f19190611243565b6101fb91906112b1565b60025f82825461020b9190611210565b925050819055506064601e346102219190611243565b61022b91906112b1565b60035f82825461023b9190611210565b925050819055005b5f80fd5b348015610252575f80fd5b5061025b6106e9565b6040516102689190611320565b60405180910390f35b34801561027c575f80fd5b5061028561070e565b6040516102929190611348565b60405180910390f35b3480156102a6575f80fd5b506102af610714565b005b3480156102bc575f80fd5b506102c56107bc565b6040516102d29190611348565b60405180910390f35b3480156102e6575f80fd5b506102ef6107c2565b6040516102fc9190611320565b60405180910390f35b348015610310575f80fd5b5061032b600480360381019061032691906114d8565b6107e7565b005b348015610338575f80fd5b50610353600480360381019061034e919061155c565b6108d3565b60405161036091906115b4565b60405180910390f35b348015610374575f80fd5b5061037d610a16565b005b34801561038a575f80fd5b506103a560048036038101906103a091906115cd565b610ae9565b005b3480156103b2575f80fd5b506103bb610c33565b6040516103c891906115b4565b60405180910390f35b3480156103dc575f80fd5b506103f760048036038101906103f291906115f8565b610c45565b6040516104049190611320565b60405180910390f35b348015610418575f80fd5b50610421610c8d565b60405161042e9190611348565b60405180910390f35b348015610442575f80fd5b5061044b610c93565b60405161045891906116b9565b60405180910390f35b34801561046c575f80fd5b50610475610d1f565b6040516104829190611320565b60405180910390f35b348015610496575f80fd5b506104b160048036038101906104ac91906115cd565b610d44565b005b3480156104be575f80fd5b506104c7610e2d565b6040516104d49190611320565b60405180910390f35b3480156104e8575f80fd5b506104f1610e50565b6040516104fe9190611348565b60405180910390f35b348015610512575f80fd5b5061052d600480360381019061052891906116d9565b610e63565b005b34801561053a575f80fd5b50610543610f32565b005b348015610550575f80fd5b5061055961101a565b6040516105669190611348565b60405180910390f35b34801561057a575f80fd5b50610583611020565b6040516105909190611320565b60405180910390f35b3480156105a4575f80fd5b506105ad611045565b6040516105ba9190611348565b60405180910390f35b3480156105ce575f80fd5b506105d761104b565b6040516105e49190611348565b60405180910390f35b3480156105f8575f80fd5b50610601611051565b60405161060e9190611348565b60405180910390f35b348015610622575f80fd5b5061062b611057565b6040516106389190611320565b60405180910390f35b34801561064c575f80fd5b5061065561107c565b6040516106629190611320565b60405180910390f35b348015610676575f80fd5b5061067f6110a1565b60405161068c9190611320565b60405180910390f35b3480156106a0575f80fd5b506106a96110c6565b6040516106b69190611320565b60405180910390f35b3480156106ca575f80fd5b506106d36110eb565b6040516106e09190611348565b60405180910390f35b600c5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025481565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146107a1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107989061174e565b60405180910390fd5b5f8060146101000a81548160ff021916908315150217905550565b60085481565b60115f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610874576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086b9061174e565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f030fdcd4f0c28c5dbcbc3f59aa8e2260c7f58ac45be2a2dca652999af89c33e083835f6108b76110f1565b6040516108c794939291906117ae565b60405180910390a25050565b5f808290505f8173ffffffffffffffffffffffffffffffffffffffff16633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015610922573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061094691906118ef565b50505050505090505f8273ffffffffffffffffffffffffffffffffffffffff16631a6865026040518163ffffffff1660e01b8152600401602060405180830381865afa158015610998573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109bc91906119d1565b6fffffffffffffffffffffffffffffffff1690505f6109dc8784846111a3565b90505f60646001836109ee9190611243565b6109f891906112b1565b90508088610a0691906119fc565b8210159550505050505092915050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610aa3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9a9061174e565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc4790811502906040515f60405180830381858888f19350505050158015610ae6573d5f803e3d5ffd5b50565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b76576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b6d9061174e565b60405180910390fd5b5f633b9aca0082610b879190611243565b905080471015610bcc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bc390611a79565b60405180910390fd5b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f19350505050158015610c2e573d5f803e3d5ffd5b505050565b5f60149054906101000a900460ff1681565b6012818051602081018201805184825260208301602085012081835280955050505050505f915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60035481565b60098054610ca090611ac4565b80601f0160208091040260200160405190810160405280929190818152602001828054610ccc90611ac4565b8015610d175780601f10610cee57610100808354040283529160200191610d17565b820191905f5260205f20905b815481529060010190602001808311610cfa57829003601f168201915b505050505081565b600f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610dd1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dc89061174e565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f030fdcd4f0c28c5dbcbc3f59aa8e2260c7f58ac45be2a2dca652999af89c33e0825f610e136110f1565b604051610e2293929190611b3e565b60405180910390a250565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f80610e5a6110f1565b90508091505090565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ef0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ee79061174e565b60405180910390fd5b805f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610fbf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fb69061174e565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f030fdcd4f0c28c5dbcbc3f59aa8e2260c7f58ac45be2a2dca652999af89c33e05f806110016110f1565b60405161101093929190611bd0565b60405180910390a2565b60065481565b600b5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60075481565b60055481565b60015481565b600e5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600d5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60105f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600a5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60045481565b5f80600e5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505f8173ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015611161573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111859190611c9e565b5050509150506402540be4008161119c9190611d15565b9250505090565b5f818373ffffffffffffffffffffffffffffffffffffffff16856111c79190611243565b6111d191906112b1565b90509392505050565b5f819050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61121a826111da565b9150611225836111da565b925082820190508082111561123d5761123c6111e3565b5b92915050565b5f61124d826111da565b9150611258836111da565b9250828202611266816111da565b9150828204841483151761127d5761127c6111e3565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6112bb826111da565b91506112c6836111da565b9250826112d6576112d5611284565b5b828204905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61130a826112e1565b9050919050565b61131a81611300565b82525050565b5f6020820190506113335f830184611311565b92915050565b611342816111da565b82525050565b5f60208201905061135b5f830184611339565b92915050565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6113c08261137a565b810181811067ffffffffffffffff821117156113df576113de61138a565b5b80604052505050565b5f6113f1611361565b90506113fd82826113b7565b919050565b5f67ffffffffffffffff82111561141c5761141b61138a565b5b6114258261137a565b9050602081019050919050565b828183375f83830152505050565b5f61145261144d84611402565b6113e8565b90508281526020810184848401111561146e5761146d611376565b5b611479848285611432565b509392505050565b5f82601f83011261149557611494611372565b5b81356114a5848260208601611440565b91505092915050565b6114b7816111da565b81146114c1575f80fd5b50565b5f813590506114d2816114ae565b92915050565b5f80604083850312156114ee576114ed61136a565b5b5f83013567ffffffffffffffff81111561150b5761150a61136e565b5b61151785828601611481565b9250506020611528858286016114c4565b9150509250929050565b61153b81611300565b8114611545575f80fd5b50565b5f8135905061155681611532565b92915050565b5f80604083850312156115725761157161136a565b5b5f61157f858286016114c4565b925050602061159085828601611548565b9150509250929050565b5f8115159050919050565b6115ae8161159a565b82525050565b5f6020820190506115c75f8301846115a5565b92915050565b5f602082840312156115e2576115e161136a565b5b5f6115ef848285016114c4565b91505092915050565b5f6020828403121561160d5761160c61136a565b5b5f82013567ffffffffffffffff81111561162a5761162961136e565b5b61163684828501611481565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b8381101561167657808201518184015260208101905061165b565b5f8484015250505050565b5f61168b8261163f565b6116958185611649565b93506116a5818560208601611659565b6116ae8161137a565b840191505092915050565b5f6020820190508181035f8301526116d18184611681565b905092915050565b5f602082840312156116ee576116ed61136a565b5b5f6116fb84828501611548565b91505092915050565b7f4e6f7420746865206f776e6572000000000000000000000000000000000000005f82015250565b5f611738600d83611649565b915061174382611704565b602082019050919050565b5f6020820190508181035f8301526117658161172c565b9050919050565b5f819050919050565b5f819050919050565b5f61179861179361178e8461176c565b611775565b6111da565b9050919050565b6117a88161177e565b82525050565b5f6080820190508181035f8301526117c68187611681565b90506117d56020830186611339565b6117e2604083018561179f565b6117ef6060830184611339565b95945050505050565b611801816112e1565b811461180b575f80fd5b50565b5f8151905061181c816117f8565b92915050565b5f8160020b9050919050565b61183781611822565b8114611841575f80fd5b50565b5f815190506118528161182e565b92915050565b5f61ffff82169050919050565b61186e81611858565b8114611878575f80fd5b50565b5f8151905061188981611865565b92915050565b5f60ff82169050919050565b6118a48161188f565b81146118ae575f80fd5b50565b5f815190506118bf8161189b565b92915050565b6118ce8161159a565b81146118d8575f80fd5b50565b5f815190506118e9816118c5565b92915050565b5f805f805f805f60e0888a03121561190a5761190961136a565b5b5f6119178a828b0161180e565b97505060206119288a828b01611844565b96505060406119398a828b0161187b565b955050606061194a8a828b0161187b565b945050608061195b8a828b0161187b565b93505060a061196c8a828b016118b1565b92505060c061197d8a828b016118db565b91505092959891949750929550565b5f6fffffffffffffffffffffffffffffffff82169050919050565b6119b08161198c565b81146119ba575f80fd5b50565b5f815190506119cb816119a7565b92915050565b5f602082840312156119e6576119e561136a565b5b5f6119f3848285016119bd565b91505092915050565b5f611a06826111da565b9150611a11836111da565b9250828203905081811115611a2957611a286111e3565b5b92915050565b7f496e73756666696369656e742062616c616e63650000000000000000000000005f82015250565b5f611a63601483611649565b9150611a6e82611a2f565b602082019050919050565b5f6020820190508181035f830152611a9081611a57565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611adb57607f821691505b602082108103611aee57611aed611a97565b5b50919050565b7f54696d656672616d652061646a757374656400000000000000000000000000005f82015250565b5f611b28601283611649565b9150611b3382611af4565b602082019050919050565b5f6080820190508181035f830152611b5581611b1c565b9050611b646020830186611339565b611b71604083018561179f565b611b7e6060830184611339565b949350505050565b7f636f6e7665727420746f20504f4c0000000000000000000000000000000000005f82015250565b5f611bba600e83611649565b9150611bc582611b86565b602082019050919050565b5f6080820190508181035f830152611be781611bae565b9050611bf6602083018661179f565b611c03604083018561179f565b611c106060830184611339565b949350505050565b5f69ffffffffffffffffffff82169050919050565b611c3681611c18565b8114611c40575f80fd5b50565b5f81519050611c5181611c2d565b92915050565b5f819050919050565b611c6981611c57565b8114611c73575f80fd5b50565b5f81519050611c8481611c60565b92915050565b5f81519050611c98816114ae565b92915050565b5f805f805f60a08688031215611cb757611cb661136a565b5b5f611cc488828901611c43565b9550506020611cd588828901611c76565b9450506040611ce688828901611c8a565b9350506060611cf788828901611c8a565b9250506080611d0888828901611c43565b9150509295509295909350565b5f611d1f82611c57565b9150611d2a83611c57565b9250828202611d3881611c57565b91507f800000000000000000000000000000000000000000000000000000000000000084145f84121615611d6f57611d6e6111e3565b5b8282058414831517611d8457611d836111e3565b5b509291505056fea2646970667358221220449b0f1b43c11ef172abf98154ebaca74aaeb32ca045a166e6cb450e31ad443a64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1C5 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x869665E9 GT PUSH2 0xF6 JUMPI DUP1 PUSH4 0xB3CE56A2 GT PUSH2 0x94 JUMPI DUP1 PUSH4 0xE189EB42 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xE189EB42 EQ PUSH2 0x641 JUMPI DUP1 PUSH4 0xE5047B30 EQ PUSH2 0x66B JUMPI DUP1 PUSH4 0xF1A107FE EQ PUSH2 0x695 JUMPI DUP1 PUSH4 0xF974821A EQ PUSH2 0x6BF JUMPI PUSH2 0x243 JUMP JUMPDEST DUP1 PUSH4 0xB3CE56A2 EQ PUSH2 0x599 JUMPI DUP1 PUSH4 0xC0FC247F EQ PUSH2 0x5C3 JUMPI DUP1 PUSH4 0xE037F889 EQ PUSH2 0x5ED JUMPI DUP1 PUSH4 0xE0ABCA0B EQ PUSH2 0x617 JUMPI PUSH2 0x243 JUMP JUMPDEST DUP1 PUSH4 0x92EEFE9B GT PUSH2 0xD0 JUMPI DUP1 PUSH4 0x92EEFE9B EQ PUSH2 0x507 JUMPI DUP1 PUSH4 0x9D8EF1E1 EQ PUSH2 0x52F JUMPI DUP1 PUSH4 0xA30FB905 EQ PUSH2 0x545 JUMPI DUP1 PUSH4 0xA98AD46C EQ PUSH2 0x56F JUMPI PUSH2 0x243 JUMP JUMPDEST DUP1 PUSH4 0x869665E9 EQ PUSH2 0x48B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4B3 JUMPI DUP1 PUSH4 0x8FC3047D EQ PUSH2 0x4DD JUMPI PUSH2 0x243 JUMP JUMPDEST DUP1 PUSH4 0x41C0E1B5 GT PUSH2 0x163 JUMPI DUP1 PUSH4 0x5E7FFA67 GT PUSH2 0x13D JUMPI DUP1 PUSH4 0x5E7FFA67 EQ PUSH2 0x3D1 JUMPI DUP1 PUSH4 0x64AABB9E EQ PUSH2 0x40D JUMPI DUP1 PUSH4 0x6D546CDD EQ PUSH2 0x437 JUMPI DUP1 PUSH4 0x735DE9F7 EQ PUSH2 0x461 JUMPI PUSH2 0x243 JUMP JUMPDEST DUP1 PUSH4 0x41C0E1B5 EQ PUSH2 0x369 JUMPI DUP1 PUSH4 0x457F3CB0 EQ PUSH2 0x37F JUMPI DUP1 PUSH4 0x4ADA218B EQ PUSH2 0x3A7 JUMPI PUSH2 0x243 JUMP JUMPDEST DUP1 PUSH4 0x1BF41362 GT PUSH2 0x19F JUMPI DUP1 PUSH4 0x1BF41362 EQ PUSH2 0x2B1 JUMPI DUP1 PUSH4 0x238F9B7A EQ PUSH2 0x2DB JUMPI DUP1 PUSH4 0x26C403ED EQ PUSH2 0x305 JUMPI DUP1 PUSH4 0x3FB47A3B EQ PUSH2 0x32D JUMPI PUSH2 0x243 JUMP JUMPDEST DUP1 PUSH4 0x11EAC855 EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0x1458D9D8 EQ PUSH2 0x271 JUMPI DUP1 PUSH4 0x17700F01 EQ PUSH2 0x29B JUMPI PUSH2 0x243 JUMP JUMPDEST CALLDATASIZE PUSH2 0x243 JUMPI CALLVALUE PUSH1 0x1 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0x1210 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x64 PUSH1 0x46 CALLVALUE PUSH2 0x1F1 SWAP2 SWAP1 PUSH2 0x1243 JUMP JUMPDEST PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0x12B1 JUMP JUMPDEST PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x20B SWAP2 SWAP1 PUSH2 0x1210 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x64 PUSH1 0x1E CALLVALUE PUSH2 0x221 SWAP2 SWAP1 PUSH2 0x1243 JUMP JUMPDEST PUSH2 0x22B SWAP2 SWAP1 PUSH2 0x12B1 JUMP JUMPDEST PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x23B SWAP2 SWAP1 PUSH2 0x1210 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x252 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x25B PUSH2 0x6E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x268 SWAP2 SWAP1 PUSH2 0x1320 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x285 PUSH2 0x70E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x292 SWAP2 SWAP1 PUSH2 0x1348 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AF PUSH2 0x714 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C5 PUSH2 0x7BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D2 SWAP2 SWAP1 PUSH2 0x1348 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EF PUSH2 0x7C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FC SWAP2 SWAP1 PUSH2 0x1320 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x310 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x32B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x326 SWAP2 SWAP1 PUSH2 0x14D8 JUMP JUMPDEST PUSH2 0x7E7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x338 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x353 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34E SWAP2 SWAP1 PUSH2 0x155C JUMP JUMPDEST PUSH2 0x8D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x360 SWAP2 SWAP1 PUSH2 0x15B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x374 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x37D PUSH2 0xA16 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A0 SWAP2 SWAP1 PUSH2 0x15CD JUMP JUMPDEST PUSH2 0xAE9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3BB PUSH2 0xC33 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C8 SWAP2 SWAP1 PUSH2 0x15B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F2 SWAP2 SWAP1 PUSH2 0x15F8 JUMP JUMPDEST PUSH2 0xC45 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x404 SWAP2 SWAP1 PUSH2 0x1320 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x418 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x421 PUSH2 0xC8D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x42E SWAP2 SWAP1 PUSH2 0x1348 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x442 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x44B PUSH2 0xC93 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x458 SWAP2 SWAP1 PUSH2 0x16B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x475 PUSH2 0xD1F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x482 SWAP2 SWAP1 PUSH2 0x1320 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x496 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4AC SWAP2 SWAP1 PUSH2 0x15CD JUMP JUMPDEST PUSH2 0xD44 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C7 PUSH2 0xE2D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D4 SWAP2 SWAP1 PUSH2 0x1320 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4F1 PUSH2 0xE50 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4FE SWAP2 SWAP1 PUSH2 0x1348 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x512 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x52D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x528 SWAP2 SWAP1 PUSH2 0x16D9 JUMP JUMPDEST PUSH2 0xE63 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x53A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x543 PUSH2 0xF32 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x550 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x559 PUSH2 0x101A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x566 SWAP2 SWAP1 PUSH2 0x1348 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x57A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x583 PUSH2 0x1020 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x590 SWAP2 SWAP1 PUSH2 0x1320 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5AD PUSH2 0x1045 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5BA SWAP2 SWAP1 PUSH2 0x1348 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5CE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5D7 PUSH2 0x104B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5E4 SWAP2 SWAP1 PUSH2 0x1348 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x601 PUSH2 0x1051 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x60E SWAP2 SWAP1 PUSH2 0x1348 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x622 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x62B PUSH2 0x1057 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x638 SWAP2 SWAP1 PUSH2 0x1320 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x64C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x655 PUSH2 0x107C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x662 SWAP2 SWAP1 PUSH2 0x1320 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x676 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x67F PUSH2 0x10A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x68C SWAP2 SWAP1 PUSH2 0x1320 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6A0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x6A9 PUSH2 0x10C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6B6 SWAP2 SWAP1 PUSH2 0x1320 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6CA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x6D3 PUSH2 0x10EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6E0 SWAP2 SWAP1 PUSH2 0x1348 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0xC PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7A1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x798 SWAP1 PUSH2 0x174E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x11 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x874 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x86B SWAP1 PUSH2 0x174E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x30FDCD4F0C28C5DBCBC3F59AA8E2260C7F58AC45BE2A2DCA652999AF89C33E0 DUP4 DUP4 PUSH0 PUSH2 0x8B7 PUSH2 0x10F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8C7 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x17AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP1 POP PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3850C7BD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xE0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x922 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x946 SWAP2 SWAP1 PUSH2 0x18EF JUMP JUMPDEST POP POP POP POP POP POP SWAP1 POP PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1A686502 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x998 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9BC SWAP2 SWAP1 PUSH2 0x19D1 JUMP JUMPDEST PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 PUSH2 0x9DC DUP8 DUP5 DUP5 PUSH2 0x11A3 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x64 PUSH1 0x1 DUP4 PUSH2 0x9EE SWAP2 SWAP1 PUSH2 0x1243 JUMP JUMPDEST PUSH2 0x9F8 SWAP2 SWAP1 PUSH2 0x12B1 JUMP JUMPDEST SWAP1 POP DUP1 DUP9 PUSH2 0xA06 SWAP2 SWAP1 PUSH2 0x19FC JUMP JUMPDEST DUP3 LT ISZERO SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xAA3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA9A SWAP1 PUSH2 0x174E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xAE6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB76 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB6D SWAP1 PUSH2 0x174E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH4 0x3B9ACA00 DUP3 PUSH2 0xB87 SWAP2 SWAP1 PUSH2 0x1243 JUMP JUMPDEST SWAP1 POP DUP1 SELFBALANCE LT ISZERO PUSH2 0xBCC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC3 SWAP1 PUSH2 0x1A79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xC2E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x12 DUP2 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP3 ADD DUP1 MLOAD DUP5 DUP3 MSTORE PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP6 ADD KECCAK256 DUP2 DUP4 MSTORE DUP1 SWAP6 POP POP POP POP POP POP PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH2 0xCA0 SWAP1 PUSH2 0x1AC4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xCCC SWAP1 PUSH2 0x1AC4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD17 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xCEE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD17 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xCFA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0xF PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDD1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDC8 SWAP1 PUSH2 0x174E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x30FDCD4F0C28C5DBCBC3F59AA8E2260C7F58AC45BE2A2DCA652999AF89C33E0 DUP3 PUSH0 PUSH2 0xE13 PUSH2 0x10F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE22 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xE5A PUSH2 0x10F1 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xEF0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEE7 SWAP1 PUSH2 0x174E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFBF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFB6 SWAP1 PUSH2 0x174E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x30FDCD4F0C28C5DBCBC3F59AA8E2260C7F58AC45BE2A2DCA652999AF89C33E0 PUSH0 DUP1 PUSH2 0x1001 PUSH2 0x10F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1010 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1BD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xE PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x10 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0xE PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1161 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1185 SWAP2 SWAP1 PUSH2 0x1C9E JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH5 0x2540BE400 DUP2 PUSH2 0x119C SWAP2 SWAP1 PUSH2 0x1D15 JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH2 0x11C7 SWAP2 SWAP1 PUSH2 0x1243 JUMP JUMPDEST PUSH2 0x11D1 SWAP2 SWAP1 PUSH2 0x12B1 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x121A DUP3 PUSH2 0x11DA JUMP JUMPDEST SWAP2 POP PUSH2 0x1225 DUP4 PUSH2 0x11DA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x123D JUMPI PUSH2 0x123C PUSH2 0x11E3 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x124D DUP3 PUSH2 0x11DA JUMP JUMPDEST SWAP2 POP PUSH2 0x1258 DUP4 PUSH2 0x11DA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1266 DUP2 PUSH2 0x11DA JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x127D JUMPI PUSH2 0x127C PUSH2 0x11E3 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x12BB DUP3 PUSH2 0x11DA JUMP JUMPDEST SWAP2 POP PUSH2 0x12C6 DUP4 PUSH2 0x11DA JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x12D6 JUMPI PUSH2 0x12D5 PUSH2 0x1284 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x130A DUP3 PUSH2 0x12E1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x131A DUP2 PUSH2 0x1300 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1333 PUSH0 DUP4 ADD DUP5 PUSH2 0x1311 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1342 DUP2 PUSH2 0x11DA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x135B PUSH0 DUP4 ADD DUP5 PUSH2 0x1339 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x13C0 DUP3 PUSH2 0x137A JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x13DF JUMPI PUSH2 0x13DE PUSH2 0x138A JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x13F1 PUSH2 0x1361 JUMP JUMPDEST SWAP1 POP PUSH2 0x13FD DUP3 DUP3 PUSH2 0x13B7 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x141C JUMPI PUSH2 0x141B PUSH2 0x138A JUMP JUMPDEST JUMPDEST PUSH2 0x1425 DUP3 PUSH2 0x137A JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1452 PUSH2 0x144D DUP5 PUSH2 0x1402 JUMP JUMPDEST PUSH2 0x13E8 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x146E JUMPI PUSH2 0x146D PUSH2 0x1376 JUMP JUMPDEST JUMPDEST PUSH2 0x1479 DUP5 DUP3 DUP6 PUSH2 0x1432 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1495 JUMPI PUSH2 0x1494 PUSH2 0x1372 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x14A5 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1440 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x14B7 DUP2 PUSH2 0x11DA JUMP JUMPDEST DUP2 EQ PUSH2 0x14C1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14D2 DUP2 PUSH2 0x14AE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14EE JUMPI PUSH2 0x14ED PUSH2 0x136A JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x150B JUMPI PUSH2 0x150A PUSH2 0x136E JUMP JUMPDEST JUMPDEST PUSH2 0x1517 DUP6 DUP3 DUP7 ADD PUSH2 0x1481 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1528 DUP6 DUP3 DUP7 ADD PUSH2 0x14C4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x153B DUP2 PUSH2 0x1300 JUMP JUMPDEST DUP2 EQ PUSH2 0x1545 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1556 DUP2 PUSH2 0x1532 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1572 JUMPI PUSH2 0x1571 PUSH2 0x136A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x157F DUP6 DUP3 DUP7 ADD PUSH2 0x14C4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1590 DUP6 DUP3 DUP7 ADD PUSH2 0x1548 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15AE DUP2 PUSH2 0x159A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15C7 PUSH0 DUP4 ADD DUP5 PUSH2 0x15A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15E2 JUMPI PUSH2 0x15E1 PUSH2 0x136A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x15EF DUP5 DUP3 DUP6 ADD PUSH2 0x14C4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x160D JUMPI PUSH2 0x160C PUSH2 0x136A JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x162A JUMPI PUSH2 0x1629 PUSH2 0x136E JUMP JUMPDEST JUMPDEST PUSH2 0x1636 DUP5 DUP3 DUP6 ADD PUSH2 0x1481 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1676 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x165B JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x168B DUP3 PUSH2 0x163F JUMP JUMPDEST PUSH2 0x1695 DUP2 DUP6 PUSH2 0x1649 JUMP JUMPDEST SWAP4 POP PUSH2 0x16A5 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1659 JUMP JUMPDEST PUSH2 0x16AE DUP2 PUSH2 0x137A JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x16D1 DUP2 DUP5 PUSH2 0x1681 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16EE JUMPI PUSH2 0x16ED PUSH2 0x136A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16FB DUP5 DUP3 DUP6 ADD PUSH2 0x1548 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420746865206F776E657200000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1738 PUSH1 0xD DUP4 PUSH2 0x1649 JUMP JUMPDEST SWAP2 POP PUSH2 0x1743 DUP3 PUSH2 0x1704 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1765 DUP2 PUSH2 0x172C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1798 PUSH2 0x1793 PUSH2 0x178E DUP5 PUSH2 0x176C JUMP JUMPDEST PUSH2 0x1775 JUMP JUMPDEST PUSH2 0x11DA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17A8 DUP2 PUSH2 0x177E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x17C6 DUP2 DUP8 PUSH2 0x1681 JUMP JUMPDEST SWAP1 POP PUSH2 0x17D5 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1339 JUMP JUMPDEST PUSH2 0x17E2 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x179F JUMP JUMPDEST PUSH2 0x17EF PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1339 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1801 DUP2 PUSH2 0x12E1 JUMP JUMPDEST DUP2 EQ PUSH2 0x180B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x181C DUP2 PUSH2 0x17F8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x2 SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1837 DUP2 PUSH2 0x1822 JUMP JUMPDEST DUP2 EQ PUSH2 0x1841 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1852 DUP2 PUSH2 0x182E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x186E DUP2 PUSH2 0x1858 JUMP JUMPDEST DUP2 EQ PUSH2 0x1878 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1889 DUP2 PUSH2 0x1865 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18A4 DUP2 PUSH2 0x188F JUMP JUMPDEST DUP2 EQ PUSH2 0x18AE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x18BF DUP2 PUSH2 0x189B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x18CE DUP2 PUSH2 0x159A JUMP JUMPDEST DUP2 EQ PUSH2 0x18D8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x18E9 DUP2 PUSH2 0x18C5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x190A JUMPI PUSH2 0x1909 PUSH2 0x136A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1917 DUP11 DUP3 DUP12 ADD PUSH2 0x180E JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x1928 DUP11 DUP3 DUP12 ADD PUSH2 0x1844 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x1939 DUP11 DUP3 DUP12 ADD PUSH2 0x187B JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x194A DUP11 DUP3 DUP12 ADD PUSH2 0x187B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x195B DUP11 DUP3 DUP12 ADD PUSH2 0x187B JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x196C DUP11 DUP3 DUP12 ADD PUSH2 0x18B1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x197D DUP11 DUP3 DUP12 ADD PUSH2 0x18DB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH0 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19B0 DUP2 PUSH2 0x198C JUMP JUMPDEST DUP2 EQ PUSH2 0x19BA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x19CB DUP2 PUSH2 0x19A7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19E6 JUMPI PUSH2 0x19E5 PUSH2 0x136A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x19F3 DUP5 DUP3 DUP6 ADD PUSH2 0x19BD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1A06 DUP3 PUSH2 0x11DA JUMP JUMPDEST SWAP2 POP PUSH2 0x1A11 DUP4 PUSH2 0x11DA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1A29 JUMPI PUSH2 0x1A28 PUSH2 0x11E3 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1A63 PUSH1 0x14 DUP4 PUSH2 0x1649 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A6E DUP3 PUSH2 0x1A2F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A90 DUP2 PUSH2 0x1A57 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1ADB JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1AEE JUMPI PUSH2 0x1AED PUSH2 0x1A97 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x54696D656672616D652061646A75737465640000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B28 PUSH1 0x12 DUP4 PUSH2 0x1649 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B33 DUP3 PUSH2 0x1AF4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B55 DUP2 PUSH2 0x1B1C JUMP JUMPDEST SWAP1 POP PUSH2 0x1B64 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1339 JUMP JUMPDEST PUSH2 0x1B71 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x179F JUMP JUMPDEST PUSH2 0x1B7E PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1339 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x636F6E7665727420746F20504F4C000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1BBA PUSH1 0xE DUP4 PUSH2 0x1649 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BC5 DUP3 PUSH2 0x1B86 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1BE7 DUP2 PUSH2 0x1BAE JUMP JUMPDEST SWAP1 POP PUSH2 0x1BF6 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x179F JUMP JUMPDEST PUSH2 0x1C03 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x179F JUMP JUMPDEST PUSH2 0x1C10 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1339 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C36 DUP2 PUSH2 0x1C18 JUMP JUMPDEST DUP2 EQ PUSH2 0x1C40 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1C51 DUP2 PUSH2 0x1C2D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C69 DUP2 PUSH2 0x1C57 JUMP JUMPDEST DUP2 EQ PUSH2 0x1C73 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1C84 DUP2 PUSH2 0x1C60 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1C98 DUP2 PUSH2 0x14AE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1CB7 JUMPI PUSH2 0x1CB6 PUSH2 0x136A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CC4 DUP9 DUP3 DUP10 ADD PUSH2 0x1C43 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1CD5 DUP9 DUP3 DUP10 ADD PUSH2 0x1C76 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1CE6 DUP9 DUP3 DUP10 ADD PUSH2 0x1C8A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x1CF7 DUP9 DUP3 DUP10 ADD PUSH2 0x1C8A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x1D08 DUP9 DUP3 DUP10 ADD PUSH2 0x1C43 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D1F DUP3 PUSH2 0x1C57 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D2A DUP4 PUSH2 0x1C57 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1D38 DUP2 PUSH2 0x1C57 JUMP JUMPDEST SWAP2 POP PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP5 EQ PUSH0 DUP5 SLT AND ISZERO PUSH2 0x1D6F JUMPI PUSH2 0x1D6E PUSH2 0x11E3 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SDIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1D84 JUMPI PUSH2 0x1D83 PUSH2 0x11E3 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PREVRANDAO SWAP12 0xF SHL NUMBER 0xC1 0x1E CALL PUSH19 0xABF98154EBACA74AAEB32CA045A166E6CB450E BALANCE 0xAD PREVRANDAO GASPRICE PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "944:6809:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3186:9;3168:14;;:27;;;;;;;:::i;:::-;;;;;;;;3240:3;3234:2;3222:9;:14;;;;:::i;:::-;3221:22;;;;:::i;:::-;3205:12;;:38;;;;;;;:::i;:::-;;;;;;;;3293:3;3287:2;3275:9;:14;;;;:::i;:::-;3274:22;;;;:::i;:::-;3253:17;;:43;;;;;;;:::i;:::-;;;;;;;;944:6809;;;;1576:69;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1061:27;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4899:84;;;;;;;;;;;;;:::i;:::-;;1286:26;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2099:92;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3805:164;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4105:546;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5241:95;;;;;;;;;;;;;:::i;:::-;;4989:250;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;994:26;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2235:44;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1094:32;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1318:46;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1877:73;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3309:365;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;967:20;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3680:119;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3028:97;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3975:129;;;;;;;;;;;;;:::i;:::-;;1202:36;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1482:69;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1244:36;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1168:28;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1026:29;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1771:76;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1670:75;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1981:82;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1371:68;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1132:30;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1576:69;;;;;;;;;;;;;:::o;1061:27::-;;;;:::o;4899:84::-;2595:5;;;;;;;;;;2581:19;;:10;:19;;;2573:45;;;;;;;;;;;;:::i;:::-;;;;;;;;;4971:5:::1;4954:14:::0;::::1;:22;;;;;;;;;;;;;;;;;;4899:84::o:0;1286:26::-;;;;:::o;2099:92::-;;;;;;;;;;;;;:::o;3805:164::-;2595:5;;;;;;;;;;2581:19;;:10;:19;;;2573:45;;;;;;;;;;;;:::i;:::-;;;;;;;;;3917:10:::1;3903:59;;;3929:9;3940:6;3948:1;3951:10;:8;:10::i;:::-;3903:59;;;;;;;;;:::i;:::-;;;;;;;;3805:164:::0;;:::o;4105:546::-;4189:24;4221:19;4258:11;4221:49;;4277:20;4307:4;:10;;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4276:43;;;;;;;;4325:17;4345:4;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4325:36;;;;4466:17;4486:53;4505:8;4515:12;4529:9;4486:18;:53::i;:::-;4466:73;;4546:16;4583:3;4578:1;4566:9;:13;;;;:::i;:::-;4565:21;;;;:::i;:::-;4546:40;;4639:8;4628;:19;;;;:::i;:::-;4615:9;:32;;4592:56;;4215:436;;;;;4105:546;;;;:::o;5241:95::-;2595:5;;;;;;;;;;2581:19;;:10;:19;;;2573:45;;;;;;;;;;;;:::i;:::-;;;;;;;;;5290:10:::1;5282:28;;:51;5311:21;5282:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;5241:95::o:0;4989:250::-;2595:5;;;;;;;;;;2581:19;;:10;:19;;;2573:45;;;;;;;;;;;;:::i;:::-;;;;;;;;;5064:19:::1;5101:6;5086:12;:21;;;;:::i;:::-;5064:43;;5150:11;5125:21;:36;;5117:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;5204:5;::::0;::::1;;;;;;;;5196:23;;:36;5220:11;5196:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;5054:185;4989:250:::0;:::o;994:26::-;;;;;;;;;;;;;:::o;2235:44::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1094:32::-;;;;:::o;1318:46::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1877:73::-;;;;;;;;;;;;;:::o;3309:365::-;2595:5;;;;;;;;;;2581:19;;:10;:19;;;2573:45;;;;;;;;;;;;:::i;:::-;;;;;;;;;3600:10:::1;3586:81;;;3634:17;3653:1;3656:10;:8;:10::i;:::-;3586:81;;;;;;;;:::i;:::-;;;;;;;;3309:365:::0;:::o;967:20::-;;;;;;;;;;;;:::o;3680:119::-;3725:7;3744:13;3760:10;:8;:10::i;:::-;3744:26;;3787:5;3780:12;;;3680:119;:::o;3028:97::-;2595:5;;;;;;;;;;2581:19;;:10;:19;;;2573:45;;;;;;;;;;;;:::i;:::-;;;;;;;;;3108:10:::1;3100:5;::::0;:18:::1;;;;;;;;;;;;;;;;;;3028:97:::0;:::o;3975:129::-;2595:5;;;;;;;;;;2581:19;;:10;:19;;;2573:45;;;;;;;;;;;;:::i;:::-;;;;;;;;;4050:10:::1;4036:61;;;4080:1;4083::::0;4086:10:::1;:8;:10::i;:::-;4036:61;;;;;;;;:::i;:::-;;;;;;;;3975:129::o:0;1202:36::-;;;;:::o;1482:69::-;;;;;;;;;;;;;:::o;1244:36::-;;;;:::o;1168:28::-;;;;:::o;1026:29::-;;;;:::o;1771:76::-;;;;;;;;;;;;;:::o;1670:75::-;;;;;;;;;;;;;:::o;1981:82::-;;;;;;;;;;;;;:::o;1371:68::-;;;;;;;;;;;;;:::o;1132:30::-;;;;:::o;7439:299::-;7482:7;7506:31;7562:16;;;;;;;;;;;7506:73;;7597:9;7613;:25;;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7594:46;;;;;;7665:8;7657:5;:16;;;;:::i;:::-;7642:32;;;;7439:299;:::o;4653:239::-;4763:7;4879:9;4864:12;4853:23;;:8;:23;;;;:::i;:::-;:35;;;;:::i;:::-;4838:51;;4653:239;;;;;:::o;7:77:23:-;44:7;73:5;62:16;;7:77;;;:::o;90:180::-;138:77;135:1;128:88;235:4;232:1;225:15;259:4;256:1;249:15;276:191;316:3;335:20;353:1;335:20;:::i;:::-;330:25;;369:20;387:1;369:20;:::i;:::-;364:25;;412:1;409;405:9;398:16;;433:3;430:1;427:10;424:36;;;440:18;;:::i;:::-;424:36;276:191;;;;:::o;473:410::-;513:7;536:20;554:1;536:20;:::i;:::-;531:25;;570:20;588:1;570:20;:::i;:::-;565:25;;625:1;622;618:9;647:30;665:11;647:30;:::i;:::-;636:41;;826:1;817:7;813:15;810:1;807:22;787:1;780:9;760:83;737:139;;856:18;;:::i;:::-;737:139;521:362;473:410;;;;:::o;889:180::-;937:77;934:1;927:88;1034:4;1031:1;1024:15;1058:4;1055:1;1048:15;1075:185;1115:1;1132:20;1150:1;1132:20;:::i;:::-;1127:25;;1166:20;1184:1;1166:20;:::i;:::-;1161:25;;1205:1;1195:35;;1210:18;;:::i;:::-;1195:35;1252:1;1249;1245:9;1240:14;;1075:185;;;;:::o;1266:126::-;1303:7;1343:42;1336:5;1332:54;1321:65;;1266:126;;;:::o;1398:96::-;1435:7;1464:24;1482:5;1464:24;:::i;:::-;1453:35;;1398:96;;;:::o;1500:118::-;1587:24;1605:5;1587:24;:::i;:::-;1582:3;1575:37;1500:118;;:::o;1624:222::-;1717:4;1755:2;1744:9;1740:18;1732:26;;1768:71;1836:1;1825:9;1821:17;1812:6;1768:71;:::i;:::-;1624:222;;;;:::o;1852:118::-;1939:24;1957:5;1939:24;:::i;:::-;1934:3;1927:37;1852:118;;:::o;1976:222::-;2069:4;2107:2;2096:9;2092:18;2084:26;;2120:71;2188:1;2177:9;2173:17;2164:6;2120:71;:::i;:::-;1976:222;;;;:::o;2204:75::-;2237:6;2270:2;2264:9;2254:19;;2204:75;:::o;2285:117::-;2394:1;2391;2384:12;2408:117;2517:1;2514;2507:12;2531:117;2640:1;2637;2630:12;2654:117;2763:1;2760;2753:12;2777:102;2818:6;2869:2;2865:7;2860:2;2853:5;2849:14;2845:28;2835:38;;2777:102;;;:::o;2885:180::-;2933:77;2930:1;2923:88;3030:4;3027:1;3020:15;3054:4;3051:1;3044:15;3071:281;3154:27;3176:4;3154:27;:::i;:::-;3146:6;3142:40;3284:6;3272:10;3269:22;3248:18;3236:10;3233:34;3230:62;3227:88;;;3295:18;;:::i;:::-;3227:88;3335:10;3331:2;3324:22;3114:238;3071:281;;:::o;3358:129::-;3392:6;3419:20;;:::i;:::-;3409:30;;3448:33;3476:4;3468:6;3448:33;:::i;:::-;3358:129;;;:::o;3493:308::-;3555:4;3645:18;3637:6;3634:30;3631:56;;;3667:18;;:::i;:::-;3631:56;3705:29;3727:6;3705:29;:::i;:::-;3697:37;;3789:4;3783;3779:15;3771:23;;3493:308;;;:::o;3807:146::-;3904:6;3899:3;3894;3881:30;3945:1;3936:6;3931:3;3927:16;3920:27;3807:146;;;:::o;3959:425::-;4037:5;4062:66;4078:49;4120:6;4078:49;:::i;:::-;4062:66;:::i;:::-;4053:75;;4151:6;4144:5;4137:21;4189:4;4182:5;4178:16;4227:3;4218:6;4213:3;4209:16;4206:25;4203:112;;;4234:79;;:::i;:::-;4203:112;4324:54;4371:6;4366:3;4361;4324:54;:::i;:::-;4043:341;3959:425;;;;;:::o;4404:340::-;4460:5;4509:3;4502:4;4494:6;4490:17;4486:27;4476:122;;4517:79;;:::i;:::-;4476:122;4634:6;4621:20;4659:79;4734:3;4726:6;4719:4;4711:6;4707:17;4659:79;:::i;:::-;4650:88;;4466:278;4404:340;;;;:::o;4750:122::-;4823:24;4841:5;4823:24;:::i;:::-;4816:5;4813:35;4803:63;;4862:1;4859;4852:12;4803:63;4750:122;:::o;4878:139::-;4924:5;4962:6;4949:20;4940:29;;4978:33;5005:5;4978:33;:::i;:::-;4878:139;;;;:::o;5023:654::-;5101:6;5109;5158:2;5146:9;5137:7;5133:23;5129:32;5126:119;;;5164:79;;:::i;:::-;5126:119;5312:1;5301:9;5297:17;5284:31;5342:18;5334:6;5331:30;5328:117;;;5364:79;;:::i;:::-;5328:117;5469:63;5524:7;5515:6;5504:9;5500:22;5469:63;:::i;:::-;5459:73;;5255:287;5581:2;5607:53;5652:7;5643:6;5632:9;5628:22;5607:53;:::i;:::-;5597:63;;5552:118;5023:654;;;;;:::o;5683:122::-;5756:24;5774:5;5756:24;:::i;:::-;5749:5;5746:35;5736:63;;5795:1;5792;5785:12;5736:63;5683:122;:::o;5811:139::-;5857:5;5895:6;5882:20;5873:29;;5911:33;5938:5;5911:33;:::i;:::-;5811:139;;;;:::o;5956:474::-;6024:6;6032;6081:2;6069:9;6060:7;6056:23;6052:32;6049:119;;;6087:79;;:::i;:::-;6049:119;6207:1;6232:53;6277:7;6268:6;6257:9;6253:22;6232:53;:::i;:::-;6222:63;;6178:117;6334:2;6360:53;6405:7;6396:6;6385:9;6381:22;6360:53;:::i;:::-;6350:63;;6305:118;5956:474;;;;;:::o;6436:90::-;6470:7;6513:5;6506:13;6499:21;6488:32;;6436:90;;;:::o;6532:109::-;6613:21;6628:5;6613:21;:::i;:::-;6608:3;6601:34;6532:109;;:::o;6647:210::-;6734:4;6772:2;6761:9;6757:18;6749:26;;6785:65;6847:1;6836:9;6832:17;6823:6;6785:65;:::i;:::-;6647:210;;;;:::o;6863:329::-;6922:6;6971:2;6959:9;6950:7;6946:23;6942:32;6939:119;;;6977:79;;:::i;:::-;6939:119;7097:1;7122:53;7167:7;7158:6;7147:9;7143:22;7122:53;:::i;:::-;7112:63;;7068:117;6863:329;;;;:::o;7198:509::-;7267:6;7316:2;7304:9;7295:7;7291:23;7287:32;7284:119;;;7322:79;;:::i;:::-;7284:119;7470:1;7459:9;7455:17;7442:31;7500:18;7492:6;7489:30;7486:117;;;7522:79;;:::i;:::-;7486:117;7627:63;7682:7;7673:6;7662:9;7658:22;7627:63;:::i;:::-;7617:73;;7413:287;7198:509;;;;:::o;7713:99::-;7765:6;7799:5;7793:12;7783:22;;7713:99;;;:::o;7818:169::-;7902:11;7936:6;7931:3;7924:19;7976:4;7971:3;7967:14;7952:29;;7818:169;;;;:::o;7993:246::-;8074:1;8084:113;8098:6;8095:1;8092:13;8084:113;;;8183:1;8178:3;8174:11;8168:18;8164:1;8159:3;8155:11;8148:39;8120:2;8117:1;8113:10;8108:15;;8084:113;;;8231:1;8222:6;8217:3;8213:16;8206:27;8055:184;7993:246;;;:::o;8245:377::-;8333:3;8361:39;8394:5;8361:39;:::i;:::-;8416:71;8480:6;8475:3;8416:71;:::i;:::-;8409:78;;8496:65;8554:6;8549:3;8542:4;8535:5;8531:16;8496:65;:::i;:::-;8586:29;8608:6;8586:29;:::i;:::-;8581:3;8577:39;8570:46;;8337:285;8245:377;;;;:::o;8628:313::-;8741:4;8779:2;8768:9;8764:18;8756:26;;8828:9;8822:4;8818:20;8814:1;8803:9;8799:17;8792:47;8856:78;8929:4;8920:6;8856:78;:::i;:::-;8848:86;;8628:313;;;;:::o;8947:329::-;9006:6;9055:2;9043:9;9034:7;9030:23;9026:32;9023:119;;;9061:79;;:::i;:::-;9023:119;9181:1;9206:53;9251:7;9242:6;9231:9;9227:22;9206:53;:::i;:::-;9196:63;;9152:117;8947:329;;;;:::o;9282:163::-;9422:15;9418:1;9410:6;9406:14;9399:39;9282:163;:::o;9451:366::-;9593:3;9614:67;9678:2;9673:3;9614:67;:::i;:::-;9607:74;;9690:93;9779:3;9690:93;:::i;:::-;9808:2;9803:3;9799:12;9792:19;;9451:366;;;:::o;9823:419::-;9989:4;10027:2;10016:9;10012:18;10004:26;;10076:9;10070:4;10066:20;10062:1;10051:9;10047:17;10040:47;10104:131;10230:4;10104:131;:::i;:::-;10096:139;;9823:419;;;:::o;10248:85::-;10293:7;10322:5;10311:16;;10248:85;;;:::o;10339:60::-;10367:3;10388:5;10381:12;;10339:60;;;:::o;10405:158::-;10463:9;10496:61;10514:42;10523:32;10549:5;10523:32;:::i;:::-;10514:42;:::i;:::-;10496:61;:::i;:::-;10483:74;;10405:158;;;:::o;10569:147::-;10664:45;10703:5;10664:45;:::i;:::-;10659:3;10652:58;10569:147;;:::o;10722:660::-;10927:4;10965:3;10954:9;10950:19;10942:27;;11015:9;11009:4;11005:20;11001:1;10990:9;10986:17;10979:47;11043:78;11116:4;11107:6;11043:78;:::i;:::-;11035:86;;11131:72;11199:2;11188:9;11184:18;11175:6;11131:72;:::i;:::-;11213:80;11289:2;11278:9;11274:18;11265:6;11213:80;:::i;:::-;11303:72;11371:2;11360:9;11356:18;11347:6;11303:72;:::i;:::-;10722:660;;;;;;;:::o;11388:122::-;11461:24;11479:5;11461:24;:::i;:::-;11454:5;11451:35;11441:63;;11500:1;11497;11490:12;11441:63;11388:122;:::o;11516:143::-;11573:5;11604:6;11598:13;11589:22;;11620:33;11647:5;11620:33;:::i;:::-;11516:143;;;;:::o;11665:90::-;11700:7;11743:5;11740:1;11729:20;11718:31;;11665:90;;;:::o;11761:118::-;11832:22;11848:5;11832:22;:::i;:::-;11825:5;11822:33;11812:61;;11869:1;11866;11859:12;11812:61;11761:118;:::o;11885:139::-;11940:5;11971:6;11965:13;11956:22;;11987:31;12012:5;11987:31;:::i;:::-;11885:139;;;;:::o;12030:89::-;12066:7;12106:6;12099:5;12095:18;12084:29;;12030:89;;;:::o;12125:120::-;12197:23;12214:5;12197:23;:::i;:::-;12190:5;12187:34;12177:62;;12235:1;12232;12225:12;12177:62;12125:120;:::o;12251:141::-;12307:5;12338:6;12332:13;12323:22;;12354:32;12380:5;12354:32;:::i;:::-;12251:141;;;;:::o;12398:86::-;12433:7;12473:4;12466:5;12462:16;12451:27;;12398:86;;;:::o;12490:118::-;12561:22;12577:5;12561:22;:::i;:::-;12554:5;12551:33;12541:61;;12598:1;12595;12588:12;12541:61;12490:118;:::o;12614:139::-;12669:5;12700:6;12694:13;12685:22;;12716:31;12741:5;12716:31;:::i;:::-;12614:139;;;;:::o;12759:116::-;12829:21;12844:5;12829:21;:::i;:::-;12822:5;12819:32;12809:60;;12865:1;12862;12855:12;12809:60;12759:116;:::o;12881:137::-;12935:5;12966:6;12960:13;12951:22;;12982:30;13006:5;12982:30;:::i;:::-;12881:137;;;;:::o;13024:1271::-;13138:6;13146;13154;13162;13170;13178;13186;13235:3;13223:9;13214:7;13210:23;13206:33;13203:120;;;13242:79;;:::i;:::-;13203:120;13362:1;13387:64;13443:7;13434:6;13423:9;13419:22;13387:64;:::i;:::-;13377:74;;13333:128;13500:2;13526:62;13580:7;13571:6;13560:9;13556:22;13526:62;:::i;:::-;13516:72;;13471:127;13637:2;13663:63;13718:7;13709:6;13698:9;13694:22;13663:63;:::i;:::-;13653:73;;13608:128;13775:2;13801:63;13856:7;13847:6;13836:9;13832:22;13801:63;:::i;:::-;13791:73;;13746:128;13913:3;13940:63;13995:7;13986:6;13975:9;13971:22;13940:63;:::i;:::-;13930:73;;13884:129;14052:3;14079:62;14133:7;14124:6;14113:9;14109:22;14079:62;:::i;:::-;14069:72;;14023:128;14190:3;14217:61;14270:7;14261:6;14250:9;14246:22;14217:61;:::i;:::-;14207:71;;14161:127;13024:1271;;;;;;;;;;:::o;14301:118::-;14338:7;14378:34;14371:5;14367:46;14356:57;;14301:118;;;:::o;14425:122::-;14498:24;14516:5;14498:24;:::i;:::-;14491:5;14488:35;14478:63;;14537:1;14534;14527:12;14478:63;14425:122;:::o;14553:143::-;14610:5;14641:6;14635:13;14626:22;;14657:33;14684:5;14657:33;:::i;:::-;14553:143;;;;:::o;14702:351::-;14772:6;14821:2;14809:9;14800:7;14796:23;14792:32;14789:119;;;14827:79;;:::i;:::-;14789:119;14947:1;14972:64;15028:7;15019:6;15008:9;15004:22;14972:64;:::i;:::-;14962:74;;14918:128;14702:351;;;;:::o;15059:194::-;15099:4;15119:20;15137:1;15119:20;:::i;:::-;15114:25;;15153:20;15171:1;15153:20;:::i;:::-;15148:25;;15197:1;15194;15190:9;15182:17;;15221:1;15215:4;15212:11;15209:37;;;15226:18;;:::i;:::-;15209:37;15059:194;;;;:::o;15259:170::-;15399:22;15395:1;15387:6;15383:14;15376:46;15259:170;:::o;15435:366::-;15577:3;15598:67;15662:2;15657:3;15598:67;:::i;:::-;15591:74;;15674:93;15763:3;15674:93;:::i;:::-;15792:2;15787:3;15783:12;15776:19;;15435:366;;;:::o;15807:419::-;15973:4;16011:2;16000:9;15996:18;15988:26;;16060:9;16054:4;16050:20;16046:1;16035:9;16031:17;16024:47;16088:131;16214:4;16088:131;:::i;:::-;16080:139;;15807:419;;;:::o;16232:180::-;16280:77;16277:1;16270:88;16377:4;16374:1;16367:15;16401:4;16398:1;16391:15;16418:320;16462:6;16499:1;16493:4;16489:12;16479:22;;16546:1;16540:4;16536:12;16567:18;16557:81;;16623:4;16615:6;16611:17;16601:27;;16557:81;16685:2;16677:6;16674:14;16654:18;16651:38;16648:84;;16704:18;;:::i;:::-;16648:84;16469:269;16418:320;;;:::o;16744:168::-;16884:20;16880:1;16872:6;16868:14;16861:44;16744:168;:::o;16918:366::-;17060:3;17081:67;17145:2;17140:3;17081:67;:::i;:::-;17074:74;;17157:93;17246:3;17157:93;:::i;:::-;17275:2;17270:3;17266:12;17259:19;;16918:366;;;:::o;17290:766::-;17548:4;17586:3;17575:9;17571:19;17563:27;;17636:9;17630:4;17626:20;17622:1;17611:9;17607:17;17600:47;17664:131;17790:4;17664:131;:::i;:::-;17656:139;;17805:72;17873:2;17862:9;17858:18;17849:6;17805:72;:::i;:::-;17887:80;17963:2;17952:9;17948:18;17939:6;17887:80;:::i;:::-;17977:72;18045:2;18034:9;18030:18;18021:6;17977:72;:::i;:::-;17290:766;;;;;;:::o;18062:164::-;18202:16;18198:1;18190:6;18186:14;18179:40;18062:164;:::o;18232:366::-;18374:3;18395:67;18459:2;18454:3;18395:67;:::i;:::-;18388:74;;18471:93;18560:3;18471:93;:::i;:::-;18589:2;18584:3;18580:12;18573:19;;18232:366;;;:::o;18604:782::-;18870:4;18908:3;18897:9;18893:19;18885:27;;18958:9;18952:4;18948:20;18944:1;18933:9;18929:17;18922:47;18986:131;19112:4;18986:131;:::i;:::-;18978:139;;19127:80;19203:2;19192:9;19188:18;19179:6;19127:80;:::i;:::-;19217;19293:2;19282:9;19278:18;19269:6;19217:80;:::i;:::-;19307:72;19375:2;19364:9;19360:18;19351:6;19307:72;:::i;:::-;18604:782;;;;;;:::o;19392:105::-;19428:7;19468:22;19461:5;19457:34;19446:45;;19392:105;;;:::o;19503:120::-;19575:23;19592:5;19575:23;:::i;:::-;19568:5;19565:34;19555:62;;19613:1;19610;19603:12;19555:62;19503:120;:::o;19629:141::-;19685:5;19716:6;19710:13;19701:22;;19732:32;19758:5;19732:32;:::i;:::-;19629:141;;;;:::o;19776:76::-;19812:7;19841:5;19830:16;;19776:76;;;:::o;19858:120::-;19930:23;19947:5;19930:23;:::i;:::-;19923:5;19920:34;19910:62;;19968:1;19965;19958:12;19910:62;19858:120;:::o;19984:141::-;20040:5;20071:6;20065:13;20056:22;;20087:32;20113:5;20087:32;:::i;:::-;19984:141;;;;:::o;20131:143::-;20188:5;20219:6;20213:13;20204:22;;20235:33;20262:5;20235:33;:::i;:::-;20131:143;;;;:::o;20280:971::-;20383:6;20391;20399;20407;20415;20464:3;20452:9;20443:7;20439:23;20435:33;20432:120;;;20471:79;;:::i;:::-;20432:120;20591:1;20616:63;20671:7;20662:6;20651:9;20647:22;20616:63;:::i;:::-;20606:73;;20562:127;20728:2;20754:63;20809:7;20800:6;20789:9;20785:22;20754:63;:::i;:::-;20744:73;;20699:128;20866:2;20892:64;20948:7;20939:6;20928:9;20924:22;20892:64;:::i;:::-;20882:74;;20837:129;21005:2;21031:64;21087:7;21078:6;21067:9;21063:22;21031:64;:::i;:::-;21021:74;;20976:129;21144:3;21171:63;21226:7;21217:6;21206:9;21202:22;21171:63;:::i;:::-;21161:73;;21115:129;20280:971;;;;;;;;:::o;21257:556::-;21296:7;21319:19;21336:1;21319:19;:::i;:::-;21314:24;;21352:19;21369:1;21352:19;:::i;:::-;21347:24;;21406:1;21403;21399:9;21428:29;21445:11;21428:29;:::i;:::-;21417:40;;21515:66;21512:1;21509:73;21505:1;21502;21498:9;21494:89;21491:115;;;21586:18;;:::i;:::-;21491:115;21756:1;21747:7;21742:16;21739:1;21736:23;21716:1;21709:9;21689:84;21666:140;;21786:18;;:::i;:::-;21666:140;21304:509;21257:556;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1523400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"POLToken()": "2596",
								"aaveLendingPoolAddressesProvider()": "2576",
								"adjustTimeframe(uint256)": "infinite",
								"checkLiquidity(uint256,address)": "infinite",
								"checkPrice()": "infinite",
								"convertAllToPOL()": "infinite",
								"currentActivity()": "infinite",
								"dexRouters(string)": "infinite",
								"disableTrading()": "26716",
								"gasCostMultiplier()": "2514",
								"initialDeposit()": "2514",
								"initiateTrade(string,uint256)": "infinite",
								"kill()": "infinite",
								"lossThreshold()": "2492",
								"maticBalance()": "2494",
								"nextLogTime()": "2471",
								"owner()": "2573",
								"priceFeedAddress()": "2619",
								"profitThreshold()": "2535",
								"quickSwapRouter()": "2552",
								"setController(address)": "26926",
								"stablecoinBalance()": "2492",
								"tradingEnabled()": "2606",
								"trailingStopLoss()": "2470",
								"uniswapPositionManager()": "2574",
								"uniswapRouter()": "2619",
								"usdcToken()": "2555",
								"usdtToken()": "2619",
								"withdrawInGwei(uint256)": "infinite"
							},
							"internal": {
								"calculateAmountOut(uint256,uint160,uint256)": "infinite",
								"calculateEMA(uint256[] memory,uint256)": "infinite",
								"calculateFibonacci(uint256,uint256)": "infinite",
								"calculateMACD(uint256[] memory)": "infinite",
								"calculateRSI(uint256[] memory)": "infinite",
								"getPrice()": "infinite",
								"logCurrentActivity()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 944,
									"end": 7753,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 944,
									"end": 7753,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 944,
									"end": 7753,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1237,
									"end": 1238,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1202,
									"end": 1238,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1202,
									"end": 1238,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1278,
									"end": 1280,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 1244,
									"end": 1280,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1244,
									"end": 1280,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1318,
									"end": 1364,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1318,
									"end": 1364,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1318,
									"end": 1364,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1318,
									"end": 1364,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1318,
									"end": 1364,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1318,
									"end": 1364,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1318,
									"end": 1364,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1318,
									"end": 1364,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1318,
									"end": 1364,
									"name": "PUSH",
									"source": 0,
									"value": "C"
								},
								{
									"begin": 1318,
									"end": 1364,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1318,
									"end": 1364,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1318,
									"end": 1364,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1318,
									"end": 1364,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1318,
									"end": 1364,
									"name": "PUSH",
									"source": 0,
									"value": "496E697469616C697A696E670000000000000000000000000000000000000000"
								},
								{
									"begin": 1318,
									"end": 1364,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1318,
									"end": 1364,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1318,
									"end": 1364,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1318,
									"end": 1364,
									"name": "PUSH",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1318,
									"end": 1364,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1318,
									"end": 1364,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1318,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1318,
									"end": 1364,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1318,
									"end": 1364,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1318,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1318,
									"end": 1364,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1318,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1318,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1318,
									"end": 1364,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1397,
									"end": 1439,
									"name": "PUSH",
									"source": 0,
									"value": "22B21BEDDEF74FE62F031D2C5C8F7A9F8A4B304D"
								},
								{
									"begin": 1371,
									"end": 1439,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 1371,
									"end": 1439,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1371,
									"end": 1439,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 1371,
									"end": 1439,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 1371,
									"end": 1439,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1371,
									"end": 1439,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1371,
									"end": 1439,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1371,
									"end": 1439,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1371,
									"end": 1439,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1371,
									"end": 1439,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 1371,
									"end": 1439,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1371,
									"end": 1439,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1371,
									"end": 1439,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1371,
									"end": 1439,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1371,
									"end": 1439,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1371,
									"end": 1439,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1371,
									"end": 1439,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1371,
									"end": 1439,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1371,
									"end": 1439,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1371,
									"end": 1439,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1509,
									"end": 1551,
									"name": "PUSH",
									"source": 0,
									"value": "1E4A5963ABFD975D8C9021CE480B42188849D41D"
								},
								{
									"begin": 1482,
									"end": 1551,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 1482,
									"end": 1551,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1482,
									"end": 1551,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 1482,
									"end": 1551,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 1482,
									"end": 1551,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1482,
									"end": 1551,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1482,
									"end": 1551,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1482,
									"end": 1551,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1482,
									"end": 1551,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1482,
									"end": 1551,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 1482,
									"end": 1551,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1482,
									"end": 1551,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1482,
									"end": 1551,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1482,
									"end": 1551,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1482,
									"end": 1551,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1482,
									"end": 1551,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1482,
									"end": 1551,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1482,
									"end": 1551,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1482,
									"end": 1551,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1482,
									"end": 1551,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1603,
									"end": 1645,
									"name": "PUSH",
									"source": 0,
									"value": "A8CE8AEE21BC2A48A5EF670AFCC9274C7BBBC035"
								},
								{
									"begin": 1576,
									"end": 1645,
									"name": "PUSH",
									"source": 0,
									"value": "C"
								},
								{
									"begin": 1576,
									"end": 1645,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1576,
									"end": 1645,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 1576,
									"end": 1645,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 1576,
									"end": 1645,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1576,
									"end": 1645,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1576,
									"end": 1645,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1576,
									"end": 1645,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1576,
									"end": 1645,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1576,
									"end": 1645,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 1576,
									"end": 1645,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1576,
									"end": 1645,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1576,
									"end": 1645,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1576,
									"end": 1645,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1576,
									"end": 1645,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1576,
									"end": 1645,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1576,
									"end": 1645,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1576,
									"end": 1645,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1576,
									"end": 1645,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1576,
									"end": 1645,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1703,
									"end": 1745,
									"name": "PUSH",
									"source": 0,
									"value": "1E7E4C855520B2106320952A570A3E5E3E618101"
								},
								{
									"begin": 1670,
									"end": 1745,
									"name": "PUSH",
									"source": 0,
									"value": "D"
								},
								{
									"begin": 1670,
									"end": 1745,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1670,
									"end": 1745,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 1670,
									"end": 1745,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 1670,
									"end": 1745,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1670,
									"end": 1745,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1670,
									"end": 1745,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1670,
									"end": 1745,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1670,
									"end": 1745,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1670,
									"end": 1745,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 1670,
									"end": 1745,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1670,
									"end": 1745,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1670,
									"end": 1745,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1670,
									"end": 1745,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1670,
									"end": 1745,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1670,
									"end": 1745,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1670,
									"end": 1745,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1670,
									"end": 1745,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1670,
									"end": 1745,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1670,
									"end": 1745,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1805,
									"end": 1847,
									"name": "PUSH",
									"source": 0,
									"value": "5E988C11A4F92155C30D9FB69ED75597F712B113"
								},
								{
									"begin": 1771,
									"end": 1847,
									"name": "PUSH",
									"source": 0,
									"value": "E"
								},
								{
									"begin": 1771,
									"end": 1847,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1771,
									"end": 1847,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 1771,
									"end": 1847,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 1771,
									"end": 1847,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1771,
									"end": 1847,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1771,
									"end": 1847,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1771,
									"end": 1847,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1771,
									"end": 1847,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1771,
									"end": 1847,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 1771,
									"end": 1847,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1771,
									"end": 1847,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1771,
									"end": 1847,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1771,
									"end": 1847,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1771,
									"end": 1847,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1771,
									"end": 1847,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1771,
									"end": 1847,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1771,
									"end": 1847,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1771,
									"end": 1847,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1771,
									"end": 1847,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1908,
									"end": 1950,
									"name": "PUSH",
									"source": 0,
									"value": "1E7E4C855520B2106320952A570A3E5E3E618101"
								},
								{
									"begin": 1877,
									"end": 1950,
									"name": "PUSH",
									"source": 0,
									"value": "F"
								},
								{
									"begin": 1877,
									"end": 1950,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1877,
									"end": 1950,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 1877,
									"end": 1950,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 1877,
									"end": 1950,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1877,
									"end": 1950,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1877,
									"end": 1950,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1877,
									"end": 1950,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1877,
									"end": 1950,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1877,
									"end": 1950,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 1877,
									"end": 1950,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1877,
									"end": 1950,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1877,
									"end": 1950,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1877,
									"end": 1950,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1877,
									"end": 1950,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1877,
									"end": 1950,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1877,
									"end": 1950,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1877,
									"end": 1950,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1877,
									"end": 1950,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1877,
									"end": 1950,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2021,
									"end": 2063,
									"name": "PUSH",
									"source": 0,
									"value": "C36442B4A4522E871399CD717ABDD847AB11FE88"
								},
								{
									"begin": 1981,
									"end": 2063,
									"name": "PUSH",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1981,
									"end": 2063,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1981,
									"end": 2063,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 1981,
									"end": 2063,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 1981,
									"end": 2063,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1981,
									"end": 2063,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1981,
									"end": 2063,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1981,
									"end": 2063,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1981,
									"end": 2063,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1981,
									"end": 2063,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 1981,
									"end": 2063,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1981,
									"end": 2063,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1981,
									"end": 2063,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1981,
									"end": 2063,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1981,
									"end": 2063,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1981,
									"end": 2063,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1981,
									"end": 2063,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1981,
									"end": 2063,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1981,
									"end": 2063,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1981,
									"end": 2063,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2149,
									"end": 2191,
									"name": "PUSH",
									"source": 0,
									"value": "D05E3E715D945B59290DF0AE8EF85C1BDB684744"
								},
								{
									"begin": 2099,
									"end": 2191,
									"name": "PUSH",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2099,
									"end": 2191,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2099,
									"end": 2191,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2099,
									"end": 2191,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2099,
									"end": 2191,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2099,
									"end": 2191,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2099,
									"end": 2191,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2099,
									"end": 2191,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2099,
									"end": 2191,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2099,
									"end": 2191,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2099,
									"end": 2191,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2099,
									"end": 2191,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2099,
									"end": 2191,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2099,
									"end": 2191,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2099,
									"end": 2191,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2099,
									"end": 2191,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2099,
									"end": 2191,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2099,
									"end": 2191,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2099,
									"end": 2191,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2099,
									"end": 2191,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2752,
									"end": 3022,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 2752,
									"end": 3022,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2752,
									"end": 3022,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 2752,
									"end": 3022,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 2752,
									"end": 3022,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 2752,
									"end": 3022,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2752,
									"end": 3022,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2752,
									"end": 3022,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 2752,
									"end": 3022,
									"name": "tag",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 2752,
									"end": 3022,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2752,
									"end": 3022,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2784,
									"end": 2794,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 2776,
									"end": 2781,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2776,
									"end": 2781,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2776,
									"end": 2794,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2776,
									"end": 2794,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2776,
									"end": 2794,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2776,
									"end": 2794,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2776,
									"end": 2794,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2776,
									"end": 2794,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2776,
									"end": 2794,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2776,
									"end": 2794,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2776,
									"end": 2794,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2776,
									"end": 2794,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2776,
									"end": 2794,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2776,
									"end": 2794,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2776,
									"end": 2794,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2776,
									"end": 2794,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2776,
									"end": 2794,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2776,
									"end": 2794,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2776,
									"end": 2794,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2776,
									"end": 2794,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2830,
									"end": 2845,
									"name": "PUSH",
									"source": 0,
									"value": "D"
								},
								{
									"begin": 2830,
									"end": 2845,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2830,
									"end": 2845,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2830,
									"end": 2845,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2830,
									"end": 2845,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2830,
									"end": 2845,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2830,
									"end": 2845,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2830,
									"end": 2845,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2830,
									"end": 2845,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2830,
									"end": 2845,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2830,
									"end": 2845,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2804,
									"end": 2814,
									"name": "PUSH",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 2804,
									"end": 2827,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2804,
									"end": 2827,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2804,
									"end": 2827,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 2804,
									"end": 2827,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2804,
									"end": 2827,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2804,
									"end": 2827,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2804,
									"end": 2827,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 2804,
									"end": 2827,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2804,
									"end": 2827,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2804,
									"end": 2827,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2804,
									"end": 2827,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2804,
									"end": 2827,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2804,
									"end": 2827,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2804,
									"end": 2827,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2804,
									"end": 2827,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2804,
									"end": 2827,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2804,
									"end": 2827,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2804,
									"end": 2827,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2804,
									"end": 2827,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2804,
									"end": 2827,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2804,
									"end": 2827,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2804,
									"end": 2845,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2804,
									"end": 2845,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2804,
									"end": 2845,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2804,
									"end": 2845,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2804,
									"end": 2845,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2804,
									"end": 2845,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2804,
									"end": 2845,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2804,
									"end": 2845,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2804,
									"end": 2845,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2804,
									"end": 2845,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2804,
									"end": 2845,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2804,
									"end": 2845,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2804,
									"end": 2845,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2804,
									"end": 2845,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2804,
									"end": 2845,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2804,
									"end": 2845,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2804,
									"end": 2845,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2804,
									"end": 2845,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2872,
									"end": 2877,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2855,
									"end": 2869,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2855,
									"end": 2869,
									"name": "PUSH",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 2855,
									"end": 2877,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2855,
									"end": 2877,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2855,
									"end": 2877,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2855,
									"end": 2877,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2855,
									"end": 2877,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2855,
									"end": 2877,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 2855,
									"end": 2877,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2855,
									"end": 2877,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2855,
									"end": 2877,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2855,
									"end": 2877,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2855,
									"end": 2877,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2855,
									"end": 2877,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 2855,
									"end": 2877,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 2855,
									"end": 2877,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2855,
									"end": 2877,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2855,
									"end": 2877,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2855,
									"end": 2877,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2855,
									"end": 2877,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2905,
									"end": 2908,
									"name": "PUSH",
									"source": 0,
									"value": "6E"
								},
								{
									"begin": 2887,
									"end": 2902,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 2887,
									"end": 2908,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2887,
									"end": 2908,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2887,
									"end": 2908,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2887,
									"end": 2908,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2948,
									"end": 2950,
									"name": "PUSH",
									"source": 0,
									"value": "55"
								},
								{
									"begin": 2932,
									"end": 2945,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 2932,
									"end": 2950,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2932,
									"end": 2950,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2932,
									"end": 2950,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2932,
									"end": 2950,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3000,
									"end": 3015,
									"name": "TIMESTAMP",
									"source": 0
								},
								{
									"begin": 2986,
									"end": 2997,
									"name": "PUSH",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 2986,
									"end": 3015,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2986,
									"end": 3015,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2986,
									"end": 3015,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2986,
									"end": 3015,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 944,
									"end": 7753,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 944,
									"end": 7753,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 23,
									"value": "9"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 23
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 23,
									"value": "10"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 23,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 23
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 23,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 23,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 23
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 23,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 23
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 23,
									"value": "11"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 23,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 23
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 23,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 23,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 23
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 23,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 23
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 23,
									"value": "12"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 23,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 23
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 23,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 23
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 23
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "37"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 23
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 23,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 23
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 23,
									"value": "37"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 23,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 23
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 23
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "38"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 23
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "39"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "11"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 23,
									"value": "39"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 23,
									"value": "38"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 23,
									"value": "13"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 23
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 23,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 23
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 23,
									"value": "14"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 23,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 23,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 23
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 23
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 23,
									"value": "15"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 23
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 23
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 23,
									"value": "16"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 23,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 23
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 23
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "44"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 23,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "15"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 23,
									"value": "44"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "45"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 23
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 23
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "15"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 23,
									"value": "45"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 23
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 23
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 23
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 23
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 23
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 23
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 23
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 23
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 23
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 23
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 23
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 23
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 23
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 23
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 23,
									"value": "17"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 23,
									"value": "18"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 23,
									"value": "19"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "49"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "50"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "51"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 23
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "17"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 23,
									"value": "51"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "18"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 23,
									"value": "50"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "17"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 23,
									"value": "49"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 23,
									"value": "20"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 23,
									"value": "21"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "54"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 23
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "19"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 23,
									"value": "54"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "55"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "56"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "20"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 23,
									"value": "56"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 23
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 23
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 23
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "16"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 23,
									"value": "55"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 23
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 23,
									"value": "22"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 23,
									"value": "23"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "59"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "22"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 23,
									"value": "59"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "60"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 23
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 23
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "21"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 23,
									"value": "60"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 23,
									"value": "24"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 23,
									"value": "62"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 23
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 23
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "64"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 23
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "65"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "23"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 23,
									"value": "65"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 23,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "62"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 23,
									"value": "64"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 23,
									"value": "25"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 23,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 23
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 23
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "67"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 23
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "68"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "13"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 23,
									"value": "68"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "69"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 23
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "14"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 23,
									"value": "69"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 23,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 23
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 23
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 23
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "70"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 23
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 23,
									"value": "70"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "71"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "72"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 23
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "14"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 23,
									"value": "72"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 23
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "24"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 23,
									"value": "71"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 23,
									"value": "67"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 23,
									"value": "26"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 23
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 23
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 23,
									"value": "27"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "75"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 23
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 23
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 23,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 23
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "26"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 23,
									"value": "75"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 23
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 23
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 23
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 23
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 23
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 23,
									"value": "28"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "77"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 23
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 23
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "27"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 23,
									"value": "77"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 23,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 23
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 23
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 23
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 23,
									"value": "2"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "79"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "9"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 23,
									"value": "79"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 23,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 23
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 23
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "80"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 23
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "81"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "10"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 23,
									"value": "81"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 23,
									"value": "80"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "82"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 23
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "12"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 23,
									"value": "82"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "83"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 23
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "25"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 23,
									"value": "83"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 23,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 23,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 23
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 23
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 23,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 23
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "85"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 23
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 23
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 23
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "86"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 23
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 23
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 23
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 23,
									"value": "86"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "87"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 23
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "28"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 23,
									"value": "87"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 23
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 23
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "84"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 23,
									"value": "85"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 23,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 23
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 23
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 23
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "88"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 23
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "13"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 23,
									"value": "88"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 23,
									"value": "89"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 23
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 23
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "91"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 23
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 23
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 23
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 23
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 23
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 23,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 23,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 23
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 23
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 23,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "89"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 23,
									"value": "91"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 23
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 23
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 23
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 23
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "92"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 23
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 23
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 23
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 23
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "93"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 23,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 23
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 23
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "27"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 23,
									"value": "93"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 23
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 23
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 23,
									"value": "92"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 23,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 23,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 23
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 23
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 23
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 23
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 23,
									"value": "84"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 5234,
									"end": 5382,
									"name": "tag",
									"source": 23,
									"value": "29"
								},
								{
									"begin": 5234,
									"end": 5382,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 5336,
									"end": 5347,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 5373,
									"end": 5376,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 5358,
									"end": 5376,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 5358,
									"end": 5376,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 5234,
									"end": 5382,
									"name": "SWAP3",
									"source": 23
								},
								{
									"begin": 5234,
									"end": 5382,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 5234,
									"end": 5382,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 5234,
									"end": 5382,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 5234,
									"end": 5382,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 5388,
									"end": 5547,
									"name": "tag",
									"source": 23,
									"value": "30"
								},
								{
									"begin": 5388,
									"end": 5547,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 5528,
									"end": 5539,
									"name": "PUSH",
									"source": 23,
									"value": "517569636B537761700000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5524,
									"end": 5525,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 5516,
									"end": 5522,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 5512,
									"end": 5526,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 5505,
									"end": 5540,
									"name": "MSTORE",
									"source": 23
								},
								{
									"begin": 5388,
									"end": 5547,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 5388,
									"end": 5547,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 5553,
									"end": 5953,
									"name": "tag",
									"source": 23,
									"value": "31"
								},
								{
									"begin": 5553,
									"end": 5953,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 5713,
									"end": 5716,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 5734,
									"end": 5818,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "97"
								},
								{
									"begin": 5816,
									"end": 5817,
									"name": "PUSH",
									"source": 23,
									"value": "9"
								},
								{
									"begin": 5811,
									"end": 5814,
									"name": "DUP4",
									"source": 23
								},
								{
									"begin": 5734,
									"end": 5818,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "29"
								},
								{
									"begin": 5734,
									"end": 5818,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 5734,
									"end": 5818,
									"name": "tag",
									"source": 23,
									"value": "97"
								},
								{
									"begin": 5734,
									"end": 5818,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 5727,
									"end": 5818,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 5727,
									"end": 5818,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 5827,
									"end": 5920,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "98"
								},
								{
									"begin": 5916,
									"end": 5919,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 5827,
									"end": 5920,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "30"
								},
								{
									"begin": 5827,
									"end": 5920,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 5827,
									"end": 5920,
									"name": "tag",
									"source": 23,
									"value": "98"
								},
								{
									"begin": 5827,
									"end": 5920,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 5945,
									"end": 5946,
									"name": "PUSH",
									"source": 23,
									"value": "9"
								},
								{
									"begin": 5940,
									"end": 5943,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 5936,
									"end": 5947,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 5929,
									"end": 5947,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 5929,
									"end": 5947,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 5553,
									"end": 5953,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 5553,
									"end": 5953,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 5553,
									"end": 5953,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 5553,
									"end": 5953,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 5959,
									"end": 6340,
									"name": "tag",
									"source": 23,
									"value": "7"
								},
								{
									"begin": 5959,
									"end": 6340,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 6144,
									"end": 6147,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 6166,
									"end": 6314,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "100"
								},
								{
									"begin": 6310,
									"end": 6313,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 6166,
									"end": 6314,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "31"
								},
								{
									"begin": 6166,
									"end": 6314,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 6166,
									"end": 6314,
									"name": "tag",
									"source": 23,
									"value": "100"
								},
								{
									"begin": 6166,
									"end": 6314,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 6159,
									"end": 6314,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 6159,
									"end": 6314,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 6331,
									"end": 6334,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 6324,
									"end": 6334,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 6324,
									"end": 6334,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 5959,
									"end": 6340,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 5959,
									"end": 6340,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 5959,
									"end": 6340,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 5959,
									"end": 6340,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 944,
									"end": 7753,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 944,
									"end": 7753,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 944,
									"end": 7753,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 944,
									"end": 7753,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 944,
									"end": 7753,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 944,
									"end": 7753,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 944,
									"end": 7753,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 944,
									"end": 7753,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 944,
									"end": 7753,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220449b0f1b43c11ef172abf98154ebaca74aaeb32ca045a166e6cb450e31ad443a64736f6c63430008140033",
									".code": [
										{
											"begin": 944,
											"end": 7753,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "PUSH",
											"source": 0,
											"value": "869665E9"
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "PUSH",
											"source": 0,
											"value": "B3CE56A2"
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "PUSH",
											"source": 0,
											"value": "E189EB42"
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "PUSH",
											"source": 0,
											"value": "E189EB42"
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "PUSH",
											"source": 0,
											"value": "E5047B30"
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "PUSH",
											"source": 0,
											"value": "F1A107FE"
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "PUSH",
											"source": 0,
											"value": "F974821A"
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "PUSH",
											"source": 0,
											"value": "B3CE56A2"
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "PUSH",
											"source": 0,
											"value": "C0FC247F"
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "PUSH",
											"source": 0,
											"value": "E037F889"
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "PUSH",
											"source": 0,
											"value": "E0ABCA0B"
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "PUSH",
											"source": 0,
											"value": "92EEFE9B"
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "PUSH",
											"source": 0,
											"value": "92EEFE9B"
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "PUSH",
											"source": 0,
											"value": "9D8EF1E1"
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "PUSH",
											"source": 0,
											"value": "A30FB905"
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "PUSH",
											"source": 0,
											"value": "A98AD46C"
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "PUSH",
											"source": 0,
											"value": "869665E9"
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "PUSH",
											"source": 0,
											"value": "8FC3047D"
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "PUSH",
											"source": 0,
											"value": "41C0E1B5"
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "PUSH",
											"source": 0,
											"value": "5E7FFA67"
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "PUSH",
											"source": 0,
											"value": "5E7FFA67"
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "PUSH",
											"source": 0,
											"value": "64AABB9E"
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "PUSH",
											"source": 0,
											"value": "6D546CDD"
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "PUSH",
											"source": 0,
											"value": "735DE9F7"
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "PUSH",
											"source": 0,
											"value": "41C0E1B5"
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "PUSH",
											"source": 0,
											"value": "457F3CB0"
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "PUSH",
											"source": 0,
											"value": "4ADA218B"
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "PUSH",
											"source": 0,
											"value": "1BF41362"
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "PUSH",
											"source": 0,
											"value": "1BF41362"
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "PUSH",
											"source": 0,
											"value": "238F9B7A"
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "PUSH",
											"source": 0,
											"value": "26C403ED"
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "PUSH",
											"source": 0,
											"value": "3FB47A3B"
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "PUSH",
											"source": 0,
											"value": "11EAC855"
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "PUSH",
											"source": 0,
											"value": "1458D9D8"
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "PUSH",
											"source": 0,
											"value": "17700F01"
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3195,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3168,
											"end": 3182,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3168,
											"end": 3182,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3168,
											"end": 3195,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3168,
											"end": 3195,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3168,
											"end": 3195,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3168,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 3168,
											"end": 3195,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3168,
											"end": 3195,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3168,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 3168,
											"end": 3195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3168,
											"end": 3195,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 3168,
											"end": 3195,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3168,
											"end": 3195,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3168,
											"end": 3195,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3168,
											"end": 3195,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3168,
											"end": 3195,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3168,
											"end": 3195,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3168,
											"end": 3195,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3168,
											"end": 3195,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3240,
											"end": 3243,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 3234,
											"end": 3236,
											"name": "PUSH",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 3222,
											"end": 3231,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3222,
											"end": 3236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3222,
											"end": 3236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3222,
											"end": 3236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3222,
											"end": 3236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3222,
											"end": 3236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3222,
											"end": 3236,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3222,
											"end": 3236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3221,
											"end": 3243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3221,
											"end": 3243,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3221,
											"end": 3243,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3221,
											"end": 3243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 3221,
											"end": 3243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3221,
											"end": 3243,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3221,
											"end": 3243,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3205,
											"end": 3217,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3205,
											"end": 3217,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3205,
											"end": 3243,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3205,
											"end": 3243,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3205,
											"end": 3243,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3205,
											"end": 3243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 3205,
											"end": 3243,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3205,
											"end": 3243,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3205,
											"end": 3243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 3205,
											"end": 3243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3205,
											"end": 3243,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 3205,
											"end": 3243,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3205,
											"end": 3243,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3205,
											"end": 3243,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3205,
											"end": 3243,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3205,
											"end": 3243,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3205,
											"end": 3243,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3205,
											"end": 3243,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3205,
											"end": 3243,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3293,
											"end": 3296,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 3287,
											"end": 3289,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 3275,
											"end": 3284,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3275,
											"end": 3289,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 3275,
											"end": 3289,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3275,
											"end": 3289,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3275,
											"end": 3289,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3275,
											"end": 3289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3275,
											"end": 3289,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 3275,
											"end": 3289,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3274,
											"end": 3296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 3274,
											"end": 3296,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3274,
											"end": 3296,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3274,
											"end": 3296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 3274,
											"end": 3296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3274,
											"end": 3296,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 3274,
											"end": 3296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3253,
											"end": 3270,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3253,
											"end": 3270,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3253,
											"end": 3296,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3253,
											"end": 3296,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3253,
											"end": 3296,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3253,
											"end": 3296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 3253,
											"end": 3296,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3253,
											"end": 3296,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3253,
											"end": 3296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 3253,
											"end": 3296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3253,
											"end": 3296,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 3253,
											"end": 3296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3253,
											"end": 3296,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3253,
											"end": 3296,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3253,
											"end": 3296,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3253,
											"end": 3296,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3253,
											"end": 3296,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3253,
											"end": 3296,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3253,
											"end": 3296,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 944,
											"end": 7753,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1576,
											"end": 1645,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1576,
											"end": 1645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1576,
											"end": 1645,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1576,
											"end": 1645,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1576,
											"end": 1645,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1576,
											"end": 1645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1576,
											"end": 1645,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1576,
											"end": 1645,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1576,
											"end": 1645,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1576,
											"end": 1645,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1576,
											"end": 1645,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1576,
											"end": 1645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1576,
											"end": 1645,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1576,
											"end": 1645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1576,
											"end": 1645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1576,
											"end": 1645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1576,
											"end": 1645,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1576,
											"end": 1645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1576,
											"end": 1645,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1576,
											"end": 1645,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1576,
											"end": 1645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1576,
											"end": 1645,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1576,
											"end": 1645,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1576,
											"end": 1645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1576,
											"end": 1645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1576,
											"end": 1645,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1576,
											"end": 1645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1576,
											"end": 1645,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1576,
											"end": 1645,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1576,
											"end": 1645,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1576,
											"end": 1645,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1576,
											"end": 1645,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1576,
											"end": 1645,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1576,
											"end": 1645,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1061,
											"end": 1088,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1061,
											"end": 1088,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1061,
											"end": 1088,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1061,
											"end": 1088,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1061,
											"end": 1088,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1061,
											"end": 1088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1061,
											"end": 1088,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1061,
											"end": 1088,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1061,
											"end": 1088,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1061,
											"end": 1088,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1061,
											"end": 1088,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1061,
											"end": 1088,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1061,
											"end": 1088,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1061,
											"end": 1088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1061,
											"end": 1088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1061,
											"end": 1088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1061,
											"end": 1088,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1061,
											"end": 1088,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1061,
											"end": 1088,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1061,
											"end": 1088,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1061,
											"end": 1088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1061,
											"end": 1088,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1061,
											"end": 1088,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1061,
											"end": 1088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1061,
											"end": 1088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1061,
											"end": 1088,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1061,
											"end": 1088,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1061,
											"end": 1088,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1061,
											"end": 1088,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1061,
											"end": 1088,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1061,
											"end": 1088,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1061,
											"end": 1088,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1061,
											"end": 1088,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1061,
											"end": 1088,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4899,
											"end": 4983,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4899,
											"end": 4983,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4899,
											"end": 4983,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4899,
											"end": 4983,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4899,
											"end": 4983,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4899,
											"end": 4983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 4899,
											"end": 4983,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4899,
											"end": 4983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4899,
											"end": 4983,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4899,
											"end": 4983,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4899,
											"end": 4983,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 4899,
											"end": 4983,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4899,
											"end": 4983,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4899,
											"end": 4983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 4899,
											"end": 4983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 4899,
											"end": 4983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4899,
											"end": 4983,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 4899,
											"end": 4983,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4899,
											"end": 4983,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1286,
											"end": 1312,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1286,
											"end": 1312,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1286,
											"end": 1312,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1286,
											"end": 1312,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1286,
											"end": 1312,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1286,
											"end": 1312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1286,
											"end": 1312,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1286,
											"end": 1312,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1286,
											"end": 1312,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1286,
											"end": 1312,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1286,
											"end": 1312,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1286,
											"end": 1312,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1286,
											"end": 1312,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1286,
											"end": 1312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1286,
											"end": 1312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1286,
											"end": 1312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1286,
											"end": 1312,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1286,
											"end": 1312,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1286,
											"end": 1312,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1286,
											"end": 1312,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1286,
											"end": 1312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1286,
											"end": 1312,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1286,
											"end": 1312,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1286,
											"end": 1312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1286,
											"end": 1312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1286,
											"end": 1312,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1286,
											"end": 1312,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1286,
											"end": 1312,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1286,
											"end": 1312,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1286,
											"end": 1312,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1286,
											"end": 1312,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1286,
											"end": 1312,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1286,
											"end": 1312,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1286,
											"end": 1312,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2099,
											"end": 2191,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2099,
											"end": 2191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2099,
											"end": 2191,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2099,
											"end": 2191,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2099,
											"end": 2191,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2099,
											"end": 2191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2099,
											"end": 2191,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2099,
											"end": 2191,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2099,
											"end": 2191,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2099,
											"end": 2191,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2099,
											"end": 2191,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2099,
											"end": 2191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2099,
											"end": 2191,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2099,
											"end": 2191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2099,
											"end": 2191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2099,
											"end": 2191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2099,
											"end": 2191,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2099,
											"end": 2191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2099,
											"end": 2191,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2099,
											"end": 2191,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2099,
											"end": 2191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2099,
											"end": 2191,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2099,
											"end": 2191,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2099,
											"end": 2191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2099,
											"end": 2191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2099,
											"end": 2191,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2099,
											"end": 2191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2099,
											"end": 2191,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2099,
											"end": 2191,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2099,
											"end": 2191,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2099,
											"end": 2191,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2099,
											"end": 2191,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2099,
											"end": 2191,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2099,
											"end": 2191,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3805,
											"end": 3969,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3805,
											"end": 3969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3805,
											"end": 3969,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3805,
											"end": 3969,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3805,
											"end": 3969,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3805,
											"end": 3969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 3805,
											"end": 3969,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3805,
											"end": 3969,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3805,
											"end": 3969,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3805,
											"end": 3969,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3805,
											"end": 3969,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 3805,
											"end": 3969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3805,
											"end": 3969,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3805,
											"end": 3969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 3805,
											"end": 3969,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3805,
											"end": 3969,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3805,
											"end": 3969,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3805,
											"end": 3969,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3805,
											"end": 3969,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3805,
											"end": 3969,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3805,
											"end": 3969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3805,
											"end": 3969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 3805,
											"end": 3969,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3805,
											"end": 3969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3805,
											"end": 3969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 3805,
											"end": 3969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3805,
											"end": 3969,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 3805,
											"end": 3969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3805,
											"end": 3969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 3805,
											"end": 3969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3805,
											"end": 3969,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 3805,
											"end": 3969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3805,
											"end": 3969,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 4105,
											"end": 4651,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 4105,
											"end": 4651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4105,
											"end": 4651,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4105,
											"end": 4651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4105,
											"end": 4651,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4105,
											"end": 4651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 4105,
											"end": 4651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4105,
											"end": 4651,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4105,
											"end": 4651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4105,
											"end": 4651,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4105,
											"end": 4651,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 4105,
											"end": 4651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4105,
											"end": 4651,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4105,
											"end": 4651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 4105,
											"end": 4651,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4105,
											"end": 4651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4105,
											"end": 4651,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4105,
											"end": 4651,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4105,
											"end": 4651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4105,
											"end": 4651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4105,
											"end": 4651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4105,
											"end": 4651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 4105,
											"end": 4651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4105,
											"end": 4651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4105,
											"end": 4651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 4105,
											"end": 4651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4105,
											"end": 4651,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 4105,
											"end": 4651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4105,
											"end": 4651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 4105,
											"end": 4651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4105,
											"end": 4651,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 4105,
											"end": 4651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4105,
											"end": 4651,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4105,
											"end": 4651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4105,
											"end": 4651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 4105,
											"end": 4651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4105,
											"end": 4651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4105,
											"end": 4651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 4105,
											"end": 4651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4105,
											"end": 4651,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 4105,
											"end": 4651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4105,
											"end": 4651,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4105,
											"end": 4651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4105,
											"end": 4651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4105,
											"end": 4651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4105,
											"end": 4651,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4105,
											"end": 4651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4105,
											"end": 4651,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5241,
											"end": 5336,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 5241,
											"end": 5336,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5241,
											"end": 5336,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5241,
											"end": 5336,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5241,
											"end": 5336,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5241,
											"end": 5336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 5241,
											"end": 5336,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5241,
											"end": 5336,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5241,
											"end": 5336,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5241,
											"end": 5336,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5241,
											"end": 5336,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 5241,
											"end": 5336,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5241,
											"end": 5336,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5241,
											"end": 5336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 5241,
											"end": 5336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 5241,
											"end": 5336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5241,
											"end": 5336,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 5241,
											"end": 5336,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5241,
											"end": 5336,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 4989,
											"end": 5239,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 4989,
											"end": 5239,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4989,
											"end": 5239,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4989,
											"end": 5239,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4989,
											"end": 5239,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4989,
											"end": 5239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 4989,
											"end": 5239,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4989,
											"end": 5239,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4989,
											"end": 5239,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4989,
											"end": 5239,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4989,
											"end": 5239,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 4989,
											"end": 5239,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4989,
											"end": 5239,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4989,
											"end": 5239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 4989,
											"end": 5239,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4989,
											"end": 5239,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4989,
											"end": 5239,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4989,
											"end": 5239,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4989,
											"end": 5239,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4989,
											"end": 5239,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4989,
											"end": 5239,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4989,
											"end": 5239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 4989,
											"end": 5239,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4989,
											"end": 5239,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4989,
											"end": 5239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 4989,
											"end": 5239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4989,
											"end": 5239,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 4989,
											"end": 5239,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4989,
											"end": 5239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 4989,
											"end": 5239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4989,
											"end": 5239,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 4989,
											"end": 5239,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4989,
											"end": 5239,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1020,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 994,
											"end": 1020,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1020,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1020,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1020,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 994,
											"end": 1020,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1020,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 994,
											"end": 1020,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1020,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1020,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 994,
											"end": 1020,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1020,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 994,
											"end": 1020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 994,
											"end": 1020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1020,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 994,
											"end": 1020,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1020,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 994,
											"end": 1020,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 994,
											"end": 1020,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1020,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 994,
											"end": 1020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1020,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 994,
											"end": 1020,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1020,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 994,
											"end": 1020,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1020,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1020,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1020,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1020,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1020,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2235,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2235,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2235,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1126,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1094,
											"end": 1126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1126,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1126,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1094,
											"end": 1126,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1126,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1094,
											"end": 1126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1126,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1126,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1094,
											"end": 1126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1126,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1094,
											"end": 1126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1094,
											"end": 1126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1126,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1094,
											"end": 1126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1126,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1094,
											"end": 1126,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1094,
											"end": 1126,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1094,
											"end": 1126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1126,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1094,
											"end": 1126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1126,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1094,
											"end": 1126,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1126,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1126,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1126,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1318,
											"end": 1364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1318,
											"end": 1364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1877,
											"end": 1950,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1877,
											"end": 1950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1877,
											"end": 1950,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1877,
											"end": 1950,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1877,
											"end": 1950,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1877,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1877,
											"end": 1950,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1877,
											"end": 1950,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1877,
											"end": 1950,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1877,
											"end": 1950,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1877,
											"end": 1950,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1877,
											"end": 1950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1877,
											"end": 1950,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1877,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1877,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1877,
											"end": 1950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1877,
											"end": 1950,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1877,
											"end": 1950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1877,
											"end": 1950,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1877,
											"end": 1950,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1877,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 1877,
											"end": 1950,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1877,
											"end": 1950,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1877,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1877,
											"end": 1950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1877,
											"end": 1950,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 1877,
											"end": 1950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1877,
											"end": 1950,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1877,
											"end": 1950,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1877,
											"end": 1950,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1877,
											"end": 1950,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1877,
											"end": 1950,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1877,
											"end": 1950,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1877,
											"end": 1950,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3309,
											"end": 3674,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 3309,
											"end": 3674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3309,
											"end": 3674,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3309,
											"end": 3674,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3309,
											"end": 3674,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3309,
											"end": 3674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 3309,
											"end": 3674,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3309,
											"end": 3674,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3309,
											"end": 3674,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3309,
											"end": 3674,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3309,
											"end": 3674,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 3309,
											"end": 3674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3309,
											"end": 3674,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3309,
											"end": 3674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 3309,
											"end": 3674,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3309,
											"end": 3674,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3309,
											"end": 3674,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3309,
											"end": 3674,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3309,
											"end": 3674,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3309,
											"end": 3674,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3309,
											"end": 3674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3309,
											"end": 3674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 3309,
											"end": 3674,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3309,
											"end": 3674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3309,
											"end": 3674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 3309,
											"end": 3674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3309,
											"end": 3674,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 3309,
											"end": 3674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3309,
											"end": 3674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 3309,
											"end": 3674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3309,
											"end": 3674,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 3309,
											"end": 3674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3309,
											"end": 3674,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 967,
											"end": 987,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 967,
											"end": 987,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 967,
											"end": 987,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 967,
											"end": 987,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 967,
											"end": 987,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 967,
											"end": 987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 967,
											"end": 987,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 967,
											"end": 987,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 967,
											"end": 987,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 967,
											"end": 987,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 967,
											"end": 987,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 967,
											"end": 987,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 967,
											"end": 987,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 967,
											"end": 987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 967,
											"end": 987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 967,
											"end": 987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 967,
											"end": 987,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 967,
											"end": 987,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 967,
											"end": 987,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 967,
											"end": 987,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 967,
											"end": 987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 967,
											"end": 987,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 967,
											"end": 987,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 967,
											"end": 987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 967,
											"end": 987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 967,
											"end": 987,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 967,
											"end": 987,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 967,
											"end": 987,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 967,
											"end": 987,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 967,
											"end": 987,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 967,
											"end": 987,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 967,
											"end": 987,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 967,
											"end": 987,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 967,
											"end": 987,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3680,
											"end": 3799,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 3680,
											"end": 3799,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3680,
											"end": 3799,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3680,
											"end": 3799,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3680,
											"end": 3799,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3680,
											"end": 3799,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 3680,
											"end": 3799,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3680,
											"end": 3799,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3680,
											"end": 3799,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3680,
											"end": 3799,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3680,
											"end": 3799,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 3680,
											"end": 3799,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3680,
											"end": 3799,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3680,
											"end": 3799,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 3680,
											"end": 3799,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 3680,
											"end": 3799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3680,
											"end": 3799,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 3680,
											"end": 3799,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3680,
											"end": 3799,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3680,
											"end": 3799,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3680,
											"end": 3799,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 3680,
											"end": 3799,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3680,
											"end": 3799,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3680,
											"end": 3799,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3680,
											"end": 3799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3680,
											"end": 3799,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 3680,
											"end": 3799,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3680,
											"end": 3799,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3680,
											"end": 3799,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3680,
											"end": 3799,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3680,
											"end": 3799,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3680,
											"end": 3799,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3680,
											"end": 3799,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3680,
											"end": 3799,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3028,
											"end": 3125,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3028,
											"end": 3125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3028,
											"end": 3125,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3028,
											"end": 3125,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3028,
											"end": 3125,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3028,
											"end": 3125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 3028,
											"end": 3125,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3028,
											"end": 3125,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3028,
											"end": 3125,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3028,
											"end": 3125,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3028,
											"end": 3125,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 3028,
											"end": 3125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3028,
											"end": 3125,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3028,
											"end": 3125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 3028,
											"end": 3125,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3028,
											"end": 3125,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3028,
											"end": 3125,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3028,
											"end": 3125,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3028,
											"end": 3125,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3028,
											"end": 3125,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3028,
											"end": 3125,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3028,
											"end": 3125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 3028,
											"end": 3125,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3028,
											"end": 3125,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3028,
											"end": 3125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 3028,
											"end": 3125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3028,
											"end": 3125,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 3028,
											"end": 3125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3028,
											"end": 3125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 3028,
											"end": 3125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3028,
											"end": 3125,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 3028,
											"end": 3125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3028,
											"end": 3125,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4104,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 3975,
											"end": 4104,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4104,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4104,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 3975,
											"end": 4104,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4104,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3975,
											"end": 4104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4104,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4104,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 3975,
											"end": 4104,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4104,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 3975,
											"end": 4104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 3975,
											"end": 4104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4104,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 3975,
											"end": 4104,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4104,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1238,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1202,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1238,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1238,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1238,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1202,
											"end": 1238,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1238,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1202,
											"end": 1238,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1238,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1238,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1202,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1238,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 1202,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 1202,
											"end": 1238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1238,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 1202,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1238,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1202,
											"end": 1238,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 1202,
											"end": 1238,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1238,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1202,
											"end": 1238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1238,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 1202,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1238,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1202,
											"end": 1238,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1238,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1238,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1238,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1238,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1238,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1482,
											"end": 1551,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1482,
											"end": 1551,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1482,
											"end": 1551,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1482,
											"end": 1551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1482,
											"end": 1551,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1482,
											"end": 1551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 1482,
											"end": 1551,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1482,
											"end": 1551,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1482,
											"end": 1551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1482,
											"end": 1551,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1482,
											"end": 1551,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 1482,
											"end": 1551,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1482,
											"end": 1551,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1482,
											"end": 1551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 1482,
											"end": 1551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 1482,
											"end": 1551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1482,
											"end": 1551,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 1482,
											"end": 1551,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1482,
											"end": 1551,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1482,
											"end": 1551,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1482,
											"end": 1551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 1482,
											"end": 1551,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1482,
											"end": 1551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1482,
											"end": 1551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1482,
											"end": 1551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1482,
											"end": 1551,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 1482,
											"end": 1551,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1482,
											"end": 1551,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1482,
											"end": 1551,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1482,
											"end": 1551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1482,
											"end": 1551,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1482,
											"end": 1551,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1482,
											"end": 1551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1482,
											"end": 1551,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1244,
											"end": 1280,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1244,
											"end": 1280,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1244,
											"end": 1280,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1244,
											"end": 1280,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1244,
											"end": 1280,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1244,
											"end": 1280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1244,
											"end": 1280,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1244,
											"end": 1280,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1244,
											"end": 1280,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1244,
											"end": 1280,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1244,
											"end": 1280,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1244,
											"end": 1280,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1244,
											"end": 1280,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1244,
											"end": 1280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1244,
											"end": 1280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1244,
											"end": 1280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1244,
											"end": 1280,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1244,
											"end": 1280,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1244,
											"end": 1280,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1244,
											"end": 1280,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1244,
											"end": 1280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 1244,
											"end": 1280,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1244,
											"end": 1280,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1244,
											"end": 1280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1244,
											"end": 1280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1244,
											"end": 1280,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 1244,
											"end": 1280,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1244,
											"end": 1280,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1244,
											"end": 1280,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1244,
											"end": 1280,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1244,
											"end": 1280,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1244,
											"end": 1280,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1244,
											"end": 1280,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1244,
											"end": 1280,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1168,
											"end": 1196,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1168,
											"end": 1196,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1168,
											"end": 1196,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1168,
											"end": 1196,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1168,
											"end": 1196,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1168,
											"end": 1196,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 1168,
											"end": 1196,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1168,
											"end": 1196,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1196,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1168,
											"end": 1196,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1168,
											"end": 1196,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 1168,
											"end": 1196,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1168,
											"end": 1196,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1168,
											"end": 1196,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 1168,
											"end": 1196,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 1168,
											"end": 1196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1168,
											"end": 1196,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 1168,
											"end": 1196,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1168,
											"end": 1196,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1168,
											"end": 1196,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1168,
											"end": 1196,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 1168,
											"end": 1196,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1168,
											"end": 1196,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1168,
											"end": 1196,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1168,
											"end": 1196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1168,
											"end": 1196,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 1168,
											"end": 1196,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1168,
											"end": 1196,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1168,
											"end": 1196,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1168,
											"end": 1196,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1168,
											"end": 1196,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1168,
											"end": 1196,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1168,
											"end": 1196,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1168,
											"end": 1196,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1026,
											"end": 1055,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1026,
											"end": 1055,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1026,
											"end": 1055,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1026,
											"end": 1055,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1026,
											"end": 1055,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1026,
											"end": 1055,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1026,
											"end": 1055,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1026,
											"end": 1055,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1026,
											"end": 1055,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1026,
											"end": 1055,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1026,
											"end": 1055,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1026,
											"end": 1055,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1026,
											"end": 1055,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1026,
											"end": 1055,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1026,
											"end": 1055,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 1026,
											"end": 1055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1026,
											"end": 1055,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1026,
											"end": 1055,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1026,
											"end": 1055,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1026,
											"end": 1055,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1026,
											"end": 1055,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 1026,
											"end": 1055,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1026,
											"end": 1055,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1026,
											"end": 1055,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1026,
											"end": 1055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1026,
											"end": 1055,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 1026,
											"end": 1055,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1026,
											"end": 1055,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1026,
											"end": 1055,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1026,
											"end": 1055,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1026,
											"end": 1055,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1026,
											"end": 1055,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1026,
											"end": 1055,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1026,
											"end": 1055,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1847,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1771,
											"end": 1847,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1847,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1847,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1847,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1771,
											"end": 1847,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1847,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1771,
											"end": 1847,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1847,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1847,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1771,
											"end": 1847,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1847,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 1771,
											"end": 1847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 1771,
											"end": 1847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1847,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 1771,
											"end": 1847,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1847,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1771,
											"end": 1847,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1771,
											"end": 1847,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1847,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1771,
											"end": 1847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1847,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1771,
											"end": 1847,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1847,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1771,
											"end": 1847,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1847,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1847,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1847,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1847,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1847,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1670,
											"end": 1745,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1670,
											"end": 1745,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1670,
											"end": 1745,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1670,
											"end": 1745,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1670,
											"end": 1745,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1670,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 1670,
											"end": 1745,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1670,
											"end": 1745,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1670,
											"end": 1745,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1670,
											"end": 1745,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1670,
											"end": 1745,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 1670,
											"end": 1745,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1670,
											"end": 1745,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1670,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1670,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 1670,
											"end": 1745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1670,
											"end": 1745,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1670,
											"end": 1745,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1670,
											"end": 1745,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1670,
											"end": 1745,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1670,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 1670,
											"end": 1745,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1670,
											"end": 1745,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1670,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1670,
											"end": 1745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1670,
											"end": 1745,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 1670,
											"end": 1745,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1670,
											"end": 1745,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1670,
											"end": 1745,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1670,
											"end": 1745,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1670,
											"end": 1745,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1670,
											"end": 1745,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1670,
											"end": 1745,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1670,
											"end": 1745,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2063,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1981,
											"end": 2063,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2063,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2063,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2063,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 1981,
											"end": 2063,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2063,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1981,
											"end": 2063,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2063,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2063,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 1981,
											"end": 2063,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2063,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 1981,
											"end": 2063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 1981,
											"end": 2063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2063,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 1981,
											"end": 2063,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2063,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2063,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 1981,
											"end": 2063,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2063,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1981,
											"end": 2063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2063,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 1981,
											"end": 2063,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2063,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2063,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2063,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2063,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2063,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2063,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2063,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1371,
											"end": 1439,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1371,
											"end": 1439,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1371,
											"end": 1439,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1371,
											"end": 1439,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1371,
											"end": 1439,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1371,
											"end": 1439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 1371,
											"end": 1439,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1371,
											"end": 1439,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1371,
											"end": 1439,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1371,
											"end": 1439,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1371,
											"end": 1439,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 1371,
											"end": 1439,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1371,
											"end": 1439,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1371,
											"end": 1439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1371,
											"end": 1439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 1371,
											"end": 1439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1371,
											"end": 1439,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1371,
											"end": 1439,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1371,
											"end": 1439,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1371,
											"end": 1439,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1371,
											"end": 1439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 1371,
											"end": 1439,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1371,
											"end": 1439,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1371,
											"end": 1439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1371,
											"end": 1439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1371,
											"end": 1439,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 1371,
											"end": 1439,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1371,
											"end": 1439,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1371,
											"end": 1439,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1371,
											"end": 1439,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1371,
											"end": 1439,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1371,
											"end": 1439,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1371,
											"end": 1439,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1371,
											"end": 1439,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1162,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1132,
											"end": 1162,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1162,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1162,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 1132,
											"end": 1162,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1162,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1132,
											"end": 1162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1162,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1162,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 1132,
											"end": 1162,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1162,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 1132,
											"end": 1162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 1132,
											"end": 1162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1162,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 1132,
											"end": 1162,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1162,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1132,
											"end": 1162,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 1132,
											"end": 1162,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1162,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1132,
											"end": 1162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1162,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 1132,
											"end": 1162,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1162,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1132,
											"end": 1162,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1162,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1162,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1162,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1162,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1576,
											"end": 1645,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1576,
											"end": 1645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1576,
											"end": 1645,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 1576,
											"end": 1645,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1576,
											"end": 1645,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1576,
											"end": 1645,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1576,
											"end": 1645,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1576,
											"end": 1645,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1576,
											"end": 1645,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1576,
											"end": 1645,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1576,
											"end": 1645,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1576,
											"end": 1645,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1576,
											"end": 1645,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1576,
											"end": 1645,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1576,
											"end": 1645,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1061,
											"end": 1088,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1061,
											"end": 1088,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1061,
											"end": 1088,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1061,
											"end": 1088,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1061,
											"end": 1088,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1061,
											"end": 1088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4899,
											"end": 4983,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 4899,
											"end": 4983,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2595,
											"end": 2600,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2595,
											"end": 2600,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2595,
											"end": 2600,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2595,
											"end": 2600,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2595,
											"end": 2600,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2595,
											"end": 2600,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2595,
											"end": 2600,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2595,
											"end": 2600,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2595,
											"end": 2600,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2595,
											"end": 2600,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2581,
											"end": 2600,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2581,
											"end": 2600,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2581,
											"end": 2591,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2581,
											"end": 2600,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2581,
											"end": 2600,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2581,
											"end": 2600,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 2573,
											"end": 2618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4971,
											"end": 4976,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4954,
											"end": 4968,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4954,
											"end": 4968,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 4954,
											"end": 4976,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4954,
											"end": 4976,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4954,
											"end": 4976,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4954,
											"end": 4976,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4954,
											"end": 4976,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4954,
											"end": 4976,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 4954,
											"end": 4976,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4954,
											"end": 4976,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 4954,
											"end": 4976,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4954,
											"end": 4976,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4954,
											"end": 4976,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4954,
											"end": 4976,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4954,
											"end": 4976,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4954,
											"end": 4976,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4954,
											"end": 4976,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 4954,
											"end": 4976,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4954,
											"end": 4976,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4954,
											"end": 4976,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4899,
											"end": 4983,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1286,
											"end": 1312,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1286,
											"end": 1312,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1286,
											"end": 1312,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1286,
											"end": 1312,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1286,
											"end": 1312,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1286,
											"end": 1312,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2099,
											"end": 2191,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2099,
											"end": 2191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2099,
											"end": 2191,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2099,
											"end": 2191,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2099,
											"end": 2191,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2099,
											"end": 2191,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2099,
											"end": 2191,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2099,
											"end": 2191,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2099,
											"end": 2191,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2099,
											"end": 2191,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2099,
											"end": 2191,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2099,
											"end": 2191,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2099,
											"end": 2191,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2099,
											"end": 2191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2099,
											"end": 2191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3805,
											"end": 3969,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 3805,
											"end": 3969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2595,
											"end": 2600,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2595,
											"end": 2600,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2595,
											"end": 2600,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2595,
											"end": 2600,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2595,
											"end": 2600,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2595,
											"end": 2600,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2595,
											"end": 2600,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2595,
											"end": 2600,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2595,
											"end": 2600,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2595,
											"end": 2600,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2581,
											"end": 2600,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2581,
											"end": 2600,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2581,
											"end": 2591,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2581,
											"end": 2600,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2581,
											"end": 2600,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2581,
											"end": 2600,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 2573,
											"end": 2618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3917,
											"end": 3927,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3903,
											"end": 3962,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3903,
											"end": 3962,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3903,
											"end": 3962,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "30FDCD4F0C28C5DBCBC3F59AA8E2260C7F58AC45BE2A2DCA652999AF89C33E0"
										},
										{
											"begin": 3929,
											"end": 3938,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3940,
											"end": 3946,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3948,
											"end": 3949,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3951,
											"end": 3961,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 3951,
											"end": 3959,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 3951,
											"end": 3961,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3951,
											"end": 3961,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 3951,
											"end": 3961,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3903,
											"end": 3962,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3903,
											"end": 3962,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3903,
											"end": 3962,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 3903,
											"end": 3962,
											"modifierDepth": 1,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 3903,
											"end": 3962,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3903,
											"end": 3962,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3903,
											"end": 3962,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3903,
											"end": 3962,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3903,
											"end": 3962,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 3903,
											"end": 3962,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3903,
											"end": 3962,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 3903,
											"end": 3962,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3903,
											"end": 3962,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3903,
											"end": 3962,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3903,
											"end": 3962,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3903,
											"end": 3962,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3903,
											"end": 3962,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3903,
											"end": 3962,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3903,
											"end": 3962,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 3805,
											"end": 3969,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3805,
											"end": 3969,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3805,
											"end": 3969,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4105,
											"end": 4651,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 4105,
											"end": 4651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4189,
											"end": 4213,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4221,
											"end": 4240,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4258,
											"end": 4269,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4221,
											"end": 4270,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4221,
											"end": 4270,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4277,
											"end": 4297,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4307,
											"end": 4311,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4307,
											"end": 4317,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4307,
											"end": 4317,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4307,
											"end": 4317,
											"name": "PUSH",
											"source": 0,
											"value": "3850C7BD"
										},
										{
											"begin": 4307,
											"end": 4319,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4307,
											"end": 4319,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4307,
											"end": 4319,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4307,
											"end": 4319,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4307,
											"end": 4319,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4307,
											"end": 4319,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 4307,
											"end": 4319,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 4307,
											"end": 4319,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4307,
											"end": 4319,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4307,
											"end": 4319,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4307,
											"end": 4319,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4307,
											"end": 4319,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 4307,
											"end": 4319,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4307,
											"end": 4319,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4307,
											"end": 4319,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4307,
											"end": 4319,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4307,
											"end": 4319,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4307,
											"end": 4319,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4307,
											"end": 4319,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 4307,
											"end": 4319,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 4307,
											"end": 4319,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 4307,
											"end": 4319,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4307,
											"end": 4319,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4307,
											"end": 4319,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4307,
											"end": 4319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 4307,
											"end": 4319,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4307,
											"end": 4319,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4307,
											"end": 4319,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4307,
											"end": 4319,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4307,
											"end": 4319,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 4307,
											"end": 4319,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4307,
											"end": 4319,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4307,
											"end": 4319,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4307,
											"end": 4319,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 4307,
											"end": 4319,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4307,
											"end": 4319,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4307,
											"end": 4319,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4307,
											"end": 4319,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4307,
											"end": 4319,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4307,
											"end": 4319,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4307,
											"end": 4319,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4307,
											"end": 4319,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4307,
											"end": 4319,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 4307,
											"end": 4319,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 4307,
											"end": 4319,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 4307,
											"end": 4319,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4307,
											"end": 4319,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4307,
											"end": 4319,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4307,
											"end": 4319,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4307,
											"end": 4319,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4307,
											"end": 4319,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4307,
											"end": 4319,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4307,
											"end": 4319,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4307,
											"end": 4319,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4307,
											"end": 4319,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4307,
											"end": 4319,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4307,
											"end": 4319,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4307,
											"end": 4319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 4307,
											"end": 4319,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4307,
											"end": 4319,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4307,
											"end": 4319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 4307,
											"end": 4319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4307,
											"end": 4319,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 4307,
											"end": 4319,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4276,
											"end": 4319,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4276,
											"end": 4319,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4276,
											"end": 4319,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4276,
											"end": 4319,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4276,
											"end": 4319,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4276,
											"end": 4319,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4276,
											"end": 4319,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4276,
											"end": 4319,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4325,
											"end": 4342,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4345,
											"end": 4349,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4345,
											"end": 4359,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4345,
											"end": 4359,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4345,
											"end": 4359,
											"name": "PUSH",
											"source": 0,
											"value": "1A686502"
										},
										{
											"begin": 4345,
											"end": 4361,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4345,
											"end": 4361,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4345,
											"end": 4361,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4345,
											"end": 4361,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4345,
											"end": 4361,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4345,
											"end": 4361,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 4345,
											"end": 4361,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 4345,
											"end": 4361,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4345,
											"end": 4361,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4345,
											"end": 4361,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4345,
											"end": 4361,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4345,
											"end": 4361,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4345,
											"end": 4361,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4345,
											"end": 4361,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4345,
											"end": 4361,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4345,
											"end": 4361,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4345,
											"end": 4361,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4345,
											"end": 4361,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4345,
											"end": 4361,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 4345,
											"end": 4361,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 4345,
											"end": 4361,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 4345,
											"end": 4361,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4345,
											"end": 4361,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4345,
											"end": 4361,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4345,
											"end": 4361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 4345,
											"end": 4361,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4345,
											"end": 4361,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4345,
											"end": 4361,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4345,
											"end": 4361,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4345,
											"end": 4361,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 4345,
											"end": 4361,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4345,
											"end": 4361,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4345,
											"end": 4361,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4345,
											"end": 4361,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 4345,
											"end": 4361,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4345,
											"end": 4361,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4345,
											"end": 4361,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4345,
											"end": 4361,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4345,
											"end": 4361,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4345,
											"end": 4361,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4345,
											"end": 4361,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4345,
											"end": 4361,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4345,
											"end": 4361,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 4345,
											"end": 4361,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 4345,
											"end": 4361,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 4345,
											"end": 4361,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4345,
											"end": 4361,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4345,
											"end": 4361,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4345,
											"end": 4361,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4345,
											"end": 4361,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4345,
											"end": 4361,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4345,
											"end": 4361,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4345,
											"end": 4361,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4345,
											"end": 4361,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4345,
											"end": 4361,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4345,
											"end": 4361,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4345,
											"end": 4361,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4345,
											"end": 4361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 4345,
											"end": 4361,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4345,
											"end": 4361,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4345,
											"end": 4361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 4345,
											"end": 4361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4345,
											"end": 4361,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 4345,
											"end": 4361,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4325,
											"end": 4361,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4325,
											"end": 4361,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4325,
											"end": 4361,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4325,
											"end": 4361,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4466,
											"end": 4483,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4486,
											"end": 4539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 4505,
											"end": 4513,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 4515,
											"end": 4527,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4529,
											"end": 4538,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4486,
											"end": 4504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 4486,
											"end": 4539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4486,
											"end": 4539,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 4486,
											"end": 4539,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4466,
											"end": 4539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4466,
											"end": 4539,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4546,
											"end": 4562,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4583,
											"end": 4586,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 4578,
											"end": 4579,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4566,
											"end": 4575,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4566,
											"end": 4579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 4566,
											"end": 4579,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4566,
											"end": 4579,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4566,
											"end": 4579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 4566,
											"end": 4579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4566,
											"end": 4579,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 4566,
											"end": 4579,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4565,
											"end": 4586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 4565,
											"end": 4586,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4565,
											"end": 4586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4565,
											"end": 4586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 4565,
											"end": 4586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4565,
											"end": 4586,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 4565,
											"end": 4586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4546,
											"end": 4586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4546,
											"end": 4586,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4639,
											"end": 4647,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4628,
											"end": 4636,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 4628,
											"end": 4647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 4628,
											"end": 4647,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4628,
											"end": 4647,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4628,
											"end": 4647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 4628,
											"end": 4647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4628,
											"end": 4647,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 4628,
											"end": 4647,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4615,
											"end": 4624,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4615,
											"end": 4647,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4615,
											"end": 4647,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4592,
											"end": 4648,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 4592,
											"end": 4648,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4215,
											"end": 4651,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4215,
											"end": 4651,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4215,
											"end": 4651,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4215,
											"end": 4651,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4215,
											"end": 4651,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4105,
											"end": 4651,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4105,
											"end": 4651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4105,
											"end": 4651,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4105,
											"end": 4651,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4105,
											"end": 4651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5241,
											"end": 5336,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 5241,
											"end": 5336,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2595,
											"end": 2600,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2595,
											"end": 2600,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2595,
											"end": 2600,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2595,
											"end": 2600,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2595,
											"end": 2600,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2595,
											"end": 2600,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2595,
											"end": 2600,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2595,
											"end": 2600,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2595,
											"end": 2600,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2595,
											"end": 2600,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2581,
											"end": 2600,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2581,
											"end": 2600,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2581,
											"end": 2591,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2581,
											"end": 2600,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2581,
											"end": 2600,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2581,
											"end": 2600,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 2573,
											"end": 2618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5290,
											"end": 5300,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5282,
											"end": 5310,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5282,
											"end": 5310,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5282,
											"end": 5333,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 5311,
											"end": 5332,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 5282,
											"end": 5333,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5282,
											"end": 5333,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5282,
											"end": 5333,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5282,
											"end": 5333,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5282,
											"end": 5333,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5282,
											"end": 5333,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5282,
											"end": 5333,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5282,
											"end": 5333,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5282,
											"end": 5333,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5282,
											"end": 5333,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5282,
											"end": 5333,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5282,
											"end": 5333,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5282,
											"end": 5333,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5282,
											"end": 5333,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5282,
											"end": 5333,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5282,
											"end": 5333,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 5282,
											"end": 5333,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 5282,
											"end": 5333,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 5282,
											"end": 5333,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 5282,
											"end": 5333,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5282,
											"end": 5333,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5282,
											"end": 5333,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5282,
											"end": 5333,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5282,
											"end": 5333,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5282,
											"end": 5333,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5282,
											"end": 5333,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5282,
											"end": 5333,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 5282,
											"end": 5333,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5282,
											"end": 5333,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5282,
											"end": 5333,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5282,
											"end": 5333,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5282,
											"end": 5333,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 5282,
											"end": 5333,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5282,
											"end": 5333,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5282,
											"end": 5333,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5282,
											"end": 5333,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 5282,
											"end": 5333,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5282,
											"end": 5333,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5241,
											"end": 5336,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4989,
											"end": 5239,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 4989,
											"end": 5239,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2595,
											"end": 2600,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2595,
											"end": 2600,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2595,
											"end": 2600,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2595,
											"end": 2600,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2595,
											"end": 2600,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2595,
											"end": 2600,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2595,
											"end": 2600,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2595,
											"end": 2600,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2595,
											"end": 2600,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2595,
											"end": 2600,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2581,
											"end": 2600,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2581,
											"end": 2600,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2581,
											"end": 2591,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2581,
											"end": 2600,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2581,
											"end": 2600,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2581,
											"end": 2600,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 2573,
											"end": 2618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5064,
											"end": 5083,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5101,
											"end": 5107,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "3B9ACA00"
										},
										{
											"begin": 5086,
											"end": 5098,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5086,
											"end": 5107,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 5086,
											"end": 5107,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5086,
											"end": 5107,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5086,
											"end": 5107,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 5086,
											"end": 5107,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5086,
											"end": 5107,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 5086,
											"end": 5107,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5064,
											"end": 5107,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5064,
											"end": 5107,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5150,
											"end": 5161,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5125,
											"end": 5146,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 5125,
											"end": 5161,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5125,
											"end": 5161,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5117,
											"end": 5186,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 5117,
											"end": 5186,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5117,
											"end": 5186,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5117,
											"end": 5186,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5117,
											"end": 5186,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5117,
											"end": 5186,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5117,
											"end": 5186,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5117,
											"end": 5186,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5117,
											"end": 5186,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5117,
											"end": 5186,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 5117,
											"end": 5186,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5117,
											"end": 5186,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 5117,
											"end": 5186,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5117,
											"end": 5186,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 5117,
											"end": 5186,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5117,
											"end": 5186,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5117,
											"end": 5186,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5117,
											"end": 5186,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5117,
											"end": 5186,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5117,
											"end": 5186,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5117,
											"end": 5186,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5117,
											"end": 5186,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5117,
											"end": 5186,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 5117,
											"end": 5186,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5204,
											"end": 5209,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5204,
											"end": 5209,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5204,
											"end": 5209,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5204,
											"end": 5209,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5204,
											"end": 5209,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5204,
											"end": 5209,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 5204,
											"end": 5209,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5204,
											"end": 5209,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 5204,
											"end": 5209,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5204,
											"end": 5209,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5196,
											"end": 5219,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5196,
											"end": 5219,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5196,
											"end": 5232,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 5220,
											"end": 5231,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5196,
											"end": 5232,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5196,
											"end": 5232,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5196,
											"end": 5232,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5196,
											"end": 5232,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5196,
											"end": 5232,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5196,
											"end": 5232,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5196,
											"end": 5232,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5196,
											"end": 5232,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5196,
											"end": 5232,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5196,
											"end": 5232,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5196,
											"end": 5232,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5196,
											"end": 5232,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5196,
											"end": 5232,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5196,
											"end": 5232,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5196,
											"end": 5232,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5196,
											"end": 5232,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 5196,
											"end": 5232,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 5196,
											"end": 5232,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 5196,
											"end": 5232,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 5196,
											"end": 5232,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5196,
											"end": 5232,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5196,
											"end": 5232,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5196,
											"end": 5232,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5196,
											"end": 5232,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5196,
											"end": 5232,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5196,
											"end": 5232,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5196,
											"end": 5232,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 5196,
											"end": 5232,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5196,
											"end": 5232,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5196,
											"end": 5232,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5196,
											"end": 5232,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5196,
											"end": 5232,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 5196,
											"end": 5232,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5196,
											"end": 5232,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5196,
											"end": 5232,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5196,
											"end": 5232,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 5196,
											"end": 5232,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5196,
											"end": 5232,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5054,
											"end": 5239,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4989,
											"end": 5239,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4989,
											"end": 5239,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1020,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 994,
											"end": 1020,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1020,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 994,
											"end": 1020,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 994,
											"end": 1020,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1020,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1020,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1020,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 994,
											"end": 1020,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1020,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1020,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1020,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 994,
											"end": 1020,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1020,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1126,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1094,
											"end": 1126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1126,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1094,
											"end": 1126,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1126,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 1318,
											"end": 1364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 1318,
											"end": 1364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1364,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1877,
											"end": 1950,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1877,
											"end": 1950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1877,
											"end": 1950,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 1877,
											"end": 1950,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1877,
											"end": 1950,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1877,
											"end": 1950,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1877,
											"end": 1950,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1877,
											"end": 1950,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1877,
											"end": 1950,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1877,
											"end": 1950,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1877,
											"end": 1950,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1877,
											"end": 1950,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1877,
											"end": 1950,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1877,
											"end": 1950,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1877,
											"end": 1950,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3309,
											"end": 3674,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 3309,
											"end": 3674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2595,
											"end": 2600,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2595,
											"end": 2600,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2595,
											"end": 2600,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2595,
											"end": 2600,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2595,
											"end": 2600,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2595,
											"end": 2600,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2595,
											"end": 2600,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2595,
											"end": 2600,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2595,
											"end": 2600,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2595,
											"end": 2600,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2581,
											"end": 2600,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2581,
											"end": 2600,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2581,
											"end": 2591,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2581,
											"end": 2600,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2581,
											"end": 2600,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2581,
											"end": 2600,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 2573,
											"end": 2618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3600,
											"end": 3610,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3586,
											"end": 3667,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3586,
											"end": 3667,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3586,
											"end": 3667,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "30FDCD4F0C28C5DBCBC3F59AA8E2260C7F58AC45BE2A2DCA652999AF89C33E0"
										},
										{
											"begin": 3634,
											"end": 3651,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3653,
											"end": 3654,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3656,
											"end": 3666,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 3656,
											"end": 3664,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 3656,
											"end": 3666,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3656,
											"end": 3666,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 3656,
											"end": 3666,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3586,
											"end": 3667,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3586,
											"end": 3667,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3586,
											"end": 3667,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 3586,
											"end": 3667,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3586,
											"end": 3667,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3586,
											"end": 3667,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3586,
											"end": 3667,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3586,
											"end": 3667,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 3586,
											"end": 3667,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3586,
											"end": 3667,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 3586,
											"end": 3667,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3586,
											"end": 3667,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3586,
											"end": 3667,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3586,
											"end": 3667,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3586,
											"end": 3667,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3586,
											"end": 3667,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3586,
											"end": 3667,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3586,
											"end": 3667,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 3309,
											"end": 3674,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3309,
											"end": 3674,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 967,
											"end": 987,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 967,
											"end": 987,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 967,
											"end": 987,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 967,
											"end": 987,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 967,
											"end": 987,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 967,
											"end": 987,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 967,
											"end": 987,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 967,
											"end": 987,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 967,
											"end": 987,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 967,
											"end": 987,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 967,
											"end": 987,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 967,
											"end": 987,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 967,
											"end": 987,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 967,
											"end": 987,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3680,
											"end": 3799,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 3680,
											"end": 3799,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3725,
											"end": 3732,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3744,
											"end": 3757,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3760,
											"end": 3770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 3760,
											"end": 3768,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 3760,
											"end": 3770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3760,
											"end": 3770,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 3760,
											"end": 3770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3744,
											"end": 3770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3744,
											"end": 3770,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3787,
											"end": 3792,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3780,
											"end": 3792,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3780,
											"end": 3792,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3780,
											"end": 3792,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3680,
											"end": 3799,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3680,
											"end": 3799,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3028,
											"end": 3125,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 3028,
											"end": 3125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2595,
											"end": 2600,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2595,
											"end": 2600,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2595,
											"end": 2600,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2595,
											"end": 2600,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2595,
											"end": 2600,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2595,
											"end": 2600,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2595,
											"end": 2600,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2595,
											"end": 2600,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2595,
											"end": 2600,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2595,
											"end": 2600,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2581,
											"end": 2600,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2581,
											"end": 2600,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2581,
											"end": 2591,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2581,
											"end": 2600,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2581,
											"end": 2600,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2581,
											"end": 2600,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 2573,
											"end": 2618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3108,
											"end": 3118,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3100,
											"end": 3105,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3100,
											"end": 3105,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3100,
											"end": 3118,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3100,
											"end": 3118,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3100,
											"end": 3118,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3100,
											"end": 3118,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3100,
											"end": 3118,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3100,
											"end": 3118,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3100,
											"end": 3118,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3100,
											"end": 3118,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3100,
											"end": 3118,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3100,
											"end": 3118,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3100,
											"end": 3118,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3100,
											"end": 3118,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3100,
											"end": 3118,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3100,
											"end": 3118,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3100,
											"end": 3118,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3100,
											"end": 3118,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3100,
											"end": 3118,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3100,
											"end": 3118,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3028,
											"end": 3125,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3028,
											"end": 3125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4104,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 3975,
											"end": 4104,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2595,
											"end": 2600,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2595,
											"end": 2600,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2595,
											"end": 2600,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2595,
											"end": 2600,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2595,
											"end": 2600,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2595,
											"end": 2600,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2595,
											"end": 2600,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2595,
											"end": 2600,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2595,
											"end": 2600,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2595,
											"end": 2600,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2581,
											"end": 2600,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2581,
											"end": 2600,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2581,
											"end": 2591,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2581,
											"end": 2600,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2581,
											"end": 2600,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2581,
											"end": 2600,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 2573,
											"end": 2618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4050,
											"end": 4060,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4036,
											"end": 4097,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4036,
											"end": 4097,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4036,
											"end": 4097,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "30FDCD4F0C28C5DBCBC3F59AA8E2260C7F58AC45BE2A2DCA652999AF89C33E0"
										},
										{
											"begin": 4080,
											"end": 4081,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4083,
											"end": 4084,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4086,
											"end": 4096,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 4086,
											"end": 4094,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 4086,
											"end": 4096,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4086,
											"end": 4096,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 4086,
											"end": 4096,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4036,
											"end": 4097,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4036,
											"end": 4097,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4036,
											"end": 4097,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 4036,
											"end": 4097,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4036,
											"end": 4097,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4036,
											"end": 4097,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4036,
											"end": 4097,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4036,
											"end": 4097,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 4036,
											"end": 4097,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4036,
											"end": 4097,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 4036,
											"end": 4097,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4036,
											"end": 4097,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4036,
											"end": 4097,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4036,
											"end": 4097,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4036,
											"end": 4097,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4036,
											"end": 4097,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4036,
											"end": 4097,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4036,
											"end": 4097,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4104,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1238,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 1202,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1238,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1202,
											"end": 1238,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1238,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1238,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1482,
											"end": 1551,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 1482,
											"end": 1551,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1482,
											"end": 1551,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 1482,
											"end": 1551,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1482,
											"end": 1551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1482,
											"end": 1551,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1482,
											"end": 1551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1482,
											"end": 1551,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1482,
											"end": 1551,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1482,
											"end": 1551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1482,
											"end": 1551,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1482,
											"end": 1551,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1482,
											"end": 1551,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1482,
											"end": 1551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1482,
											"end": 1551,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1244,
											"end": 1280,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1244,
											"end": 1280,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1244,
											"end": 1280,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1244,
											"end": 1280,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1244,
											"end": 1280,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1244,
											"end": 1280,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1168,
											"end": 1196,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 1168,
											"end": 1196,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1168,
											"end": 1196,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1168,
											"end": 1196,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1168,
											"end": 1196,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1168,
											"end": 1196,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1026,
											"end": 1055,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 1026,
											"end": 1055,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1026,
											"end": 1055,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1026,
											"end": 1055,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1026,
											"end": 1055,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1026,
											"end": 1055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1847,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 1771,
											"end": 1847,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1847,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 1771,
											"end": 1847,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1771,
											"end": 1847,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1847,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1847,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1847,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1771,
											"end": 1847,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1847,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1847,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1847,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1771,
											"end": 1847,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1847,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1670,
											"end": 1745,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 1670,
											"end": 1745,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1670,
											"end": 1745,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 1670,
											"end": 1745,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1670,
											"end": 1745,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1670,
											"end": 1745,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1670,
											"end": 1745,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1670,
											"end": 1745,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1670,
											"end": 1745,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1670,
											"end": 1745,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1670,
											"end": 1745,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1670,
											"end": 1745,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1670,
											"end": 1745,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1670,
											"end": 1745,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1670,
											"end": 1745,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2063,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 1981,
											"end": 2063,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2063,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1981,
											"end": 2063,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1981,
											"end": 2063,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2063,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2063,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2063,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1981,
											"end": 2063,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2063,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2063,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2063,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1981,
											"end": 2063,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2063,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2063,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1371,
											"end": 1439,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 1371,
											"end": 1439,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1371,
											"end": 1439,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 1371,
											"end": 1439,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1371,
											"end": 1439,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1371,
											"end": 1439,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1371,
											"end": 1439,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1371,
											"end": 1439,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1371,
											"end": 1439,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1371,
											"end": 1439,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1371,
											"end": 1439,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1371,
											"end": 1439,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1371,
											"end": 1439,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1371,
											"end": 1439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1371,
											"end": 1439,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1162,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 1132,
											"end": 1162,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1162,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1132,
											"end": 1162,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1162,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1162,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7439,
											"end": 7738,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 7439,
											"end": 7738,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7482,
											"end": 7489,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7506,
											"end": 7537,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7562,
											"end": 7578,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 7562,
											"end": 7578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7562,
											"end": 7578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7562,
											"end": 7578,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7562,
											"end": 7578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7562,
											"end": 7578,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7562,
											"end": 7578,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 7562,
											"end": 7578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7562,
											"end": 7578,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 7562,
											"end": 7578,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7562,
											"end": 7578,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7506,
											"end": 7579,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7506,
											"end": 7579,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7597,
											"end": 7606,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7613,
											"end": 7622,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7613,
											"end": 7638,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7613,
											"end": 7638,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7613,
											"end": 7638,
											"name": "PUSH",
											"source": 0,
											"value": "FEAF968C"
										},
										{
											"begin": 7613,
											"end": 7640,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7613,
											"end": 7640,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7613,
											"end": 7640,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7613,
											"end": 7640,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7613,
											"end": 7640,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7613,
											"end": 7640,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 7613,
											"end": 7640,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 7613,
											"end": 7640,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7613,
											"end": 7640,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7613,
											"end": 7640,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7613,
											"end": 7640,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7613,
											"end": 7640,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 7613,
											"end": 7640,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7613,
											"end": 7640,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7613,
											"end": 7640,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7613,
											"end": 7640,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7613,
											"end": 7640,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7613,
											"end": 7640,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7613,
											"end": 7640,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7613,
											"end": 7640,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 7613,
											"end": 7640,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 7613,
											"end": 7640,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7613,
											"end": 7640,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7613,
											"end": 7640,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7613,
											"end": 7640,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 7613,
											"end": 7640,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7613,
											"end": 7640,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 7613,
											"end": 7640,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7613,
											"end": 7640,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7613,
											"end": 7640,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 7613,
											"end": 7640,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 7613,
											"end": 7640,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7613,
											"end": 7640,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7613,
											"end": 7640,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 7613,
											"end": 7640,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7613,
											"end": 7640,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7613,
											"end": 7640,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7613,
											"end": 7640,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7613,
											"end": 7640,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7613,
											"end": 7640,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7613,
											"end": 7640,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7613,
											"end": 7640,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 7613,
											"end": 7640,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 7613,
											"end": 7640,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 7613,
											"end": 7640,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 7613,
											"end": 7640,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7613,
											"end": 7640,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7613,
											"end": 7640,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7613,
											"end": 7640,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7613,
											"end": 7640,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7613,
											"end": 7640,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7613,
											"end": 7640,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7613,
											"end": 7640,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7613,
											"end": 7640,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7613,
											"end": 7640,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7613,
											"end": 7640,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7613,
											"end": 7640,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7613,
											"end": 7640,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 7613,
											"end": 7640,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7613,
											"end": 7640,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7613,
											"end": 7640,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 7613,
											"end": 7640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7613,
											"end": 7640,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 7613,
											"end": 7640,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7594,
											"end": 7640,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7594,
											"end": 7640,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7594,
											"end": 7640,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7594,
											"end": 7640,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7594,
											"end": 7640,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7594,
											"end": 7640,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7665,
											"end": 7673,
											"name": "PUSH",
											"source": 0,
											"value": "2540BE400"
										},
										{
											"begin": 7657,
											"end": 7662,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7657,
											"end": 7673,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 7657,
											"end": 7673,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7657,
											"end": 7673,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7657,
											"end": 7673,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 7657,
											"end": 7673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7657,
											"end": 7673,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 7657,
											"end": 7673,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7642,
											"end": 7674,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7642,
											"end": 7674,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7642,
											"end": 7674,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7642,
											"end": 7674,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7439,
											"end": 7738,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7439,
											"end": 7738,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4653,
											"end": 4892,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 4653,
											"end": 4892,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4763,
											"end": 4770,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4879,
											"end": 4888,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4864,
											"end": 4876,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4853,
											"end": 4876,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4853,
											"end": 4876,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4853,
											"end": 4861,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4853,
											"end": 4876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 4853,
											"end": 4876,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4853,
											"end": 4876,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4853,
											"end": 4876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 4853,
											"end": 4876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4853,
											"end": 4876,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 4853,
											"end": 4876,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4853,
											"end": 4888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 4853,
											"end": 4888,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4853,
											"end": 4888,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4853,
											"end": 4888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 4853,
											"end": 4888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4853,
											"end": 4888,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 4853,
											"end": 4888,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4838,
											"end": 4889,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4838,
											"end": 4889,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4653,
											"end": 4892,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4653,
											"end": 4892,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4653,
											"end": 4892,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4653,
											"end": 4892,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4653,
											"end": 4892,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4653,
											"end": 4892,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 23,
											"value": "258"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 90,
											"end": 270,
											"name": "tag",
											"source": 23,
											"value": "259"
										},
										{
											"begin": 90,
											"end": 270,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 138,
											"end": 215,
											"name": "PUSH",
											"source": 23,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 135,
											"end": 136,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 128,
											"end": 216,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 235,
											"end": 239,
											"name": "PUSH",
											"source": 23,
											"value": "11"
										},
										{
											"begin": 232,
											"end": 233,
											"name": "PUSH",
											"source": 23,
											"value": "4"
										},
										{
											"begin": 225,
											"end": 240,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 259,
											"end": 263,
											"name": "PUSH",
											"source": 23,
											"value": "24"
										},
										{
											"begin": 256,
											"end": 257,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 249,
											"end": 264,
											"name": "REVERT",
											"source": 23
										},
										{
											"begin": 276,
											"end": 467,
											"name": "tag",
											"source": 23,
											"value": "42"
										},
										{
											"begin": 276,
											"end": 467,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 316,
											"end": 319,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 335,
											"end": 355,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "328"
										},
										{
											"begin": 353,
											"end": 354,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 335,
											"end": 355,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "258"
										},
										{
											"begin": 335,
											"end": 355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 335,
											"end": 355,
											"name": "tag",
											"source": 23,
											"value": "328"
										},
										{
											"begin": 335,
											"end": 355,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 330,
											"end": 355,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 330,
											"end": 355,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 369,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "329"
										},
										{
											"begin": 387,
											"end": 388,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 369,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "258"
										},
										{
											"begin": 369,
											"end": 389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 369,
											"end": 389,
											"name": "tag",
											"source": 23,
											"value": "329"
										},
										{
											"begin": 369,
											"end": 389,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 364,
											"end": 389,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 364,
											"end": 389,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 412,
											"end": 413,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 409,
											"end": 410,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 405,
											"end": 414,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 398,
											"end": 414,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 398,
											"end": 414,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 433,
											"end": 436,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 430,
											"end": 431,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 427,
											"end": 437,
											"name": "GT",
											"source": 23
										},
										{
											"begin": 424,
											"end": 460,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 424,
											"end": 460,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "330"
										},
										{
											"begin": 424,
											"end": 460,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 440,
											"end": 458,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "331"
										},
										{
											"begin": 440,
											"end": 458,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "259"
										},
										{
											"begin": 440,
											"end": 458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 440,
											"end": 458,
											"name": "tag",
											"source": 23,
											"value": "331"
										},
										{
											"begin": 440,
											"end": 458,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 424,
											"end": 460,
											"name": "tag",
											"source": 23,
											"value": "330"
										},
										{
											"begin": 424,
											"end": 460,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 276,
											"end": 467,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 276,
											"end": 467,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 276,
											"end": 467,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 276,
											"end": 467,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 276,
											"end": 467,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 473,
											"end": 883,
											"name": "tag",
											"source": 23,
											"value": "44"
										},
										{
											"begin": 473,
											"end": 883,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 513,
											"end": 520,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 536,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "333"
										},
										{
											"begin": 554,
											"end": 555,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 536,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "258"
										},
										{
											"begin": 536,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 536,
											"end": 556,
											"name": "tag",
											"source": 23,
											"value": "333"
										},
										{
											"begin": 536,
											"end": 556,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 531,
											"end": 556,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 531,
											"end": 556,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 570,
											"end": 590,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "334"
										},
										{
											"begin": 588,
											"end": 589,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 570,
											"end": 590,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "258"
										},
										{
											"begin": 570,
											"end": 590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 570,
											"end": 590,
											"name": "tag",
											"source": 23,
											"value": "334"
										},
										{
											"begin": 570,
											"end": 590,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 565,
											"end": 590,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 565,
											"end": 590,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 625,
											"end": 626,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 622,
											"end": 623,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 618,
											"end": 627,
											"name": "MUL",
											"source": 23
										},
										{
											"begin": 647,
											"end": 677,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "335"
										},
										{
											"begin": 665,
											"end": 676,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 647,
											"end": 677,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "258"
										},
										{
											"begin": 647,
											"end": 677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 647,
											"end": 677,
											"name": "tag",
											"source": 23,
											"value": "335"
										},
										{
											"begin": 647,
											"end": 677,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 636,
											"end": 677,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 636,
											"end": 677,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 826,
											"end": 827,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 817,
											"end": 824,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 813,
											"end": 828,
											"name": "DIV",
											"source": 23
										},
										{
											"begin": 810,
											"end": 811,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 807,
											"end": 829,
											"name": "EQ",
											"source": 23
										},
										{
											"begin": 787,
											"end": 788,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 780,
											"end": 789,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 760,
											"end": 843,
											"name": "OR",
											"source": 23
										},
										{
											"begin": 737,
											"end": 876,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "336"
										},
										{
											"begin": 737,
											"end": 876,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 856,
											"end": 874,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "337"
										},
										{
											"begin": 856,
											"end": 874,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "259"
										},
										{
											"begin": 856,
											"end": 874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 856,
											"end": 874,
											"name": "tag",
											"source": 23,
											"value": "337"
										},
										{
											"begin": 856,
											"end": 874,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 737,
											"end": 876,
											"name": "tag",
											"source": 23,
											"value": "336"
										},
										{
											"begin": 737,
											"end": 876,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 521,
											"end": 883,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 473,
											"end": 883,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 473,
											"end": 883,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 473,
											"end": 883,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 473,
											"end": 883,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 473,
											"end": 883,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 889,
											"end": 1069,
											"name": "tag",
											"source": 23,
											"value": "260"
										},
										{
											"begin": 889,
											"end": 1069,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 937,
											"end": 1014,
											"name": "PUSH",
											"source": 23,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 934,
											"end": 935,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 927,
											"end": 1015,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 1034,
											"end": 1038,
											"name": "PUSH",
											"source": 23,
											"value": "12"
										},
										{
											"begin": 1031,
											"end": 1032,
											"name": "PUSH",
											"source": 23,
											"value": "4"
										},
										{
											"begin": 1024,
											"end": 1039,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 1058,
											"end": 1062,
											"name": "PUSH",
											"source": 23,
											"value": "24"
										},
										{
											"begin": 1055,
											"end": 1056,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 1048,
											"end": 1063,
											"name": "REVERT",
											"source": 23
										},
										{
											"begin": 1075,
											"end": 1260,
											"name": "tag",
											"source": 23,
											"value": "46"
										},
										{
											"begin": 1075,
											"end": 1260,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1115,
											"end": 1116,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 1132,
											"end": 1152,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "340"
										},
										{
											"begin": 1150,
											"end": 1151,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 1132,
											"end": 1152,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "258"
										},
										{
											"begin": 1132,
											"end": 1152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 1132,
											"end": 1152,
											"name": "tag",
											"source": 23,
											"value": "340"
										},
										{
											"begin": 1132,
											"end": 1152,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1127,
											"end": 1152,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 1127,
											"end": 1152,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 1166,
											"end": 1186,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "341"
										},
										{
											"begin": 1184,
											"end": 1185,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 1166,
											"end": 1186,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "258"
										},
										{
											"begin": 1166,
											"end": 1186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 1166,
											"end": 1186,
											"name": "tag",
											"source": 23,
											"value": "341"
										},
										{
											"begin": 1166,
											"end": 1186,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1161,
											"end": 1186,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 1161,
											"end": 1186,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 1205,
											"end": 1206,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 1195,
											"end": 1230,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "342"
										},
										{
											"begin": 1195,
											"end": 1230,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "343"
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "260"
										},
										{
											"begin": 1210,
											"end": 1228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "tag",
											"source": 23,
											"value": "343"
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1195,
											"end": 1230,
											"name": "tag",
											"source": 23,
											"value": "342"
										},
										{
											"begin": 1195,
											"end": 1230,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1252,
											"end": 1253,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 1249,
											"end": 1250,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 1245,
											"end": 1254,
											"name": "DIV",
											"source": 23
										},
										{
											"begin": 1240,
											"end": 1254,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 1240,
											"end": 1254,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 1075,
											"end": 1260,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 1075,
											"end": 1260,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 1075,
											"end": 1260,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 1075,
											"end": 1260,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 1075,
											"end": 1260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 1266,
											"end": 1392,
											"name": "tag",
											"source": 23,
											"value": "261"
										},
										{
											"begin": 1266,
											"end": 1392,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1303,
											"end": 1310,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 1343,
											"end": 1385,
											"name": "PUSH",
											"source": 23,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1336,
											"end": 1341,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 1332,
											"end": 1386,
											"name": "AND",
											"source": 23
										},
										{
											"begin": 1321,
											"end": 1386,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 1321,
											"end": 1386,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 1266,
											"end": 1392,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 1266,
											"end": 1392,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 1266,
											"end": 1392,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 1266,
											"end": 1392,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 1398,
											"end": 1494,
											"name": "tag",
											"source": 23,
											"value": "262"
										},
										{
											"begin": 1398,
											"end": 1494,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1435,
											"end": 1442,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 1464,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "346"
										},
										{
											"begin": 1482,
											"end": 1487,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 1464,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "261"
										},
										{
											"begin": 1464,
											"end": 1488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 1464,
											"end": 1488,
											"name": "tag",
											"source": 23,
											"value": "346"
										},
										{
											"begin": 1464,
											"end": 1488,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1453,
											"end": 1488,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 1453,
											"end": 1488,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 1398,
											"end": 1494,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 1398,
											"end": 1494,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 1398,
											"end": 1494,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 1398,
											"end": 1494,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 1500,
											"end": 1618,
											"name": "tag",
											"source": 23,
											"value": "263"
										},
										{
											"begin": 1500,
											"end": 1618,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1587,
											"end": 1611,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "348"
										},
										{
											"begin": 1605,
											"end": 1610,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 1587,
											"end": 1611,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "262"
										},
										{
											"begin": 1587,
											"end": 1611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 1587,
											"end": 1611,
											"name": "tag",
											"source": 23,
											"value": "348"
										},
										{
											"begin": 1587,
											"end": 1611,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1582,
											"end": 1585,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 1575,
											"end": 1612,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 1500,
											"end": 1618,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 1500,
											"end": 1618,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 1500,
											"end": 1618,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 1624,
											"end": 1846,
											"name": "tag",
											"source": 23,
											"value": "55"
										},
										{
											"begin": 1624,
											"end": 1846,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1717,
											"end": 1721,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 1755,
											"end": 1757,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 1744,
											"end": 1753,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 1740,
											"end": 1758,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 1732,
											"end": 1758,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 1732,
											"end": 1758,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 1768,
											"end": 1839,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "350"
										},
										{
											"begin": 1836,
											"end": 1837,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 1825,
											"end": 1834,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 1821,
											"end": 1838,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 1812,
											"end": 1818,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 1768,
											"end": 1839,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "263"
										},
										{
											"begin": 1768,
											"end": 1839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 1768,
											"end": 1839,
											"name": "tag",
											"source": 23,
											"value": "350"
										},
										{
											"begin": 1768,
											"end": 1839,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1624,
											"end": 1846,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 1624,
											"end": 1846,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 1624,
											"end": 1846,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 1624,
											"end": 1846,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 1624,
											"end": 1846,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 1852,
											"end": 1970,
											"name": "tag",
											"source": 23,
											"value": "264"
										},
										{
											"begin": 1852,
											"end": 1970,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1939,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "352"
										},
										{
											"begin": 1957,
											"end": 1962,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 1939,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "258"
										},
										{
											"begin": 1939,
											"end": 1963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 1939,
											"end": 1963,
											"name": "tag",
											"source": 23,
											"value": "352"
										},
										{
											"begin": 1939,
											"end": 1963,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1934,
											"end": 1937,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 1927,
											"end": 1964,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 1852,
											"end": 1970,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 1852,
											"end": 1970,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 1852,
											"end": 1970,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 1976,
											"end": 2198,
											"name": "tag",
											"source": 23,
											"value": "60"
										},
										{
											"begin": 1976,
											"end": 2198,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 2069,
											"end": 2073,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 2107,
											"end": 2109,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 2096,
											"end": 2105,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 2092,
											"end": 2110,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 2084,
											"end": 2110,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 2084,
											"end": 2110,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 2120,
											"end": 2191,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "354"
										},
										{
											"begin": 2188,
											"end": 2189,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 2177,
											"end": 2186,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 2173,
											"end": 2190,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 2164,
											"end": 2170,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 2120,
											"end": 2191,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "264"
										},
										{
											"begin": 2120,
											"end": 2191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 2120,
											"end": 2191,
											"name": "tag",
											"source": 23,
											"value": "354"
										},
										{
											"begin": 2120,
											"end": 2191,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1976,
											"end": 2198,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 1976,
											"end": 2198,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 1976,
											"end": 2198,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 1976,
											"end": 2198,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 1976,
											"end": 2198,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 2204,
											"end": 2279,
											"name": "tag",
											"source": 23,
											"value": "265"
										},
										{
											"begin": 2204,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 2237,
											"end": 2243,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 2270,
											"end": 2272,
											"name": "PUSH",
											"source": 23,
											"value": "40"
										},
										{
											"begin": 2264,
											"end": 2273,
											"name": "MLOAD",
											"source": 23
										},
										{
											"begin": 2254,
											"end": 2273,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 2254,
											"end": 2273,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 2204,
											"end": 2279,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 2204,
											"end": 2279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 2285,
											"end": 2402,
											"name": "tag",
											"source": 23,
											"value": "266"
										},
										{
											"begin": 2285,
											"end": 2402,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 2394,
											"end": 2395,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 2391,
											"end": 2392,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 2384,
											"end": 2396,
											"name": "REVERT",
											"source": 23
										},
										{
											"begin": 2408,
											"end": 2525,
											"name": "tag",
											"source": 23,
											"value": "267"
										},
										{
											"begin": 2408,
											"end": 2525,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 2517,
											"end": 2518,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 2514,
											"end": 2515,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 2507,
											"end": 2519,
											"name": "REVERT",
											"source": 23
										},
										{
											"begin": 2531,
											"end": 2648,
											"name": "tag",
											"source": 23,
											"value": "268"
										},
										{
											"begin": 2531,
											"end": 2648,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 2640,
											"end": 2641,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 2637,
											"end": 2638,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 2630,
											"end": 2642,
											"name": "REVERT",
											"source": 23
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "tag",
											"source": 23,
											"value": "269"
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 2763,
											"end": 2764,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 2760,
											"end": 2761,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 2753,
											"end": 2765,
											"name": "REVERT",
											"source": 23
										},
										{
											"begin": 2777,
											"end": 2879,
											"name": "tag",
											"source": 23,
											"value": "270"
										},
										{
											"begin": 2777,
											"end": 2879,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 2818,
											"end": 2824,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 2869,
											"end": 2871,
											"name": "PUSH",
											"source": 23,
											"value": "1F"
										},
										{
											"begin": 2865,
											"end": 2872,
											"name": "NOT",
											"source": 23
										},
										{
											"begin": 2860,
											"end": 2862,
											"name": "PUSH",
											"source": 23,
											"value": "1F"
										},
										{
											"begin": 2853,
											"end": 2858,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 2849,
											"end": 2863,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 2845,
											"end": 2873,
											"name": "AND",
											"source": 23
										},
										{
											"begin": 2835,
											"end": 2873,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 2835,
											"end": 2873,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 2777,
											"end": 2879,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 2777,
											"end": 2879,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 2777,
											"end": 2879,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 2777,
											"end": 2879,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 2885,
											"end": 3065,
											"name": "tag",
											"source": 23,
											"value": "271"
										},
										{
											"begin": 2885,
											"end": 3065,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 2933,
											"end": 3010,
											"name": "PUSH",
											"source": 23,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2930,
											"end": 2931,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 2923,
											"end": 3011,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 3030,
											"end": 3034,
											"name": "PUSH",
											"source": 23,
											"value": "41"
										},
										{
											"begin": 3027,
											"end": 3028,
											"name": "PUSH",
											"source": 23,
											"value": "4"
										},
										{
											"begin": 3020,
											"end": 3035,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 3054,
											"end": 3058,
											"name": "PUSH",
											"source": 23,
											"value": "24"
										},
										{
											"begin": 3051,
											"end": 3052,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 3044,
											"end": 3059,
											"name": "REVERT",
											"source": 23
										},
										{
											"begin": 3071,
											"end": 3352,
											"name": "tag",
											"source": 23,
											"value": "272"
										},
										{
											"begin": 3071,
											"end": 3352,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 3154,
											"end": 3181,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "363"
										},
										{
											"begin": 3176,
											"end": 3180,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 3154,
											"end": 3181,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "270"
										},
										{
											"begin": 3154,
											"end": 3181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 3154,
											"end": 3181,
											"name": "tag",
											"source": 23,
											"value": "363"
										},
										{
											"begin": 3154,
											"end": 3181,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 3146,
											"end": 3152,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 3142,
											"end": 3182,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 3284,
											"end": 3290,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 3272,
											"end": 3282,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 3269,
											"end": 3291,
											"name": "LT",
											"source": 23
										},
										{
											"begin": 3248,
											"end": 3266,
											"name": "PUSH",
											"source": 23,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3236,
											"end": 3246,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 3233,
											"end": 3267,
											"name": "GT",
											"source": 23
										},
										{
											"begin": 3230,
											"end": 3292,
											"name": "OR",
											"source": 23
										},
										{
											"begin": 3227,
											"end": 3315,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 3227,
											"end": 3315,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "364"
										},
										{
											"begin": 3227,
											"end": 3315,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 3295,
											"end": 3313,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "365"
										},
										{
											"begin": 3295,
											"end": 3313,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "271"
										},
										{
											"begin": 3295,
											"end": 3313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 3295,
											"end": 3313,
											"name": "tag",
											"source": 23,
											"value": "365"
										},
										{
											"begin": 3295,
											"end": 3313,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 3227,
											"end": 3315,
											"name": "tag",
											"source": 23,
											"value": "364"
										},
										{
											"begin": 3227,
											"end": 3315,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 3335,
											"end": 3345,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 3331,
											"end": 3333,
											"name": "PUSH",
											"source": 23,
											"value": "40"
										},
										{
											"begin": 3324,
											"end": 3346,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 3114,
											"end": 3352,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 3071,
											"end": 3352,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 3071,
											"end": 3352,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 3071,
											"end": 3352,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 3358,
											"end": 3487,
											"name": "tag",
											"source": 23,
											"value": "273"
										},
										{
											"begin": 3358,
											"end": 3487,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 3392,
											"end": 3398,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 3419,
											"end": 3439,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "367"
										},
										{
											"begin": 3419,
											"end": 3439,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "265"
										},
										{
											"begin": 3419,
											"end": 3439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 3419,
											"end": 3439,
											"name": "tag",
											"source": 23,
											"value": "367"
										},
										{
											"begin": 3419,
											"end": 3439,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 3409,
											"end": 3439,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 3409,
											"end": 3439,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 3448,
											"end": 3481,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "368"
										},
										{
											"begin": 3476,
											"end": 3480,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 3468,
											"end": 3474,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 3448,
											"end": 3481,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "272"
										},
										{
											"begin": 3448,
											"end": 3481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 3448,
											"end": 3481,
											"name": "tag",
											"source": 23,
											"value": "368"
										},
										{
											"begin": 3448,
											"end": 3481,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 3358,
											"end": 3487,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 3358,
											"end": 3487,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 3358,
											"end": 3487,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 3358,
											"end": 3487,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 3493,
											"end": 3801,
											"name": "tag",
											"source": 23,
											"value": "274"
										},
										{
											"begin": 3493,
											"end": 3801,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 3555,
											"end": 3559,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 3645,
											"end": 3663,
											"name": "PUSH",
											"source": 23,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3637,
											"end": 3643,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 3634,
											"end": 3664,
											"name": "GT",
											"source": 23
										},
										{
											"begin": 3631,
											"end": 3687,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 3631,
											"end": 3687,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "370"
										},
										{
											"begin": 3631,
											"end": 3687,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 3667,
											"end": 3685,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "371"
										},
										{
											"begin": 3667,
											"end": 3685,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "271"
										},
										{
											"begin": 3667,
											"end": 3685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 3667,
											"end": 3685,
											"name": "tag",
											"source": 23,
											"value": "371"
										},
										{
											"begin": 3667,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 3631,
											"end": 3687,
											"name": "tag",
											"source": 23,
											"value": "370"
										},
										{
											"begin": 3631,
											"end": 3687,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 3705,
											"end": 3734,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "372"
										},
										{
											"begin": 3727,
											"end": 3733,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 3705,
											"end": 3734,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "270"
										},
										{
											"begin": 3705,
											"end": 3734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 3705,
											"end": 3734,
											"name": "tag",
											"source": 23,
											"value": "372"
										},
										{
											"begin": 3705,
											"end": 3734,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 3697,
											"end": 3734,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 3697,
											"end": 3734,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 3789,
											"end": 3793,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 3783,
											"end": 3787,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 3779,
											"end": 3794,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 3771,
											"end": 3794,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 3771,
											"end": 3794,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 3493,
											"end": 3801,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 3493,
											"end": 3801,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 3493,
											"end": 3801,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 3493,
											"end": 3801,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 3807,
											"end": 3953,
											"name": "tag",
											"source": 23,
											"value": "275"
										},
										{
											"begin": 3807,
											"end": 3953,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 3904,
											"end": 3910,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 3899,
											"end": 3902,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 3894,
											"end": 3897,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 3881,
											"end": 3911,
											"name": "CALLDATACOPY",
											"source": 23
										},
										{
											"begin": 3945,
											"end": 3946,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 3936,
											"end": 3942,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 3931,
											"end": 3934,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 3927,
											"end": 3943,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 3920,
											"end": 3947,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 3807,
											"end": 3953,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 3807,
											"end": 3953,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 3807,
											"end": 3953,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 3807,
											"end": 3953,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 3959,
											"end": 4384,
											"name": "tag",
											"source": 23,
											"value": "276"
										},
										{
											"begin": 3959,
											"end": 4384,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 4037,
											"end": 4042,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 4062,
											"end": 4128,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "375"
										},
										{
											"begin": 4078,
											"end": 4127,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "376"
										},
										{
											"begin": 4120,
											"end": 4126,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 4078,
											"end": 4127,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "274"
										},
										{
											"begin": 4078,
											"end": 4127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 4078,
											"end": 4127,
											"name": "tag",
											"source": 23,
											"value": "376"
										},
										{
											"begin": 4078,
											"end": 4127,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 4062,
											"end": 4128,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "273"
										},
										{
											"begin": 4062,
											"end": 4128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 4062,
											"end": 4128,
											"name": "tag",
											"source": 23,
											"value": "375"
										},
										{
											"begin": 4062,
											"end": 4128,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 4053,
											"end": 4128,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 4053,
											"end": 4128,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 4151,
											"end": 4157,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 4144,
											"end": 4149,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 4137,
											"end": 4158,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 4189,
											"end": 4193,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 4182,
											"end": 4187,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 4178,
											"end": 4194,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 4227,
											"end": 4230,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 4218,
											"end": 4224,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 4213,
											"end": 4216,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 4209,
											"end": 4225,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 4206,
											"end": 4231,
											"name": "GT",
											"source": 23
										},
										{
											"begin": 4203,
											"end": 4315,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 4203,
											"end": 4315,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "377"
										},
										{
											"begin": 4203,
											"end": 4315,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 4234,
											"end": 4313,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "378"
										},
										{
											"begin": 4234,
											"end": 4313,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "269"
										},
										{
											"begin": 4234,
											"end": 4313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 4234,
											"end": 4313,
											"name": "tag",
											"source": 23,
											"value": "378"
										},
										{
											"begin": 4234,
											"end": 4313,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 4203,
											"end": 4315,
											"name": "tag",
											"source": 23,
											"value": "377"
										},
										{
											"begin": 4203,
											"end": 4315,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 4324,
											"end": 4378,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "379"
										},
										{
											"begin": 4371,
											"end": 4377,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 4366,
											"end": 4369,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 4361,
											"end": 4364,
											"name": "DUP6",
											"source": 23
										},
										{
											"begin": 4324,
											"end": 4378,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "275"
										},
										{
											"begin": 4324,
											"end": 4378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 4324,
											"end": 4378,
											"name": "tag",
											"source": 23,
											"value": "379"
										},
										{
											"begin": 4324,
											"end": 4378,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 4043,
											"end": 4384,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 3959,
											"end": 4384,
											"name": "SWAP4",
											"source": 23
										},
										{
											"begin": 3959,
											"end": 4384,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 3959,
											"end": 4384,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 3959,
											"end": 4384,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 3959,
											"end": 4384,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 3959,
											"end": 4384,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 4404,
											"end": 4744,
											"name": "tag",
											"source": 23,
											"value": "277"
										},
										{
											"begin": 4404,
											"end": 4744,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 4460,
											"end": 4465,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 4509,
											"end": 4512,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 4502,
											"end": 4506,
											"name": "PUSH",
											"source": 23,
											"value": "1F"
										},
										{
											"begin": 4494,
											"end": 4500,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 4490,
											"end": 4507,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 4486,
											"end": 4513,
											"name": "SLT",
											"source": 23
										},
										{
											"begin": 4476,
											"end": 4598,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "381"
										},
										{
											"begin": 4476,
											"end": 4598,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 4517,
											"end": 4596,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "382"
										},
										{
											"begin": 4517,
											"end": 4596,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "268"
										},
										{
											"begin": 4517,
											"end": 4596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 4517,
											"end": 4596,
											"name": "tag",
											"source": 23,
											"value": "382"
										},
										{
											"begin": 4517,
											"end": 4596,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 4476,
											"end": 4598,
											"name": "tag",
											"source": 23,
											"value": "381"
										},
										{
											"begin": 4476,
											"end": 4598,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 4634,
											"end": 4640,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 4621,
											"end": 4641,
											"name": "CALLDATALOAD",
											"source": 23
										},
										{
											"begin": 4659,
											"end": 4738,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "383"
										},
										{
											"begin": 4734,
											"end": 4737,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 4726,
											"end": 4732,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 4719,
											"end": 4723,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 4711,
											"end": 4717,
											"name": "DUP7",
											"source": 23
										},
										{
											"begin": 4707,
											"end": 4724,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 4659,
											"end": 4738,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "276"
										},
										{
											"begin": 4659,
											"end": 4738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 4659,
											"end": 4738,
											"name": "tag",
											"source": 23,
											"value": "383"
										},
										{
											"begin": 4659,
											"end": 4738,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 4650,
											"end": 4738,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 4650,
											"end": 4738,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 4466,
											"end": 4744,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 4404,
											"end": 4744,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 4404,
											"end": 4744,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 4404,
											"end": 4744,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 4404,
											"end": 4744,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 4404,
											"end": 4744,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 4750,
											"end": 4872,
											"name": "tag",
											"source": 23,
											"value": "278"
										},
										{
											"begin": 4750,
											"end": 4872,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 4823,
											"end": 4847,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "385"
										},
										{
											"begin": 4841,
											"end": 4846,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 4823,
											"end": 4847,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "258"
										},
										{
											"begin": 4823,
											"end": 4847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 4823,
											"end": 4847,
											"name": "tag",
											"source": 23,
											"value": "385"
										},
										{
											"begin": 4823,
											"end": 4847,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 4816,
											"end": 4821,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 4813,
											"end": 4848,
											"name": "EQ",
											"source": 23
										},
										{
											"begin": 4803,
											"end": 4866,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "386"
										},
										{
											"begin": 4803,
											"end": 4866,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 4862,
											"end": 4863,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 4859,
											"end": 4860,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 4852,
											"end": 4864,
											"name": "REVERT",
											"source": 23
										},
										{
											"begin": 4803,
											"end": 4866,
											"name": "tag",
											"source": 23,
											"value": "386"
										},
										{
											"begin": 4803,
											"end": 4866,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 4750,
											"end": 4872,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 4750,
											"end": 4872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 4878,
											"end": 5017,
											"name": "tag",
											"source": 23,
											"value": "279"
										},
										{
											"begin": 4878,
											"end": 5017,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 4924,
											"end": 4929,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 4962,
											"end": 4968,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 4949,
											"end": 4969,
											"name": "CALLDATALOAD",
											"source": 23
										},
										{
											"begin": 4940,
											"end": 4969,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 4940,
											"end": 4969,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 4978,
											"end": 5011,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "388"
										},
										{
											"begin": 5005,
											"end": 5010,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 4978,
											"end": 5011,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "278"
										},
										{
											"begin": 4978,
											"end": 5011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 4978,
											"end": 5011,
											"name": "tag",
											"source": 23,
											"value": "388"
										},
										{
											"begin": 4978,
											"end": 5011,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 4878,
											"end": 5017,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 4878,
											"end": 5017,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 4878,
											"end": 5017,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 4878,
											"end": 5017,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 4878,
											"end": 5017,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 5023,
											"end": 5677,
											"name": "tag",
											"source": 23,
											"value": "75"
										},
										{
											"begin": 5023,
											"end": 5677,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 5101,
											"end": 5107,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 5109,
											"end": 5115,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 5158,
											"end": 5160,
											"name": "PUSH",
											"source": 23,
											"value": "40"
										},
										{
											"begin": 5146,
											"end": 5155,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 5137,
											"end": 5144,
											"name": "DUP6",
											"source": 23
										},
										{
											"begin": 5133,
											"end": 5156,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 5129,
											"end": 5161,
											"name": "SLT",
											"source": 23
										},
										{
											"begin": 5126,
											"end": 5245,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 5126,
											"end": 5245,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "390"
										},
										{
											"begin": 5126,
											"end": 5245,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 5164,
											"end": 5243,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "391"
										},
										{
											"begin": 5164,
											"end": 5243,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "266"
										},
										{
											"begin": 5164,
											"end": 5243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 5164,
											"end": 5243,
											"name": "tag",
											"source": 23,
											"value": "391"
										},
										{
											"begin": 5164,
											"end": 5243,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 5126,
											"end": 5245,
											"name": "tag",
											"source": 23,
											"value": "390"
										},
										{
											"begin": 5126,
											"end": 5245,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 5312,
											"end": 5313,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 5301,
											"end": 5310,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 5297,
											"end": 5314,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 5284,
											"end": 5315,
											"name": "CALLDATALOAD",
											"source": 23
										},
										{
											"begin": 5342,
											"end": 5360,
											"name": "PUSH",
											"source": 23,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5334,
											"end": 5340,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 5331,
											"end": 5361,
											"name": "GT",
											"source": 23
										},
										{
											"begin": 5328,
											"end": 5445,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 5328,
											"end": 5445,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "392"
										},
										{
											"begin": 5328,
											"end": 5445,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 5364,
											"end": 5443,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "393"
										},
										{
											"begin": 5364,
											"end": 5443,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "267"
										},
										{
											"begin": 5364,
											"end": 5443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 5364,
											"end": 5443,
											"name": "tag",
											"source": 23,
											"value": "393"
										},
										{
											"begin": 5364,
											"end": 5443,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 5328,
											"end": 5445,
											"name": "tag",
											"source": 23,
											"value": "392"
										},
										{
											"begin": 5328,
											"end": 5445,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 5469,
											"end": 5532,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "394"
										},
										{
											"begin": 5524,
											"end": 5531,
											"name": "DUP6",
											"source": 23
										},
										{
											"begin": 5515,
											"end": 5521,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 5504,
											"end": 5513,
											"name": "DUP7",
											"source": 23
										},
										{
											"begin": 5500,
											"end": 5522,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 5469,
											"end": 5532,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "277"
										},
										{
											"begin": 5469,
											"end": 5532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 5469,
											"end": 5532,
											"name": "tag",
											"source": 23,
											"value": "394"
										},
										{
											"begin": 5469,
											"end": 5532,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 5459,
											"end": 5532,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 5459,
											"end": 5532,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 5255,
											"end": 5542,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 5581,
											"end": 5583,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 5607,
											"end": 5660,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "395"
										},
										{
											"begin": 5652,
											"end": 5659,
											"name": "DUP6",
											"source": 23
										},
										{
											"begin": 5643,
											"end": 5649,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 5632,
											"end": 5641,
											"name": "DUP7",
											"source": 23
										},
										{
											"begin": 5628,
											"end": 5650,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 5607,
											"end": 5660,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "279"
										},
										{
											"begin": 5607,
											"end": 5660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 5607,
											"end": 5660,
											"name": "tag",
											"source": 23,
											"value": "395"
										},
										{
											"begin": 5607,
											"end": 5660,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 5597,
											"end": 5660,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 5597,
											"end": 5660,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 5552,
											"end": 5670,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 5023,
											"end": 5677,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 5023,
											"end": 5677,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 5023,
											"end": 5677,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 5023,
											"end": 5677,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 5023,
											"end": 5677,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 5023,
											"end": 5677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 5683,
											"end": 5805,
											"name": "tag",
											"source": 23,
											"value": "280"
										},
										{
											"begin": 5683,
											"end": 5805,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 5756,
											"end": 5780,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "397"
										},
										{
											"begin": 5774,
											"end": 5779,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 5756,
											"end": 5780,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "262"
										},
										{
											"begin": 5756,
											"end": 5780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 5756,
											"end": 5780,
											"name": "tag",
											"source": 23,
											"value": "397"
										},
										{
											"begin": 5756,
											"end": 5780,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 5749,
											"end": 5754,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 5746,
											"end": 5781,
											"name": "EQ",
											"source": 23
										},
										{
											"begin": 5736,
											"end": 5799,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "398"
										},
										{
											"begin": 5736,
											"end": 5799,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 5795,
											"end": 5796,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 5792,
											"end": 5793,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 5785,
											"end": 5797,
											"name": "REVERT",
											"source": 23
										},
										{
											"begin": 5736,
											"end": 5799,
											"name": "tag",
											"source": 23,
											"value": "398"
										},
										{
											"begin": 5736,
											"end": 5799,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 5683,
											"end": 5805,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 5683,
											"end": 5805,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 5811,
											"end": 5950,
											"name": "tag",
											"source": 23,
											"value": "281"
										},
										{
											"begin": 5811,
											"end": 5950,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 5857,
											"end": 5862,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 5895,
											"end": 5901,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 5882,
											"end": 5902,
											"name": "CALLDATALOAD",
											"source": 23
										},
										{
											"begin": 5873,
											"end": 5902,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 5873,
											"end": 5902,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 5911,
											"end": 5944,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "400"
										},
										{
											"begin": 5938,
											"end": 5943,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 5911,
											"end": 5944,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "280"
										},
										{
											"begin": 5911,
											"end": 5944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 5911,
											"end": 5944,
											"name": "tag",
											"source": 23,
											"value": "400"
										},
										{
											"begin": 5911,
											"end": 5944,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 5811,
											"end": 5950,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 5811,
											"end": 5950,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 5811,
											"end": 5950,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 5811,
											"end": 5950,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 5811,
											"end": 5950,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 5956,
											"end": 6430,
											"name": "tag",
											"source": 23,
											"value": "80"
										},
										{
											"begin": 5956,
											"end": 6430,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 6024,
											"end": 6030,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 6032,
											"end": 6038,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 6081,
											"end": 6083,
											"name": "PUSH",
											"source": 23,
											"value": "40"
										},
										{
											"begin": 6069,
											"end": 6078,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 6060,
											"end": 6067,
											"name": "DUP6",
											"source": 23
										},
										{
											"begin": 6056,
											"end": 6079,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 6052,
											"end": 6084,
											"name": "SLT",
											"source": 23
										},
										{
											"begin": 6049,
											"end": 6168,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 6049,
											"end": 6168,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "402"
										},
										{
											"begin": 6049,
											"end": 6168,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 6087,
											"end": 6166,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "403"
										},
										{
											"begin": 6087,
											"end": 6166,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "266"
										},
										{
											"begin": 6087,
											"end": 6166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 6087,
											"end": 6166,
											"name": "tag",
											"source": 23,
											"value": "403"
										},
										{
											"begin": 6087,
											"end": 6166,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 6049,
											"end": 6168,
											"name": "tag",
											"source": 23,
											"value": "402"
										},
										{
											"begin": 6049,
											"end": 6168,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 6207,
											"end": 6208,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 6232,
											"end": 6285,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "404"
										},
										{
											"begin": 6277,
											"end": 6284,
											"name": "DUP6",
											"source": 23
										},
										{
											"begin": 6268,
											"end": 6274,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 6257,
											"end": 6266,
											"name": "DUP7",
											"source": 23
										},
										{
											"begin": 6253,
											"end": 6275,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 6232,
											"end": 6285,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "279"
										},
										{
											"begin": 6232,
											"end": 6285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 6232,
											"end": 6285,
											"name": "tag",
											"source": 23,
											"value": "404"
										},
										{
											"begin": 6232,
											"end": 6285,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 6222,
											"end": 6285,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 6222,
											"end": 6285,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 6178,
											"end": 6295,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 6334,
											"end": 6336,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 6360,
											"end": 6413,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "405"
										},
										{
											"begin": 6405,
											"end": 6412,
											"name": "DUP6",
											"source": 23
										},
										{
											"begin": 6396,
											"end": 6402,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 6385,
											"end": 6394,
											"name": "DUP7",
											"source": 23
										},
										{
											"begin": 6381,
											"end": 6403,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 6360,
											"end": 6413,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "281"
										},
										{
											"begin": 6360,
											"end": 6413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 6360,
											"end": 6413,
											"name": "tag",
											"source": 23,
											"value": "405"
										},
										{
											"begin": 6360,
											"end": 6413,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 6350,
											"end": 6413,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 6350,
											"end": 6413,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 6305,
											"end": 6423,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 5956,
											"end": 6430,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 5956,
											"end": 6430,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 5956,
											"end": 6430,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 5956,
											"end": 6430,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 5956,
											"end": 6430,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 5956,
											"end": 6430,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 6436,
											"end": 6526,
											"name": "tag",
											"source": 23,
											"value": "282"
										},
										{
											"begin": 6436,
											"end": 6526,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 6470,
											"end": 6477,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 6513,
											"end": 6518,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 6506,
											"end": 6519,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 6499,
											"end": 6520,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 6488,
											"end": 6520,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 6488,
											"end": 6520,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 6436,
											"end": 6526,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 6436,
											"end": 6526,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 6436,
											"end": 6526,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 6436,
											"end": 6526,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 6532,
											"end": 6641,
											"name": "tag",
											"source": 23,
											"value": "283"
										},
										{
											"begin": 6532,
											"end": 6641,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 6613,
											"end": 6634,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "408"
										},
										{
											"begin": 6628,
											"end": 6633,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 6613,
											"end": 6634,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "282"
										},
										{
											"begin": 6613,
											"end": 6634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 6613,
											"end": 6634,
											"name": "tag",
											"source": 23,
											"value": "408"
										},
										{
											"begin": 6613,
											"end": 6634,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 6608,
											"end": 6611,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 6601,
											"end": 6635,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 6532,
											"end": 6641,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 6532,
											"end": 6641,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 6532,
											"end": 6641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 6647,
											"end": 6857,
											"name": "tag",
											"source": 23,
											"value": "83"
										},
										{
											"begin": 6647,
											"end": 6857,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 6734,
											"end": 6738,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 6772,
											"end": 6774,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 6761,
											"end": 6770,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 6757,
											"end": 6775,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 6749,
											"end": 6775,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 6749,
											"end": 6775,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 6785,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "410"
										},
										{
											"begin": 6847,
											"end": 6848,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 6836,
											"end": 6845,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 6832,
											"end": 6849,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 6823,
											"end": 6829,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 6785,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "283"
										},
										{
											"begin": 6785,
											"end": 6850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 6785,
											"end": 6850,
											"name": "tag",
											"source": 23,
											"value": "410"
										},
										{
											"begin": 6785,
											"end": 6850,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 6647,
											"end": 6857,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 6647,
											"end": 6857,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 6647,
											"end": 6857,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 6647,
											"end": 6857,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 6647,
											"end": 6857,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 6863,
											"end": 7192,
											"name": "tag",
											"source": 23,
											"value": "90"
										},
										{
											"begin": 6863,
											"end": 7192,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 6922,
											"end": 6928,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 6971,
											"end": 6973,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 6959,
											"end": 6968,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 6950,
											"end": 6957,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 6946,
											"end": 6969,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 6942,
											"end": 6974,
											"name": "SLT",
											"source": 23
										},
										{
											"begin": 6939,
											"end": 7058,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 6939,
											"end": 7058,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "412"
										},
										{
											"begin": 6939,
											"end": 7058,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 6977,
											"end": 7056,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "413"
										},
										{
											"begin": 6977,
											"end": 7056,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "266"
										},
										{
											"begin": 6977,
											"end": 7056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 6977,
											"end": 7056,
											"name": "tag",
											"source": 23,
											"value": "413"
										},
										{
											"begin": 6977,
											"end": 7056,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 6939,
											"end": 7058,
											"name": "tag",
											"source": 23,
											"value": "412"
										},
										{
											"begin": 6939,
											"end": 7058,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 7097,
											"end": 7098,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 7122,
											"end": 7175,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "414"
										},
										{
											"begin": 7167,
											"end": 7174,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 7158,
											"end": 7164,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 7147,
											"end": 7156,
											"name": "DUP6",
											"source": 23
										},
										{
											"begin": 7143,
											"end": 7165,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 7122,
											"end": 7175,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "279"
										},
										{
											"begin": 7122,
											"end": 7175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 7122,
											"end": 7175,
											"name": "tag",
											"source": 23,
											"value": "414"
										},
										{
											"begin": 7122,
											"end": 7175,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 7112,
											"end": 7175,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 7112,
											"end": 7175,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 7068,
											"end": 7185,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 6863,
											"end": 7192,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 6863,
											"end": 7192,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 6863,
											"end": 7192,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 6863,
											"end": 7192,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 6863,
											"end": 7192,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 7198,
											"end": 7707,
											"name": "tag",
											"source": 23,
											"value": "99"
										},
										{
											"begin": 7198,
											"end": 7707,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 7267,
											"end": 7273,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 7316,
											"end": 7318,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 7304,
											"end": 7313,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 7295,
											"end": 7302,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 7291,
											"end": 7314,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 7287,
											"end": 7319,
											"name": "SLT",
											"source": 23
										},
										{
											"begin": 7284,
											"end": 7403,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 7284,
											"end": 7403,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "416"
										},
										{
											"begin": 7284,
											"end": 7403,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 7322,
											"end": 7401,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "417"
										},
										{
											"begin": 7322,
											"end": 7401,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "266"
										},
										{
											"begin": 7322,
											"end": 7401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 7322,
											"end": 7401,
											"name": "tag",
											"source": 23,
											"value": "417"
										},
										{
											"begin": 7322,
											"end": 7401,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 7284,
											"end": 7403,
											"name": "tag",
											"source": 23,
											"value": "416"
										},
										{
											"begin": 7284,
											"end": 7403,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 7470,
											"end": 7471,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 7459,
											"end": 7468,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 7455,
											"end": 7472,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 7442,
											"end": 7473,
											"name": "CALLDATALOAD",
											"source": 23
										},
										{
											"begin": 7500,
											"end": 7518,
											"name": "PUSH",
											"source": 23,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7492,
											"end": 7498,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 7489,
											"end": 7519,
											"name": "GT",
											"source": 23
										},
										{
											"begin": 7486,
											"end": 7603,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 7486,
											"end": 7603,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "418"
										},
										{
											"begin": 7486,
											"end": 7603,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 7522,
											"end": 7601,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "419"
										},
										{
											"begin": 7522,
											"end": 7601,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "267"
										},
										{
											"begin": 7522,
											"end": 7601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 7522,
											"end": 7601,
											"name": "tag",
											"source": 23,
											"value": "419"
										},
										{
											"begin": 7522,
											"end": 7601,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 7486,
											"end": 7603,
											"name": "tag",
											"source": 23,
											"value": "418"
										},
										{
											"begin": 7486,
											"end": 7603,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 7627,
											"end": 7690,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "420"
										},
										{
											"begin": 7682,
											"end": 7689,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 7673,
											"end": 7679,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 7662,
											"end": 7671,
											"name": "DUP6",
											"source": 23
										},
										{
											"begin": 7658,
											"end": 7680,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 7627,
											"end": 7690,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "277"
										},
										{
											"begin": 7627,
											"end": 7690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 7627,
											"end": 7690,
											"name": "tag",
											"source": 23,
											"value": "420"
										},
										{
											"begin": 7627,
											"end": 7690,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 7617,
											"end": 7690,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 7617,
											"end": 7690,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 7413,
											"end": 7700,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 7198,
											"end": 7707,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 7198,
											"end": 7707,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 7198,
											"end": 7707,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 7198,
											"end": 7707,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 7198,
											"end": 7707,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 7713,
											"end": 7812,
											"name": "tag",
											"source": 23,
											"value": "284"
										},
										{
											"begin": 7713,
											"end": 7812,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 7765,
											"end": 7771,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 7799,
											"end": 7804,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 7793,
											"end": 7805,
											"name": "MLOAD",
											"source": 23
										},
										{
											"begin": 7783,
											"end": 7805,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 7783,
											"end": 7805,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 7713,
											"end": 7812,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 7713,
											"end": 7812,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 7713,
											"end": 7812,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 7713,
											"end": 7812,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 7818,
											"end": 7987,
											"name": "tag",
											"source": 23,
											"value": "285"
										},
										{
											"begin": 7818,
											"end": 7987,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 7902,
											"end": 7913,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 7936,
											"end": 7942,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 7931,
											"end": 7934,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 7924,
											"end": 7943,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 7976,
											"end": 7980,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 7971,
											"end": 7974,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 7967,
											"end": 7981,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 7952,
											"end": 7981,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 7952,
											"end": 7981,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 7818,
											"end": 7987,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 7818,
											"end": 7987,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 7818,
											"end": 7987,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 7818,
											"end": 7987,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 7818,
											"end": 7987,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 7993,
											"end": 8239,
											"name": "tag",
											"source": 23,
											"value": "286"
										},
										{
											"begin": 7993,
											"end": 8239,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 8074,
											"end": 8075,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 8084,
											"end": 8197,
											"name": "tag",
											"source": 23,
											"value": "424"
										},
										{
											"begin": 8084,
											"end": 8197,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 8098,
											"end": 8104,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 8095,
											"end": 8096,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 8092,
											"end": 8105,
											"name": "LT",
											"source": 23
										},
										{
											"begin": 8084,
											"end": 8197,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 8084,
											"end": 8197,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "426"
										},
										{
											"begin": 8084,
											"end": 8197,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 8183,
											"end": 8184,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 8178,
											"end": 8181,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 8174,
											"end": 8185,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 8168,
											"end": 8186,
											"name": "MLOAD",
											"source": 23
										},
										{
											"begin": 8164,
											"end": 8165,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 8159,
											"end": 8162,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 8155,
											"end": 8166,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 8148,
											"end": 8187,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 8120,
											"end": 8122,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 8117,
											"end": 8118,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 8113,
											"end": 8123,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 8108,
											"end": 8123,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 8108,
											"end": 8123,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 8084,
											"end": 8197,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "424"
										},
										{
											"begin": 8084,
											"end": 8197,
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 8084,
											"end": 8197,
											"name": "tag",
											"source": 23,
											"value": "426"
										},
										{
											"begin": 8084,
											"end": 8197,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 8231,
											"end": 8232,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 8222,
											"end": 8228,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 8217,
											"end": 8220,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 8213,
											"end": 8229,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 8206,
											"end": 8233,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 8055,
											"end": 8239,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 7993,
											"end": 8239,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 7993,
											"end": 8239,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 7993,
											"end": 8239,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 7993,
											"end": 8239,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 8245,
											"end": 8622,
											"name": "tag",
											"source": 23,
											"value": "287"
										},
										{
											"begin": 8245,
											"end": 8622,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 8333,
											"end": 8336,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 8361,
											"end": 8400,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "428"
										},
										{
											"begin": 8394,
											"end": 8399,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 8361,
											"end": 8400,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "284"
										},
										{
											"begin": 8361,
											"end": 8400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 8361,
											"end": 8400,
											"name": "tag",
											"source": 23,
											"value": "428"
										},
										{
											"begin": 8361,
											"end": 8400,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 8416,
											"end": 8487,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "429"
										},
										{
											"begin": 8480,
											"end": 8486,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 8475,
											"end": 8478,
											"name": "DUP6",
											"source": 23
										},
										{
											"begin": 8416,
											"end": 8487,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "285"
										},
										{
											"begin": 8416,
											"end": 8487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 8416,
											"end": 8487,
											"name": "tag",
											"source": 23,
											"value": "429"
										},
										{
											"begin": 8416,
											"end": 8487,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 8409,
											"end": 8487,
											"name": "SWAP4",
											"source": 23
										},
										{
											"begin": 8409,
											"end": 8487,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 8496,
											"end": 8561,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "430"
										},
										{
											"begin": 8554,
											"end": 8560,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 8549,
											"end": 8552,
											"name": "DUP6",
											"source": 23
										},
										{
											"begin": 8542,
											"end": 8546,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 8535,
											"end": 8540,
											"name": "DUP7",
											"source": 23
										},
										{
											"begin": 8531,
											"end": 8547,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 8496,
											"end": 8561,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "286"
										},
										{
											"begin": 8496,
											"end": 8561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 8496,
											"end": 8561,
											"name": "tag",
											"source": 23,
											"value": "430"
										},
										{
											"begin": 8496,
											"end": 8561,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 8586,
											"end": 8615,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "431"
										},
										{
											"begin": 8608,
											"end": 8614,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 8586,
											"end": 8615,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "270"
										},
										{
											"begin": 8586,
											"end": 8615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 8586,
											"end": 8615,
											"name": "tag",
											"source": 23,
											"value": "431"
										},
										{
											"begin": 8586,
											"end": 8615,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 8581,
											"end": 8584,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 8577,
											"end": 8616,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 8570,
											"end": 8616,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 8570,
											"end": 8616,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 8337,
											"end": 8622,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 8245,
											"end": 8622,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 8245,
											"end": 8622,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 8245,
											"end": 8622,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 8245,
											"end": 8622,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 8245,
											"end": 8622,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 8628,
											"end": 8941,
											"name": "tag",
											"source": 23,
											"value": "110"
										},
										{
											"begin": 8628,
											"end": 8941,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 8741,
											"end": 8745,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 8779,
											"end": 8781,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 8768,
											"end": 8777,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 8764,
											"end": 8782,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 8756,
											"end": 8782,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 8756,
											"end": 8782,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 8828,
											"end": 8837,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 8822,
											"end": 8826,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 8818,
											"end": 8838,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 8814,
											"end": 8815,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 8803,
											"end": 8812,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 8799,
											"end": 8816,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 8792,
											"end": 8839,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 8856,
											"end": 8934,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "433"
										},
										{
											"begin": 8929,
											"end": 8933,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 8920,
											"end": 8926,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 8856,
											"end": 8934,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "287"
										},
										{
											"begin": 8856,
											"end": 8934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 8856,
											"end": 8934,
											"name": "tag",
											"source": 23,
											"value": "433"
										},
										{
											"begin": 8856,
											"end": 8934,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 8848,
											"end": 8934,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 8848,
											"end": 8934,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 8628,
											"end": 8941,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 8628,
											"end": 8941,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 8628,
											"end": 8941,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 8628,
											"end": 8941,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 8628,
											"end": 8941,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 8947,
											"end": 9276,
											"name": "tag",
											"source": 23,
											"value": "130"
										},
										{
											"begin": 8947,
											"end": 9276,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 9006,
											"end": 9012,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 9055,
											"end": 9057,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 9043,
											"end": 9052,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 9034,
											"end": 9041,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 9030,
											"end": 9053,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 9026,
											"end": 9058,
											"name": "SLT",
											"source": 23
										},
										{
											"begin": 9023,
											"end": 9142,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 9023,
											"end": 9142,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "435"
										},
										{
											"begin": 9023,
											"end": 9142,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 9061,
											"end": 9140,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "436"
										},
										{
											"begin": 9061,
											"end": 9140,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "266"
										},
										{
											"begin": 9061,
											"end": 9140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 9061,
											"end": 9140,
											"name": "tag",
											"source": 23,
											"value": "436"
										},
										{
											"begin": 9061,
											"end": 9140,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 9023,
											"end": 9142,
											"name": "tag",
											"source": 23,
											"value": "435"
										},
										{
											"begin": 9023,
											"end": 9142,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 9181,
											"end": 9182,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 9206,
											"end": 9259,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "437"
										},
										{
											"begin": 9251,
											"end": 9258,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 9242,
											"end": 9248,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 9231,
											"end": 9240,
											"name": "DUP6",
											"source": 23
										},
										{
											"begin": 9227,
											"end": 9249,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 9206,
											"end": 9259,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "281"
										},
										{
											"begin": 9206,
											"end": 9259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 9206,
											"end": 9259,
											"name": "tag",
											"source": 23,
											"value": "437"
										},
										{
											"begin": 9206,
											"end": 9259,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 9196,
											"end": 9259,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 9196,
											"end": 9259,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 9152,
											"end": 9269,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 8947,
											"end": 9276,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 8947,
											"end": 9276,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 8947,
											"end": 9276,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 8947,
											"end": 9276,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 8947,
											"end": 9276,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 9282,
											"end": 9445,
											"name": "tag",
											"source": 23,
											"value": "288"
										},
										{
											"begin": 9282,
											"end": 9445,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 9422,
											"end": 9437,
											"name": "PUSH",
											"source": 23,
											"value": "4E6F7420746865206F776E657200000000000000000000000000000000000000"
										},
										{
											"begin": 9418,
											"end": 9419,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 9410,
											"end": 9416,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 9406,
											"end": 9420,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 9399,
											"end": 9438,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 9282,
											"end": 9445,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 9282,
											"end": 9445,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 9451,
											"end": 9817,
											"name": "tag",
											"source": 23,
											"value": "289"
										},
										{
											"begin": 9451,
											"end": 9817,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 9593,
											"end": 9596,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 9614,
											"end": 9681,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "440"
										},
										{
											"begin": 9678,
											"end": 9680,
											"name": "PUSH",
											"source": 23,
											"value": "D"
										},
										{
											"begin": 9673,
											"end": 9676,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 9614,
											"end": 9681,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "285"
										},
										{
											"begin": 9614,
											"end": 9681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 9614,
											"end": 9681,
											"name": "tag",
											"source": 23,
											"value": "440"
										},
										{
											"begin": 9614,
											"end": 9681,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 9607,
											"end": 9681,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 9607,
											"end": 9681,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 9690,
											"end": 9783,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "441"
										},
										{
											"begin": 9779,
											"end": 9782,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 9690,
											"end": 9783,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "288"
										},
										{
											"begin": 9690,
											"end": 9783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 9690,
											"end": 9783,
											"name": "tag",
											"source": 23,
											"value": "441"
										},
										{
											"begin": 9690,
											"end": 9783,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 9808,
											"end": 9810,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 9803,
											"end": 9806,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 9799,
											"end": 9811,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 9792,
											"end": 9811,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 9792,
											"end": 9811,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 9451,
											"end": 9817,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 9451,
											"end": 9817,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 9451,
											"end": 9817,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 9451,
											"end": 9817,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 9823,
											"end": 10242,
											"name": "tag",
											"source": 23,
											"value": "178"
										},
										{
											"begin": 9823,
											"end": 10242,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 9989,
											"end": 9993,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 10027,
											"end": 10029,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 10016,
											"end": 10025,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 10012,
											"end": 10030,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 10004,
											"end": 10030,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 10004,
											"end": 10030,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 10076,
											"end": 10085,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 10070,
											"end": 10074,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 10066,
											"end": 10086,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 10062,
											"end": 10063,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 10051,
											"end": 10060,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 10047,
											"end": 10064,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 10040,
											"end": 10087,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 10104,
											"end": 10235,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "443"
										},
										{
											"begin": 10230,
											"end": 10234,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 10104,
											"end": 10235,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "289"
										},
										{
											"begin": 10104,
											"end": 10235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 10104,
											"end": 10235,
											"name": "tag",
											"source": 23,
											"value": "443"
										},
										{
											"begin": 10104,
											"end": 10235,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 10096,
											"end": 10235,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 10096,
											"end": 10235,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 9823,
											"end": 10242,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 9823,
											"end": 10242,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 9823,
											"end": 10242,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 9823,
											"end": 10242,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 10248,
											"end": 10333,
											"name": "tag",
											"source": 23,
											"value": "290"
										},
										{
											"begin": 10248,
											"end": 10333,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 10293,
											"end": 10300,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 10322,
											"end": 10327,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 10311,
											"end": 10327,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 10311,
											"end": 10327,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 10248,
											"end": 10333,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 10248,
											"end": 10333,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 10248,
											"end": 10333,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 10248,
											"end": 10333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 10339,
											"end": 10399,
											"name": "tag",
											"source": 23,
											"value": "291"
										},
										{
											"begin": 10339,
											"end": 10399,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 10367,
											"end": 10370,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 10388,
											"end": 10393,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 10381,
											"end": 10393,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 10381,
											"end": 10393,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 10339,
											"end": 10399,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 10339,
											"end": 10399,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 10339,
											"end": 10399,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 10339,
											"end": 10399,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 10405,
											"end": 10563,
											"name": "tag",
											"source": 23,
											"value": "292"
										},
										{
											"begin": 10405,
											"end": 10563,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 10463,
											"end": 10472,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 10496,
											"end": 10557,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "447"
										},
										{
											"begin": 10514,
											"end": 10556,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "448"
										},
										{
											"begin": 10523,
											"end": 10555,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "449"
										},
										{
											"begin": 10549,
											"end": 10554,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 10523,
											"end": 10555,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "290"
										},
										{
											"begin": 10523,
											"end": 10555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 10523,
											"end": 10555,
											"name": "tag",
											"source": 23,
											"value": "449"
										},
										{
											"begin": 10523,
											"end": 10555,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 10514,
											"end": 10556,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "291"
										},
										{
											"begin": 10514,
											"end": 10556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 10514,
											"end": 10556,
											"name": "tag",
											"source": 23,
											"value": "448"
										},
										{
											"begin": 10514,
											"end": 10556,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 10496,
											"end": 10557,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "258"
										},
										{
											"begin": 10496,
											"end": 10557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 10496,
											"end": 10557,
											"name": "tag",
											"source": 23,
											"value": "447"
										},
										{
											"begin": 10496,
											"end": 10557,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 10483,
											"end": 10557,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 10483,
											"end": 10557,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 10405,
											"end": 10563,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 10405,
											"end": 10563,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 10405,
											"end": 10563,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 10405,
											"end": 10563,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 10569,
											"end": 10716,
											"name": "tag",
											"source": 23,
											"value": "293"
										},
										{
											"begin": 10569,
											"end": 10716,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 10664,
											"end": 10709,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "451"
										},
										{
											"begin": 10703,
											"end": 10708,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 10664,
											"end": 10709,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "292"
										},
										{
											"begin": 10664,
											"end": 10709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 10664,
											"end": 10709,
											"name": "tag",
											"source": 23,
											"value": "451"
										},
										{
											"begin": 10664,
											"end": 10709,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 10659,
											"end": 10662,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 10652,
											"end": 10710,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 10569,
											"end": 10716,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 10569,
											"end": 10716,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 10569,
											"end": 10716,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 10722,
											"end": 11382,
											"name": "tag",
											"source": 23,
											"value": "187"
										},
										{
											"begin": 10722,
											"end": 11382,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 10927,
											"end": 10931,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 10965,
											"end": 10968,
											"name": "PUSH",
											"source": 23,
											"value": "80"
										},
										{
											"begin": 10954,
											"end": 10963,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 10950,
											"end": 10969,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 10942,
											"end": 10969,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 10942,
											"end": 10969,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 11015,
											"end": 11024,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 11009,
											"end": 11013,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 11005,
											"end": 11025,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 11001,
											"end": 11002,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 10990,
											"end": 10999,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 10986,
											"end": 11003,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 10979,
											"end": 11026,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 11043,
											"end": 11121,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "453"
										},
										{
											"begin": 11116,
											"end": 11120,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 11107,
											"end": 11113,
											"name": "DUP8",
											"source": 23
										},
										{
											"begin": 11043,
											"end": 11121,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "287"
										},
										{
											"begin": 11043,
											"end": 11121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 11043,
											"end": 11121,
											"name": "tag",
											"source": 23,
											"value": "453"
										},
										{
											"begin": 11043,
											"end": 11121,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 11035,
											"end": 11121,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 11035,
											"end": 11121,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 11131,
											"end": 11203,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "454"
										},
										{
											"begin": 11199,
											"end": 11201,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 11188,
											"end": 11197,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 11184,
											"end": 11202,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 11175,
											"end": 11181,
											"name": "DUP7",
											"source": 23
										},
										{
											"begin": 11131,
											"end": 11203,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "264"
										},
										{
											"begin": 11131,
											"end": 11203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 11131,
											"end": 11203,
											"name": "tag",
											"source": 23,
											"value": "454"
										},
										{
											"begin": 11131,
											"end": 11203,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 11213,
											"end": 11293,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "455"
										},
										{
											"begin": 11289,
											"end": 11291,
											"name": "PUSH",
											"source": 23,
											"value": "40"
										},
										{
											"begin": 11278,
											"end": 11287,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 11274,
											"end": 11292,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 11265,
											"end": 11271,
											"name": "DUP6",
											"source": 23
										},
										{
											"begin": 11213,
											"end": 11293,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "293"
										},
										{
											"begin": 11213,
											"end": 11293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 11213,
											"end": 11293,
											"name": "tag",
											"source": 23,
											"value": "455"
										},
										{
											"begin": 11213,
											"end": 11293,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 11303,
											"end": 11375,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "456"
										},
										{
											"begin": 11371,
											"end": 11373,
											"name": "PUSH",
											"source": 23,
											"value": "60"
										},
										{
											"begin": 11360,
											"end": 11369,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 11356,
											"end": 11374,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 11347,
											"end": 11353,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 11303,
											"end": 11375,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "264"
										},
										{
											"begin": 11303,
											"end": 11375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 11303,
											"end": 11375,
											"name": "tag",
											"source": 23,
											"value": "456"
										},
										{
											"begin": 11303,
											"end": 11375,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 10722,
											"end": 11382,
											"name": "SWAP6",
											"source": 23
										},
										{
											"begin": 10722,
											"end": 11382,
											"name": "SWAP5",
											"source": 23
										},
										{
											"begin": 10722,
											"end": 11382,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 10722,
											"end": 11382,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 10722,
											"end": 11382,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 10722,
											"end": 11382,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 10722,
											"end": 11382,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 10722,
											"end": 11382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 11388,
											"end": 11510,
											"name": "tag",
											"source": 23,
											"value": "294"
										},
										{
											"begin": 11388,
											"end": 11510,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 11461,
											"end": 11485,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "458"
										},
										{
											"begin": 11479,
											"end": 11484,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 11461,
											"end": 11485,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "261"
										},
										{
											"begin": 11461,
											"end": 11485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 11461,
											"end": 11485,
											"name": "tag",
											"source": 23,
											"value": "458"
										},
										{
											"begin": 11461,
											"end": 11485,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 11454,
											"end": 11459,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 11451,
											"end": 11486,
											"name": "EQ",
											"source": 23
										},
										{
											"begin": 11441,
											"end": 11504,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "459"
										},
										{
											"begin": 11441,
											"end": 11504,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 11500,
											"end": 11501,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 11497,
											"end": 11498,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 11490,
											"end": 11502,
											"name": "REVERT",
											"source": 23
										},
										{
											"begin": 11441,
											"end": 11504,
											"name": "tag",
											"source": 23,
											"value": "459"
										},
										{
											"begin": 11441,
											"end": 11504,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 11388,
											"end": 11510,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 11388,
											"end": 11510,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 11516,
											"end": 11659,
											"name": "tag",
											"source": 23,
											"value": "295"
										},
										{
											"begin": 11516,
											"end": 11659,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 11573,
											"end": 11578,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 11604,
											"end": 11610,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 11598,
											"end": 11611,
											"name": "MLOAD",
											"source": 23
										},
										{
											"begin": 11589,
											"end": 11611,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 11589,
											"end": 11611,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 11620,
											"end": 11653,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "461"
										},
										{
											"begin": 11647,
											"end": 11652,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 11620,
											"end": 11653,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "294"
										},
										{
											"begin": 11620,
											"end": 11653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 11620,
											"end": 11653,
											"name": "tag",
											"source": 23,
											"value": "461"
										},
										{
											"begin": 11620,
											"end": 11653,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 11516,
											"end": 11659,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 11516,
											"end": 11659,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 11516,
											"end": 11659,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 11516,
											"end": 11659,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 11516,
											"end": 11659,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 11665,
											"end": 11755,
											"name": "tag",
											"source": 23,
											"value": "296"
										},
										{
											"begin": 11665,
											"end": 11755,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 11700,
											"end": 11707,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 11743,
											"end": 11748,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 11740,
											"end": 11741,
											"name": "PUSH",
											"source": 23,
											"value": "2"
										},
										{
											"begin": 11729,
											"end": 11749,
											"name": "SIGNEXTEND",
											"source": 23
										},
										{
											"begin": 11718,
											"end": 11749,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 11718,
											"end": 11749,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 11665,
											"end": 11755,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 11665,
											"end": 11755,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 11665,
											"end": 11755,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 11665,
											"end": 11755,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 11761,
											"end": 11879,
											"name": "tag",
											"source": 23,
											"value": "297"
										},
										{
											"begin": 11761,
											"end": 11879,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 11832,
											"end": 11854,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "464"
										},
										{
											"begin": 11848,
											"end": 11853,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 11832,
											"end": 11854,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "296"
										},
										{
											"begin": 11832,
											"end": 11854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 11832,
											"end": 11854,
											"name": "tag",
											"source": 23,
											"value": "464"
										},
										{
											"begin": 11832,
											"end": 11854,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 11825,
											"end": 11830,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 11822,
											"end": 11855,
											"name": "EQ",
											"source": 23
										},
										{
											"begin": 11812,
											"end": 11873,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "465"
										},
										{
											"begin": 11812,
											"end": 11873,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 11869,
											"end": 11870,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 11866,
											"end": 11867,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 11859,
											"end": 11871,
											"name": "REVERT",
											"source": 23
										},
										{
											"begin": 11812,
											"end": 11873,
											"name": "tag",
											"source": 23,
											"value": "465"
										},
										{
											"begin": 11812,
											"end": 11873,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 11761,
											"end": 11879,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 11761,
											"end": 11879,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 11885,
											"end": 12024,
											"name": "tag",
											"source": 23,
											"value": "298"
										},
										{
											"begin": 11885,
											"end": 12024,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 11940,
											"end": 11945,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 11971,
											"end": 11977,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 11965,
											"end": 11978,
											"name": "MLOAD",
											"source": 23
										},
										{
											"begin": 11956,
											"end": 11978,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 11956,
											"end": 11978,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 11987,
											"end": 12018,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "467"
										},
										{
											"begin": 12012,
											"end": 12017,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 11987,
											"end": 12018,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "297"
										},
										{
											"begin": 11987,
											"end": 12018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 11987,
											"end": 12018,
											"name": "tag",
											"source": 23,
											"value": "467"
										},
										{
											"begin": 11987,
											"end": 12018,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 11885,
											"end": 12024,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 11885,
											"end": 12024,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 11885,
											"end": 12024,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 11885,
											"end": 12024,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 11885,
											"end": 12024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 12030,
											"end": 12119,
											"name": "tag",
											"source": 23,
											"value": "299"
										},
										{
											"begin": 12030,
											"end": 12119,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 12066,
											"end": 12073,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 12106,
											"end": 12112,
											"name": "PUSH",
											"source": 23,
											"value": "FFFF"
										},
										{
											"begin": 12099,
											"end": 12104,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 12095,
											"end": 12113,
											"name": "AND",
											"source": 23
										},
										{
											"begin": 12084,
											"end": 12113,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 12084,
											"end": 12113,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 12030,
											"end": 12119,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 12030,
											"end": 12119,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 12030,
											"end": 12119,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 12030,
											"end": 12119,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 12125,
											"end": 12245,
											"name": "tag",
											"source": 23,
											"value": "300"
										},
										{
											"begin": 12125,
											"end": 12245,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 12197,
											"end": 12220,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "470"
										},
										{
											"begin": 12214,
											"end": 12219,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 12197,
											"end": 12220,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "299"
										},
										{
											"begin": 12197,
											"end": 12220,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 12197,
											"end": 12220,
											"name": "tag",
											"source": 23,
											"value": "470"
										},
										{
											"begin": 12197,
											"end": 12220,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 12190,
											"end": 12195,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 12187,
											"end": 12221,
											"name": "EQ",
											"source": 23
										},
										{
											"begin": 12177,
											"end": 12239,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "471"
										},
										{
											"begin": 12177,
											"end": 12239,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 12235,
											"end": 12236,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 12232,
											"end": 12233,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 12225,
											"end": 12237,
											"name": "REVERT",
											"source": 23
										},
										{
											"begin": 12177,
											"end": 12239,
											"name": "tag",
											"source": 23,
											"value": "471"
										},
										{
											"begin": 12177,
											"end": 12239,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 12125,
											"end": 12245,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 12125,
											"end": 12245,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 12251,
											"end": 12392,
											"name": "tag",
											"source": 23,
											"value": "301"
										},
										{
											"begin": 12251,
											"end": 12392,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 12307,
											"end": 12312,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 12338,
											"end": 12344,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 12332,
											"end": 12345,
											"name": "MLOAD",
											"source": 23
										},
										{
											"begin": 12323,
											"end": 12345,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 12323,
											"end": 12345,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 12354,
											"end": 12386,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "473"
										},
										{
											"begin": 12380,
											"end": 12385,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 12354,
											"end": 12386,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "300"
										},
										{
											"begin": 12354,
											"end": 12386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 12354,
											"end": 12386,
											"name": "tag",
											"source": 23,
											"value": "473"
										},
										{
											"begin": 12354,
											"end": 12386,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 12251,
											"end": 12392,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 12251,
											"end": 12392,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 12251,
											"end": 12392,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 12251,
											"end": 12392,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 12251,
											"end": 12392,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 12398,
											"end": 12484,
											"name": "tag",
											"source": 23,
											"value": "302"
										},
										{
											"begin": 12398,
											"end": 12484,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 12433,
											"end": 12440,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 12473,
											"end": 12477,
											"name": "PUSH",
											"source": 23,
											"value": "FF"
										},
										{
											"begin": 12466,
											"end": 12471,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 12462,
											"end": 12478,
											"name": "AND",
											"source": 23
										},
										{
											"begin": 12451,
											"end": 12478,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 12451,
											"end": 12478,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 12398,
											"end": 12484,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 12398,
											"end": 12484,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 12398,
											"end": 12484,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 12398,
											"end": 12484,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 12490,
											"end": 12608,
											"name": "tag",
											"source": 23,
											"value": "303"
										},
										{
											"begin": 12490,
											"end": 12608,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 12561,
											"end": 12583,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "476"
										},
										{
											"begin": 12577,
											"end": 12582,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 12561,
											"end": 12583,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "302"
										},
										{
											"begin": 12561,
											"end": 12583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 12561,
											"end": 12583,
											"name": "tag",
											"source": 23,
											"value": "476"
										},
										{
											"begin": 12561,
											"end": 12583,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 12554,
											"end": 12559,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 12551,
											"end": 12584,
											"name": "EQ",
											"source": 23
										},
										{
											"begin": 12541,
											"end": 12602,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "477"
										},
										{
											"begin": 12541,
											"end": 12602,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 12598,
											"end": 12599,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 12595,
											"end": 12596,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 12588,
											"end": 12600,
											"name": "REVERT",
											"source": 23
										},
										{
											"begin": 12541,
											"end": 12602,
											"name": "tag",
											"source": 23,
											"value": "477"
										},
										{
											"begin": 12541,
											"end": 12602,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 12490,
											"end": 12608,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 12490,
											"end": 12608,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 12614,
											"end": 12753,
											"name": "tag",
											"source": 23,
											"value": "304"
										},
										{
											"begin": 12614,
											"end": 12753,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 12669,
											"end": 12674,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 12700,
											"end": 12706,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 12694,
											"end": 12707,
											"name": "MLOAD",
											"source": 23
										},
										{
											"begin": 12685,
											"end": 12707,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 12685,
											"end": 12707,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 12716,
											"end": 12747,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "479"
										},
										{
											"begin": 12741,
											"end": 12746,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 12716,
											"end": 12747,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "303"
										},
										{
											"begin": 12716,
											"end": 12747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 12716,
											"end": 12747,
											"name": "tag",
											"source": 23,
											"value": "479"
										},
										{
											"begin": 12716,
											"end": 12747,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 12614,
											"end": 12753,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 12614,
											"end": 12753,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 12614,
											"end": 12753,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 12614,
											"end": 12753,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 12614,
											"end": 12753,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 12759,
											"end": 12875,
											"name": "tag",
											"source": 23,
											"value": "305"
										},
										{
											"begin": 12759,
											"end": 12875,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 12829,
											"end": 12850,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "481"
										},
										{
											"begin": 12844,
											"end": 12849,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 12829,
											"end": 12850,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "282"
										},
										{
											"begin": 12829,
											"end": 12850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 12829,
											"end": 12850,
											"name": "tag",
											"source": 23,
											"value": "481"
										},
										{
											"begin": 12829,
											"end": 12850,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 12822,
											"end": 12827,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 12819,
											"end": 12851,
											"name": "EQ",
											"source": 23
										},
										{
											"begin": 12809,
											"end": 12869,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "482"
										},
										{
											"begin": 12809,
											"end": 12869,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 12865,
											"end": 12866,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 12862,
											"end": 12863,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 12855,
											"end": 12867,
											"name": "REVERT",
											"source": 23
										},
										{
											"begin": 12809,
											"end": 12869,
											"name": "tag",
											"source": 23,
											"value": "482"
										},
										{
											"begin": 12809,
											"end": 12869,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 12759,
											"end": 12875,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 12759,
											"end": 12875,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 12881,
											"end": 13018,
											"name": "tag",
											"source": 23,
											"value": "306"
										},
										{
											"begin": 12881,
											"end": 13018,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 12935,
											"end": 12940,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 12966,
											"end": 12972,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 12960,
											"end": 12973,
											"name": "MLOAD",
											"source": 23
										},
										{
											"begin": 12951,
											"end": 12973,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 12951,
											"end": 12973,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 12982,
											"end": 13012,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "484"
										},
										{
											"begin": 13006,
											"end": 13011,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 12982,
											"end": 13012,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "305"
										},
										{
											"begin": 12982,
											"end": 13012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 12982,
											"end": 13012,
											"name": "tag",
											"source": 23,
											"value": "484"
										},
										{
											"begin": 12982,
											"end": 13012,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 12881,
											"end": 13018,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 12881,
											"end": 13018,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 12881,
											"end": 13018,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 12881,
											"end": 13018,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 12881,
											"end": 13018,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 13024,
											"end": 14295,
											"name": "tag",
											"source": 23,
											"value": "192"
										},
										{
											"begin": 13024,
											"end": 14295,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 13138,
											"end": 13144,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 13146,
											"end": 13152,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 13154,
											"end": 13160,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 13162,
											"end": 13168,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 13170,
											"end": 13176,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 13178,
											"end": 13184,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 13186,
											"end": 13192,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 13235,
											"end": 13238,
											"name": "PUSH",
											"source": 23,
											"value": "E0"
										},
										{
											"begin": 13223,
											"end": 13232,
											"name": "DUP9",
											"source": 23
										},
										{
											"begin": 13214,
											"end": 13221,
											"name": "DUP11",
											"source": 23
										},
										{
											"begin": 13210,
											"end": 13233,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 13206,
											"end": 13239,
											"name": "SLT",
											"source": 23
										},
										{
											"begin": 13203,
											"end": 13323,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 13203,
											"end": 13323,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "486"
										},
										{
											"begin": 13203,
											"end": 13323,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 13242,
											"end": 13321,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "487"
										},
										{
											"begin": 13242,
											"end": 13321,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "266"
										},
										{
											"begin": 13242,
											"end": 13321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 13242,
											"end": 13321,
											"name": "tag",
											"source": 23,
											"value": "487"
										},
										{
											"begin": 13242,
											"end": 13321,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 13203,
											"end": 13323,
											"name": "tag",
											"source": 23,
											"value": "486"
										},
										{
											"begin": 13203,
											"end": 13323,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 13362,
											"end": 13363,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 13387,
											"end": 13451,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "488"
										},
										{
											"begin": 13443,
											"end": 13450,
											"name": "DUP11",
											"source": 23
										},
										{
											"begin": 13434,
											"end": 13440,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 13423,
											"end": 13432,
											"name": "DUP12",
											"source": 23
										},
										{
											"begin": 13419,
											"end": 13441,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 13387,
											"end": 13451,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "295"
										},
										{
											"begin": 13387,
											"end": 13451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 13387,
											"end": 13451,
											"name": "tag",
											"source": 23,
											"value": "488"
										},
										{
											"begin": 13387,
											"end": 13451,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 13377,
											"end": 13451,
											"name": "SWAP8",
											"source": 23
										},
										{
											"begin": 13377,
											"end": 13451,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 13333,
											"end": 13461,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 13500,
											"end": 13502,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 13526,
											"end": 13588,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "489"
										},
										{
											"begin": 13580,
											"end": 13587,
											"name": "DUP11",
											"source": 23
										},
										{
											"begin": 13571,
											"end": 13577,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 13560,
											"end": 13569,
											"name": "DUP12",
											"source": 23
										},
										{
											"begin": 13556,
											"end": 13578,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 13526,
											"end": 13588,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "298"
										},
										{
											"begin": 13526,
											"end": 13588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 13526,
											"end": 13588,
											"name": "tag",
											"source": 23,
											"value": "489"
										},
										{
											"begin": 13526,
											"end": 13588,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 13516,
											"end": 13588,
											"name": "SWAP7",
											"source": 23
										},
										{
											"begin": 13516,
											"end": 13588,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 13471,
											"end": 13598,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 13637,
											"end": 13639,
											"name": "PUSH",
											"source": 23,
											"value": "40"
										},
										{
											"begin": 13663,
											"end": 13726,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "490"
										},
										{
											"begin": 13718,
											"end": 13725,
											"name": "DUP11",
											"source": 23
										},
										{
											"begin": 13709,
											"end": 13715,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 13698,
											"end": 13707,
											"name": "DUP12",
											"source": 23
										},
										{
											"begin": 13694,
											"end": 13716,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 13663,
											"end": 13726,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "301"
										},
										{
											"begin": 13663,
											"end": 13726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 13663,
											"end": 13726,
											"name": "tag",
											"source": 23,
											"value": "490"
										},
										{
											"begin": 13663,
											"end": 13726,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 13653,
											"end": 13726,
											"name": "SWAP6",
											"source": 23
										},
										{
											"begin": 13653,
											"end": 13726,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 13608,
											"end": 13736,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 13775,
											"end": 13777,
											"name": "PUSH",
											"source": 23,
											"value": "60"
										},
										{
											"begin": 13801,
											"end": 13864,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "491"
										},
										{
											"begin": 13856,
											"end": 13863,
											"name": "DUP11",
											"source": 23
										},
										{
											"begin": 13847,
											"end": 13853,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 13836,
											"end": 13845,
											"name": "DUP12",
											"source": 23
										},
										{
											"begin": 13832,
											"end": 13854,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 13801,
											"end": 13864,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "301"
										},
										{
											"begin": 13801,
											"end": 13864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 13801,
											"end": 13864,
											"name": "tag",
											"source": 23,
											"value": "491"
										},
										{
											"begin": 13801,
											"end": 13864,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 13791,
											"end": 13864,
											"name": "SWAP5",
											"source": 23
										},
										{
											"begin": 13791,
											"end": 13864,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 13746,
											"end": 13874,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 13913,
											"end": 13916,
											"name": "PUSH",
											"source": 23,
											"value": "80"
										},
										{
											"begin": 13940,
											"end": 14003,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "492"
										},
										{
											"begin": 13995,
											"end": 14002,
											"name": "DUP11",
											"source": 23
										},
										{
											"begin": 13986,
											"end": 13992,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 13975,
											"end": 13984,
											"name": "DUP12",
											"source": 23
										},
										{
											"begin": 13971,
											"end": 13993,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 13940,
											"end": 14003,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "301"
										},
										{
											"begin": 13940,
											"end": 14003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 13940,
											"end": 14003,
											"name": "tag",
											"source": 23,
											"value": "492"
										},
										{
											"begin": 13940,
											"end": 14003,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 13930,
											"end": 14003,
											"name": "SWAP4",
											"source": 23
										},
										{
											"begin": 13930,
											"end": 14003,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 13884,
											"end": 14013,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 14052,
											"end": 14055,
											"name": "PUSH",
											"source": 23,
											"value": "A0"
										},
										{
											"begin": 14079,
											"end": 14141,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "493"
										},
										{
											"begin": 14133,
											"end": 14140,
											"name": "DUP11",
											"source": 23
										},
										{
											"begin": 14124,
											"end": 14130,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 14113,
											"end": 14122,
											"name": "DUP12",
											"source": 23
										},
										{
											"begin": 14109,
											"end": 14131,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 14079,
											"end": 14141,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "304"
										},
										{
											"begin": 14079,
											"end": 14141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 14079,
											"end": 14141,
											"name": "tag",
											"source": 23,
											"value": "493"
										},
										{
											"begin": 14079,
											"end": 14141,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 14069,
											"end": 14141,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 14069,
											"end": 14141,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 14023,
											"end": 14151,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 14190,
											"end": 14193,
											"name": "PUSH",
											"source": 23,
											"value": "C0"
										},
										{
											"begin": 14217,
											"end": 14278,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "494"
										},
										{
											"begin": 14270,
											"end": 14277,
											"name": "DUP11",
											"source": 23
										},
										{
											"begin": 14261,
											"end": 14267,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 14250,
											"end": 14259,
											"name": "DUP12",
											"source": 23
										},
										{
											"begin": 14246,
											"end": 14268,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 14217,
											"end": 14278,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "306"
										},
										{
											"begin": 14217,
											"end": 14278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 14217,
											"end": 14278,
											"name": "tag",
											"source": 23,
											"value": "494"
										},
										{
											"begin": 14217,
											"end": 14278,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 14207,
											"end": 14278,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 14207,
											"end": 14278,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 14161,
											"end": 14288,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 13024,
											"end": 14295,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 13024,
											"end": 14295,
											"name": "SWAP6",
											"source": 23
										},
										{
											"begin": 13024,
											"end": 14295,
											"name": "SWAP9",
											"source": 23
										},
										{
											"begin": 13024,
											"end": 14295,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 13024,
											"end": 14295,
											"name": "SWAP5",
											"source": 23
										},
										{
											"begin": 13024,
											"end": 14295,
											"name": "SWAP8",
											"source": 23
										},
										{
											"begin": 13024,
											"end": 14295,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 13024,
											"end": 14295,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 13024,
											"end": 14295,
											"name": "SWAP6",
											"source": 23
										},
										{
											"begin": 13024,
											"end": 14295,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 13024,
											"end": 14295,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 14301,
											"end": 14419,
											"name": "tag",
											"source": 23,
											"value": "307"
										},
										{
											"begin": 14301,
											"end": 14419,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 14338,
											"end": 14345,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 14378,
											"end": 14412,
											"name": "PUSH",
											"source": 23,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14371,
											"end": 14376,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 14367,
											"end": 14413,
											"name": "AND",
											"source": 23
										},
										{
											"begin": 14356,
											"end": 14413,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 14356,
											"end": 14413,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 14301,
											"end": 14419,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 14301,
											"end": 14419,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 14301,
											"end": 14419,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 14301,
											"end": 14419,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 14425,
											"end": 14547,
											"name": "tag",
											"source": 23,
											"value": "308"
										},
										{
											"begin": 14425,
											"end": 14547,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 14498,
											"end": 14522,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "497"
										},
										{
											"begin": 14516,
											"end": 14521,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 14498,
											"end": 14522,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "307"
										},
										{
											"begin": 14498,
											"end": 14522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 14498,
											"end": 14522,
											"name": "tag",
											"source": 23,
											"value": "497"
										},
										{
											"begin": 14498,
											"end": 14522,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 14491,
											"end": 14496,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 14488,
											"end": 14523,
											"name": "EQ",
											"source": 23
										},
										{
											"begin": 14478,
											"end": 14541,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "498"
										},
										{
											"begin": 14478,
											"end": 14541,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 14537,
											"end": 14538,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 14534,
											"end": 14535,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 14527,
											"end": 14539,
											"name": "REVERT",
											"source": 23
										},
										{
											"begin": 14478,
											"end": 14541,
											"name": "tag",
											"source": 23,
											"value": "498"
										},
										{
											"begin": 14478,
											"end": 14541,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 14425,
											"end": 14547,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 14425,
											"end": 14547,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 14553,
											"end": 14696,
											"name": "tag",
											"source": 23,
											"value": "309"
										},
										{
											"begin": 14553,
											"end": 14696,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 14610,
											"end": 14615,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 14641,
											"end": 14647,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 14635,
											"end": 14648,
											"name": "MLOAD",
											"source": 23
										},
										{
											"begin": 14626,
											"end": 14648,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 14626,
											"end": 14648,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 14657,
											"end": 14690,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "500"
										},
										{
											"begin": 14684,
											"end": 14689,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 14657,
											"end": 14690,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "308"
										},
										{
											"begin": 14657,
											"end": 14690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 14657,
											"end": 14690,
											"name": "tag",
											"source": 23,
											"value": "500"
										},
										{
											"begin": 14657,
											"end": 14690,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 14553,
											"end": 14696,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 14553,
											"end": 14696,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 14553,
											"end": 14696,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 14553,
											"end": 14696,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 14553,
											"end": 14696,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 14702,
											"end": 15053,
											"name": "tag",
											"source": 23,
											"value": "196"
										},
										{
											"begin": 14702,
											"end": 15053,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 14772,
											"end": 14778,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 14821,
											"end": 14823,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 14809,
											"end": 14818,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 14800,
											"end": 14807,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 14796,
											"end": 14819,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 14792,
											"end": 14824,
											"name": "SLT",
											"source": 23
										},
										{
											"begin": 14789,
											"end": 14908,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 14789,
											"end": 14908,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "502"
										},
										{
											"begin": 14789,
											"end": 14908,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 14827,
											"end": 14906,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "503"
										},
										{
											"begin": 14827,
											"end": 14906,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "266"
										},
										{
											"begin": 14827,
											"end": 14906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 14827,
											"end": 14906,
											"name": "tag",
											"source": 23,
											"value": "503"
										},
										{
											"begin": 14827,
											"end": 14906,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 14789,
											"end": 14908,
											"name": "tag",
											"source": 23,
											"value": "502"
										},
										{
											"begin": 14789,
											"end": 14908,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 14947,
											"end": 14948,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 14972,
											"end": 15036,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "504"
										},
										{
											"begin": 15028,
											"end": 15035,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 15019,
											"end": 15025,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 15008,
											"end": 15017,
											"name": "DUP6",
											"source": 23
										},
										{
											"begin": 15004,
											"end": 15026,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 14972,
											"end": 15036,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "309"
										},
										{
											"begin": 14972,
											"end": 15036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 14972,
											"end": 15036,
											"name": "tag",
											"source": 23,
											"value": "504"
										},
										{
											"begin": 14972,
											"end": 15036,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 14962,
											"end": 15036,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 14962,
											"end": 15036,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 14918,
											"end": 15046,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 14702,
											"end": 15053,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 14702,
											"end": 15053,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 14702,
											"end": 15053,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 14702,
											"end": 15053,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 14702,
											"end": 15053,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 15059,
											"end": 15253,
											"name": "tag",
											"source": 23,
											"value": "202"
										},
										{
											"begin": 15059,
											"end": 15253,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 15099,
											"end": 15103,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 15119,
											"end": 15139,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "506"
										},
										{
											"begin": 15137,
											"end": 15138,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 15119,
											"end": 15139,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "258"
										},
										{
											"begin": 15119,
											"end": 15139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 15119,
											"end": 15139,
											"name": "tag",
											"source": 23,
											"value": "506"
										},
										{
											"begin": 15119,
											"end": 15139,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 15114,
											"end": 15139,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 15114,
											"end": 15139,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 15153,
											"end": 15173,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "507"
										},
										{
											"begin": 15171,
											"end": 15172,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 15153,
											"end": 15173,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "258"
										},
										{
											"begin": 15153,
											"end": 15173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 15153,
											"end": 15173,
											"name": "tag",
											"source": 23,
											"value": "507"
										},
										{
											"begin": 15153,
											"end": 15173,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 15148,
											"end": 15173,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 15148,
											"end": 15173,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 15197,
											"end": 15198,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 15194,
											"end": 15195,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 15190,
											"end": 15199,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 15182,
											"end": 15199,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 15182,
											"end": 15199,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 15221,
											"end": 15222,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 15215,
											"end": 15219,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 15212,
											"end": 15223,
											"name": "GT",
											"source": 23
										},
										{
											"begin": 15209,
											"end": 15246,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 15209,
											"end": 15246,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "508"
										},
										{
											"begin": 15209,
											"end": 15246,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 15226,
											"end": 15244,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "509"
										},
										{
											"begin": 15226,
											"end": 15244,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "259"
										},
										{
											"begin": 15226,
											"end": 15244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 15226,
											"end": 15244,
											"name": "tag",
											"source": 23,
											"value": "509"
										},
										{
											"begin": 15226,
											"end": 15244,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 15209,
											"end": 15246,
											"name": "tag",
											"source": 23,
											"value": "508"
										},
										{
											"begin": 15209,
											"end": 15246,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 15059,
											"end": 15253,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 15059,
											"end": 15253,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 15059,
											"end": 15253,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 15059,
											"end": 15253,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 15059,
											"end": 15253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 15259,
											"end": 15429,
											"name": "tag",
											"source": 23,
											"value": "310"
										},
										{
											"begin": 15259,
											"end": 15429,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 15399,
											"end": 15421,
											"name": "PUSH",
											"source": 23,
											"value": "496E73756666696369656E742062616C616E6365000000000000000000000000"
										},
										{
											"begin": 15395,
											"end": 15396,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 15387,
											"end": 15393,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 15383,
											"end": 15397,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 15376,
											"end": 15422,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 15259,
											"end": 15429,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 15259,
											"end": 15429,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 15435,
											"end": 15801,
											"name": "tag",
											"source": 23,
											"value": "311"
										},
										{
											"begin": 15435,
											"end": 15801,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 15577,
											"end": 15580,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 15598,
											"end": 15665,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "512"
										},
										{
											"begin": 15662,
											"end": 15664,
											"name": "PUSH",
											"source": 23,
											"value": "14"
										},
										{
											"begin": 15657,
											"end": 15660,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 15598,
											"end": 15665,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "285"
										},
										{
											"begin": 15598,
											"end": 15665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 15598,
											"end": 15665,
											"name": "tag",
											"source": 23,
											"value": "512"
										},
										{
											"begin": 15598,
											"end": 15665,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 15591,
											"end": 15665,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 15591,
											"end": 15665,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 15674,
											"end": 15767,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "513"
										},
										{
											"begin": 15763,
											"end": 15766,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 15674,
											"end": 15767,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "310"
										},
										{
											"begin": 15674,
											"end": 15767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 15674,
											"end": 15767,
											"name": "tag",
											"source": 23,
											"value": "513"
										},
										{
											"begin": 15674,
											"end": 15767,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 15792,
											"end": 15794,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 15787,
											"end": 15790,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 15783,
											"end": 15795,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 15776,
											"end": 15795,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 15776,
											"end": 15795,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 15435,
											"end": 15801,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 15435,
											"end": 15801,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 15435,
											"end": 15801,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 15435,
											"end": 15801,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 15807,
											"end": 16226,
											"name": "tag",
											"source": 23,
											"value": "216"
										},
										{
											"begin": 15807,
											"end": 16226,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 15973,
											"end": 15977,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 16011,
											"end": 16013,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 16000,
											"end": 16009,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 15996,
											"end": 16014,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 15988,
											"end": 16014,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 15988,
											"end": 16014,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 16060,
											"end": 16069,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 16054,
											"end": 16058,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 16050,
											"end": 16070,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 16046,
											"end": 16047,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 16035,
											"end": 16044,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 16031,
											"end": 16048,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 16024,
											"end": 16071,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 16088,
											"end": 16219,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "515"
										},
										{
											"begin": 16214,
											"end": 16218,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 16088,
											"end": 16219,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "311"
										},
										{
											"begin": 16088,
											"end": 16219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 16088,
											"end": 16219,
											"name": "tag",
											"source": 23,
											"value": "515"
										},
										{
											"begin": 16088,
											"end": 16219,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 16080,
											"end": 16219,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 16080,
											"end": 16219,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 15807,
											"end": 16226,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 15807,
											"end": 16226,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 15807,
											"end": 16226,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 15807,
											"end": 16226,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 16232,
											"end": 16412,
											"name": "tag",
											"source": 23,
											"value": "312"
										},
										{
											"begin": 16232,
											"end": 16412,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 16280,
											"end": 16357,
											"name": "PUSH",
											"source": 23,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16277,
											"end": 16278,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 16270,
											"end": 16358,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 16377,
											"end": 16381,
											"name": "PUSH",
											"source": 23,
											"value": "22"
										},
										{
											"begin": 16374,
											"end": 16375,
											"name": "PUSH",
											"source": 23,
											"value": "4"
										},
										{
											"begin": 16367,
											"end": 16382,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 16401,
											"end": 16405,
											"name": "PUSH",
											"source": 23,
											"value": "24"
										},
										{
											"begin": 16398,
											"end": 16399,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 16391,
											"end": 16406,
											"name": "REVERT",
											"source": 23
										},
										{
											"begin": 16418,
											"end": 16738,
											"name": "tag",
											"source": 23,
											"value": "220"
										},
										{
											"begin": 16418,
											"end": 16738,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 16462,
											"end": 16468,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 16499,
											"end": 16500,
											"name": "PUSH",
											"source": 23,
											"value": "2"
										},
										{
											"begin": 16493,
											"end": 16497,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 16489,
											"end": 16501,
											"name": "DIV",
											"source": 23
										},
										{
											"begin": 16479,
											"end": 16501,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 16479,
											"end": 16501,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 16546,
											"end": 16547,
											"name": "PUSH",
											"source": 23,
											"value": "1"
										},
										{
											"begin": 16540,
											"end": 16544,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 16536,
											"end": 16548,
											"name": "AND",
											"source": 23
										},
										{
											"begin": 16567,
											"end": 16585,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 16557,
											"end": 16638,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "518"
										},
										{
											"begin": 16557,
											"end": 16638,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 16623,
											"end": 16627,
											"name": "PUSH",
											"source": 23,
											"value": "7F"
										},
										{
											"begin": 16615,
											"end": 16621,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 16611,
											"end": 16628,
											"name": "AND",
											"source": 23
										},
										{
											"begin": 16601,
											"end": 16628,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 16601,
											"end": 16628,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 16557,
											"end": 16638,
											"name": "tag",
											"source": 23,
											"value": "518"
										},
										{
											"begin": 16557,
											"end": 16638,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 16685,
											"end": 16687,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 16677,
											"end": 16683,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 16674,
											"end": 16688,
											"name": "LT",
											"source": 23
										},
										{
											"begin": 16654,
											"end": 16672,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 16651,
											"end": 16689,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 16648,
											"end": 16732,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "519"
										},
										{
											"begin": 16648,
											"end": 16732,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 16704,
											"end": 16722,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "520"
										},
										{
											"begin": 16704,
											"end": 16722,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "312"
										},
										{
											"begin": 16704,
											"end": 16722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 16704,
											"end": 16722,
											"name": "tag",
											"source": 23,
											"value": "520"
										},
										{
											"begin": 16704,
											"end": 16722,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 16648,
											"end": 16732,
											"name": "tag",
											"source": 23,
											"value": "519"
										},
										{
											"begin": 16648,
											"end": 16732,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 16469,
											"end": 16738,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 16418,
											"end": 16738,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 16418,
											"end": 16738,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 16418,
											"end": 16738,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 16418,
											"end": 16738,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 16744,
											"end": 16912,
											"name": "tag",
											"source": 23,
											"value": "313"
										},
										{
											"begin": 16744,
											"end": 16912,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 16884,
											"end": 16904,
											"name": "PUSH",
											"source": 23,
											"value": "54696D656672616D652061646A75737465640000000000000000000000000000"
										},
										{
											"begin": 16880,
											"end": 16881,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 16872,
											"end": 16878,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 16868,
											"end": 16882,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 16861,
											"end": 16905,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 16744,
											"end": 16912,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 16744,
											"end": 16912,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 16918,
											"end": 17284,
											"name": "tag",
											"source": 23,
											"value": "314"
										},
										{
											"begin": 16918,
											"end": 17284,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 17060,
											"end": 17063,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 17081,
											"end": 17148,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "523"
										},
										{
											"begin": 17145,
											"end": 17147,
											"name": "PUSH",
											"source": 23,
											"value": "12"
										},
										{
											"begin": 17140,
											"end": 17143,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 17081,
											"end": 17148,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "285"
										},
										{
											"begin": 17081,
											"end": 17148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 17081,
											"end": 17148,
											"name": "tag",
											"source": 23,
											"value": "523"
										},
										{
											"begin": 17081,
											"end": 17148,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 17074,
											"end": 17148,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 17074,
											"end": 17148,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 17157,
											"end": 17250,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "524"
										},
										{
											"begin": 17246,
											"end": 17249,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 17157,
											"end": 17250,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "313"
										},
										{
											"begin": 17157,
											"end": 17250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 17157,
											"end": 17250,
											"name": "tag",
											"source": 23,
											"value": "524"
										},
										{
											"begin": 17157,
											"end": 17250,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 17275,
											"end": 17277,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 17270,
											"end": 17273,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 17266,
											"end": 17278,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 17259,
											"end": 17278,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 17259,
											"end": 17278,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 16918,
											"end": 17284,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 16918,
											"end": 17284,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 16918,
											"end": 17284,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 16918,
											"end": 17284,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 17290,
											"end": 18056,
											"name": "tag",
											"source": 23,
											"value": "234"
										},
										{
											"begin": 17290,
											"end": 18056,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 17548,
											"end": 17552,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 17586,
											"end": 17589,
											"name": "PUSH",
											"source": 23,
											"value": "80"
										},
										{
											"begin": 17575,
											"end": 17584,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 17571,
											"end": 17590,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 17563,
											"end": 17590,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 17563,
											"end": 17590,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 17636,
											"end": 17645,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 17630,
											"end": 17634,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 17626,
											"end": 17646,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 17622,
											"end": 17623,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 17611,
											"end": 17620,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 17607,
											"end": 17624,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 17600,
											"end": 17647,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 17664,
											"end": 17795,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "526"
										},
										{
											"begin": 17790,
											"end": 17794,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 17664,
											"end": 17795,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "314"
										},
										{
											"begin": 17664,
											"end": 17795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 17664,
											"end": 17795,
											"name": "tag",
											"source": 23,
											"value": "526"
										},
										{
											"begin": 17664,
											"end": 17795,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 17656,
											"end": 17795,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 17656,
											"end": 17795,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 17805,
											"end": 17877,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "527"
										},
										{
											"begin": 17873,
											"end": 17875,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 17862,
											"end": 17871,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 17858,
											"end": 17876,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 17849,
											"end": 17855,
											"name": "DUP7",
											"source": 23
										},
										{
											"begin": 17805,
											"end": 17877,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "264"
										},
										{
											"begin": 17805,
											"end": 17877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 17805,
											"end": 17877,
											"name": "tag",
											"source": 23,
											"value": "527"
										},
										{
											"begin": 17805,
											"end": 17877,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 17887,
											"end": 17967,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "528"
										},
										{
											"begin": 17963,
											"end": 17965,
											"name": "PUSH",
											"source": 23,
											"value": "40"
										},
										{
											"begin": 17952,
											"end": 17961,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 17948,
											"end": 17966,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 17939,
											"end": 17945,
											"name": "DUP6",
											"source": 23
										},
										{
											"begin": 17887,
											"end": 17967,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "293"
										},
										{
											"begin": 17887,
											"end": 17967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 17887,
											"end": 17967,
											"name": "tag",
											"source": 23,
											"value": "528"
										},
										{
											"begin": 17887,
											"end": 17967,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 17977,
											"end": 18049,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "529"
										},
										{
											"begin": 18045,
											"end": 18047,
											"name": "PUSH",
											"source": 23,
											"value": "60"
										},
										{
											"begin": 18034,
											"end": 18043,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 18030,
											"end": 18048,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 18021,
											"end": 18027,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 17977,
											"end": 18049,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "264"
										},
										{
											"begin": 17977,
											"end": 18049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 17977,
											"end": 18049,
											"name": "tag",
											"source": 23,
											"value": "529"
										},
										{
											"begin": 17977,
											"end": 18049,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 17290,
											"end": 18056,
											"name": "SWAP5",
											"source": 23
										},
										{
											"begin": 17290,
											"end": 18056,
											"name": "SWAP4",
											"source": 23
										},
										{
											"begin": 17290,
											"end": 18056,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 17290,
											"end": 18056,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 17290,
											"end": 18056,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 17290,
											"end": 18056,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 17290,
											"end": 18056,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 18062,
											"end": 18226,
											"name": "tag",
											"source": 23,
											"value": "315"
										},
										{
											"begin": 18062,
											"end": 18226,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 18202,
											"end": 18218,
											"name": "PUSH",
											"source": 23,
											"value": "636F6E7665727420746F20504F4C000000000000000000000000000000000000"
										},
										{
											"begin": 18198,
											"end": 18199,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 18190,
											"end": 18196,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 18186,
											"end": 18200,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 18179,
											"end": 18219,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 18062,
											"end": 18226,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 18062,
											"end": 18226,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 18232,
											"end": 18598,
											"name": "tag",
											"source": 23,
											"value": "316"
										},
										{
											"begin": 18232,
											"end": 18598,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 18374,
											"end": 18377,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 18395,
											"end": 18462,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "532"
										},
										{
											"begin": 18459,
											"end": 18461,
											"name": "PUSH",
											"source": 23,
											"value": "E"
										},
										{
											"begin": 18454,
											"end": 18457,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 18395,
											"end": 18462,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "285"
										},
										{
											"begin": 18395,
											"end": 18462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 18395,
											"end": 18462,
											"name": "tag",
											"source": 23,
											"value": "532"
										},
										{
											"begin": 18395,
											"end": 18462,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 18388,
											"end": 18462,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 18388,
											"end": 18462,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 18471,
											"end": 18564,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "533"
										},
										{
											"begin": 18560,
											"end": 18563,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 18471,
											"end": 18564,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "315"
										},
										{
											"begin": 18471,
											"end": 18564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 18471,
											"end": 18564,
											"name": "tag",
											"source": 23,
											"value": "533"
										},
										{
											"begin": 18471,
											"end": 18564,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 18589,
											"end": 18591,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 18584,
											"end": 18587,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 18580,
											"end": 18592,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 18573,
											"end": 18592,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 18573,
											"end": 18592,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 18232,
											"end": 18598,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 18232,
											"end": 18598,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 18232,
											"end": 18598,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 18232,
											"end": 18598,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 18604,
											"end": 19386,
											"name": "tag",
											"source": 23,
											"value": "247"
										},
										{
											"begin": 18604,
											"end": 19386,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 18870,
											"end": 18874,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 18908,
											"end": 18911,
											"name": "PUSH",
											"source": 23,
											"value": "80"
										},
										{
											"begin": 18897,
											"end": 18906,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 18893,
											"end": 18912,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 18885,
											"end": 18912,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 18885,
											"end": 18912,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 18958,
											"end": 18967,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 18952,
											"end": 18956,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 18948,
											"end": 18968,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 18944,
											"end": 18945,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 18933,
											"end": 18942,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 18929,
											"end": 18946,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 18922,
											"end": 18969,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 18986,
											"end": 19117,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "535"
										},
										{
											"begin": 19112,
											"end": 19116,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 18986,
											"end": 19117,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "316"
										},
										{
											"begin": 18986,
											"end": 19117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 18986,
											"end": 19117,
											"name": "tag",
											"source": 23,
											"value": "535"
										},
										{
											"begin": 18986,
											"end": 19117,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 18978,
											"end": 19117,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 18978,
											"end": 19117,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 19127,
											"end": 19207,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "536"
										},
										{
											"begin": 19203,
											"end": 19205,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 19192,
											"end": 19201,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 19188,
											"end": 19206,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 19179,
											"end": 19185,
											"name": "DUP7",
											"source": 23
										},
										{
											"begin": 19127,
											"end": 19207,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "293"
										},
										{
											"begin": 19127,
											"end": 19207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 19127,
											"end": 19207,
											"name": "tag",
											"source": 23,
											"value": "536"
										},
										{
											"begin": 19127,
											"end": 19207,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 19217,
											"end": 19297,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "537"
										},
										{
											"begin": 19293,
											"end": 19295,
											"name": "PUSH",
											"source": 23,
											"value": "40"
										},
										{
											"begin": 19282,
											"end": 19291,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 19278,
											"end": 19296,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 19269,
											"end": 19275,
											"name": "DUP6",
											"source": 23
										},
										{
											"begin": 19217,
											"end": 19297,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "293"
										},
										{
											"begin": 19217,
											"end": 19297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 19217,
											"end": 19297,
											"name": "tag",
											"source": 23,
											"value": "537"
										},
										{
											"begin": 19217,
											"end": 19297,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 19307,
											"end": 19379,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "538"
										},
										{
											"begin": 19375,
											"end": 19377,
											"name": "PUSH",
											"source": 23,
											"value": "60"
										},
										{
											"begin": 19364,
											"end": 19373,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 19360,
											"end": 19378,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 19351,
											"end": 19357,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 19307,
											"end": 19379,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "264"
										},
										{
											"begin": 19307,
											"end": 19379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 19307,
											"end": 19379,
											"name": "tag",
											"source": 23,
											"value": "538"
										},
										{
											"begin": 19307,
											"end": 19379,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 18604,
											"end": 19386,
											"name": "SWAP5",
											"source": 23
										},
										{
											"begin": 18604,
											"end": 19386,
											"name": "SWAP4",
											"source": 23
										},
										{
											"begin": 18604,
											"end": 19386,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 18604,
											"end": 19386,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 18604,
											"end": 19386,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 18604,
											"end": 19386,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 18604,
											"end": 19386,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 19392,
											"end": 19497,
											"name": "tag",
											"source": 23,
											"value": "317"
										},
										{
											"begin": 19392,
											"end": 19497,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 19428,
											"end": 19435,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 19468,
											"end": 19490,
											"name": "PUSH",
											"source": 23,
											"value": "FFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19461,
											"end": 19466,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 19457,
											"end": 19491,
											"name": "AND",
											"source": 23
										},
										{
											"begin": 19446,
											"end": 19491,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 19446,
											"end": 19491,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 19392,
											"end": 19497,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 19392,
											"end": 19497,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 19392,
											"end": 19497,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 19392,
											"end": 19497,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 19503,
											"end": 19623,
											"name": "tag",
											"source": 23,
											"value": "318"
										},
										{
											"begin": 19503,
											"end": 19623,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 19575,
											"end": 19598,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "541"
										},
										{
											"begin": 19592,
											"end": 19597,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 19575,
											"end": 19598,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "317"
										},
										{
											"begin": 19575,
											"end": 19598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 19575,
											"end": 19598,
											"name": "tag",
											"source": 23,
											"value": "541"
										},
										{
											"begin": 19575,
											"end": 19598,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 19568,
											"end": 19573,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 19565,
											"end": 19599,
											"name": "EQ",
											"source": 23
										},
										{
											"begin": 19555,
											"end": 19617,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "542"
										},
										{
											"begin": 19555,
											"end": 19617,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 19613,
											"end": 19614,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 19610,
											"end": 19611,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 19603,
											"end": 19615,
											"name": "REVERT",
											"source": 23
										},
										{
											"begin": 19555,
											"end": 19617,
											"name": "tag",
											"source": 23,
											"value": "542"
										},
										{
											"begin": 19555,
											"end": 19617,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 19503,
											"end": 19623,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 19503,
											"end": 19623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 19629,
											"end": 19770,
											"name": "tag",
											"source": 23,
											"value": "319"
										},
										{
											"begin": 19629,
											"end": 19770,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 19685,
											"end": 19690,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 19716,
											"end": 19722,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 19710,
											"end": 19723,
											"name": "MLOAD",
											"source": 23
										},
										{
											"begin": 19701,
											"end": 19723,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 19701,
											"end": 19723,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 19732,
											"end": 19764,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "544"
										},
										{
											"begin": 19758,
											"end": 19763,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 19732,
											"end": 19764,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "318"
										},
										{
											"begin": 19732,
											"end": 19764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 19732,
											"end": 19764,
											"name": "tag",
											"source": 23,
											"value": "544"
										},
										{
											"begin": 19732,
											"end": 19764,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 19629,
											"end": 19770,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 19629,
											"end": 19770,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 19629,
											"end": 19770,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 19629,
											"end": 19770,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 19629,
											"end": 19770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 19776,
											"end": 19852,
											"name": "tag",
											"source": 23,
											"value": "320"
										},
										{
											"begin": 19776,
											"end": 19852,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 19812,
											"end": 19819,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 19841,
											"end": 19846,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 19830,
											"end": 19846,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 19830,
											"end": 19846,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 19776,
											"end": 19852,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 19776,
											"end": 19852,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 19776,
											"end": 19852,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 19776,
											"end": 19852,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 19858,
											"end": 19978,
											"name": "tag",
											"source": 23,
											"value": "321"
										},
										{
											"begin": 19858,
											"end": 19978,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 19930,
											"end": 19953,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "547"
										},
										{
											"begin": 19947,
											"end": 19952,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 19930,
											"end": 19953,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "320"
										},
										{
											"begin": 19930,
											"end": 19953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 19930,
											"end": 19953,
											"name": "tag",
											"source": 23,
											"value": "547"
										},
										{
											"begin": 19930,
											"end": 19953,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 19923,
											"end": 19928,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 19920,
											"end": 19954,
											"name": "EQ",
											"source": 23
										},
										{
											"begin": 19910,
											"end": 19972,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "548"
										},
										{
											"begin": 19910,
											"end": 19972,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 19968,
											"end": 19969,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 19965,
											"end": 19966,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 19958,
											"end": 19970,
											"name": "REVERT",
											"source": 23
										},
										{
											"begin": 19910,
											"end": 19972,
											"name": "tag",
											"source": 23,
											"value": "548"
										},
										{
											"begin": 19910,
											"end": 19972,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 19858,
											"end": 19978,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 19858,
											"end": 19978,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 19984,
											"end": 20125,
											"name": "tag",
											"source": 23,
											"value": "322"
										},
										{
											"begin": 19984,
											"end": 20125,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 20040,
											"end": 20045,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 20071,
											"end": 20077,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 20065,
											"end": 20078,
											"name": "MLOAD",
											"source": 23
										},
										{
											"begin": 20056,
											"end": 20078,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 20056,
											"end": 20078,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 20087,
											"end": 20119,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "550"
										},
										{
											"begin": 20113,
											"end": 20118,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 20087,
											"end": 20119,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "321"
										},
										{
											"begin": 20087,
											"end": 20119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 20087,
											"end": 20119,
											"name": "tag",
											"source": 23,
											"value": "550"
										},
										{
											"begin": 20087,
											"end": 20119,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 19984,
											"end": 20125,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 19984,
											"end": 20125,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 19984,
											"end": 20125,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 19984,
											"end": 20125,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 19984,
											"end": 20125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 20131,
											"end": 20274,
											"name": "tag",
											"source": 23,
											"value": "323"
										},
										{
											"begin": 20131,
											"end": 20274,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 20188,
											"end": 20193,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 20219,
											"end": 20225,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 20213,
											"end": 20226,
											"name": "MLOAD",
											"source": 23
										},
										{
											"begin": 20204,
											"end": 20226,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 20204,
											"end": 20226,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 20235,
											"end": 20268,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "552"
										},
										{
											"begin": 20262,
											"end": 20267,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 20235,
											"end": 20268,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "278"
										},
										{
											"begin": 20235,
											"end": 20268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 20235,
											"end": 20268,
											"name": "tag",
											"source": 23,
											"value": "552"
										},
										{
											"begin": 20235,
											"end": 20268,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 20131,
											"end": 20274,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 20131,
											"end": 20274,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 20131,
											"end": 20274,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 20131,
											"end": 20274,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 20131,
											"end": 20274,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 20280,
											"end": 21251,
											"name": "tag",
											"source": 23,
											"value": "252"
										},
										{
											"begin": 20280,
											"end": 21251,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 20383,
											"end": 20389,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 20391,
											"end": 20397,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 20399,
											"end": 20405,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 20407,
											"end": 20413,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 20415,
											"end": 20421,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 20464,
											"end": 20467,
											"name": "PUSH",
											"source": 23,
											"value": "A0"
										},
										{
											"begin": 20452,
											"end": 20461,
											"name": "DUP7",
											"source": 23
										},
										{
											"begin": 20443,
											"end": 20450,
											"name": "DUP9",
											"source": 23
										},
										{
											"begin": 20439,
											"end": 20462,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 20435,
											"end": 20468,
											"name": "SLT",
											"source": 23
										},
										{
											"begin": 20432,
											"end": 20552,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 20432,
											"end": 20552,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "554"
										},
										{
											"begin": 20432,
											"end": 20552,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 20471,
											"end": 20550,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "555"
										},
										{
											"begin": 20471,
											"end": 20550,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "266"
										},
										{
											"begin": 20471,
											"end": 20550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 20471,
											"end": 20550,
											"name": "tag",
											"source": 23,
											"value": "555"
										},
										{
											"begin": 20471,
											"end": 20550,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 20432,
											"end": 20552,
											"name": "tag",
											"source": 23,
											"value": "554"
										},
										{
											"begin": 20432,
											"end": 20552,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 20591,
											"end": 20592,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 20616,
											"end": 20679,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "556"
										},
										{
											"begin": 20671,
											"end": 20678,
											"name": "DUP9",
											"source": 23
										},
										{
											"begin": 20662,
											"end": 20668,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 20651,
											"end": 20660,
											"name": "DUP10",
											"source": 23
										},
										{
											"begin": 20647,
											"end": 20669,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 20616,
											"end": 20679,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "319"
										},
										{
											"begin": 20616,
											"end": 20679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 20616,
											"end": 20679,
											"name": "tag",
											"source": 23,
											"value": "556"
										},
										{
											"begin": 20616,
											"end": 20679,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 20606,
											"end": 20679,
											"name": "SWAP6",
											"source": 23
										},
										{
											"begin": 20606,
											"end": 20679,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 20562,
											"end": 20689,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 20728,
											"end": 20730,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 20754,
											"end": 20817,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "557"
										},
										{
											"begin": 20809,
											"end": 20816,
											"name": "DUP9",
											"source": 23
										},
										{
											"begin": 20800,
											"end": 20806,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 20789,
											"end": 20798,
											"name": "DUP10",
											"source": 23
										},
										{
											"begin": 20785,
											"end": 20807,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 20754,
											"end": 20817,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "322"
										},
										{
											"begin": 20754,
											"end": 20817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 20754,
											"end": 20817,
											"name": "tag",
											"source": 23,
											"value": "557"
										},
										{
											"begin": 20754,
											"end": 20817,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 20744,
											"end": 20817,
											"name": "SWAP5",
											"source": 23
										},
										{
											"begin": 20744,
											"end": 20817,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 20699,
											"end": 20827,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 20866,
											"end": 20868,
											"name": "PUSH",
											"source": 23,
											"value": "40"
										},
										{
											"begin": 20892,
											"end": 20956,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "558"
										},
										{
											"begin": 20948,
											"end": 20955,
											"name": "DUP9",
											"source": 23
										},
										{
											"begin": 20939,
											"end": 20945,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 20928,
											"end": 20937,
											"name": "DUP10",
											"source": 23
										},
										{
											"begin": 20924,
											"end": 20946,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 20892,
											"end": 20956,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "323"
										},
										{
											"begin": 20892,
											"end": 20956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 20892,
											"end": 20956,
											"name": "tag",
											"source": 23,
											"value": "558"
										},
										{
											"begin": 20892,
											"end": 20956,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 20882,
											"end": 20956,
											"name": "SWAP4",
											"source": 23
										},
										{
											"begin": 20882,
											"end": 20956,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 20837,
											"end": 20966,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 21005,
											"end": 21007,
											"name": "PUSH",
											"source": 23,
											"value": "60"
										},
										{
											"begin": 21031,
											"end": 21095,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "559"
										},
										{
											"begin": 21087,
											"end": 21094,
											"name": "DUP9",
											"source": 23
										},
										{
											"begin": 21078,
											"end": 21084,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 21067,
											"end": 21076,
											"name": "DUP10",
											"source": 23
										},
										{
											"begin": 21063,
											"end": 21085,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 21031,
											"end": 21095,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "323"
										},
										{
											"begin": 21031,
											"end": 21095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 21031,
											"end": 21095,
											"name": "tag",
											"source": 23,
											"value": "559"
										},
										{
											"begin": 21031,
											"end": 21095,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 21021,
											"end": 21095,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 21021,
											"end": 21095,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 20976,
											"end": 21105,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 21144,
											"end": 21147,
											"name": "PUSH",
											"source": 23,
											"value": "80"
										},
										{
											"begin": 21171,
											"end": 21234,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "560"
										},
										{
											"begin": 21226,
											"end": 21233,
											"name": "DUP9",
											"source": 23
										},
										{
											"begin": 21217,
											"end": 21223,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 21206,
											"end": 21215,
											"name": "DUP10",
											"source": 23
										},
										{
											"begin": 21202,
											"end": 21224,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 21171,
											"end": 21234,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "319"
										},
										{
											"begin": 21171,
											"end": 21234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 21171,
											"end": 21234,
											"name": "tag",
											"source": 23,
											"value": "560"
										},
										{
											"begin": 21171,
											"end": 21234,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 21161,
											"end": 21234,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 21161,
											"end": 21234,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 21115,
											"end": 21244,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 20280,
											"end": 21251,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 20280,
											"end": 21251,
											"name": "SWAP6",
											"source": 23
										},
										{
											"begin": 20280,
											"end": 21251,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 20280,
											"end": 21251,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 20280,
											"end": 21251,
											"name": "SWAP6",
											"source": 23
										},
										{
											"begin": 20280,
											"end": 21251,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 20280,
											"end": 21251,
											"name": "SWAP4",
											"source": 23
										},
										{
											"begin": 20280,
											"end": 21251,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 20280,
											"end": 21251,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 21257,
											"end": 21813,
											"name": "tag",
											"source": 23,
											"value": "254"
										},
										{
											"begin": 21257,
											"end": 21813,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 21296,
											"end": 21303,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 21319,
											"end": 21338,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "562"
										},
										{
											"begin": 21336,
											"end": 21337,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 21319,
											"end": 21338,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "320"
										},
										{
											"begin": 21319,
											"end": 21338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 21319,
											"end": 21338,
											"name": "tag",
											"source": 23,
											"value": "562"
										},
										{
											"begin": 21319,
											"end": 21338,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 21314,
											"end": 21338,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 21314,
											"end": 21338,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 21352,
											"end": 21371,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "563"
										},
										{
											"begin": 21369,
											"end": 21370,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 21352,
											"end": 21371,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "320"
										},
										{
											"begin": 21352,
											"end": 21371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 21352,
											"end": 21371,
											"name": "tag",
											"source": 23,
											"value": "563"
										},
										{
											"begin": 21352,
											"end": 21371,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 21347,
											"end": 21371,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 21347,
											"end": 21371,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 21406,
											"end": 21407,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 21403,
											"end": 21404,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 21399,
											"end": 21408,
											"name": "MUL",
											"source": 23
										},
										{
											"begin": 21428,
											"end": 21457,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "564"
										},
										{
											"begin": 21445,
											"end": 21456,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 21428,
											"end": 21457,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "320"
										},
										{
											"begin": 21428,
											"end": 21457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 21428,
											"end": 21457,
											"name": "tag",
											"source": 23,
											"value": "564"
										},
										{
											"begin": 21428,
											"end": 21457,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 21417,
											"end": 21457,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 21417,
											"end": 21457,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 21515,
											"end": 21581,
											"name": "PUSH",
											"source": 23,
											"value": "8000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21512,
											"end": 21513,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 21509,
											"end": 21582,
											"name": "EQ",
											"source": 23
										},
										{
											"begin": 21505,
											"end": 21506,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 21502,
											"end": 21503,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 21498,
											"end": 21507,
											"name": "SLT",
											"source": 23
										},
										{
											"begin": 21494,
											"end": 21583,
											"name": "AND",
											"source": 23
										},
										{
											"begin": 21491,
											"end": 21606,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 21491,
											"end": 21606,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "565"
										},
										{
											"begin": 21491,
											"end": 21606,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 21586,
											"end": 21604,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "566"
										},
										{
											"begin": 21586,
											"end": 21604,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "259"
										},
										{
											"begin": 21586,
											"end": 21604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 21586,
											"end": 21604,
											"name": "tag",
											"source": 23,
											"value": "566"
										},
										{
											"begin": 21586,
											"end": 21604,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 21491,
											"end": 21606,
											"name": "tag",
											"source": 23,
											"value": "565"
										},
										{
											"begin": 21491,
											"end": 21606,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 21756,
											"end": 21757,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 21747,
											"end": 21754,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 21742,
											"end": 21758,
											"name": "SDIV",
											"source": 23
										},
										{
											"begin": 21739,
											"end": 21740,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 21736,
											"end": 21759,
											"name": "EQ",
											"source": 23
										},
										{
											"begin": 21716,
											"end": 21717,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 21709,
											"end": 21718,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 21689,
											"end": 21773,
											"name": "OR",
											"source": 23
										},
										{
											"begin": 21666,
											"end": 21806,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "567"
										},
										{
											"begin": 21666,
											"end": 21806,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 21786,
											"end": 21804,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "568"
										},
										{
											"begin": 21786,
											"end": 21804,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "259"
										},
										{
											"begin": 21786,
											"end": 21804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 21786,
											"end": 21804,
											"name": "tag",
											"source": 23,
											"value": "568"
										},
										{
											"begin": 21786,
											"end": 21804,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 21666,
											"end": 21806,
											"name": "tag",
											"source": 23,
											"value": "567"
										},
										{
											"begin": 21666,
											"end": 21806,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 21304,
											"end": 21813,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 21257,
											"end": 21813,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 21257,
											"end": 21813,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 21257,
											"end": 21813,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 21257,
											"end": 21813,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 21257,
											"end": 21813,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										}
									]
								}
							},
							"sourceList": [
								"contracts/MainBot.sol",
								"contracts/aave/protocol-v2/contracts/interfaces/DataTypes.sol",
								"contracts/aave/protocol-v2/contracts/interfaces/ILendingPool.sol",
								"contracts/aave/protocol-v2/contracts/interfaces/ILendingPoolAddressesProvider.sol",
								"contracts/chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol",
								"contracts/openzeppelin/contracts/token/ERC721/IERC721.sol",
								"contracts/openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol",
								"contracts/openzeppelin/contracts/token/ERC721/IERC721Metadata.sol",
								"contracts/openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/uniswap/v3-periphery/contracts/interfaces/IERC721Permit.sol",
								"contracts/uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol",
								"contracts/uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol",
								"contracts/uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol",
								"contracts/uniswap/v3-periphery/contracts/interfaces/IPoolInitializer.sol",
								"contracts/uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
								"contracts/uniswap/v3-periphery/contracts/interfaces/IUniswapV3Pool.sol",
								"contracts/uniswap/v3-periphery/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
								"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
								"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
								"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
								"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
								"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
								"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolState.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"POLToken()": "f1a107fe",
							"aaveLendingPoolAddressesProvider()": "238f9b7a",
							"adjustTimeframe(uint256)": "869665e9",
							"checkLiquidity(uint256,address)": "3fb47a3b",
							"checkPrice()": "8fc3047d",
							"convertAllToPOL()": "9d8ef1e1",
							"currentActivity()": "6d546cdd",
							"dexRouters(string)": "5e7ffa67",
							"disableTrading()": "17700f01",
							"gasCostMultiplier()": "a30fb905",
							"initialDeposit()": "e037f889",
							"initiateTrade(string,uint256)": "26c403ed",
							"kill()": "41c0e1b5",
							"lossThreshold()": "c0fc247f",
							"maticBalance()": "1458d9d8",
							"nextLogTime()": "1bf41362",
							"owner()": "8da5cb5b",
							"priceFeedAddress()": "e0abca0b",
							"profitThreshold()": "f974821a",
							"quickSwapRouter()": "e189eb42",
							"setController(address)": "92eefe9b",
							"stablecoinBalance()": "64aabb9e",
							"tradingEnabled()": "4ada218b",
							"trailingStopLoss()": "b3ce56a2",
							"uniswapPositionManager()": "e5047b30",
							"uniswapRouter()": "735de9f7",
							"usdcToken()": "11eac855",
							"usdtToken()": "a98ad46c",
							"withdrawInGwei(uint256)": "457f3cb0"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"activity\",\"type\":\"string\"}],\"name\":\"CurrentActivity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"currentBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"}],\"name\":\"StopLossTriggered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"TestEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"tradeType\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"TradeExecuted\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"POLToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"aaveLendingPoolAddressesProvider\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"selectedTimeframe\",\"type\":\"uint256\"}],\"name\":\"adjustTimeframe\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"}],\"name\":\"checkLiquidity\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"sufficientLiquidity\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"convertAllToPOL\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentActivity\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"dexRouters\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disableTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gasCostMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tradeType\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"initiateTrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lossThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maticBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextLogTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeedAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"profitThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quickSwapRouter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stablecoinBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tradingEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trailingStopLoss\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapPositionManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapRouter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdcToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdtToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountInGwei\",\"type\":\"uint256\"}],\"name\":\"withdrawInGwei\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MainBot.sol\":\"MainBot\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MainBot.sol\":{\"keccak256\":\"0x66347abd18f346bc32084336597fb9f31bb8d69d8a1edf96ffba302c489768e4\",\"license\":\"MITs\",\"urls\":[\"bzz-raw://3e7570cffe867a979714202aa0d7fcbcdb38b0fc4c4092bd162918cd91623729\",\"dweb:/ipfs/QmQE2QZQbaRywtAhkZA1PMgcL3rn6aUZpB5pD1vbVgtu5P\"]},\"contracts/aave/protocol-v2/contracts/interfaces/DataTypes.sol\":{\"keccak256\":\"0x81caed3fbb24bd8721c85094546ee31f033209a1dc5b8aa4d8ce094388666cb4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4ab7c3612816908da41df1a0f62bde806a9fe088198dcd7b70f6a8f31c7d131\",\"dweb:/ipfs/QmRNtcEwyFdiJmbJ1oyDiDZ3foyrHchCMo1MYjAXYR7zdd\"]},\"contracts/aave/protocol-v2/contracts/interfaces/ILendingPool.sol\":{\"keccak256\":\"0xbcbeb7a9a1bc100bae12891df6265691103d76f71e7eed72902d2024f05f654b\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://898ea64e297442bb3bc7c7215786ae6453dce7900200f836041ff9ed7867f4e0\",\"dweb:/ipfs/QmTuSyHSYg7PNo6eRDe1ATJZ2UxDxwFJUshJRnT22co19a\"]},\"contracts/aave/protocol-v2/contracts/interfaces/ILendingPoolAddressesProvider.sol\":{\"keccak256\":\"0x219d7db359e51dfd51b0a454dc284c44671b6ce6543b7f383ef0aec4534c7ea0\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://f09e938d9d6edadd398245b27e15eb0df96f20dd5104f523a10cfe4a9329ba92\",\"dweb:/ipfs/QmNhjFNzjeKkqUNe9SJnxiuH8wAQYVp9MX6mAGBzeESpyz\"]},\"contracts/chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x257a8d28fa83d3d942547c8e129ef465e4b5f3f31171e7be4739a4c98da6b4f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d39e11b1dc7b9b8ccdabbc9be442ab7cda4a81c748f57e316dcb1bcb4a28bf9\",\"dweb:/ipfs/QmaG6vz6W6iEUBsbHSBob5mdcitYxWjoygxREHpsJHfWrS\"]},\"contracts/openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x3c504de1aed405d34ff26733c7b6edc9fd9fd4f9aac504f541a4238dd50bf1d2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e373cc851a65ef3f01bb825f59c3c9cdb1969adab8ec871dd1f197423f6b9ed\",\"dweb:/ipfs/QmWNM3TyZgfxTKJsfqk7ZJk7DmZr29iab3f8T4c1itiynm\"]},\"contracts/openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol\":{\"keccak256\":\"0x49ae5d944b6f25701d67ef1d76cbce766f062bf1958a34b13543f539d7882850\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://851181789f63ce009fa30ddabd8ef159d90733216d5d1f2f9e13d16688f67489\",\"dweb:/ipfs/QmdT4okvCWQC1eSYNFfyqjUkJBAiWbSZMwAazzEuizBJSb\"]},\"contracts/openzeppelin/contracts/token/ERC721/IERC721Metadata.sol\":{\"keccak256\":\"0xfd743e54fb2a27413f703a389d1d78b003d957eaebbcfa15051d89793cf5136a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07683e02a762080a63f5ccec780488e5b87f79ded66d4c1e27f5cd62c1b5f8cb\",\"dweb:/ipfs/QmNtAngsTxV2c2XAKrqAo7PUUpXz1J69LNzwkEun4QTX7w\"]},\"contracts/openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x1e96fdc714c1d5e754ad716c7cb4ac8daa28856879f2d40bb428720adac47b69\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1725af76c335db636686b0b8f36dfdcfa15d40993509ed80c6e579dfd3e1c2f3\",\"dweb:/ipfs/QmcT6Bp635CWdmxQnv84bicV4eaD46cY1ywZNgriSusJXw\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/IERC721Permit.sol\":{\"keccak256\":\"0x9915ccd225c6840a809606b1a929404b0299bff8d7cbb6bc8439c5dfd74046d2\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f0cdf83091593d05e85f50c1c40cf17c8c1eb6aeaac87cb9f8c91e8e31cf162c\",\"dweb:/ipfs/QmZxxuzCfsPLnARKERZj2fvy2mEvyQWJd9uDWpFwj4UkJa\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol\":{\"keccak256\":\"0x631739110217293c69ff6fc6ca4499fcabe8774fb17de93a5546dabe6e207034\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://9f61686e40280404bb22e20c5c380ed8dd4467c8c5c164762566233146cc2e26\",\"dweb:/ipfs/QmbA6qoN6NJvnj3vTRFA5ozNLdnWqtK5iJjqzcR1NS3qJk\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol\":{\"keccak256\":\"0x7affcfeb5127c0925a71d6a65345e117c33537523aeca7bc98085ead8452519d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e16b291294210e71cb0f20cd0afe62ae2dc6878d627f5ccc19c4dc9cd80aec3f\",\"dweb:/ipfs/QmQGitSyBr26nour81BZmpmDMyJpvZRqHQZvnCD1Acb127\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol\":{\"keccak256\":\"0xb547e10f1e69bed03621a62b73a503e260643066c6b4054867a4d1fef47eb274\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f9a90f58f5fd5fb42f7811f4094113b532f307b14a73764c91f977590747f407\",\"dweb:/ipfs/QmSeNH2mfiDMKf3Q6V2sqtNxx1s72JNuA1VVxRM9HoMqYp\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/IPoolInitializer.sol\":{\"keccak256\":\"0x9d7695e8d94c22cc5fcced602017aabb988de89981ea7bee29ea629d5328a862\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://61b50933026ee1017db2a6273af8cedc3238c95dca58880db0918dbdbb2f064f\",\"dweb:/ipfs/QmUebR26pqG25d18aBELKz8aFFKkmHa8PxntzXTA7o9Ldu\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0xfa925dc6086cfc426967d6b47a651ade9bb30a747359c0d006912c59d88b5c4a\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ec22f5863805d4afbf740bbba06c07fe4572ba993e4936a234222c61b3d1dd6e\",\"dweb:/ipfs/QmNyC92QbbjjG5V67GNfiXbSN6Ehi7637uFQXkWwKXR3s6\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5\",\"dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0xe75caaf5ab5dad796a807a0db3ce9d5aeeadf3cc062aaa17f701134bbd085f53\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://21ae8e8c7af183532964bc81889b695801f868d903af91d18d02a77d793e14fb\",\"dweb:/ipfs/QmfDr8ugPEdbxtTCs6fut61Euf3adBvS2aNyFyC5CFAFGy\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 37,
								"contract": "contracts/MainBot.sol:MainBot",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 39,
								"contract": "contracts/MainBot.sol:MainBot",
								"label": "tradingEnabled",
								"offset": 20,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 41,
								"contract": "contracts/MainBot.sol:MainBot",
								"label": "initialDeposit",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 43,
								"contract": "contracts/MainBot.sol:MainBot",
								"label": "maticBalance",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 45,
								"contract": "contracts/MainBot.sol:MainBot",
								"label": "stablecoinBalance",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 47,
								"contract": "contracts/MainBot.sol:MainBot",
								"label": "profitThreshold",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 49,
								"contract": "contracts/MainBot.sol:MainBot",
								"label": "lossThreshold",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 52,
								"contract": "contracts/MainBot.sol:MainBot",
								"label": "gasCostMultiplier",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 55,
								"contract": "contracts/MainBot.sol:MainBot",
								"label": "trailingStopLoss",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 57,
								"contract": "contracts/MainBot.sol:MainBot",
								"label": "nextLogTime",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 60,
								"contract": "contracts/MainBot.sol:MainBot",
								"label": "currentActivity",
								"offset": 0,
								"slot": "9",
								"type": "t_string_storage"
							},
							{
								"astId": 63,
								"contract": "contracts/MainBot.sol:MainBot",
								"label": "POLToken",
								"offset": 0,
								"slot": "10",
								"type": "t_address"
							},
							{
								"astId": 66,
								"contract": "contracts/MainBot.sol:MainBot",
								"label": "usdtToken",
								"offset": 0,
								"slot": "11",
								"type": "t_address"
							},
							{
								"astId": 69,
								"contract": "contracts/MainBot.sol:MainBot",
								"label": "usdcToken",
								"offset": 0,
								"slot": "12",
								"type": "t_address"
							},
							{
								"astId": 72,
								"contract": "contracts/MainBot.sol:MainBot",
								"label": "quickSwapRouter",
								"offset": 0,
								"slot": "13",
								"type": "t_address"
							},
							{
								"astId": 75,
								"contract": "contracts/MainBot.sol:MainBot",
								"label": "priceFeedAddress",
								"offset": 0,
								"slot": "14",
								"type": "t_address"
							},
							{
								"astId": 78,
								"contract": "contracts/MainBot.sol:MainBot",
								"label": "uniswapRouter",
								"offset": 0,
								"slot": "15",
								"type": "t_address"
							},
							{
								"astId": 81,
								"contract": "contracts/MainBot.sol:MainBot",
								"label": "uniswapPositionManager",
								"offset": 0,
								"slot": "16",
								"type": "t_address"
							},
							{
								"astId": 84,
								"contract": "contracts/MainBot.sol:MainBot",
								"label": "aaveLendingPoolAddressesProvider",
								"offset": 0,
								"slot": "17",
								"type": "t_address"
							},
							{
								"astId": 88,
								"contract": "contracts/MainBot.sol:MainBot",
								"label": "dexRouters",
								"offset": 0,
								"slot": "18",
								"type": "t_mapping(t_string_memory_ptr,t_address)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_string_memory_ptr,t_address)": {
								"encoding": "mapping",
								"key": "t_string_memory_ptr",
								"label": "mapping(string => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_memory_ptr": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/aave/protocol-v2/contracts/interfaces/DataTypes.sol": {
				"DataTypes": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/aave/protocol-v2/contracts/interfaces/DataTypes.sol\":57:982  library DataTypes {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/aave/protocol-v2/contracts/interfaces/DataTypes.sol\":57:982  library DataTypes {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212206c1b0f6a379bf97fc6988d1e586d8c2811ab352e40d92eb77b6e181568b0ea2d64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212206c1b0f6a379bf97fc6988d1e586d8c2811ab352e40d92eb77b6e181568b0ea2d64736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH13 0x1B0F6A379BF97FC6988D1E586D DUP13 0x28 GT 0xAB CALLDATALOAD 0x2E BLOCKHASH 0xD9 0x2E 0xB7 PUSH28 0x6E181568B0EA2D64736F6C6343000814003300000000000000000000 ",
							"sourceMap": "57:925:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212206c1b0f6a379bf97fc6988d1e586d8c2811ab352e40d92eb77b6e181568b0ea2d64736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH13 0x1B0F6A379BF97FC6988D1E586D DUP13 0x28 GT 0xAB CALLDATALOAD 0x2E BLOCKHASH 0xD9 0x2E 0xB7 PUSH28 0x6E181568B0EA2D64736F6C6343000814003300000000000000000000 ",
							"sourceMap": "57:925:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 57,
									"end": 982,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 982,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 982,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 57,
									"end": 982,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 57,
									"end": 982,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 57,
									"end": 982,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 57,
									"end": 982,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 57,
									"end": 982,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 57,
									"end": 982,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 57,
									"end": 982,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 982,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 57,
									"end": 982,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 57,
									"end": 982,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 57,
									"end": 982,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 57,
									"end": 982,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 57,
									"end": 982,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 982,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 982,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 57,
									"end": 982,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 982,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 57,
									"end": 982,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 57,
									"end": 982,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 57,
									"end": 982,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 982,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 57,
									"end": 982,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 57,
									"end": 982,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 57,
									"end": 982,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 57,
									"end": 982,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 982,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 57,
									"end": 982,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 57,
									"end": 982,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 57,
									"end": 982,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 57,
									"end": 982,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 57,
									"end": 982,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 57,
									"end": 982,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206c1b0f6a379bf97fc6988d1e586d8c2811ab352e40d92eb77b6e181568b0ea2d64736f6c63430008140033",
									".code": [
										{
											"begin": 57,
											"end": 982,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 57,
											"end": 982,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 57,
											"end": 982,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 57,
											"end": 982,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 57,
											"end": 982,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 57,
											"end": 982,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 57,
											"end": 982,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 982,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 57,
											"end": 982,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/MainBot.sol",
								"contracts/aave/protocol-v2/contracts/interfaces/DataTypes.sol",
								"contracts/aave/protocol-v2/contracts/interfaces/ILendingPool.sol",
								"contracts/aave/protocol-v2/contracts/interfaces/ILendingPoolAddressesProvider.sol",
								"contracts/chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol",
								"contracts/openzeppelin/contracts/token/ERC721/IERC721.sol",
								"contracts/openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol",
								"contracts/openzeppelin/contracts/token/ERC721/IERC721Metadata.sol",
								"contracts/openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/uniswap/v3-periphery/contracts/interfaces/IERC721Permit.sol",
								"contracts/uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol",
								"contracts/uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol",
								"contracts/uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol",
								"contracts/uniswap/v3-periphery/contracts/interfaces/IPoolInitializer.sol",
								"contracts/uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
								"contracts/uniswap/v3-periphery/contracts/interfaces/IUniswapV3Pool.sol",
								"contracts/uniswap/v3-periphery/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
								"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
								"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
								"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
								"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
								"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
								"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolState.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/aave/protocol-v2/contracts/interfaces/DataTypes.sol\":\"DataTypes\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/aave/protocol-v2/contracts/interfaces/DataTypes.sol\":{\"keccak256\":\"0x81caed3fbb24bd8721c85094546ee31f033209a1dc5b8aa4d8ce094388666cb4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4ab7c3612816908da41df1a0f62bde806a9fe088198dcd7b70f6a8f31c7d131\",\"dweb:/ipfs/QmRNtcEwyFdiJmbJ1oyDiDZ3foyrHchCMo1MYjAXYR7zdd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/aave/protocol-v2/contracts/interfaces/ILendingPool.sol": {
				"ILendingPool": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "onBehalfOf",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "borrowRateMode",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "borrowRate",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint16",
									"name": "referral",
									"type": "uint16"
								}
							],
							"name": "Borrow",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "onBehalfOf",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint16",
									"name": "referral",
									"type": "uint16"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "target",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "initiator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "premium",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "referralCode",
									"type": "uint16"
								}
							],
							"name": "FlashLoan",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "collateralAsset",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "debtAsset",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "debtToCover",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "liquidatedCollateralAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "liquidator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "receiveAToken",
									"type": "bool"
								}
							],
							"name": "LiquidationCall",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "RebalanceStableBorrowRate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "repayer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Repay",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "liquidityRate",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "stableBorrowRate",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "variableBorrowRate",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "liquidityIndex",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "variableBorrowIndex",
									"type": "uint256"
								}
							],
							"name": "ReserveDataUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "ReserveUsedAsCollateralDisabled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "ReserveUsedAsCollateralEnabled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "rateMode",
									"type": "uint256"
								}
							],
							"name": "Swap",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "interestRateMode",
									"type": "uint256"
								},
								{
									"internalType": "uint16",
									"name": "referralCode",
									"type": "uint16"
								},
								{
									"internalType": "address",
									"name": "onBehalfOf",
									"type": "address"
								}
							],
							"name": "borrow",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "onBehalfOf",
									"type": "address"
								},
								{
									"internalType": "uint16",
									"name": "referralCode",
									"type": "uint16"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "balanceFromAfter",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "balanceToBefore",
									"type": "uint256"
								}
							],
							"name": "finalizeTransfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiverAddress",
									"type": "address"
								},
								{
									"internalType": "address[]",
									"name": "assets",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "modes",
									"type": "uint256[]"
								},
								{
									"internalType": "address",
									"name": "onBehalfOf",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "params",
									"type": "bytes"
								},
								{
									"internalType": "uint16",
									"name": "referralCode",
									"type": "uint16"
								}
							],
							"name": "flashLoan",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getAddressesProvider",
							"outputs": [
								{
									"internalType": "contract ILendingPoolAddressesProvider",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								}
							],
							"name": "getConfiguration",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "data",
											"type": "uint256"
										}
									],
									"internalType": "struct DataTypes.ReserveConfigurationMap",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								}
							],
							"name": "getReserveData",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "totalLiquidity",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "availableLiquidity",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "totalStableDebt",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "totalVariableDebt",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "liquidityRate",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "variableBorrowRate",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "stableBorrowRate",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "averageStableBorrowRate",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "liquidityIndex",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "variableBorrowIndex",
											"type": "uint256"
										},
										{
											"internalType": "uint40",
											"name": "lastUpdateTimestamp",
											"type": "uint40"
										}
									],
									"internalType": "struct DataTypes.ReserveData",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								}
							],
							"name": "getReserveNormalizedIncome",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								}
							],
							"name": "getReserveNormalizedVariableDebt",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getReservesList",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getUserAccountData",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "totalCollateralETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalDebtETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "availableBorrowsETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "currentLiquidationThreshold",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "ltv",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "healthFactor",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getUserConfiguration",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "data",
											"type": "uint256"
										}
									],
									"internalType": "struct DataTypes.UserConfigurationMap",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "aTokenAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "stableDebtAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "variableDebtAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "interestRateStrategyAddress",
									"type": "address"
								}
							],
							"name": "initReserve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collateralAsset",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "debtAsset",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "debtToCover",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "receiveAToken",
									"type": "bool"
								}
							],
							"name": "liquidationCall",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "rebalanceStableBorrowRate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rateMode",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "onBehalfOf",
									"type": "address"
								}
							],
							"name": "repay",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "configuration",
									"type": "uint256"
								}
							],
							"name": "setConfiguration",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "val",
									"type": "bool"
								}
							],
							"name": "setPause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "rateStrategyAddress",
									"type": "address"
								}
							],
							"name": "setReserveInterestRateStrategyAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "useAsCollateral",
									"type": "bool"
								}
							],
							"name": "setUserUseReserveAsCollateral",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "rateMode",
									"type": "uint256"
								}
							],
							"name": "swapBorrowRateMode",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "withdraw",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Borrow(address,address,address,uint256,uint256,uint256,uint16)": {
								"details": "Emitted on borrow() and flashLoan() when debt needs to be opened",
								"params": {
									"amount": "The amount borrowed out",
									"borrowRate": "The numeric rate at which the user has borrowed",
									"borrowRateMode": "The rate mode: 1 for Stable, 2 for Variable",
									"onBehalfOf": "The address that will be getting the debt",
									"referral": "The referral code used*",
									"reserve": "The address of the underlying asset being borrowed",
									"user": "The address of the user initiating the borrow(), receiving the funds on borrow() or just initiator of the transaction on flashLoan()"
								}
							},
							"Deposit(address,address,address,uint256,uint16)": {
								"details": "Emitted on deposit()",
								"params": {
									"amount": "The amount deposited",
									"onBehalfOf": "The beneficiary of the deposit, receiving the aTokens",
									"referral": "The referral code used*",
									"reserve": "The address of the underlying asset of the reserve",
									"user": "The address initiating the deposit"
								}
							},
							"FlashLoan(address,address,address,uint256,uint256,uint16)": {
								"details": "Emitted on flashLoan()",
								"params": {
									"amount": "The amount flash borrowed",
									"asset": "The address of the asset being flash borrowed",
									"initiator": "The address initiating the flash loan",
									"premium": "The fee flash borrowed",
									"referralCode": "The referral code used*",
									"target": "The address of the flash loan receiver contract"
								}
							},
							"LiquidationCall(address,address,address,uint256,uint256,address,bool)": {
								"details": "Emitted when a borrower is liquidated. This event is emitted by the LendingPool via LendingPoolCollateral manager using a DELEGATECALL This allows to have the events in the generated ABI for LendingPool.",
								"params": {
									"collateralAsset": "The address of the underlying asset used as collateral, to receive as result of the liquidation",
									"debtAsset": "The address of the underlying borrowed asset to be repaid with the liquidation",
									"debtToCover": "The debt amount of borrowed `asset` the liquidator wants to cover",
									"liquidatedCollateralAmount": "The amount of collateral received by the liiquidator",
									"liquidator": "The address of the liquidator",
									"receiveAToken": "`true` if the liquidators wants to receive the collateral aTokens, `false` if he wants to receive the underlying collateral asset directly*",
									"user": "The address of the borrower getting liquidated"
								}
							},
							"Paused()": {
								"details": "Emitted when the pause is triggered."
							},
							"RebalanceStableBorrowRate(address,address)": {
								"details": "Emitted on rebalanceStableBorrowRate()",
								"params": {
									"reserve": "The address of the underlying asset of the reserve",
									"user": "The address of the user for which the rebalance has been executed*"
								}
							},
							"Repay(address,address,address,uint256)": {
								"details": "Emitted on repay()",
								"params": {
									"amount": "The amount repaid*",
									"repayer": "The address of the user initiating the repay(), providing the funds",
									"reserve": "The address of the underlying asset of the reserve",
									"user": "The beneficiary of the repayment, getting his debt reduced"
								}
							},
							"ReserveDataUpdated(address,uint256,uint256,uint256,uint256,uint256)": {
								"details": "Emitted when the state of a reserve is updated. NOTE: This event is actually declared in the ReserveLogic library and emitted in the updateInterestRates() function. Since the function is internal, the event will actually be fired by the LendingPool contract. The event is therefore replicated here so it gets added to the LendingPool ABI",
								"params": {
									"liquidityIndex": "The new liquidity index",
									"liquidityRate": "The new liquidity rate",
									"reserve": "The address of the underlying asset of the reserve",
									"stableBorrowRate": "The new stable borrow rate",
									"variableBorrowIndex": "The new variable borrow index*",
									"variableBorrowRate": "The new variable borrow rate"
								}
							},
							"ReserveUsedAsCollateralDisabled(address,address)": {
								"details": "Emitted on setUserUseReserveAsCollateral()",
								"params": {
									"reserve": "The address of the underlying asset of the reserve",
									"user": "The address of the user enabling the usage as collateral*"
								}
							},
							"ReserveUsedAsCollateralEnabled(address,address)": {
								"details": "Emitted on setUserUseReserveAsCollateral()",
								"params": {
									"reserve": "The address of the underlying asset of the reserve",
									"user": "The address of the user enabling the usage as collateral*"
								}
							},
							"Swap(address,address,uint256)": {
								"details": "Emitted on swapBorrowRateMode()",
								"params": {
									"rateMode": "The rate mode that the user wants to swap to*",
									"reserve": "The address of the underlying asset of the reserve",
									"user": "The address of the user swapping his rate mode"
								}
							},
							"Unpaused()": {
								"details": "Emitted when the pause is lifted."
							},
							"Withdraw(address,address,address,uint256)": {
								"details": "Emitted on withdraw()",
								"params": {
									"amount": "The amount to be withdrawn*",
									"reserve": "The address of the underlyng asset being withdrawn",
									"to": "Address that will receive the underlying",
									"user": "The address initiating the withdrawal, owner of aTokens"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"borrow(address,uint256,uint256,uint16,address)": {
								"details": "Allows users to borrow a specific `amount` of the reserve underlying asset, provided that the borrower already deposited enough collateral, or he was given enough allowance by a credit delegator on the corresponding debt token (StableDebtToken or VariableDebtToken) - E.g. User borrows 100 USDC passing as `onBehalfOf` his own address, receiving the 100 USDC in his wallet   and 100 stable/variable debt tokens, depending on the `interestRateMode`",
								"params": {
									"amount": "The amount to be borrowed",
									"asset": "The address of the underlying asset to borrow",
									"interestRateMode": "The interest rate mode at which the user wants to borrow: 1 for Stable, 2 for Variable",
									"onBehalfOf": "Address of the user who will receive the debt. Should be the address of the borrower itself calling the function if he wants to borrow against his own collateral, or the address of the credit delegator if he has been given credit delegation allowance*",
									"referralCode": "Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man"
								}
							},
							"deposit(address,uint256,address,uint16)": {
								"details": "Deposits an `amount` of underlying asset into the reserve, receiving in return overlying aTokens. - E.g. User deposits 100 USDC and gets in return 100 aUSDC",
								"params": {
									"amount": "The amount to be deposited",
									"asset": "The address of the underlying asset to deposit",
									"onBehalfOf": "The address that will receive the aTokens, same as msg.sender if the user   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens   is a different wallet",
									"referralCode": "Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man*"
								}
							},
							"flashLoan(address,address[],uint256[],uint256[],address,bytes,uint16)": {
								"details": "Allows smartcontracts to access the liquidity of the pool within one transaction, as long as the amount taken plus a fee is returned. IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept into consideration. For further details please visit https://developers.aave.com",
								"params": {
									"amounts": "The amounts amounts being flash-borrowed",
									"assets": "The addresses of the assets being flash-borrowed",
									"modes": "Types of the debt to open if the flash loan is not returned:   0 -> Don't open any debt, just revert if funds can't be transferred from the receiver   1 -> Open debt at stable rate for the value of the amount flash-borrowed to the `onBehalfOf` address   2 -> Open debt at variable rate for the value of the amount flash-borrowed to the `onBehalfOf` address",
									"onBehalfOf": "The address  that will receive the debt in the case of using on `modes` 1 or 2",
									"params": "Variadic packed params to pass to the receiver as extra information",
									"receiverAddress": "The address of the contract receiving the funds, implementing the IFlashLoanReceiver interface",
									"referralCode": "Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man*"
								}
							},
							"getConfiguration(address)": {
								"details": "Returns the configuration of the reserve",
								"params": {
									"asset": "The address of the underlying asset of the reserve"
								},
								"returns": {
									"_0": "The configuration of the reserve*"
								}
							},
							"getReserveData(address)": {
								"details": "Returns the state and configuration of the reserve",
								"params": {
									"asset": "The address of the underlying asset of the reserve"
								},
								"returns": {
									"_0": "The state of the reserve*"
								}
							},
							"getReserveNormalizedIncome(address)": {
								"details": "Returns the normalized income normalized income of the reserve",
								"params": {
									"asset": "The address of the underlying asset of the reserve"
								},
								"returns": {
									"_0": "The reserve's normalized income"
								}
							},
							"getReserveNormalizedVariableDebt(address)": {
								"details": "Returns the normalized variable debt per unit of asset",
								"params": {
									"asset": "The address of the underlying asset of the reserve"
								},
								"returns": {
									"_0": "The reserve normalized variable debt"
								}
							},
							"getUserAccountData(address)": {
								"details": "Returns the user account data across all the reserves",
								"params": {
									"user": "The address of the user"
								},
								"returns": {
									"availableBorrowsETH": "the borrowing power left of the user",
									"currentLiquidationThreshold": "the liquidation threshold of the user",
									"healthFactor": "the current health factor of the user*",
									"ltv": "the loan to value of the user",
									"totalCollateralETH": "the total collateral in ETH of the user",
									"totalDebtETH": "the total debt in ETH of the user"
								}
							},
							"getUserConfiguration(address)": {
								"details": "Returns the configuration of the user across all the reserves",
								"params": {
									"user": "The user address"
								},
								"returns": {
									"_0": "The configuration of the user*"
								}
							},
							"liquidationCall(address,address,address,uint256,bool)": {
								"details": "Function to liquidate a non-healthy position collateral-wise, with Health Factor below 1 - The caller (liquidator) covers `debtToCover` amount of debt of the user getting liquidated, and receives   a proportionally amount of the `collateralAsset` plus a bonus to cover market risk",
								"params": {
									"collateralAsset": "The address of the underlying asset used as collateral, to receive as result of the liquidation",
									"debtAsset": "The address of the underlying borrowed asset to be repaid with the liquidation",
									"debtToCover": "The debt amount of borrowed `asset` the liquidator wants to cover",
									"receiveAToken": "`true` if the liquidators wants to receive the collateral aTokens, `false` if he wants to receive the underlying collateral asset directly*",
									"user": "The address of the borrower getting liquidated"
								}
							},
							"rebalanceStableBorrowRate(address,address)": {
								"details": "Rebalances the stable interest rate of a user to the current stable rate defined on the reserve. - Users can be rebalanced if the following conditions are satisfied:     1. Usage ratio is above 95%     2. the current deposit APY is below REBALANCE_UP_THRESHOLD * maxVariableBorrowRate, which means that too much has been        borrowed at a stable rate and depositors are not earning enough",
								"params": {
									"asset": "The address of the underlying asset borrowed",
									"user": "The address of the user to be rebalanced*"
								}
							},
							"repay(address,uint256,uint256,address)": {
								"params": {
									"amount": "The amount to repay - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`",
									"asset": "The address of the borrowed underlying asset previously borrowed",
									"onBehalfOf": "Address of the user who will get his debt reduced/removed. Should be the address of the user calling the function if he wants to reduce/remove his own debt, or the address of any other other borrower whose debt should be removed",
									"rateMode": "The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable"
								},
								"returns": {
									"_0": "The final amount repaid*"
								}
							},
							"setUserUseReserveAsCollateral(address,bool)": {
								"details": "Allows depositors to enable/disable a specific deposited asset as collateral",
								"params": {
									"asset": "The address of the underlying asset deposited",
									"useAsCollateral": "`true` if the user wants to use the deposit as collateral, `false` otherwise*"
								}
							},
							"swapBorrowRateMode(address,uint256)": {
								"details": "Allows a borrower to swap his debt between stable and variable mode, or viceversa",
								"params": {
									"asset": "The address of the underlying asset borrowed",
									"rateMode": "The rate mode that the user wants to swap to*"
								}
							},
							"withdraw(address,uint256,address)": {
								"details": "Withdraws an `amount` of underlying asset from the reserve, burning the equivalent aTokens owned E.g. User has 100 aUSDC, calls withdraw() and receives 100 USDC, burning the 100 aUSDC",
								"params": {
									"amount": "The underlying amount to be withdrawn   - Send the value type(uint256).max in order to withdraw the whole aToken balance",
									"asset": "The address of the underlying asset to withdraw",
									"to": "Address that will receive the underlying, same as msg.sender if the user   wants to receive it on his own wallet, or a different address if the beneficiary is a   different wallet"
								},
								"returns": {
									"_0": "The final amount withdrawn*"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"borrow(address,uint256,uint256,uint16,address)": "a415bcad",
							"deposit(address,uint256,address,uint16)": "e8eda9df",
							"finalizeTransfer(address,address,address,uint256,uint256,uint256)": "d5ed3933",
							"flashLoan(address,address[],uint256[],uint256[],address,bytes,uint16)": "ab9c4b5d",
							"getAddressesProvider()": "fe65acfe",
							"getConfiguration(address)": "c44b11f7",
							"getReserveData(address)": "35ea6a75",
							"getReserveNormalizedIncome(address)": "d15e0053",
							"getReserveNormalizedVariableDebt(address)": "386497fd",
							"getReservesList()": "d1946dbc",
							"getUserAccountData(address)": "bf92857c",
							"getUserConfiguration(address)": "4417a583",
							"initReserve(address,address,address,address,address)": "7a708e92",
							"liquidationCall(address,address,address,uint256,bool)": "00a718a9",
							"paused()": "5c975abb",
							"rebalanceStableBorrowRate(address,address)": "cd112382",
							"repay(address,uint256,uint256,address)": "573ade81",
							"setConfiguration(address,uint256)": "b8d29276",
							"setPause(bool)": "bedb86fb",
							"setReserveInterestRateStrategyAddress(address,address)": "1d2118f9",
							"setUserUseReserveAsCollateral(address,bool)": "5a3b74b9",
							"swapBorrowRateMode(address,uint256)": "94ba89a2",
							"withdraw(address,uint256,address)": "69328dec"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"borrowRateMode\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"borrowRate\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"referral\",\"type\":\"uint16\"}],\"name\":\"Borrow\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"referral\",\"type\":\"uint16\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"initiator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"premium\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"FlashLoan\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"collateralAsset\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"debtAsset\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"debtToCover\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidatedCollateralAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"receiveAToken\",\"type\":\"bool\"}],\"name\":\"LiquidationCall\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"RebalanceStableBorrowRate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"repayer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Repay\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidityRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stableBorrowRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"variableBorrowRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidityIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"variableBorrowIndex\",\"type\":\"uint256\"}],\"name\":\"ReserveDataUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"ReserveUsedAsCollateralDisabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"ReserveUsedAsCollateralEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rateMode\",\"type\":\"uint256\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestRateMode\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"}],\"name\":\"borrow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balanceFromAfter\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balanceToBefore\",\"type\":\"uint256\"}],\"name\":\"finalizeTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverAddress\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"modes\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"flashLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddressesProvider\",\"outputs\":[{\"internalType\":\"contract ILendingPoolAddressesProvider\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getConfiguration\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"data\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.ReserveConfigurationMap\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getReserveData\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"totalLiquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"availableLiquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalStableDebt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalVariableDebt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidityRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"variableBorrowRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stableBorrowRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"averageStableBorrowRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidityIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"variableBorrowIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint40\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint40\"}],\"internalType\":\"struct DataTypes.ReserveData\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getReserveNormalizedIncome\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getReserveNormalizedVariableDebt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReservesList\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserAccountData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalCollateralETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalDebtETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"availableBorrowsETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentLiquidationThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ltv\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"healthFactor\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserConfiguration\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"data\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.UserConfigurationMap\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"aTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"stableDebtAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"variableDebtAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"interestRateStrategyAddress\",\"type\":\"address\"}],\"name\":\"initReserve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collateralAsset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"debtAsset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"debtToCover\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"receiveAToken\",\"type\":\"bool\"}],\"name\":\"liquidationCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"rebalanceStableBorrowRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateMode\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"}],\"name\":\"repay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"configuration\",\"type\":\"uint256\"}],\"name\":\"setConfiguration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"val\",\"type\":\"bool\"}],\"name\":\"setPause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"rateStrategyAddress\",\"type\":\"address\"}],\"name\":\"setReserveInterestRateStrategyAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useAsCollateral\",\"type\":\"bool\"}],\"name\":\"setUserUseReserveAsCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rateMode\",\"type\":\"uint256\"}],\"name\":\"swapBorrowRateMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Borrow(address,address,address,uint256,uint256,uint256,uint16)\":{\"details\":\"Emitted on borrow() and flashLoan() when debt needs to be opened\",\"params\":{\"amount\":\"The amount borrowed out\",\"borrowRate\":\"The numeric rate at which the user has borrowed\",\"borrowRateMode\":\"The rate mode: 1 for Stable, 2 for Variable\",\"onBehalfOf\":\"The address that will be getting the debt\",\"referral\":\"The referral code used*\",\"reserve\":\"The address of the underlying asset being borrowed\",\"user\":\"The address of the user initiating the borrow(), receiving the funds on borrow() or just initiator of the transaction on flashLoan()\"}},\"Deposit(address,address,address,uint256,uint16)\":{\"details\":\"Emitted on deposit()\",\"params\":{\"amount\":\"The amount deposited\",\"onBehalfOf\":\"The beneficiary of the deposit, receiving the aTokens\",\"referral\":\"The referral code used*\",\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address initiating the deposit\"}},\"FlashLoan(address,address,address,uint256,uint256,uint16)\":{\"details\":\"Emitted on flashLoan()\",\"params\":{\"amount\":\"The amount flash borrowed\",\"asset\":\"The address of the asset being flash borrowed\",\"initiator\":\"The address initiating the flash loan\",\"premium\":\"The fee flash borrowed\",\"referralCode\":\"The referral code used*\",\"target\":\"The address of the flash loan receiver contract\"}},\"LiquidationCall(address,address,address,uint256,uint256,address,bool)\":{\"details\":\"Emitted when a borrower is liquidated. This event is emitted by the LendingPool via LendingPoolCollateral manager using a DELEGATECALL This allows to have the events in the generated ABI for LendingPool.\",\"params\":{\"collateralAsset\":\"The address of the underlying asset used as collateral, to receive as result of the liquidation\",\"debtAsset\":\"The address of the underlying borrowed asset to be repaid with the liquidation\",\"debtToCover\":\"The debt amount of borrowed `asset` the liquidator wants to cover\",\"liquidatedCollateralAmount\":\"The amount of collateral received by the liiquidator\",\"liquidator\":\"The address of the liquidator\",\"receiveAToken\":\"`true` if the liquidators wants to receive the collateral aTokens, `false` if he wants to receive the underlying collateral asset directly*\",\"user\":\"The address of the borrower getting liquidated\"}},\"Paused()\":{\"details\":\"Emitted when the pause is triggered.\"},\"RebalanceStableBorrowRate(address,address)\":{\"details\":\"Emitted on rebalanceStableBorrowRate()\",\"params\":{\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address of the user for which the rebalance has been executed*\"}},\"Repay(address,address,address,uint256)\":{\"details\":\"Emitted on repay()\",\"params\":{\"amount\":\"The amount repaid*\",\"repayer\":\"The address of the user initiating the repay(), providing the funds\",\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The beneficiary of the repayment, getting his debt reduced\"}},\"ReserveDataUpdated(address,uint256,uint256,uint256,uint256,uint256)\":{\"details\":\"Emitted when the state of a reserve is updated. NOTE: This event is actually declared in the ReserveLogic library and emitted in the updateInterestRates() function. Since the function is internal, the event will actually be fired by the LendingPool contract. The event is therefore replicated here so it gets added to the LendingPool ABI\",\"params\":{\"liquidityIndex\":\"The new liquidity index\",\"liquidityRate\":\"The new liquidity rate\",\"reserve\":\"The address of the underlying asset of the reserve\",\"stableBorrowRate\":\"The new stable borrow rate\",\"variableBorrowIndex\":\"The new variable borrow index*\",\"variableBorrowRate\":\"The new variable borrow rate\"}},\"ReserveUsedAsCollateralDisabled(address,address)\":{\"details\":\"Emitted on setUserUseReserveAsCollateral()\",\"params\":{\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address of the user enabling the usage as collateral*\"}},\"ReserveUsedAsCollateralEnabled(address,address)\":{\"details\":\"Emitted on setUserUseReserveAsCollateral()\",\"params\":{\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address of the user enabling the usage as collateral*\"}},\"Swap(address,address,uint256)\":{\"details\":\"Emitted on swapBorrowRateMode()\",\"params\":{\"rateMode\":\"The rate mode that the user wants to swap to*\",\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address of the user swapping his rate mode\"}},\"Unpaused()\":{\"details\":\"Emitted when the pause is lifted.\"},\"Withdraw(address,address,address,uint256)\":{\"details\":\"Emitted on withdraw()\",\"params\":{\"amount\":\"The amount to be withdrawn*\",\"reserve\":\"The address of the underlyng asset being withdrawn\",\"to\":\"Address that will receive the underlying\",\"user\":\"The address initiating the withdrawal, owner of aTokens\"}}},\"kind\":\"dev\",\"methods\":{\"borrow(address,uint256,uint256,uint16,address)\":{\"details\":\"Allows users to borrow a specific `amount` of the reserve underlying asset, provided that the borrower already deposited enough collateral, or he was given enough allowance by a credit delegator on the corresponding debt token (StableDebtToken or VariableDebtToken) - E.g. User borrows 100 USDC passing as `onBehalfOf` his own address, receiving the 100 USDC in his wallet   and 100 stable/variable debt tokens, depending on the `interestRateMode`\",\"params\":{\"amount\":\"The amount to be borrowed\",\"asset\":\"The address of the underlying asset to borrow\",\"interestRateMode\":\"The interest rate mode at which the user wants to borrow: 1 for Stable, 2 for Variable\",\"onBehalfOf\":\"Address of the user who will receive the debt. Should be the address of the borrower itself calling the function if he wants to borrow against his own collateral, or the address of the credit delegator if he has been given credit delegation allowance*\",\"referralCode\":\"Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man\"}},\"deposit(address,uint256,address,uint16)\":{\"details\":\"Deposits an `amount` of underlying asset into the reserve, receiving in return overlying aTokens. - E.g. User deposits 100 USDC and gets in return 100 aUSDC\",\"params\":{\"amount\":\"The amount to be deposited\",\"asset\":\"The address of the underlying asset to deposit\",\"onBehalfOf\":\"The address that will receive the aTokens, same as msg.sender if the user   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens   is a different wallet\",\"referralCode\":\"Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man*\"}},\"flashLoan(address,address[],uint256[],uint256[],address,bytes,uint16)\":{\"details\":\"Allows smartcontracts to access the liquidity of the pool within one transaction, as long as the amount taken plus a fee is returned. IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept into consideration. For further details please visit https://developers.aave.com\",\"params\":{\"amounts\":\"The amounts amounts being flash-borrowed\",\"assets\":\"The addresses of the assets being flash-borrowed\",\"modes\":\"Types of the debt to open if the flash loan is not returned:   0 -> Don't open any debt, just revert if funds can't be transferred from the receiver   1 -> Open debt at stable rate for the value of the amount flash-borrowed to the `onBehalfOf` address   2 -> Open debt at variable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\",\"onBehalfOf\":\"The address  that will receive the debt in the case of using on `modes` 1 or 2\",\"params\":\"Variadic packed params to pass to the receiver as extra information\",\"receiverAddress\":\"The address of the contract receiving the funds, implementing the IFlashLoanReceiver interface\",\"referralCode\":\"Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man*\"}},\"getConfiguration(address)\":{\"details\":\"Returns the configuration of the reserve\",\"params\":{\"asset\":\"The address of the underlying asset of the reserve\"},\"returns\":{\"_0\":\"The configuration of the reserve*\"}},\"getReserveData(address)\":{\"details\":\"Returns the state and configuration of the reserve\",\"params\":{\"asset\":\"The address of the underlying asset of the reserve\"},\"returns\":{\"_0\":\"The state of the reserve*\"}},\"getReserveNormalizedIncome(address)\":{\"details\":\"Returns the normalized income normalized income of the reserve\",\"params\":{\"asset\":\"The address of the underlying asset of the reserve\"},\"returns\":{\"_0\":\"The reserve's normalized income\"}},\"getReserveNormalizedVariableDebt(address)\":{\"details\":\"Returns the normalized variable debt per unit of asset\",\"params\":{\"asset\":\"The address of the underlying asset of the reserve\"},\"returns\":{\"_0\":\"The reserve normalized variable debt\"}},\"getUserAccountData(address)\":{\"details\":\"Returns the user account data across all the reserves\",\"params\":{\"user\":\"The address of the user\"},\"returns\":{\"availableBorrowsETH\":\"the borrowing power left of the user\",\"currentLiquidationThreshold\":\"the liquidation threshold of the user\",\"healthFactor\":\"the current health factor of the user*\",\"ltv\":\"the loan to value of the user\",\"totalCollateralETH\":\"the total collateral in ETH of the user\",\"totalDebtETH\":\"the total debt in ETH of the user\"}},\"getUserConfiguration(address)\":{\"details\":\"Returns the configuration of the user across all the reserves\",\"params\":{\"user\":\"The user address\"},\"returns\":{\"_0\":\"The configuration of the user*\"}},\"liquidationCall(address,address,address,uint256,bool)\":{\"details\":\"Function to liquidate a non-healthy position collateral-wise, with Health Factor below 1 - The caller (liquidator) covers `debtToCover` amount of debt of the user getting liquidated, and receives   a proportionally amount of the `collateralAsset` plus a bonus to cover market risk\",\"params\":{\"collateralAsset\":\"The address of the underlying asset used as collateral, to receive as result of the liquidation\",\"debtAsset\":\"The address of the underlying borrowed asset to be repaid with the liquidation\",\"debtToCover\":\"The debt amount of borrowed `asset` the liquidator wants to cover\",\"receiveAToken\":\"`true` if the liquidators wants to receive the collateral aTokens, `false` if he wants to receive the underlying collateral asset directly*\",\"user\":\"The address of the borrower getting liquidated\"}},\"rebalanceStableBorrowRate(address,address)\":{\"details\":\"Rebalances the stable interest rate of a user to the current stable rate defined on the reserve. - Users can be rebalanced if the following conditions are satisfied:     1. Usage ratio is above 95%     2. the current deposit APY is below REBALANCE_UP_THRESHOLD * maxVariableBorrowRate, which means that too much has been        borrowed at a stable rate and depositors are not earning enough\",\"params\":{\"asset\":\"The address of the underlying asset borrowed\",\"user\":\"The address of the user to be rebalanced*\"}},\"repay(address,uint256,uint256,address)\":{\"params\":{\"amount\":\"The amount to repay - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\",\"asset\":\"The address of the borrowed underlying asset previously borrowed\",\"onBehalfOf\":\"Address of the user who will get his debt reduced/removed. Should be the address of the user calling the function if he wants to reduce/remove his own debt, or the address of any other other borrower whose debt should be removed\",\"rateMode\":\"The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\"},\"returns\":{\"_0\":\"The final amount repaid*\"}},\"setUserUseReserveAsCollateral(address,bool)\":{\"details\":\"Allows depositors to enable/disable a specific deposited asset as collateral\",\"params\":{\"asset\":\"The address of the underlying asset deposited\",\"useAsCollateral\":\"`true` if the user wants to use the deposit as collateral, `false` otherwise*\"}},\"swapBorrowRateMode(address,uint256)\":{\"details\":\"Allows a borrower to swap his debt between stable and variable mode, or viceversa\",\"params\":{\"asset\":\"The address of the underlying asset borrowed\",\"rateMode\":\"The rate mode that the user wants to swap to*\"}},\"withdraw(address,uint256,address)\":{\"details\":\"Withdraws an `amount` of underlying asset from the reserve, burning the equivalent aTokens owned E.g. User has 100 aUSDC, calls withdraw() and receives 100 USDC, burning the 100 aUSDC\",\"params\":{\"amount\":\"The underlying amount to be withdrawn   - Send the value type(uint256).max in order to withdraw the whole aToken balance\",\"asset\":\"The address of the underlying asset to withdraw\",\"to\":\"Address that will receive the underlying, same as msg.sender if the user   wants to receive it on his own wallet, or a different address if the beneficiary is a   different wallet\"},\"returns\":{\"_0\":\"The final amount withdrawn*\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"repay(address,uint256,uint256,address)\":{\"notice\":\"Repays a borrowed `amount` on a specific reserve, burning the equivalent debt tokens owned - E.g. User repays 100 USDC, burning 100 variable/stable debt tokens of the `onBehalfOf` address\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/aave/protocol-v2/contracts/interfaces/ILendingPool.sol\":\"ILendingPool\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/aave/protocol-v2/contracts/interfaces/DataTypes.sol\":{\"keccak256\":\"0x81caed3fbb24bd8721c85094546ee31f033209a1dc5b8aa4d8ce094388666cb4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4ab7c3612816908da41df1a0f62bde806a9fe088198dcd7b70f6a8f31c7d131\",\"dweb:/ipfs/QmRNtcEwyFdiJmbJ1oyDiDZ3foyrHchCMo1MYjAXYR7zdd\"]},\"contracts/aave/protocol-v2/contracts/interfaces/ILendingPool.sol\":{\"keccak256\":\"0xbcbeb7a9a1bc100bae12891df6265691103d76f71e7eed72902d2024f05f654b\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://898ea64e297442bb3bc7c7215786ae6453dce7900200f836041ff9ed7867f4e0\",\"dweb:/ipfs/QmTuSyHSYg7PNo6eRDe1ATJZ2UxDxwFJUshJRnT22co19a\"]},\"contracts/aave/protocol-v2/contracts/interfaces/ILendingPoolAddressesProvider.sol\":{\"keccak256\":\"0x219d7db359e51dfd51b0a454dc284c44671b6ce6543b7f383ef0aec4534c7ea0\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://f09e938d9d6edadd398245b27e15eb0df96f20dd5104f523a10cfe4a9329ba92\",\"dweb:/ipfs/QmNhjFNzjeKkqUNe9SJnxiuH8wAQYVp9MX6mAGBzeESpyz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"repay(address,uint256,uint256,address)": {
								"notice": "Repays a borrowed `amount` on a specific reserve, burning the equivalent debt tokens owned - E.g. User repays 100 USDC, burning 100 variable/stable debt tokens of the `onBehalfOf` address"
							}
						},
						"version": 1
					}
				}
			},
			"contracts/aave/protocol-v2/contracts/interfaces/ILendingPoolAddressesProvider.sol": {
				"ILendingPoolAddressesProvider": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "hasProxy",
									"type": "bool"
								}
							],
							"name": "AddressSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "ConfigurationAdminUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "EmergencyAdminUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "LendingPoolCollateralManagerUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "LendingPoolConfiguratorUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "LendingPoolUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "LendingRateOracleUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "newMarketId",
									"type": "string"
								}
							],
							"name": "MarketIdSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "PriceOracleUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "ProxyCreated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								}
							],
							"name": "getAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getEmergencyAdmin",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getLendingPool",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getLendingPoolCollateralManager",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getLendingPoolConfigurator",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getLendingRateOracle",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getMarketId",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPoolAdmin",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPriceOracle",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "setAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "impl",
									"type": "address"
								}
							],
							"name": "setAddressAsProxy",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								}
							],
							"name": "setEmergencyAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "manager",
									"type": "address"
								}
							],
							"name": "setLendingPoolCollateralManager",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "configurator",
									"type": "address"
								}
							],
							"name": "setLendingPoolConfiguratorImpl",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "setLendingPoolImpl",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "lendingRateOracle",
									"type": "address"
								}
							],
							"name": "setLendingRateOracle",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "marketId",
									"type": "string"
								}
							],
							"name": "setMarketId",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								}
							],
							"name": "setPoolAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "priceOracle",
									"type": "address"
								}
							],
							"name": "setPriceOracle",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Aave*",
						"details": "Main registry of addresses part of or connected to the protocol, including permissioned roles - Acting also as factory of proxies and admin of those, so with right to change its implementations - Owned by the Aave Governance",
						"kind": "dev",
						"methods": {},
						"title": "LendingPoolAddressesProvider contract",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getAddress(bytes32)": "21f8a721",
							"getEmergencyAdmin()": "ddcaa9ea",
							"getLendingPool()": "0261bf8b",
							"getLendingPoolCollateralManager()": "712d9171",
							"getLendingPoolConfigurator()": "85c858b1",
							"getLendingRateOracle()": "3618abba",
							"getMarketId()": "568ef470",
							"getPoolAdmin()": "aecda378",
							"getPriceOracle()": "fca513a8",
							"setAddress(bytes32,address)": "ca446dd9",
							"setAddressAsProxy(bytes32,address)": "5dcc528c",
							"setEmergencyAdmin(address)": "35da3394",
							"setLendingPoolCollateralManager(address)": "398e5553",
							"setLendingPoolConfiguratorImpl(address)": "c12542df",
							"setLendingPoolImpl(address)": "5aef021f",
							"setLendingRateOracle(address)": "820d1274",
							"setMarketId(string)": "f67b1847",
							"setPoolAdmin(address)": "283d62ad",
							"setPriceOracle(address)": "530e784f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"hasProxy\",\"type\":\"bool\"}],\"name\":\"AddressSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"ConfigurationAdminUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"EmergencyAdminUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"LendingPoolCollateralManagerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"LendingPoolConfiguratorUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"LendingPoolUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"LendingRateOracleUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newMarketId\",\"type\":\"string\"}],\"name\":\"MarketIdSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"PriceOracleUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"ProxyCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"getAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEmergencyAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLendingPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLendingPoolCollateralManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLendingPoolConfigurator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLendingRateOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMarketId\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"setAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"impl\",\"type\":\"address\"}],\"name\":\"setAddressAsProxy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"setEmergencyAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"}],\"name\":\"setLendingPoolCollateralManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"configurator\",\"type\":\"address\"}],\"name\":\"setLendingPoolConfiguratorImpl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"setLendingPoolImpl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lendingRateOracle\",\"type\":\"address\"}],\"name\":\"setLendingRateOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"marketId\",\"type\":\"string\"}],\"name\":\"setMarketId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"setPoolAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceOracle\",\"type\":\"address\"}],\"name\":\"setPriceOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Aave*\",\"details\":\"Main registry of addresses part of or connected to the protocol, including permissioned roles - Acting also as factory of proxies and admin of those, so with right to change its implementations - Owned by the Aave Governance\",\"kind\":\"dev\",\"methods\":{},\"title\":\"LendingPoolAddressesProvider contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/aave/protocol-v2/contracts/interfaces/ILendingPoolAddressesProvider.sol\":\"ILendingPoolAddressesProvider\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/aave/protocol-v2/contracts/interfaces/ILendingPoolAddressesProvider.sol\":{\"keccak256\":\"0x219d7db359e51dfd51b0a454dc284c44671b6ce6543b7f383ef0aec4534c7ea0\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://f09e938d9d6edadd398245b27e15eb0df96f20dd5104f523a10cfe4a9329ba92\",\"dweb:/ipfs/QmNhjFNzjeKkqUNe9SJnxiuH8wAQYVp9MX6mAGBzeESpyz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol": {
				"AggregatorV3Interface": {
					"abi": [
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "description",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint80",
									"name": "_roundId",
									"type": "uint80"
								}
							],
							"name": "getRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"decimals()": "313ce567",
							"description()": "7284e416",
							"getRoundData(uint80)": "9a6fc8f5",
							"latestRoundData()": "feaf968c",
							"version()": "54fd4d50"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x257a8d28fa83d3d942547c8e129ef465e4b5f3f31171e7be4739a4c98da6b4f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d39e11b1dc7b9b8ccdabbc9be442ab7cda4a81c748f57e316dcb1bcb4a28bf9\",\"dweb:/ipfs/QmaG6vz6W6iEUBsbHSBob5mdcitYxWjoygxREHpsJHfWrS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC-721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x3c504de1aed405d34ff26733c7b6edc9fd9fd4f9aac504f541a4238dd50bf1d2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e373cc851a65ef3f01bb825f59c3c9cdb1969adab8ec871dd1f197423f6b9ed\",\"dweb:/ipfs/QmWNM3TyZgfxTKJsfqk7ZJk7DmZr29iab3f8T4c1itiynm\"]},\"contracts/openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x1e96fdc714c1d5e754ad716c7cb4ac8daa28856879f2d40bb428720adac47b69\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1725af76c335db636686b0b8f36dfdcfa15d40993509ed80c6e579dfd3e1c2f3\",\"dweb:/ipfs/QmcT6Bp635CWdmxQnv84bicV4eaD46cY1ywZNgriSusJXw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol": {
				"IERC721Enumerable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenOfOwnerByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"tokenByIndex(uint256)": {
								"details": "Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens."
							},
							"tokenOfOwnerByIndex(address,uint256)": {
								"details": "Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
							},
							"totalSupply()": {
								"details": "Returns the total amount of tokens stored by the contract."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional enumeration extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"tokenByIndex(uint256)": "4f6ccce7",
							"tokenOfOwnerByIndex(address,uint256)": "2f745c59",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"tokenByIndex(uint256)\":{\"details\":\"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional enumeration extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol\":\"IERC721Enumerable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x3c504de1aed405d34ff26733c7b6edc9fd9fd4f9aac504f541a4238dd50bf1d2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e373cc851a65ef3f01bb825f59c3c9cdb1969adab8ec871dd1f197423f6b9ed\",\"dweb:/ipfs/QmWNM3TyZgfxTKJsfqk7ZJk7DmZr29iab3f8T4c1itiynm\"]},\"contracts/openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol\":{\"keccak256\":\"0x49ae5d944b6f25701d67ef1d76cbce766f062bf1958a34b13543f539d7882850\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://851181789f63ce009fa30ddabd8ef159d90733216d5d1f2f9e13d16688f67489\",\"dweb:/ipfs/QmdT4okvCWQC1eSYNFfyqjUkJBAiWbSZMwAazzEuizBJSb\"]},\"contracts/openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x1e96fdc714c1d5e754ad716c7cb4ac8daa28856879f2d40bb428720adac47b69\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1725af76c335db636686b0b8f36dfdcfa15d40993509ed80c6e579dfd3e1c2f3\",\"dweb:/ipfs/QmcT6Bp635CWdmxQnv84bicV4eaD46cY1ywZNgriSusJXw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/openzeppelin/contracts/token/ERC721/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/openzeppelin/contracts/token/ERC721/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x3c504de1aed405d34ff26733c7b6edc9fd9fd4f9aac504f541a4238dd50bf1d2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e373cc851a65ef3f01bb825f59c3c9cdb1969adab8ec871dd1f197423f6b9ed\",\"dweb:/ipfs/QmWNM3TyZgfxTKJsfqk7ZJk7DmZr29iab3f8T4c1itiynm\"]},\"contracts/openzeppelin/contracts/token/ERC721/IERC721Metadata.sol\":{\"keccak256\":\"0xfd743e54fb2a27413f703a389d1d78b003d957eaebbcfa15051d89793cf5136a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07683e02a762080a63f5ccec780488e5b87f79ded66d4c1e27f5cd62c1b5f8cb\",\"dweb:/ipfs/QmNtAngsTxV2c2XAKrqAo7PUUpXz1J69LNzwkEun4QTX7w\"]},\"contracts/openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x1e96fdc714c1d5e754ad716c7cb4ac8daa28856879f2d40bb428720adac47b69\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1725af76c335db636686b0b8f36dfdcfa15d40993509ed80c6e579dfd3e1c2f3\",\"dweb:/ipfs/QmcT6Bp635CWdmxQnv84bicV4eaD46cY1ywZNgriSusJXw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x1e96fdc714c1d5e754ad716c7cb4ac8daa28856879f2d40bb428720adac47b69\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1725af76c335db636686b0b8f36dfdcfa15d40993509ed80c6e579dfd3e1c2f3\",\"dweb:/ipfs/QmcT6Bp635CWdmxQnv84bicV4eaD46cY1ywZNgriSusJXw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/IERC721Permit.sol": {
				"IERC721Permit": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"returns": {
									"_0": "The domain seperator used in encoding of permit signature"
								}
							},
							"PERMIT_TYPEHASH()": {
								"returns": {
									"_0": "The typehash for the permit"
								}
							},
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"permit(address,uint256,uint256,uint8,bytes32,bytes32)": {
								"params": {
									"deadline": "The deadline timestamp by which the call must be mined for the approve to work",
									"r": "Must produce valid secp256k1 signature from the holder along with `v` and `s`",
									"s": "Must produce valid secp256k1 signature from the holder along with `r` and `v`",
									"spender": "The account that is being approved",
									"tokenId": "The ID of the token that is being approved for spending",
									"v": "Must produce valid secp256k1 signature from the holder along with `r` and `s`"
								}
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC721 with permit",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"PERMIT_TYPEHASH()": "30adf81f",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"permit(address,uint256,uint256,uint8,bytes32,bytes32)": "7ac2ff7b",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"returns\":{\"_0\":\"The domain seperator used in encoding of permit signature\"}},\"PERMIT_TYPEHASH()\":{\"returns\":{\"_0\":\"The typehash for the permit\"}},\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"permit(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"params\":{\"deadline\":\"The deadline timestamp by which the call must be mined for the approve to work\",\"r\":\"Must produce valid secp256k1 signature from the holder along with `v` and `s`\",\"s\":\"Must produce valid secp256k1 signature from the holder along with `r` and `v`\",\"spender\":\"The account that is being approved\",\"tokenId\":\"The ID of the token that is being approved for spending\",\"v\":\"Must produce valid secp256k1 signature from the holder along with `r` and `s`\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC721 with permit\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"notice\":\"The domain separator used in the permit signature\"},\"PERMIT_TYPEHASH()\":{\"notice\":\"The permit typehash used in the permit signature\"},\"permit(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Approve of a specific token ID for spending by spender via signature\"}},\"notice\":\"Extension to ERC721 that includes a permit function for signature based approvals\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/uniswap/v3-periphery/contracts/interfaces/IERC721Permit.sol\":\"IERC721Permit\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x3c504de1aed405d34ff26733c7b6edc9fd9fd4f9aac504f541a4238dd50bf1d2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e373cc851a65ef3f01bb825f59c3c9cdb1969adab8ec871dd1f197423f6b9ed\",\"dweb:/ipfs/QmWNM3TyZgfxTKJsfqk7ZJk7DmZr29iab3f8T4c1itiynm\"]},\"contracts/openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x1e96fdc714c1d5e754ad716c7cb4ac8daa28856879f2d40bb428720adac47b69\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1725af76c335db636686b0b8f36dfdcfa15d40993509ed80c6e579dfd3e1c2f3\",\"dweb:/ipfs/QmcT6Bp635CWdmxQnv84bicV4eaD46cY1ywZNgriSusJXw\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/IERC721Permit.sol\":{\"keccak256\":\"0x9915ccd225c6840a809606b1a929404b0299bff8d7cbb6bc8439c5dfd74046d2\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f0cdf83091593d05e85f50c1c40cf17c8c1eb6aeaac87cb9f8c91e8e31cf162c\",\"dweb:/ipfs/QmZxxuzCfsPLnARKERZj2fvy2mEvyQWJd9uDWpFwj4UkJa\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"notice": "The domain separator used in the permit signature"
							},
							"PERMIT_TYPEHASH()": {
								"notice": "The permit typehash used in the permit signature"
							},
							"permit(address,uint256,uint256,uint8,bytes32,bytes32)": {
								"notice": "Approve of a specific token ID for spending by spender via signature"
							}
						},
						"notice": "Extension to ERC721 that includes a permit function for signature based approvals",
						"version": 1
					}
				}
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol": {
				"INonfungiblePositionManager": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Collect",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "DecreaseLiquidity",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "IncreaseLiquidity",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "WETH9",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint128",
											"name": "amount0Max",
											"type": "uint128"
										},
										{
											"internalType": "uint128",
											"name": "amount1Max",
											"type": "uint128"
										}
									],
									"internalType": "struct INonfungiblePositionManager.CollectParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "collect",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								}
							],
							"name": "createAndInitializePoolIfNecessary",
							"outputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint128",
											"name": "liquidity",
											"type": "uint128"
										},
										{
											"internalType": "uint256",
											"name": "amount0Min",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount1Min",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										}
									],
									"internalType": "struct INonfungiblePositionManager.DecreaseLiquidityParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "decreaseLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount0Desired",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount1Desired",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount0Min",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount1Min",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										}
									],
									"internalType": "struct INonfungiblePositionManager.IncreaseLiquidityParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "increaseLiquidity",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "token0",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "token1",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "int24",
											"name": "tickLower",
											"type": "int24"
										},
										{
											"internalType": "int24",
											"name": "tickUpper",
											"type": "int24"
										},
										{
											"internalType": "uint256",
											"name": "amount0Desired",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount1Desired",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount0Min",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount1Min",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										}
									],
									"internalType": "struct INonfungiblePositionManager.MintParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "positions",
							"outputs": [
								{
									"internalType": "uint96",
									"name": "nonce",
									"type": "uint96"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside0LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside1LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "refundETH",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountMinimum",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "sweepToken",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenOfOwnerByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountMinimum",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "unwrapWETH9",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Collect(uint256,address,uint256,uint256)": {
								"details": "The amounts reported may not be exactly equivalent to the amounts transferred, due to rounding behavior",
								"params": {
									"amount0": "The amount of token0 owed to the position that was collected",
									"amount1": "The amount of token1 owed to the position that was collected",
									"recipient": "The address of the account that received the collected tokens",
									"tokenId": "The ID of the token for which underlying tokens were collected"
								}
							},
							"DecreaseLiquidity(uint256,uint128,uint256,uint256)": {
								"params": {
									"amount0": "The amount of token0 that was accounted for the decrease in liquidity",
									"amount1": "The amount of token1 that was accounted for the decrease in liquidity",
									"liquidity": "The amount by which liquidity for the NFT position was decreased",
									"tokenId": "The ID of the token for which liquidity was decreased"
								}
							},
							"IncreaseLiquidity(uint256,uint128,uint256,uint256)": {
								"details": "Also emitted when a token is minted",
								"params": {
									"amount0": "The amount of token0 that was paid for the increase in liquidity",
									"amount1": "The amount of token1 that was paid for the increase in liquidity",
									"liquidity": "The amount by which liquidity for the NFT position was increased",
									"tokenId": "The ID of the token for which liquidity was increased"
								}
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"returns": {
									"_0": "The domain seperator used in encoding of permit signature"
								}
							},
							"PERMIT_TYPEHASH()": {
								"returns": {
									"_0": "The typehash for the permit"
								}
							},
							"WETH9()": {
								"returns": {
									"_0": "Returns the address of WETH9"
								}
							},
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"burn(uint256)": {
								"params": {
									"tokenId": "The ID of the token that is being burned"
								}
							},
							"collect((uint256,address,uint128,uint128))": {
								"params": {
									"params": "tokenId The ID of the NFT for which tokens are being collected, recipient The account that should receive the tokens, amount0Max The maximum amount of token0 to collect, amount1Max The maximum amount of token1 to collect"
								},
								"returns": {
									"amount0": "The amount of fees collected in token0",
									"amount1": "The amount of fees collected in token1"
								}
							},
							"createAndInitializePoolIfNecessary(address,address,uint24,uint160)": {
								"details": "This method can be bundled with others via IMulticall for the first action (e.g. mint) performed against a pool",
								"params": {
									"fee": "The fee amount of the v3 pool for the specified token pair",
									"sqrtPriceX96": "The initial square root price of the pool as a Q64.96 value",
									"token0": "The contract address of token0 of the pool",
									"token1": "The contract address of token1 of the pool"
								},
								"returns": {
									"pool": "Returns the pool address based on the pair of tokens and fee, will return the newly created pool address if necessary"
								}
							},
							"decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))": {
								"params": {
									"params": "tokenId The ID of the token for which liquidity is being decreased, amount The amount by which liquidity will be decreased, amount0Min The minimum amount of token0 that should be accounted for the burned liquidity, amount1Min The minimum amount of token1 that should be accounted for the burned liquidity, deadline The time by which the transaction must be included to effect the change"
								},
								"returns": {
									"amount0": "The amount of token0 accounted to the position's tokens owed",
									"amount1": "The amount of token1 accounted to the position's tokens owed"
								}
							},
							"factory()": {
								"returns": {
									"_0": "Returns the address of the Uniswap V3 factory"
								}
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))": {
								"params": {
									"params": "tokenId The ID of the token for which liquidity is being increased, amount0Desired The desired amount of token0 to be spent, amount1Desired The desired amount of token1 to be spent, amount0Min The minimum amount of token0 to spend, which serves as a slippage check, amount1Min The minimum amount of token1 to spend, which serves as a slippage check, deadline The time by which the transaction must be included to effect the change"
								},
								"returns": {
									"amount0": "The amount of token0 to acheive resulting liquidity",
									"amount1": "The amount of token1 to acheive resulting liquidity",
									"liquidity": "The new liquidity amount as a result of the increase"
								}
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"mint((address,address,uint24,int24,int24,uint256,uint256,uint256,uint256,address,uint256))": {
								"details": "Call this when the pool does exist and is initialized. Note that if the pool is created but not initialized a method does not exist, i.e. the pool is assumed to be initialized.",
								"params": {
									"params": "The params necessary to mint a position, encoded as `MintParams` in calldata"
								},
								"returns": {
									"amount0": "The amount of token0",
									"amount1": "The amount of token1",
									"liquidity": "The amount of liquidity for this position",
									"tokenId": "The ID of the token that represents the minted position"
								}
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"permit(address,uint256,uint256,uint8,bytes32,bytes32)": {
								"params": {
									"deadline": "The deadline timestamp by which the call must be mined for the approve to work",
									"r": "Must produce valid secp256k1 signature from the holder along with `v` and `s`",
									"s": "Must produce valid secp256k1 signature from the holder along with `r` and `v`",
									"spender": "The account that is being approved",
									"tokenId": "The ID of the token that is being approved for spending",
									"v": "Must produce valid secp256k1 signature from the holder along with `r` and `s`"
								}
							},
							"positions(uint256)": {
								"details": "Throws if the token ID is not valid.",
								"params": {
									"tokenId": "The ID of the token that represents the position"
								},
								"returns": {
									"fee": "The fee associated with the pool",
									"feeGrowthInside0LastX128": "The fee growth of token0 as of the last action on the individual position",
									"feeGrowthInside1LastX128": "The fee growth of token1 as of the last action on the individual position",
									"liquidity": "The liquidity of the position",
									"nonce": "The nonce for permits",
									"operator": "The address that is approved for spending",
									"tickLower": "The lower end of the tick range for the position",
									"tickUpper": "The higher end of the tick range for the position",
									"token0": "The address of the token0 for a specific pool",
									"token1": "The address of the token1 for a specific pool",
									"tokensOwed0": "The uncollected amount of token0 owed to the position as of the last computation",
									"tokensOwed1": "The uncollected amount of token1 owed to the position as of the last computation"
								}
							},
							"refundETH()": {
								"details": "Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps that use ether for the input amount"
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"sweepToken(address,uint256,address)": {
								"details": "The amountMinimum parameter prevents malicious contracts from stealing the token from users",
								"params": {
									"amountMinimum": "The minimum amount of token required for a transfer",
									"recipient": "The destination address of the token",
									"token": "The contract address of the token which will be transferred to `recipient`"
								}
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenByIndex(uint256)": {
								"details": "Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens."
							},
							"tokenOfOwnerByIndex(address,uint256)": {
								"details": "Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"totalSupply()": {
								"details": "Returns the total amount of tokens stored by the contract."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							},
							"unwrapWETH9(uint256,address)": {
								"details": "The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.",
								"params": {
									"amountMinimum": "The minimum amount of WETH9 to unwrap",
									"recipient": "The address receiving ETH"
								}
							}
						},
						"title": "Non-fungible token for positions",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"PERMIT_TYPEHASH()": "30adf81f",
							"WETH9()": "4aa4a4fc",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"collect((uint256,address,uint128,uint128))": "fc6f7865",
							"createAndInitializePoolIfNecessary(address,address,uint24,uint160)": "13ead562",
							"decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))": "0c49ccbe",
							"factory()": "c45a0155",
							"getApproved(uint256)": "081812fc",
							"increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))": "219f5d17",
							"isApprovedForAll(address,address)": "e985e9c5",
							"mint((address,address,uint24,int24,int24,uint256,uint256,uint256,uint256,address,uint256))": "88316456",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"permit(address,uint256,uint256,uint8,bytes32,bytes32)": "7ac2ff7b",
							"positions(uint256)": "99fbab88",
							"refundETH()": "12210e8a",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"sweepToken(address,uint256,address)": "df2ab5bb",
							"symbol()": "95d89b41",
							"tokenByIndex(uint256)": "4f6ccce7",
							"tokenOfOwnerByIndex(address,uint256)": "2f745c59",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd",
							"unwrapWETH9(uint256,address)": "49404b7c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"DecreaseLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"IncreaseLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WETH9\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Max\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Max\",\"type\":\"uint128\"}],\"internalType\":\"struct INonfungiblePositionManager.CollectParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"createAndInitializePoolIfNecessary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"amount0Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct INonfungiblePositionManager.DecreaseLiquidityParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"decreaseLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount0Desired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Desired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount0Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct INonfungiblePositionManager.IncreaseLiquidityParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"increaseLiquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint256\",\"name\":\"amount0Desired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Desired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount0Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Min\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct INonfungiblePositionManager.MintParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"nonce\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"refundETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"sweepToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"unwrapWETH9\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Collect(uint256,address,uint256,uint256)\":{\"details\":\"The amounts reported may not be exactly equivalent to the amounts transferred, due to rounding behavior\",\"params\":{\"amount0\":\"The amount of token0 owed to the position that was collected\",\"amount1\":\"The amount of token1 owed to the position that was collected\",\"recipient\":\"The address of the account that received the collected tokens\",\"tokenId\":\"The ID of the token for which underlying tokens were collected\"}},\"DecreaseLiquidity(uint256,uint128,uint256,uint256)\":{\"params\":{\"amount0\":\"The amount of token0 that was accounted for the decrease in liquidity\",\"amount1\":\"The amount of token1 that was accounted for the decrease in liquidity\",\"liquidity\":\"The amount by which liquidity for the NFT position was decreased\",\"tokenId\":\"The ID of the token for which liquidity was decreased\"}},\"IncreaseLiquidity(uint256,uint128,uint256,uint256)\":{\"details\":\"Also emitted when a token is minted\",\"params\":{\"amount0\":\"The amount of token0 that was paid for the increase in liquidity\",\"amount1\":\"The amount of token1 that was paid for the increase in liquidity\",\"liquidity\":\"The amount by which liquidity for the NFT position was increased\",\"tokenId\":\"The ID of the token for which liquidity was increased\"}},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"returns\":{\"_0\":\"The domain seperator used in encoding of permit signature\"}},\"PERMIT_TYPEHASH()\":{\"returns\":{\"_0\":\"The typehash for the permit\"}},\"WETH9()\":{\"returns\":{\"_0\":\"Returns the address of WETH9\"}},\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"burn(uint256)\":{\"params\":{\"tokenId\":\"The ID of the token that is being burned\"}},\"collect((uint256,address,uint128,uint128))\":{\"params\":{\"params\":\"tokenId The ID of the NFT for which tokens are being collected, recipient The account that should receive the tokens, amount0Max The maximum amount of token0 to collect, amount1Max The maximum amount of token1 to collect\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"createAndInitializePoolIfNecessary(address,address,uint24,uint160)\":{\"details\":\"This method can be bundled with others via IMulticall for the first action (e.g. mint) performed against a pool\",\"params\":{\"fee\":\"The fee amount of the v3 pool for the specified token pair\",\"sqrtPriceX96\":\"The initial square root price of the pool as a Q64.96 value\",\"token0\":\"The contract address of token0 of the pool\",\"token1\":\"The contract address of token1 of the pool\"},\"returns\":{\"pool\":\"Returns the pool address based on the pair of tokens and fee, will return the newly created pool address if necessary\"}},\"decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))\":{\"params\":{\"params\":\"tokenId The ID of the token for which liquidity is being decreased, amount The amount by which liquidity will be decreased, amount0Min The minimum amount of token0 that should be accounted for the burned liquidity, amount1Min The minimum amount of token1 that should be accounted for the burned liquidity, deadline The time by which the transaction must be included to effect the change\"},\"returns\":{\"amount0\":\"The amount of token0 accounted to the position's tokens owed\",\"amount1\":\"The amount of token1 accounted to the position's tokens owed\"}},\"factory()\":{\"returns\":{\"_0\":\"Returns the address of the Uniswap V3 factory\"}},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))\":{\"params\":{\"params\":\"tokenId The ID of the token for which liquidity is being increased, amount0Desired The desired amount of token0 to be spent, amount1Desired The desired amount of token1 to be spent, amount0Min The minimum amount of token0 to spend, which serves as a slippage check, amount1Min The minimum amount of token1 to spend, which serves as a slippage check, deadline The time by which the transaction must be included to effect the change\"},\"returns\":{\"amount0\":\"The amount of token0 to acheive resulting liquidity\",\"amount1\":\"The amount of token1 to acheive resulting liquidity\",\"liquidity\":\"The new liquidity amount as a result of the increase\"}},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"mint((address,address,uint24,int24,int24,uint256,uint256,uint256,uint256,address,uint256))\":{\"details\":\"Call this when the pool does exist and is initialized. Note that if the pool is created but not initialized a method does not exist, i.e. the pool is assumed to be initialized.\",\"params\":{\"params\":\"The params necessary to mint a position, encoded as `MintParams` in calldata\"},\"returns\":{\"amount0\":\"The amount of token0\",\"amount1\":\"The amount of token1\",\"liquidity\":\"The amount of liquidity for this position\",\"tokenId\":\"The ID of the token that represents the minted position\"}},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"permit(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"params\":{\"deadline\":\"The deadline timestamp by which the call must be mined for the approve to work\",\"r\":\"Must produce valid secp256k1 signature from the holder along with `v` and `s`\",\"s\":\"Must produce valid secp256k1 signature from the holder along with `r` and `v`\",\"spender\":\"The account that is being approved\",\"tokenId\":\"The ID of the token that is being approved for spending\",\"v\":\"Must produce valid secp256k1 signature from the holder along with `r` and `s`\"}},\"positions(uint256)\":{\"details\":\"Throws if the token ID is not valid.\",\"params\":{\"tokenId\":\"The ID of the token that represents the position\"},\"returns\":{\"fee\":\"The fee associated with the pool\",\"feeGrowthInside0LastX128\":\"The fee growth of token0 as of the last action on the individual position\",\"feeGrowthInside1LastX128\":\"The fee growth of token1 as of the last action on the individual position\",\"liquidity\":\"The liquidity of the position\",\"nonce\":\"The nonce for permits\",\"operator\":\"The address that is approved for spending\",\"tickLower\":\"The lower end of the tick range for the position\",\"tickUpper\":\"The higher end of the tick range for the position\",\"token0\":\"The address of the token0 for a specific pool\",\"token1\":\"The address of the token1 for a specific pool\",\"tokensOwed0\":\"The uncollected amount of token0 owed to the position as of the last computation\",\"tokensOwed1\":\"The uncollected amount of token1 owed to the position as of the last computation\"}},\"refundETH()\":{\"details\":\"Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps that use ether for the input amount\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"sweepToken(address,uint256,address)\":{\"details\":\"The amountMinimum parameter prevents malicious contracts from stealing the token from users\",\"params\":{\"amountMinimum\":\"The minimum amount of token required for a transfer\",\"recipient\":\"The destination address of the token\",\"token\":\"The contract address of the token which will be transferred to `recipient`\"}},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenByIndex(uint256)\":{\"details\":\"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"},\"unwrapWETH9(uint256,address)\":{\"details\":\"The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.\",\"params\":{\"amountMinimum\":\"The minimum amount of WETH9 to unwrap\",\"recipient\":\"The address receiving ETH\"}}},\"title\":\"Non-fungible token for positions\",\"version\":1},\"userdoc\":{\"events\":{\"Collect(uint256,address,uint256,uint256)\":{\"notice\":\"Emitted when tokens are collected for a position NFT\"},\"DecreaseLiquidity(uint256,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is decreased for a position NFT\"},\"IncreaseLiquidity(uint256,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is increased for a position NFT\"}},\"kind\":\"user\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"notice\":\"The domain separator used in the permit signature\"},\"PERMIT_TYPEHASH()\":{\"notice\":\"The permit typehash used in the permit signature\"},\"burn(uint256)\":{\"notice\":\"Burns a token ID, which deletes it from the NFT contract. The token must have 0 liquidity and all tokens must be collected first.\"},\"collect((uint256,address,uint128,uint128))\":{\"notice\":\"Collects up to a maximum amount of fees owed to a specific position to the recipient\"},\"createAndInitializePoolIfNecessary(address,address,uint24,uint160)\":{\"notice\":\"Creates a new pool if it does not exist, then initializes if not initialized\"},\"decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))\":{\"notice\":\"Decreases the amount of liquidity in a position and accounts it to the position\"},\"increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))\":{\"notice\":\"Increases the amount of liquidity in a position, with tokens paid by the `msg.sender`\"},\"mint((address,address,uint24,int24,int24,uint256,uint256,uint256,uint256,address,uint256))\":{\"notice\":\"Creates a new position wrapped in a NFT\"},\"permit(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Approve of a specific token ID for spending by spender via signature\"},\"positions(uint256)\":{\"notice\":\"Returns the position information associated with a given token ID.\"},\"refundETH()\":{\"notice\":\"Refunds any ETH balance held by this contract to the `msg.sender`\"},\"sweepToken(address,uint256,address)\":{\"notice\":\"Transfers the full amount of a token held by this contract to recipient\"},\"unwrapWETH9(uint256,address)\":{\"notice\":\"Unwraps the contract's WETH9 balance and sends it to recipient as ETH.\"}},\"notice\":\"Wraps Uniswap V3 positions in a non-fungible token interface which allows for them to be transferred and authorized.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol\":\"INonfungiblePositionManager\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x3c504de1aed405d34ff26733c7b6edc9fd9fd4f9aac504f541a4238dd50bf1d2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e373cc851a65ef3f01bb825f59c3c9cdb1969adab8ec871dd1f197423f6b9ed\",\"dweb:/ipfs/QmWNM3TyZgfxTKJsfqk7ZJk7DmZr29iab3f8T4c1itiynm\"]},\"contracts/openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol\":{\"keccak256\":\"0x49ae5d944b6f25701d67ef1d76cbce766f062bf1958a34b13543f539d7882850\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://851181789f63ce009fa30ddabd8ef159d90733216d5d1f2f9e13d16688f67489\",\"dweb:/ipfs/QmdT4okvCWQC1eSYNFfyqjUkJBAiWbSZMwAazzEuizBJSb\"]},\"contracts/openzeppelin/contracts/token/ERC721/IERC721Metadata.sol\":{\"keccak256\":\"0xfd743e54fb2a27413f703a389d1d78b003d957eaebbcfa15051d89793cf5136a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07683e02a762080a63f5ccec780488e5b87f79ded66d4c1e27f5cd62c1b5f8cb\",\"dweb:/ipfs/QmNtAngsTxV2c2XAKrqAo7PUUpXz1J69LNzwkEun4QTX7w\"]},\"contracts/openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x1e96fdc714c1d5e754ad716c7cb4ac8daa28856879f2d40bb428720adac47b69\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1725af76c335db636686b0b8f36dfdcfa15d40993509ed80c6e579dfd3e1c2f3\",\"dweb:/ipfs/QmcT6Bp635CWdmxQnv84bicV4eaD46cY1ywZNgriSusJXw\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/IERC721Permit.sol\":{\"keccak256\":\"0x9915ccd225c6840a809606b1a929404b0299bff8d7cbb6bc8439c5dfd74046d2\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f0cdf83091593d05e85f50c1c40cf17c8c1eb6aeaac87cb9f8c91e8e31cf162c\",\"dweb:/ipfs/QmZxxuzCfsPLnARKERZj2fvy2mEvyQWJd9uDWpFwj4UkJa\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol\":{\"keccak256\":\"0x631739110217293c69ff6fc6ca4499fcabe8774fb17de93a5546dabe6e207034\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://9f61686e40280404bb22e20c5c380ed8dd4467c8c5c164762566233146cc2e26\",\"dweb:/ipfs/QmbA6qoN6NJvnj3vTRFA5ozNLdnWqtK5iJjqzcR1NS3qJk\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol\":{\"keccak256\":\"0x7affcfeb5127c0925a71d6a65345e117c33537523aeca7bc98085ead8452519d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e16b291294210e71cb0f20cd0afe62ae2dc6878d627f5ccc19c4dc9cd80aec3f\",\"dweb:/ipfs/QmQGitSyBr26nour81BZmpmDMyJpvZRqHQZvnCD1Acb127\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol\":{\"keccak256\":\"0xb547e10f1e69bed03621a62b73a503e260643066c6b4054867a4d1fef47eb274\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f9a90f58f5fd5fb42f7811f4094113b532f307b14a73764c91f977590747f407\",\"dweb:/ipfs/QmSeNH2mfiDMKf3Q6V2sqtNxx1s72JNuA1VVxRM9HoMqYp\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/IPoolInitializer.sol\":{\"keccak256\":\"0x9d7695e8d94c22cc5fcced602017aabb988de89981ea7bee29ea629d5328a862\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://61b50933026ee1017db2a6273af8cedc3238c95dca58880db0918dbdbb2f064f\",\"dweb:/ipfs/QmUebR26pqG25d18aBELKz8aFFKkmHa8PxntzXTA7o9Ldu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Collect(uint256,address,uint256,uint256)": {
								"notice": "Emitted when tokens are collected for a position NFT"
							},
							"DecreaseLiquidity(uint256,uint128,uint256,uint256)": {
								"notice": "Emitted when liquidity is decreased for a position NFT"
							},
							"IncreaseLiquidity(uint256,uint128,uint256,uint256)": {
								"notice": "Emitted when liquidity is increased for a position NFT"
							}
						},
						"kind": "user",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"notice": "The domain separator used in the permit signature"
							},
							"PERMIT_TYPEHASH()": {
								"notice": "The permit typehash used in the permit signature"
							},
							"burn(uint256)": {
								"notice": "Burns a token ID, which deletes it from the NFT contract. The token must have 0 liquidity and all tokens must be collected first."
							},
							"collect((uint256,address,uint128,uint128))": {
								"notice": "Collects up to a maximum amount of fees owed to a specific position to the recipient"
							},
							"createAndInitializePoolIfNecessary(address,address,uint24,uint160)": {
								"notice": "Creates a new pool if it does not exist, then initializes if not initialized"
							},
							"decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))": {
								"notice": "Decreases the amount of liquidity in a position and accounts it to the position"
							},
							"increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))": {
								"notice": "Increases the amount of liquidity in a position, with tokens paid by the `msg.sender`"
							},
							"mint((address,address,uint24,int24,int24,uint256,uint256,uint256,uint256,address,uint256))": {
								"notice": "Creates a new position wrapped in a NFT"
							},
							"permit(address,uint256,uint256,uint8,bytes32,bytes32)": {
								"notice": "Approve of a specific token ID for spending by spender via signature"
							},
							"positions(uint256)": {
								"notice": "Returns the position information associated with a given token ID."
							},
							"refundETH()": {
								"notice": "Refunds any ETH balance held by this contract to the `msg.sender`"
							},
							"sweepToken(address,uint256,address)": {
								"notice": "Transfers the full amount of a token held by this contract to recipient"
							},
							"unwrapWETH9(uint256,address)": {
								"notice": "Unwraps the contract's WETH9 balance and sends it to recipient as ETH."
							}
						},
						"notice": "Wraps Uniswap V3 positions in a non-fungible token interface which allows for them to be transferred and authorized.",
						"version": 1
					}
				}
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol": {
				"IPeripheryImmutableState": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH9",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"WETH9()": {
								"returns": {
									"_0": "Returns the address of WETH9"
								}
							},
							"factory()": {
								"returns": {
									"_0": "Returns the address of the Uniswap V3 factory"
								}
							}
						},
						"title": "Immutable state",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH9()": "4aa4a4fc",
							"factory()": "c45a0155"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH9\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"WETH9()\":{\"returns\":{\"_0\":\"Returns the address of WETH9\"}},\"factory()\":{\"returns\":{\"_0\":\"Returns the address of the Uniswap V3 factory\"}}},\"title\":\"Immutable state\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Functions that return immutable state of the router\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol\":\"IPeripheryImmutableState\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol\":{\"keccak256\":\"0x7affcfeb5127c0925a71d6a65345e117c33537523aeca7bc98085ead8452519d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e16b291294210e71cb0f20cd0afe62ae2dc6878d627f5ccc19c4dc9cd80aec3f\",\"dweb:/ipfs/QmQGitSyBr26nour81BZmpmDMyJpvZRqHQZvnCD1Acb127\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Functions that return immutable state of the router",
						"version": 1
					}
				}
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol": {
				"IPeripheryPayments": {
					"abi": [
						{
							"inputs": [],
							"name": "refundETH",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountMinimum",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "sweepToken",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountMinimum",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "unwrapWETH9",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"refundETH()": {
								"details": "Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps that use ether for the input amount"
							},
							"sweepToken(address,uint256,address)": {
								"details": "The amountMinimum parameter prevents malicious contracts from stealing the token from users",
								"params": {
									"amountMinimum": "The minimum amount of token required for a transfer",
									"recipient": "The destination address of the token",
									"token": "The contract address of the token which will be transferred to `recipient`"
								}
							},
							"unwrapWETH9(uint256,address)": {
								"details": "The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.",
								"params": {
									"amountMinimum": "The minimum amount of WETH9 to unwrap",
									"recipient": "The address receiving ETH"
								}
							}
						},
						"title": "Periphery Payments",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"refundETH()": "12210e8a",
							"sweepToken(address,uint256,address)": "df2ab5bb",
							"unwrapWETH9(uint256,address)": "49404b7c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"refundETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"sweepToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"unwrapWETH9\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"refundETH()\":{\"details\":\"Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps that use ether for the input amount\"},\"sweepToken(address,uint256,address)\":{\"details\":\"The amountMinimum parameter prevents malicious contracts from stealing the token from users\",\"params\":{\"amountMinimum\":\"The minimum amount of token required for a transfer\",\"recipient\":\"The destination address of the token\",\"token\":\"The contract address of the token which will be transferred to `recipient`\"}},\"unwrapWETH9(uint256,address)\":{\"details\":\"The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.\",\"params\":{\"amountMinimum\":\"The minimum amount of WETH9 to unwrap\",\"recipient\":\"The address receiving ETH\"}}},\"title\":\"Periphery Payments\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"refundETH()\":{\"notice\":\"Refunds any ETH balance held by this contract to the `msg.sender`\"},\"sweepToken(address,uint256,address)\":{\"notice\":\"Transfers the full amount of a token held by this contract to recipient\"},\"unwrapWETH9(uint256,address)\":{\"notice\":\"Unwraps the contract's WETH9 balance and sends it to recipient as ETH.\"}},\"notice\":\"Functions to ease deposits and withdrawals of ETH\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol\":\"IPeripheryPayments\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol\":{\"keccak256\":\"0xb547e10f1e69bed03621a62b73a503e260643066c6b4054867a4d1fef47eb274\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f9a90f58f5fd5fb42f7811f4094113b532f307b14a73764c91f977590747f407\",\"dweb:/ipfs/QmSeNH2mfiDMKf3Q6V2sqtNxx1s72JNuA1VVxRM9HoMqYp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"refundETH()": {
								"notice": "Refunds any ETH balance held by this contract to the `msg.sender`"
							},
							"sweepToken(address,uint256,address)": {
								"notice": "Transfers the full amount of a token held by this contract to recipient"
							},
							"unwrapWETH9(uint256,address)": {
								"notice": "Unwraps the contract's WETH9 balance and sends it to recipient as ETH."
							}
						},
						"notice": "Functions to ease deposits and withdrawals of ETH",
						"version": 1
					}
				}
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/IPoolInitializer.sol": {
				"IPoolInitializer": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								}
							],
							"name": "createAndInitializePoolIfNecessary",
							"outputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"createAndInitializePoolIfNecessary(address,address,uint24,uint160)": {
								"details": "This method can be bundled with others via IMulticall for the first action (e.g. mint) performed against a pool",
								"params": {
									"fee": "The fee amount of the v3 pool for the specified token pair",
									"sqrtPriceX96": "The initial square root price of the pool as a Q64.96 value",
									"token0": "The contract address of token0 of the pool",
									"token1": "The contract address of token1 of the pool"
								},
								"returns": {
									"pool": "Returns the pool address based on the pair of tokens and fee, will return the newly created pool address if necessary"
								}
							}
						},
						"title": "Creates and initializes V3 Pools",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"createAndInitializePoolIfNecessary(address,address,uint24,uint160)": "13ead562"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"createAndInitializePoolIfNecessary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"createAndInitializePoolIfNecessary(address,address,uint24,uint160)\":{\"details\":\"This method can be bundled with others via IMulticall for the first action (e.g. mint) performed against a pool\",\"params\":{\"fee\":\"The fee amount of the v3 pool for the specified token pair\",\"sqrtPriceX96\":\"The initial square root price of the pool as a Q64.96 value\",\"token0\":\"The contract address of token0 of the pool\",\"token1\":\"The contract address of token1 of the pool\"},\"returns\":{\"pool\":\"Returns the pool address based on the pair of tokens and fee, will return the newly created pool address if necessary\"}}},\"title\":\"Creates and initializes V3 Pools\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createAndInitializePoolIfNecessary(address,address,uint24,uint160)\":{\"notice\":\"Creates a new pool if it does not exist, then initializes if not initialized\"}},\"notice\":\"Provides a method for creating and initializing a pool, if necessary, for bundling with other methods that require the pool to exist.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/uniswap/v3-periphery/contracts/interfaces/IPoolInitializer.sol\":\"IPoolInitializer\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/uniswap/v3-periphery/contracts/interfaces/IPoolInitializer.sol\":{\"keccak256\":\"0x9d7695e8d94c22cc5fcced602017aabb988de89981ea7bee29ea629d5328a862\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://61b50933026ee1017db2a6273af8cedc3238c95dca58880db0918dbdbb2f064f\",\"dweb:/ipfs/QmUebR26pqG25d18aBELKz8aFFKkmHa8PxntzXTA7o9Ldu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"createAndInitializePoolIfNecessary(address,address,uint24,uint160)": {
								"notice": "Creates a new pool if it does not exist, then initializes if not initialized"
							}
						},
						"notice": "Provides a method for creating and initializing a pool, if necessary, for bundling with other methods that require the pool to exist.",
						"version": 1
					}
				}
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
				"ISwapRouter": {
					"abi": [
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes",
											"name": "path",
											"type": "bytes"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountIn",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOutMinimum",
											"type": "uint256"
										}
									],
									"internalType": "struct ISwapRouter.ExactInputParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactInput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "tokenIn",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "tokenOut",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountIn",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOutMinimum",
											"type": "uint256"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceLimitX96",
											"type": "uint160"
										}
									],
									"internalType": "struct ISwapRouter.ExactInputSingleParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactInputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes",
											"name": "path",
											"type": "bytes"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOut",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountInMaximum",
											"type": "uint256"
										}
									],
									"internalType": "struct ISwapRouter.ExactOutputParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactOutput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "tokenIn",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "tokenOut",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOut",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountInMaximum",
											"type": "uint256"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceLimitX96",
											"type": "uint160"
										}
									],
									"internalType": "struct ISwapRouter.ExactOutputSingleParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactOutputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "amount0Delta",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1Delta",
									"type": "int256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "uniswapV3SwapCallback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"exactInput((bytes,address,uint256,uint256,uint256))": {
								"params": {
									"params": "The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata"
								},
								"returns": {
									"amountOut": "The amount of the received token"
								}
							},
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"params": {
									"params": "The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata"
								},
								"returns": {
									"amountOut": "The amount of the received token"
								}
							},
							"exactOutput((bytes,address,uint256,uint256,uint256))": {
								"params": {
									"params": "The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata"
								},
								"returns": {
									"amountIn": "The amount of the input token"
								}
							},
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"params": {
									"params": "The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata"
								},
								"returns": {
									"amountIn": "The amount of the input token"
								}
							},
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"details": "In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.",
								"params": {
									"amount0Delta": "The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.",
									"amount1Delta": "The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.",
									"data": "Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
								}
							}
						},
						"title": "Router token swapping functionality",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"exactInput((bytes,address,uint256,uint256,uint256))": "c04b8d59",
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": "414bf389",
							"exactOutput((bytes,address,uint256,uint256,uint256))": "f28c0498",
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": "db3e2198",
							"uniswapV3SwapCallback(int256,int256,bytes)": "fa461e33"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactInputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactInputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactOutputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactOutputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Router token swapping functionality\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another along the specified path\"},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another token\"},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\"},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another token\"},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Functions for swapping tokens via Uniswap V3\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":\"ISwapRouter\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0xfa925dc6086cfc426967d6b47a651ade9bb30a747359c0d006912c59d88b5c4a\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ec22f5863805d4afbf740bbba06c07fe4572ba993e4936a234222c61b3d1dd6e\",\"dweb:/ipfs/QmNyC92QbbjjG5V67GNfiXbSN6Ehi7637uFQXkWwKXR3s6\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0xe75caaf5ab5dad796a807a0db3ce9d5aeeadf3cc062aaa17f701134bbd085f53\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://21ae8e8c7af183532964bc81889b695801f868d903af91d18d02a77d793e14fb\",\"dweb:/ipfs/QmfDr8ugPEdbxtTCs6fut61Euf3adBvS2aNyFyC5CFAFGy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"exactInput((bytes,address,uint256,uint256,uint256))": {
								"notice": "Swaps `amountIn` of one token for as much as possible of another along the specified path"
							},
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"notice": "Swaps `amountIn` of one token for as much as possible of another token"
							},
							"exactOutput((bytes,address,uint256,uint256,uint256))": {
								"notice": "Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)"
							},
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"notice": "Swaps as little as possible of one token for `amountOut` of another token"
							},
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"notice": "Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."
							}
						},
						"notice": "Functions for swapping tokens via Uniswap V3",
						"version": 1
					}
				}
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/IUniswapV3Pool.sol": {
				"IUniswapV3Pool": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "Collect",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "CollectProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid1",
									"type": "uint256"
								}
							],
							"name": "Flash",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextOld",
									"type": "uint16"
								},
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextNew",
									"type": "uint16"
								}
							],
							"name": "IncreaseObservationCardinalityNext",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Initialize",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0New",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1New",
									"type": "uint8"
								}
							],
							"name": "SetFeeProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Swap",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collect",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collectProtocol",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fee",
							"outputs": [
								{
									"internalType": "uint24",
									"name": "",
									"type": "uint24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeGrowthGlobal0X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeGrowthGlobal1X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "flash",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								}
							],
							"name": "increaseObservationCardinalityNext",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidity",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxLiquidityPerTick",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "observations",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "blockTimestamp",
									"type": "uint32"
								},
								{
									"internalType": "int56",
									"name": "tickCumulative",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityCumulativeX128",
									"type": "uint160"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint32[]",
									"name": "secondsAgos",
									"type": "uint32[]"
								}
							],
							"name": "observe",
							"outputs": [
								{
									"internalType": "int56[]",
									"name": "tickCumulatives",
									"type": "int56[]"
								},
								{
									"internalType": "uint160[]",
									"name": "secondsPerLiquidityCumulativeX128s",
									"type": "uint160[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								}
							],
							"name": "positions",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "_liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside0LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside1LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "protocolFees",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "token0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "token1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "feeProtocol0",
									"type": "uint8"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol1",
									"type": "uint8"
								}
							],
							"name": "setFeeProtocol",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "slot0",
							"outputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								},
								{
									"internalType": "uint16",
									"name": "observationIndex",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinality",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol",
									"type": "uint8"
								},
								{
									"internalType": "bool",
									"name": "unlocked",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								}
							],
							"name": "snapshotCumulativesInside",
							"outputs": [
								{
									"internalType": "int56",
									"name": "tickCumulativeInside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityInsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsInside",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "zeroForOne",
									"type": "bool"
								},
								{
									"internalType": "int256",
									"name": "amountSpecified",
									"type": "int256"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceLimitX96",
									"type": "uint160"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [
								{
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int16",
									"name": "wordPosition",
									"type": "int16"
								}
							],
							"name": "tickBitmap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tickSpacing",
							"outputs": [
								{
									"internalType": "int24",
									"name": "",
									"type": "int24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "ticks",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "liquidityGross",
									"type": "uint128"
								},
								{
									"internalType": "int128",
									"name": "liquidityNet",
									"type": "int128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside0X128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside1X128",
									"type": "uint256"
								},
								{
									"internalType": "int56",
									"name": "tickCumulativeOutside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityOutsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsOutside",
									"type": "uint32"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "The pool interface is broken up into many smaller pieces",
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"details": "Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect",
								"params": {
									"amount": "The amount of liquidity to remove",
									"amount0": "The amount of token0 withdrawn",
									"amount1": "The amount of token1 withdrawn",
									"owner": "The owner of the position for which liquidity is removed",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"details": "Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees",
								"params": {
									"amount0": "The amount of token0 fees collected",
									"amount1": "The amount of token1 fees collected",
									"owner": "The owner of the position for which fees are collected",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"params": {
									"amount0": "The amount of token1 protocol fees that is withdrawn",
									"recipient": "The address that receives the collected protocol fees",
									"sender": "The address that collects the protocol fees"
								}
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"params": {
									"amount0": "The amount of token0 that was flashed",
									"amount1": "The amount of token1 that was flashed",
									"paid0": "The amount of token0 paid for the flash, which can exceed the amount0 plus the fee",
									"paid1": "The amount of token1 paid for the flash, which can exceed the amount1 plus the fee",
									"recipient": "The address that received the tokens from flash",
									"sender": "The address that initiated the swap call, and that received the callback"
								}
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"details": "observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.",
								"params": {
									"observationCardinalityNextNew": "The updated value of the next observation cardinality",
									"observationCardinalityNextOld": "The previous value of the next observation cardinality"
								}
							},
							"Initialize(uint160,int24)": {
								"details": "Mint/Burn/Swap cannot be emitted by the pool before Initialize",
								"params": {
									"sqrtPriceX96": "The initial sqrt price of the pool, as a Q64.96",
									"tick": "The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool"
								}
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"params": {
									"amount": "The amount of liquidity minted to the position range",
									"amount0": "How much token0 was required for the minted liquidity",
									"amount1": "How much token1 was required for the minted liquidity",
									"owner": "The owner of the position and recipient of any minted liquidity",
									"sender": "The address that minted the liquidity",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"params": {
									"feeProtocol0New": "The updated value of the token0 protocol fee",
									"feeProtocol0Old": "The previous value of the token0 protocol fee",
									"feeProtocol1New": "The updated value of the token1 protocol fee",
									"feeProtocol1Old": "The previous value of the token1 protocol fee"
								}
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"params": {
									"amount0": "The delta of the token0 balance of the pool",
									"amount1": "The delta of the token1 balance of the pool",
									"liquidity": "The liquidity of the pool after the swap",
									"recipient": "The address that received the output of the swap",
									"sender": "The address that initiated the swap call, and that received the callback",
									"sqrtPriceX96": "The sqrt(price) of the pool after the swap, as a Q64.96",
									"tick": "The log base 1.0001 of price of the pool after the swap"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"burn(int24,int24,uint128)": {
								"details": "Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect",
								"params": {
									"amount": "How much liquidity to burn",
									"tickLower": "The lower tick of the position for which to burn liquidity",
									"tickUpper": "The upper tick of the position for which to burn liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 sent to the recipient",
									"amount1": "The amount of token1 sent to the recipient"
								}
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"details": "Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.",
								"params": {
									"amount0Requested": "How much token0 should be withdrawn from the fees owed",
									"amount1Requested": "How much token1 should be withdrawn from the fees owed",
									"recipient": "The address which should receive the fees collected",
									"tickLower": "The lower tick of the position for which to collect fees",
									"tickUpper": "The upper tick of the position for which to collect fees"
								},
								"returns": {
									"amount0": "The amount of fees collected in token0",
									"amount1": "The amount of fees collected in token1"
								}
							},
							"collectProtocol(address,uint128,uint128)": {
								"params": {
									"amount0Requested": "The maximum amount of token0 to send, can be 0 to collect fees in only token1",
									"amount1Requested": "The maximum amount of token1 to send, can be 0 to collect fees in only token0",
									"recipient": "The address to which collected protocol fees should be sent"
								},
								"returns": {
									"amount0": "The protocol fee collected in token0",
									"amount1": "The protocol fee collected in token1"
								}
							},
							"factory()": {
								"returns": {
									"_0": "The contract address"
								}
							},
							"fee()": {
								"returns": {
									"_0": "The fee"
								}
							},
							"feeGrowthGlobal0X128()": {
								"details": "This value can overflow the uint256"
							},
							"feeGrowthGlobal1X128()": {
								"details": "This value can overflow the uint256"
							},
							"flash(address,uint256,uint256,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback",
								"params": {
									"amount0": "The amount of token0 to send",
									"amount1": "The amount of token1 to send",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address which will receive the token0 and token1 amounts"
								}
							},
							"increaseObservationCardinalityNext(uint16)": {
								"details": "This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.",
								"params": {
									"observationCardinalityNext": "The desired minimum number of observations for the pool to store"
								}
							},
							"initialize(uint160)": {
								"details": "Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value",
								"params": {
									"sqrtPriceX96": "the initial sqrt price of the pool as a Q64.96"
								}
							},
							"liquidity()": {
								"details": "This value has no relationship to the total liquidity across all ticks"
							},
							"maxLiquidityPerTick()": {
								"details": "This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool",
								"returns": {
									"_0": "The max amount of liquidity per tick"
								}
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.",
								"params": {
									"amount": "The amount of liquidity to mint",
									"data": "Any data that should be passed through to the callback",
									"recipient": "The address for which the liquidity will be created",
									"tickLower": "The lower tick of the position in which to add liquidity",
									"tickUpper": "The upper tick of the position in which to add liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback",
									"amount1": "The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"
								}
							},
							"observations(uint256)": {
								"details": "You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.",
								"params": {
									"index": "The element of the observations array to fetch"
								},
								"returns": {
									"blockTimestamp": "The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use"
								}
							},
							"observe(uint32[])": {
								"details": "To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.",
								"params": {
									"secondsAgos": "From how long ago each cumulative tick and liquidity value should be returned"
								},
								"returns": {
									"secondsPerLiquidityCumulativeX128s": "Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp",
									"tickCumulatives": "Cumulative tick values as of each `secondsAgos` from the current block timestamp"
								}
							},
							"positions(bytes32)": {
								"params": {
									"key": "The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper"
								},
								"returns": {
									"_liquidity": "The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"
								}
							},
							"protocolFees()": {
								"details": "Protocol fees will never exceed uint128 max in either token"
							},
							"setFeeProtocol(uint8,uint8)": {
								"params": {
									"feeProtocol0": "new protocol fee for token0 of the pool",
									"feeProtocol1": "new protocol fee for token1 of the pool"
								}
							},
							"slot0()": {
								"returns": {
									"sqrtPriceX96": "The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy"
								}
							},
							"snapshotCumulativesInside(int24,int24)": {
								"details": "Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.",
								"params": {
									"tickLower": "The lower tick of the range",
									"tickUpper": "The upper tick of the range"
								},
								"returns": {
									"secondsInside": "The snapshot of seconds per liquidity for the range",
									"secondsPerLiquidityInsideX128": "The snapshot of seconds per liquidity for the range",
									"tickCumulativeInside": "The snapshot of the tick accumulator for the range"
								}
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback",
								"params": {
									"amountSpecified": "The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address to receive the output of the swap",
									"sqrtPriceLimitX96": "The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap",
									"zeroForOne": "The direction of the swap, true for token0 to token1, false for token1 to token0"
								},
								"returns": {
									"amount0": "The delta of the balance of token0 of the pool, exact when negative, minimum when positive",
									"amount1": "The delta of the balance of token1 of the pool, exact when negative, minimum when positive"
								}
							},
							"tickSpacing()": {
								"details": "Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.",
								"returns": {
									"_0": "The tick spacing"
								}
							},
							"ticks(int24)": {
								"params": {
									"tick": "The tick to look up"
								},
								"returns": {
									"liquidityGross": "the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position."
								}
							},
							"token0()": {
								"returns": {
									"_0": "The token contract address"
								}
							},
							"token1()": {
								"returns": {
									"_0": "The token contract address"
								}
							}
						},
						"title": "The interface for a Uniswap V3 Pool",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"burn(int24,int24,uint128)": "a34123a7",
							"collect(address,int24,int24,uint128,uint128)": "4f1eb3d8",
							"collectProtocol(address,uint128,uint128)": "85b66729",
							"factory()": "c45a0155",
							"fee()": "ddca3f43",
							"feeGrowthGlobal0X128()": "f3058399",
							"feeGrowthGlobal1X128()": "46141319",
							"flash(address,uint256,uint256,bytes)": "490e6cbc",
							"increaseObservationCardinalityNext(uint16)": "32148f67",
							"initialize(uint160)": "f637731d",
							"liquidity()": "1a686502",
							"maxLiquidityPerTick()": "70cf754a",
							"mint(address,int24,int24,uint128,bytes)": "3c8a7d8d",
							"observations(uint256)": "252c09d7",
							"observe(uint32[])": "883bdbfd",
							"positions(bytes32)": "514ea4bf",
							"protocolFees()": "1ad8b03b",
							"setFeeProtocol(uint8,uint8)": "8206a4d1",
							"slot0()": "3850c7bd",
							"snapshotCumulativesInside(int24,int24)": "a38807f2",
							"swap(address,bool,int256,uint160,bytes)": "128acb08",
							"tickBitmap(int16)": "5339c296",
							"tickSpacing()": "d0c93a7c",
							"ticks(int24)": "f30dba93",
							"token0()": "0dfe1681",
							"token1()": "d21220a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"CollectProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid1\",\"type\":\"uint256\"}],\"name\":\"Flash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextOld\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextNew\",\"type\":\"uint16\"}],\"name\":\"IncreaseObservationCardinalityNext\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0New\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1New\",\"type\":\"uint8\"}],\"name\":\"SetFeeProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collectProtocol\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal0X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal1X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"}],\"name\":\"increaseObservationCardinalityNext\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLiquidityPerTick\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"observations\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"blockTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"int56\",\"name\":\"tickCumulative\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityCumulativeX128\",\"type\":\"uint160\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32[]\",\"name\":\"secondsAgos\",\"type\":\"uint32[]\"}],\"name\":\"observe\",\"outputs\":[{\"internalType\":\"int56[]\",\"name\":\"tickCumulatives\",\"type\":\"int56[]\"},{\"internalType\":\"uint160[]\",\"name\":\"secondsPerLiquidityCumulativeX128s\",\"type\":\"uint160[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"_liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"token0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"token1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"feeProtocol0\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol1\",\"type\":\"uint8\"}],\"name\":\"setFeeProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slot0\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"observationIndex\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinality\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"snapshotCumulativesInside\",\"outputs\":[{\"internalType\":\"int56\",\"name\":\"tickCumulativeInside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityInsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsInside\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int16\",\"name\":\"wordPosition\",\"type\":\"int16\"}],\"name\":\"tickBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"ticks\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidityGross\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"liquidityNet\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside0X128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside1X128\",\"type\":\"uint256\"},{\"internalType\":\"int56\",\"name\":\"tickCumulativeOutside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityOutsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsOutside\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The pool interface is broken up into many smaller pieces\",\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"details\":\"Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\",\"params\":{\"amount\":\"The amount of liquidity to remove\",\"amount0\":\"The amount of token0 withdrawn\",\"amount1\":\"The amount of token1 withdrawn\",\"owner\":\"The owner of the position for which liquidity is removed\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"details\":\"Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\",\"params\":{\"amount0\":\"The amount of token0 fees collected\",\"amount1\":\"The amount of token1 fees collected\",\"owner\":\"The owner of the position for which fees are collected\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"CollectProtocol(address,address,uint128,uint128)\":{\"params\":{\"amount0\":\"The amount of token1 protocol fees that is withdrawn\",\"recipient\":\"The address that receives the collected protocol fees\",\"sender\":\"The address that collects the protocol fees\"}},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"params\":{\"amount0\":\"The amount of token0 that was flashed\",\"amount1\":\"The amount of token1 that was flashed\",\"paid0\":\"The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\",\"paid1\":\"The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\",\"recipient\":\"The address that received the tokens from flash\",\"sender\":\"The address that initiated the swap call, and that received the callback\"}},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"details\":\"observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.\",\"params\":{\"observationCardinalityNextNew\":\"The updated value of the next observation cardinality\",\"observationCardinalityNextOld\":\"The previous value of the next observation cardinality\"}},\"Initialize(uint160,int24)\":{\"details\":\"Mint/Burn/Swap cannot be emitted by the pool before Initialize\",\"params\":{\"sqrtPriceX96\":\"The initial sqrt price of the pool, as a Q64.96\",\"tick\":\"The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\"}},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of liquidity minted to the position range\",\"amount0\":\"How much token0 was required for the minted liquidity\",\"amount1\":\"How much token1 was required for the minted liquidity\",\"owner\":\"The owner of the position and recipient of any minted liquidity\",\"sender\":\"The address that minted the liquidity\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"params\":{\"feeProtocol0New\":\"The updated value of the token0 protocol fee\",\"feeProtocol0Old\":\"The previous value of the token0 protocol fee\",\"feeProtocol1New\":\"The updated value of the token1 protocol fee\",\"feeProtocol1Old\":\"The previous value of the token1 protocol fee\"}},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"params\":{\"amount0\":\"The delta of the token0 balance of the pool\",\"amount1\":\"The delta of the token1 balance of the pool\",\"liquidity\":\"The liquidity of the pool after the swap\",\"recipient\":\"The address that received the output of the swap\",\"sender\":\"The address that initiated the swap call, and that received the callback\",\"sqrtPriceX96\":\"The sqrt(price) of the pool after the swap, as a Q64.96\",\"tick\":\"The log base 1.0001 of price of the pool after the swap\"}}},\"kind\":\"dev\",\"methods\":{\"burn(int24,int24,uint128)\":{\"details\":\"Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect\",\"params\":{\"amount\":\"How much liquidity to burn\",\"tickLower\":\"The lower tick of the position for which to burn liquidity\",\"tickUpper\":\"The upper tick of the position for which to burn liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 sent to the recipient\",\"amount1\":\"The amount of token1 sent to the recipient\"}},\"collect(address,int24,int24,uint128,uint128)\":{\"details\":\"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\",\"params\":{\"amount0Requested\":\"How much token0 should be withdrawn from the fees owed\",\"amount1Requested\":\"How much token1 should be withdrawn from the fees owed\",\"recipient\":\"The address which should receive the fees collected\",\"tickLower\":\"The lower tick of the position for which to collect fees\",\"tickUpper\":\"The upper tick of the position for which to collect fees\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"collectProtocol(address,uint128,uint128)\":{\"params\":{\"amount0Requested\":\"The maximum amount of token0 to send, can be 0 to collect fees in only token1\",\"amount1Requested\":\"The maximum amount of token1 to send, can be 0 to collect fees in only token0\",\"recipient\":\"The address to which collected protocol fees should be sent\"},\"returns\":{\"amount0\":\"The protocol fee collected in token0\",\"amount1\":\"The protocol fee collected in token1\"}},\"factory()\":{\"returns\":{\"_0\":\"The contract address\"}},\"fee()\":{\"returns\":{\"_0\":\"The fee\"}},\"feeGrowthGlobal0X128()\":{\"details\":\"This value can overflow the uint256\"},\"feeGrowthGlobal1X128()\":{\"details\":\"This value can overflow the uint256\"},\"flash(address,uint256,uint256,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback\",\"params\":{\"amount0\":\"The amount of token0 to send\",\"amount1\":\"The amount of token1 to send\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address which will receive the token0 and token1 amounts\"}},\"increaseObservationCardinalityNext(uint16)\":{\"details\":\"This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.\",\"params\":{\"observationCardinalityNext\":\"The desired minimum number of observations for the pool to store\"}},\"initialize(uint160)\":{\"details\":\"Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\",\"params\":{\"sqrtPriceX96\":\"the initial sqrt price of the pool as a Q64.96\"}},\"liquidity()\":{\"details\":\"This value has no relationship to the total liquidity across all ticks\"},\"maxLiquidityPerTick()\":{\"details\":\"This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\",\"returns\":{\"_0\":\"The max amount of liquidity per tick\"}},\"mint(address,int24,int24,uint128,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.\",\"params\":{\"amount\":\"The amount of liquidity to mint\",\"data\":\"Any data that should be passed through to the callback\",\"recipient\":\"The address for which the liquidity will be created\",\"tickLower\":\"The lower tick of the position in which to add liquidity\",\"tickUpper\":\"The upper tick of the position in which to add liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\",\"amount1\":\"The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\"}},\"observations(uint256)\":{\"details\":\"You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.\",\"params\":{\"index\":\"The element of the observations array to fetch\"},\"returns\":{\"blockTimestamp\":\"The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use\"}},\"observe(uint32[])\":{\"details\":\"To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\",\"params\":{\"secondsAgos\":\"From how long ago each cumulative tick and liquidity value should be returned\"},\"returns\":{\"secondsPerLiquidityCumulativeX128s\":\"Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp\",\"tickCumulatives\":\"Cumulative tick values as of each `secondsAgos` from the current block timestamp\"}},\"positions(bytes32)\":{\"params\":{\"key\":\"The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\"},\"returns\":{\"_liquidity\":\"The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\"}},\"protocolFees()\":{\"details\":\"Protocol fees will never exceed uint128 max in either token\"},\"setFeeProtocol(uint8,uint8)\":{\"params\":{\"feeProtocol0\":\"new protocol fee for token0 of the pool\",\"feeProtocol1\":\"new protocol fee for token1 of the pool\"}},\"slot0()\":{\"returns\":{\"sqrtPriceX96\":\"The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy\"}},\"snapshotCumulativesInside(int24,int24)\":{\"details\":\"Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.\",\"params\":{\"tickLower\":\"The lower tick of the range\",\"tickUpper\":\"The upper tick of the range\"},\"returns\":{\"secondsInside\":\"The snapshot of seconds per liquidity for the range\",\"secondsPerLiquidityInsideX128\":\"The snapshot of seconds per liquidity for the range\",\"tickCumulativeInside\":\"The snapshot of the tick accumulator for the range\"}},\"swap(address,bool,int256,uint160,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\",\"params\":{\"amountSpecified\":\"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address to receive the output of the swap\",\"sqrtPriceLimitX96\":\"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\",\"zeroForOne\":\"The direction of the swap, true for token0 to token1, false for token1 to token0\"},\"returns\":{\"amount0\":\"The delta of the balance of token0 of the pool, exact when negative, minimum when positive\",\"amount1\":\"The delta of the balance of token1 of the pool, exact when negative, minimum when positive\"}},\"tickSpacing()\":{\"details\":\"Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.\",\"returns\":{\"_0\":\"The tick spacing\"}},\"ticks(int24)\":{\"params\":{\"tick\":\"The tick to look up\"},\"returns\":{\"liquidityGross\":\"the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position.\"}},\"token0()\":{\"returns\":{\"_0\":\"The token contract address\"}},\"token1()\":{\"returns\":{\"_0\":\"The token contract address\"}}},\"title\":\"The interface for a Uniswap V3 Pool\",\"version\":1},\"userdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when a position's liquidity is removed\"},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"notice\":\"Emitted when fees are collected by the owner of a position\"},\"CollectProtocol(address,address,uint128,uint128)\":{\"notice\":\"Emitted when the collected protocol fees are withdrawn by the factory owner\"},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted by the pool for any flashes of token0/token1\"},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"notice\":\"Emitted by the pool for increases to the number of observations that can be stored\"},\"Initialize(uint160,int24)\":{\"notice\":\"Emitted exactly once by a pool when #initialize is first called on the pool\"},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is minted for a given position\"},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"notice\":\"Emitted when the protocol fee is changed by the pool\"},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"notice\":\"Emitted by the pool for any swaps between token0 and token1\"}},\"kind\":\"user\",\"methods\":{\"burn(int24,int24,uint128)\":{\"notice\":\"Burn liquidity from the sender and account tokens owed for the liquidity to the position\"},\"collect(address,int24,int24,uint128,uint128)\":{\"notice\":\"Collects tokens owed to a position\"},\"collectProtocol(address,uint128,uint128)\":{\"notice\":\"Collect the protocol fee accrued to the pool\"},\"factory()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"},\"fee()\":{\"notice\":\"The pool's fee in hundredths of a bip, i.e. 1e-6\"},\"feeGrowthGlobal0X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\"},\"feeGrowthGlobal1X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\"},\"flash(address,uint256,uint256,bytes)\":{\"notice\":\"Receive token0 and/or token1 and pay it back, plus a fee, in the callback\"},\"increaseObservationCardinalityNext(uint16)\":{\"notice\":\"Increase the maximum number of price and liquidity observations that this pool will store\"},\"initialize(uint160)\":{\"notice\":\"Sets the initial price for the pool\"},\"liquidity()\":{\"notice\":\"The currently in range liquidity available to the pool\"},\"maxLiquidityPerTick()\":{\"notice\":\"The maximum amount of position liquidity that can use any tick in the range\"},\"mint(address,int24,int24,uint128,bytes)\":{\"notice\":\"Adds liquidity for the given recipient/tickLower/tickUpper position\"},\"observations(uint256)\":{\"notice\":\"Returns data about a specific observation index\"},\"observe(uint32[])\":{\"notice\":\"Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\"},\"positions(bytes32)\":{\"notice\":\"Returns the information about a position by the position's key\"},\"protocolFees()\":{\"notice\":\"The amounts of token0 and token1 that are owed to the protocol\"},\"setFeeProtocol(uint8,uint8)\":{\"notice\":\"Set the denominator of the protocol's % share of the fees\"},\"slot0()\":{\"notice\":\"The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally.\"},\"snapshotCumulativesInside(int24,int24)\":{\"notice\":\"Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\"},\"swap(address,bool,int256,uint160,bytes)\":{\"notice\":\"Swap token0 for token1, or token1 for token0\"},\"tickBitmap(int16)\":{\"notice\":\"Returns 256 packed tick initialized boolean values. See TickBitmap for more information\"},\"tickSpacing()\":{\"notice\":\"The pool tick spacing\"},\"ticks(int24)\":{\"notice\":\"Look up information about a specific tick in the pool\"},\"token0()\":{\"notice\":\"The first of the two tokens of the pool, sorted by address\"},\"token1()\":{\"notice\":\"The second of the two tokens of the pool, sorted by address\"}},\"notice\":\"A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform to the ERC20 specification\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/uniswap/v3-periphery/contracts/interfaces/IUniswapV3Pool.sol\":\"IUniswapV3Pool\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/uniswap/v3-periphery/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5\",\"dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when a position's liquidity is removed"
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"notice": "Emitted when fees are collected by the owner of a position"
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"notice": "Emitted when the collected protocol fees are withdrawn by the factory owner"
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"notice": "Emitted by the pool for any flashes of token0/token1"
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"notice": "Emitted by the pool for increases to the number of observations that can be stored"
							},
							"Initialize(uint160,int24)": {
								"notice": "Emitted exactly once by a pool when #initialize is first called on the pool"
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when liquidity is minted for a given position"
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"notice": "Emitted when the protocol fee is changed by the pool"
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"notice": "Emitted by the pool for any swaps between token0 and token1"
							}
						},
						"kind": "user",
						"methods": {
							"burn(int24,int24,uint128)": {
								"notice": "Burn liquidity from the sender and account tokens owed for the liquidity to the position"
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"notice": "Collects tokens owed to a position"
							},
							"collectProtocol(address,uint128,uint128)": {
								"notice": "Collect the protocol fee accrued to the pool"
							},
							"factory()": {
								"notice": "The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface"
							},
							"fee()": {
								"notice": "The pool's fee in hundredths of a bip, i.e. 1e-6"
							},
							"feeGrowthGlobal0X128()": {
								"notice": "The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool"
							},
							"feeGrowthGlobal1X128()": {
								"notice": "The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool"
							},
							"flash(address,uint256,uint256,bytes)": {
								"notice": "Receive token0 and/or token1 and pay it back, plus a fee, in the callback"
							},
							"increaseObservationCardinalityNext(uint16)": {
								"notice": "Increase the maximum number of price and liquidity observations that this pool will store"
							},
							"initialize(uint160)": {
								"notice": "Sets the initial price for the pool"
							},
							"liquidity()": {
								"notice": "The currently in range liquidity available to the pool"
							},
							"maxLiquidityPerTick()": {
								"notice": "The maximum amount of position liquidity that can use any tick in the range"
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"notice": "Adds liquidity for the given recipient/tickLower/tickUpper position"
							},
							"observations(uint256)": {
								"notice": "Returns data about a specific observation index"
							},
							"observe(uint32[])": {
								"notice": "Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp"
							},
							"positions(bytes32)": {
								"notice": "Returns the information about a position by the position's key"
							},
							"protocolFees()": {
								"notice": "The amounts of token0 and token1 that are owed to the protocol"
							},
							"setFeeProtocol(uint8,uint8)": {
								"notice": "Set the denominator of the protocol's % share of the fees"
							},
							"slot0()": {
								"notice": "The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally."
							},
							"snapshotCumulativesInside(int24,int24)": {
								"notice": "Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range"
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"notice": "Swap token0 for token1, or token1 for token0"
							},
							"tickBitmap(int16)": {
								"notice": "Returns 256 packed tick initialized boolean values. See TickBitmap for more information"
							},
							"tickSpacing()": {
								"notice": "The pool tick spacing"
							},
							"ticks(int24)": {
								"notice": "Look up information about a specific tick in the pool"
							},
							"token0()": {
								"notice": "The first of the two tokens of the pool, sorted by address"
							},
							"token1()": {
								"notice": "The second of the two tokens of the pool, sorted by address"
							}
						},
						"notice": "A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform to the ERC20 specification",
						"version": 1
					}
				}
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"IUniswapV3SwapCallback": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "amount0Delta",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1Delta",
									"type": "int256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "uniswapV3SwapCallback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"details": "In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.",
								"params": {
									"amount0Delta": "The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.",
									"amount1Delta": "The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.",
									"data": "Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
								}
							}
						},
						"title": "Callback for IUniswapV3PoolActions#swap",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"uniswapV3SwapCallback(int256,int256,bytes)": "fa461e33"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Callback for IUniswapV3PoolActions#swap\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Any contract that calls IUniswapV3PoolActions#swap must implement this interface\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/uniswap/v3-periphery/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":\"IUniswapV3SwapCallback\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/uniswap/v3-periphery/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0xe75caaf5ab5dad796a807a0db3ce9d5aeeadf3cc062aaa17f701134bbd085f53\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://21ae8e8c7af183532964bc81889b695801f868d903af91d18d02a77d793e14fb\",\"dweb:/ipfs/QmfDr8ugPEdbxtTCs6fut61Euf3adBvS2aNyFyC5CFAFGy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"notice": "Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."
							}
						},
						"notice": "Any contract that calls IUniswapV3PoolActions#swap must implement this interface",
						"version": 1
					}
				}
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
				"IUniswapV3PoolActions": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collect",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "flash",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								}
							],
							"name": "increaseObservationCardinalityNext",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "zeroForOne",
									"type": "bool"
								},
								{
									"internalType": "int256",
									"name": "amountSpecified",
									"type": "int256"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceLimitX96",
									"type": "uint160"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [
								{
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"burn(int24,int24,uint128)": {
								"details": "Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect",
								"params": {
									"amount": "How much liquidity to burn",
									"tickLower": "The lower tick of the position for which to burn liquidity",
									"tickUpper": "The upper tick of the position for which to burn liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 sent to the recipient",
									"amount1": "The amount of token1 sent to the recipient"
								}
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"details": "Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.",
								"params": {
									"amount0Requested": "How much token0 should be withdrawn from the fees owed",
									"amount1Requested": "How much token1 should be withdrawn from the fees owed",
									"recipient": "The address which should receive the fees collected",
									"tickLower": "The lower tick of the position for which to collect fees",
									"tickUpper": "The upper tick of the position for which to collect fees"
								},
								"returns": {
									"amount0": "The amount of fees collected in token0",
									"amount1": "The amount of fees collected in token1"
								}
							},
							"flash(address,uint256,uint256,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback",
								"params": {
									"amount0": "The amount of token0 to send",
									"amount1": "The amount of token1 to send",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address which will receive the token0 and token1 amounts"
								}
							},
							"increaseObservationCardinalityNext(uint16)": {
								"details": "This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.",
								"params": {
									"observationCardinalityNext": "The desired minimum number of observations for the pool to store"
								}
							},
							"initialize(uint160)": {
								"details": "Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value",
								"params": {
									"sqrtPriceX96": "the initial sqrt price of the pool as a Q64.96"
								}
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.",
								"params": {
									"amount": "The amount of liquidity to mint",
									"data": "Any data that should be passed through to the callback",
									"recipient": "The address for which the liquidity will be created",
									"tickLower": "The lower tick of the position in which to add liquidity",
									"tickUpper": "The upper tick of the position in which to add liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback",
									"amount1": "The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"
								}
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback",
								"params": {
									"amountSpecified": "The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address to receive the output of the swap",
									"sqrtPriceLimitX96": "The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap",
									"zeroForOne": "The direction of the swap, true for token0 to token1, false for token1 to token0"
								},
								"returns": {
									"amount0": "The delta of the balance of token0 of the pool, exact when negative, minimum when positive",
									"amount1": "The delta of the balance of token1 of the pool, exact when negative, minimum when positive"
								}
							}
						},
						"title": "Permissionless pool actions",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"burn(int24,int24,uint128)": "a34123a7",
							"collect(address,int24,int24,uint128,uint128)": "4f1eb3d8",
							"flash(address,uint256,uint256,bytes)": "490e6cbc",
							"increaseObservationCardinalityNext(uint16)": "32148f67",
							"initialize(uint160)": "f637731d",
							"mint(address,int24,int24,uint128,bytes)": "3c8a7d8d",
							"swap(address,bool,int256,uint160,bytes)": "128acb08"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"}],\"name\":\"increaseObservationCardinalityNext\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"burn(int24,int24,uint128)\":{\"details\":\"Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect\",\"params\":{\"amount\":\"How much liquidity to burn\",\"tickLower\":\"The lower tick of the position for which to burn liquidity\",\"tickUpper\":\"The upper tick of the position for which to burn liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 sent to the recipient\",\"amount1\":\"The amount of token1 sent to the recipient\"}},\"collect(address,int24,int24,uint128,uint128)\":{\"details\":\"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\",\"params\":{\"amount0Requested\":\"How much token0 should be withdrawn from the fees owed\",\"amount1Requested\":\"How much token1 should be withdrawn from the fees owed\",\"recipient\":\"The address which should receive the fees collected\",\"tickLower\":\"The lower tick of the position for which to collect fees\",\"tickUpper\":\"The upper tick of the position for which to collect fees\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"flash(address,uint256,uint256,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback\",\"params\":{\"amount0\":\"The amount of token0 to send\",\"amount1\":\"The amount of token1 to send\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address which will receive the token0 and token1 amounts\"}},\"increaseObservationCardinalityNext(uint16)\":{\"details\":\"This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.\",\"params\":{\"observationCardinalityNext\":\"The desired minimum number of observations for the pool to store\"}},\"initialize(uint160)\":{\"details\":\"Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\",\"params\":{\"sqrtPriceX96\":\"the initial sqrt price of the pool as a Q64.96\"}},\"mint(address,int24,int24,uint128,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.\",\"params\":{\"amount\":\"The amount of liquidity to mint\",\"data\":\"Any data that should be passed through to the callback\",\"recipient\":\"The address for which the liquidity will be created\",\"tickLower\":\"The lower tick of the position in which to add liquidity\",\"tickUpper\":\"The upper tick of the position in which to add liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\",\"amount1\":\"The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\"}},\"swap(address,bool,int256,uint160,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\",\"params\":{\"amountSpecified\":\"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address to receive the output of the swap\",\"sqrtPriceLimitX96\":\"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\",\"zeroForOne\":\"The direction of the swap, true for token0 to token1, false for token1 to token0\"},\"returns\":{\"amount0\":\"The delta of the balance of token0 of the pool, exact when negative, minimum when positive\",\"amount1\":\"The delta of the balance of token1 of the pool, exact when negative, minimum when positive\"}}},\"title\":\"Permissionless pool actions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burn(int24,int24,uint128)\":{\"notice\":\"Burn liquidity from the sender and account tokens owed for the liquidity to the position\"},\"collect(address,int24,int24,uint128,uint128)\":{\"notice\":\"Collects tokens owed to a position\"},\"flash(address,uint256,uint256,bytes)\":{\"notice\":\"Receive token0 and/or token1 and pay it back, plus a fee, in the callback\"},\"increaseObservationCardinalityNext(uint16)\":{\"notice\":\"Increase the maximum number of price and liquidity observations that this pool will store\"},\"initialize(uint160)\":{\"notice\":\"Sets the initial price for the pool\"},\"mint(address,int24,int24,uint128,bytes)\":{\"notice\":\"Adds liquidity for the given recipient/tickLower/tickUpper position\"},\"swap(address,bool,int256,uint160,bytes)\":{\"notice\":\"Swap token0 for token1, or token1 for token0\"}},\"notice\":\"Contains pool methods that can be called by anyone\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":\"IUniswapV3PoolActions\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"burn(int24,int24,uint128)": {
								"notice": "Burn liquidity from the sender and account tokens owed for the liquidity to the position"
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"notice": "Collects tokens owed to a position"
							},
							"flash(address,uint256,uint256,bytes)": {
								"notice": "Receive token0 and/or token1 and pay it back, plus a fee, in the callback"
							},
							"increaseObservationCardinalityNext(uint16)": {
								"notice": "Increase the maximum number of price and liquidity observations that this pool will store"
							},
							"initialize(uint160)": {
								"notice": "Sets the initial price for the pool"
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"notice": "Adds liquidity for the given recipient/tickLower/tickUpper position"
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"notice": "Swap token0 for token1, or token1 for token0"
							}
						},
						"notice": "Contains pool methods that can be called by anyone",
						"version": 1
					}
				}
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
				"IUniswapV3PoolDerivedState": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint32[]",
									"name": "secondsAgos",
									"type": "uint32[]"
								}
							],
							"name": "observe",
							"outputs": [
								{
									"internalType": "int56[]",
									"name": "tickCumulatives",
									"type": "int56[]"
								},
								{
									"internalType": "uint160[]",
									"name": "secondsPerLiquidityCumulativeX128s",
									"type": "uint160[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								}
							],
							"name": "snapshotCumulativesInside",
							"outputs": [
								{
									"internalType": "int56",
									"name": "tickCumulativeInside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityInsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsInside",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"observe(uint32[])": {
								"details": "To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.",
								"params": {
									"secondsAgos": "From how long ago each cumulative tick and liquidity value should be returned"
								},
								"returns": {
									"secondsPerLiquidityCumulativeX128s": "Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp",
									"tickCumulatives": "Cumulative tick values as of each `secondsAgos` from the current block timestamp"
								}
							},
							"snapshotCumulativesInside(int24,int24)": {
								"details": "Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.",
								"params": {
									"tickLower": "The lower tick of the range",
									"tickUpper": "The upper tick of the range"
								},
								"returns": {
									"secondsInside": "The snapshot of seconds per liquidity for the range",
									"secondsPerLiquidityInsideX128": "The snapshot of seconds per liquidity for the range",
									"tickCumulativeInside": "The snapshot of the tick accumulator for the range"
								}
							}
						},
						"title": "Pool state that is not stored",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"observe(uint32[])": "883bdbfd",
							"snapshotCumulativesInside(int24,int24)": "a38807f2"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint32[]\",\"name\":\"secondsAgos\",\"type\":\"uint32[]\"}],\"name\":\"observe\",\"outputs\":[{\"internalType\":\"int56[]\",\"name\":\"tickCumulatives\",\"type\":\"int56[]\"},{\"internalType\":\"uint160[]\",\"name\":\"secondsPerLiquidityCumulativeX128s\",\"type\":\"uint160[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"snapshotCumulativesInside\",\"outputs\":[{\"internalType\":\"int56\",\"name\":\"tickCumulativeInside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityInsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsInside\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"observe(uint32[])\":{\"details\":\"To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\",\"params\":{\"secondsAgos\":\"From how long ago each cumulative tick and liquidity value should be returned\"},\"returns\":{\"secondsPerLiquidityCumulativeX128s\":\"Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp\",\"tickCumulatives\":\"Cumulative tick values as of each `secondsAgos` from the current block timestamp\"}},\"snapshotCumulativesInside(int24,int24)\":{\"details\":\"Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.\",\"params\":{\"tickLower\":\"The lower tick of the range\",\"tickUpper\":\"The upper tick of the range\"},\"returns\":{\"secondsInside\":\"The snapshot of seconds per liquidity for the range\",\"secondsPerLiquidityInsideX128\":\"The snapshot of seconds per liquidity for the range\",\"tickCumulativeInside\":\"The snapshot of the tick accumulator for the range\"}}},\"title\":\"Pool state that is not stored\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"observe(uint32[])\":{\"notice\":\"Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\"},\"snapshotCumulativesInside(int24,int24)\":{\"notice\":\"Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\"}},\"notice\":\"Contains view functions to provide information about the pool that is computed rather than stored on the blockchain. The functions here may have variable gas costs.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":\"IUniswapV3PoolDerivedState\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"observe(uint32[])": {
								"notice": "Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp"
							},
							"snapshotCumulativesInside(int24,int24)": {
								"notice": "Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range"
							}
						},
						"notice": "Contains view functions to provide information about the pool that is computed rather than stored on the blockchain. The functions here may have variable gas costs.",
						"version": 1
					}
				}
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
				"IUniswapV3PoolEvents": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "Collect",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "CollectProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid1",
									"type": "uint256"
								}
							],
							"name": "Flash",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextOld",
									"type": "uint16"
								},
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextNew",
									"type": "uint16"
								}
							],
							"name": "IncreaseObservationCardinalityNext",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Initialize",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0New",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1New",
									"type": "uint8"
								}
							],
							"name": "SetFeeProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Swap",
							"type": "event"
						}
					],
					"devdoc": {
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"details": "Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect",
								"params": {
									"amount": "The amount of liquidity to remove",
									"amount0": "The amount of token0 withdrawn",
									"amount1": "The amount of token1 withdrawn",
									"owner": "The owner of the position for which liquidity is removed",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"details": "Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees",
								"params": {
									"amount0": "The amount of token0 fees collected",
									"amount1": "The amount of token1 fees collected",
									"owner": "The owner of the position for which fees are collected",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"params": {
									"amount0": "The amount of token1 protocol fees that is withdrawn",
									"recipient": "The address that receives the collected protocol fees",
									"sender": "The address that collects the protocol fees"
								}
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"params": {
									"amount0": "The amount of token0 that was flashed",
									"amount1": "The amount of token1 that was flashed",
									"paid0": "The amount of token0 paid for the flash, which can exceed the amount0 plus the fee",
									"paid1": "The amount of token1 paid for the flash, which can exceed the amount1 plus the fee",
									"recipient": "The address that received the tokens from flash",
									"sender": "The address that initiated the swap call, and that received the callback"
								}
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"details": "observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.",
								"params": {
									"observationCardinalityNextNew": "The updated value of the next observation cardinality",
									"observationCardinalityNextOld": "The previous value of the next observation cardinality"
								}
							},
							"Initialize(uint160,int24)": {
								"details": "Mint/Burn/Swap cannot be emitted by the pool before Initialize",
								"params": {
									"sqrtPriceX96": "The initial sqrt price of the pool, as a Q64.96",
									"tick": "The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool"
								}
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"params": {
									"amount": "The amount of liquidity minted to the position range",
									"amount0": "How much token0 was required for the minted liquidity",
									"amount1": "How much token1 was required for the minted liquidity",
									"owner": "The owner of the position and recipient of any minted liquidity",
									"sender": "The address that minted the liquidity",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"params": {
									"feeProtocol0New": "The updated value of the token0 protocol fee",
									"feeProtocol0Old": "The previous value of the token0 protocol fee",
									"feeProtocol1New": "The updated value of the token1 protocol fee",
									"feeProtocol1Old": "The previous value of the token1 protocol fee"
								}
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"params": {
									"amount0": "The delta of the token0 balance of the pool",
									"amount1": "The delta of the token1 balance of the pool",
									"liquidity": "The liquidity of the pool after the swap",
									"recipient": "The address that received the output of the swap",
									"sender": "The address that initiated the swap call, and that received the callback",
									"sqrtPriceX96": "The sqrt(price) of the pool after the swap, as a Q64.96",
									"tick": "The log base 1.0001 of price of the pool after the swap"
								}
							}
						},
						"kind": "dev",
						"methods": {},
						"title": "Events emitted by a pool",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"CollectProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid1\",\"type\":\"uint256\"}],\"name\":\"Flash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextOld\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextNew\",\"type\":\"uint16\"}],\"name\":\"IncreaseObservationCardinalityNext\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0New\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1New\",\"type\":\"uint8\"}],\"name\":\"SetFeeProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Swap\",\"type\":\"event\"}],\"devdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"details\":\"Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\",\"params\":{\"amount\":\"The amount of liquidity to remove\",\"amount0\":\"The amount of token0 withdrawn\",\"amount1\":\"The amount of token1 withdrawn\",\"owner\":\"The owner of the position for which liquidity is removed\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"details\":\"Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\",\"params\":{\"amount0\":\"The amount of token0 fees collected\",\"amount1\":\"The amount of token1 fees collected\",\"owner\":\"The owner of the position for which fees are collected\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"CollectProtocol(address,address,uint128,uint128)\":{\"params\":{\"amount0\":\"The amount of token1 protocol fees that is withdrawn\",\"recipient\":\"The address that receives the collected protocol fees\",\"sender\":\"The address that collects the protocol fees\"}},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"params\":{\"amount0\":\"The amount of token0 that was flashed\",\"amount1\":\"The amount of token1 that was flashed\",\"paid0\":\"The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\",\"paid1\":\"The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\",\"recipient\":\"The address that received the tokens from flash\",\"sender\":\"The address that initiated the swap call, and that received the callback\"}},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"details\":\"observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.\",\"params\":{\"observationCardinalityNextNew\":\"The updated value of the next observation cardinality\",\"observationCardinalityNextOld\":\"The previous value of the next observation cardinality\"}},\"Initialize(uint160,int24)\":{\"details\":\"Mint/Burn/Swap cannot be emitted by the pool before Initialize\",\"params\":{\"sqrtPriceX96\":\"The initial sqrt price of the pool, as a Q64.96\",\"tick\":\"The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\"}},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of liquidity minted to the position range\",\"amount0\":\"How much token0 was required for the minted liquidity\",\"amount1\":\"How much token1 was required for the minted liquidity\",\"owner\":\"The owner of the position and recipient of any minted liquidity\",\"sender\":\"The address that minted the liquidity\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"params\":{\"feeProtocol0New\":\"The updated value of the token0 protocol fee\",\"feeProtocol0Old\":\"The previous value of the token0 protocol fee\",\"feeProtocol1New\":\"The updated value of the token1 protocol fee\",\"feeProtocol1Old\":\"The previous value of the token1 protocol fee\"}},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"params\":{\"amount0\":\"The delta of the token0 balance of the pool\",\"amount1\":\"The delta of the token1 balance of the pool\",\"liquidity\":\"The liquidity of the pool after the swap\",\"recipient\":\"The address that received the output of the swap\",\"sender\":\"The address that initiated the swap call, and that received the callback\",\"sqrtPriceX96\":\"The sqrt(price) of the pool after the swap, as a Q64.96\",\"tick\":\"The log base 1.0001 of price of the pool after the swap\"}}},\"kind\":\"dev\",\"methods\":{},\"title\":\"Events emitted by a pool\",\"version\":1},\"userdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when a position's liquidity is removed\"},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"notice\":\"Emitted when fees are collected by the owner of a position\"},\"CollectProtocol(address,address,uint128,uint128)\":{\"notice\":\"Emitted when the collected protocol fees are withdrawn by the factory owner\"},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted by the pool for any flashes of token0/token1\"},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"notice\":\"Emitted by the pool for increases to the number of observations that can be stored\"},\"Initialize(uint160,int24)\":{\"notice\":\"Emitted exactly once by a pool when #initialize is first called on the pool\"},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is minted for a given position\"},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"notice\":\"Emitted when the protocol fee is changed by the pool\"},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"notice\":\"Emitted by the pool for any swaps between token0 and token1\"}},\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains all events emitted by the pool\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":\"IUniswapV3PoolEvents\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when a position's liquidity is removed"
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"notice": "Emitted when fees are collected by the owner of a position"
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"notice": "Emitted when the collected protocol fees are withdrawn by the factory owner"
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"notice": "Emitted by the pool for any flashes of token0/token1"
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"notice": "Emitted by the pool for increases to the number of observations that can be stored"
							},
							"Initialize(uint160,int24)": {
								"notice": "Emitted exactly once by a pool when #initialize is first called on the pool"
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when liquidity is minted for a given position"
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"notice": "Emitted when the protocol fee is changed by the pool"
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"notice": "Emitted by the pool for any swaps between token0 and token1"
							}
						},
						"kind": "user",
						"methods": {},
						"notice": "Contains all events emitted by the pool",
						"version": 1
					}
				}
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
				"IUniswapV3PoolImmutables": {
					"abi": [
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fee",
							"outputs": [
								{
									"internalType": "uint24",
									"name": "",
									"type": "uint24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxLiquidityPerTick",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tickSpacing",
							"outputs": [
								{
									"internalType": "int24",
									"name": "",
									"type": "int24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"factory()": {
								"returns": {
									"_0": "The contract address"
								}
							},
							"fee()": {
								"returns": {
									"_0": "The fee"
								}
							},
							"maxLiquidityPerTick()": {
								"details": "This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool",
								"returns": {
									"_0": "The max amount of liquidity per tick"
								}
							},
							"tickSpacing()": {
								"details": "Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.",
								"returns": {
									"_0": "The tick spacing"
								}
							},
							"token0()": {
								"returns": {
									"_0": "The token contract address"
								}
							},
							"token1()": {
								"returns": {
									"_0": "The token contract address"
								}
							}
						},
						"title": "Pool state that never changes",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"factory()": "c45a0155",
							"fee()": "ddca3f43",
							"maxLiquidityPerTick()": "70cf754a",
							"tickSpacing()": "d0c93a7c",
							"token0()": "0dfe1681",
							"token1()": "d21220a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLiquidityPerTick\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"factory()\":{\"returns\":{\"_0\":\"The contract address\"}},\"fee()\":{\"returns\":{\"_0\":\"The fee\"}},\"maxLiquidityPerTick()\":{\"details\":\"This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\",\"returns\":{\"_0\":\"The max amount of liquidity per tick\"}},\"tickSpacing()\":{\"details\":\"Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.\",\"returns\":{\"_0\":\"The tick spacing\"}},\"token0()\":{\"returns\":{\"_0\":\"The token contract address\"}},\"token1()\":{\"returns\":{\"_0\":\"The token contract address\"}}},\"title\":\"Pool state that never changes\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"factory()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"},\"fee()\":{\"notice\":\"The pool's fee in hundredths of a bip, i.e. 1e-6\"},\"maxLiquidityPerTick()\":{\"notice\":\"The maximum amount of position liquidity that can use any tick in the range\"},\"tickSpacing()\":{\"notice\":\"The pool tick spacing\"},\"token0()\":{\"notice\":\"The first of the two tokens of the pool, sorted by address\"},\"token1()\":{\"notice\":\"The second of the two tokens of the pool, sorted by address\"}},\"notice\":\"These parameters are fixed for a pool forever, i.e., the methods will always return the same values\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":\"IUniswapV3PoolImmutables\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"factory()": {
								"notice": "The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface"
							},
							"fee()": {
								"notice": "The pool's fee in hundredths of a bip, i.e. 1e-6"
							},
							"maxLiquidityPerTick()": {
								"notice": "The maximum amount of position liquidity that can use any tick in the range"
							},
							"tickSpacing()": {
								"notice": "The pool tick spacing"
							},
							"token0()": {
								"notice": "The first of the two tokens of the pool, sorted by address"
							},
							"token1()": {
								"notice": "The second of the two tokens of the pool, sorted by address"
							}
						},
						"notice": "These parameters are fixed for a pool forever, i.e., the methods will always return the same values",
						"version": 1
					}
				}
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
				"IUniswapV3PoolOwnerActions": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collectProtocol",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "feeProtocol0",
									"type": "uint8"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol1",
									"type": "uint8"
								}
							],
							"name": "setFeeProtocol",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"collectProtocol(address,uint128,uint128)": {
								"params": {
									"amount0Requested": "The maximum amount of token0 to send, can be 0 to collect fees in only token1",
									"amount1Requested": "The maximum amount of token1 to send, can be 0 to collect fees in only token0",
									"recipient": "The address to which collected protocol fees should be sent"
								},
								"returns": {
									"amount0": "The protocol fee collected in token0",
									"amount1": "The protocol fee collected in token1"
								}
							},
							"setFeeProtocol(uint8,uint8)": {
								"params": {
									"feeProtocol0": "new protocol fee for token0 of the pool",
									"feeProtocol1": "new protocol fee for token1 of the pool"
								}
							}
						},
						"title": "Permissioned pool actions",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"collectProtocol(address,uint128,uint128)": "85b66729",
							"setFeeProtocol(uint8,uint8)": "8206a4d1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collectProtocol\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"feeProtocol0\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol1\",\"type\":\"uint8\"}],\"name\":\"setFeeProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"collectProtocol(address,uint128,uint128)\":{\"params\":{\"amount0Requested\":\"The maximum amount of token0 to send, can be 0 to collect fees in only token1\",\"amount1Requested\":\"The maximum amount of token1 to send, can be 0 to collect fees in only token0\",\"recipient\":\"The address to which collected protocol fees should be sent\"},\"returns\":{\"amount0\":\"The protocol fee collected in token0\",\"amount1\":\"The protocol fee collected in token1\"}},\"setFeeProtocol(uint8,uint8)\":{\"params\":{\"feeProtocol0\":\"new protocol fee for token0 of the pool\",\"feeProtocol1\":\"new protocol fee for token1 of the pool\"}}},\"title\":\"Permissioned pool actions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"collectProtocol(address,uint128,uint128)\":{\"notice\":\"Collect the protocol fee accrued to the pool\"},\"setFeeProtocol(uint8,uint8)\":{\"notice\":\"Set the denominator of the protocol's % share of the fees\"}},\"notice\":\"Contains pool methods that may only be called by the factory owner\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":\"IUniswapV3PoolOwnerActions\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"collectProtocol(address,uint128,uint128)": {
								"notice": "Collect the protocol fee accrued to the pool"
							},
							"setFeeProtocol(uint8,uint8)": {
								"notice": "Set the denominator of the protocol's % share of the fees"
							}
						},
						"notice": "Contains pool methods that may only be called by the factory owner",
						"version": 1
					}
				}
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
				"IUniswapV3PoolState": {
					"abi": [
						{
							"inputs": [],
							"name": "feeGrowthGlobal0X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeGrowthGlobal1X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidity",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "observations",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "blockTimestamp",
									"type": "uint32"
								},
								{
									"internalType": "int56",
									"name": "tickCumulative",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityCumulativeX128",
									"type": "uint160"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								}
							],
							"name": "positions",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "_liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside0LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside1LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "protocolFees",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "token0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "token1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "slot0",
							"outputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								},
								{
									"internalType": "uint16",
									"name": "observationIndex",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinality",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol",
									"type": "uint8"
								},
								{
									"internalType": "bool",
									"name": "unlocked",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int16",
									"name": "wordPosition",
									"type": "int16"
								}
							],
							"name": "tickBitmap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "ticks",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "liquidityGross",
									"type": "uint128"
								},
								{
									"internalType": "int128",
									"name": "liquidityNet",
									"type": "int128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside0X128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside1X128",
									"type": "uint256"
								},
								{
									"internalType": "int56",
									"name": "tickCumulativeOutside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityOutsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsOutside",
									"type": "uint32"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"feeGrowthGlobal0X128()": {
								"details": "This value can overflow the uint256"
							},
							"feeGrowthGlobal1X128()": {
								"details": "This value can overflow the uint256"
							},
							"liquidity()": {
								"details": "This value has no relationship to the total liquidity across all ticks"
							},
							"observations(uint256)": {
								"details": "You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.",
								"params": {
									"index": "The element of the observations array to fetch"
								},
								"returns": {
									"blockTimestamp": "The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use"
								}
							},
							"positions(bytes32)": {
								"params": {
									"key": "The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper"
								},
								"returns": {
									"_liquidity": "The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"
								}
							},
							"protocolFees()": {
								"details": "Protocol fees will never exceed uint128 max in either token"
							},
							"slot0()": {
								"returns": {
									"sqrtPriceX96": "The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy"
								}
							},
							"ticks(int24)": {
								"params": {
									"tick": "The tick to look up"
								},
								"returns": {
									"liquidityGross": "the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position."
								}
							}
						},
						"title": "Pool state that can change",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"feeGrowthGlobal0X128()": "f3058399",
							"feeGrowthGlobal1X128()": "46141319",
							"liquidity()": "1a686502",
							"observations(uint256)": "252c09d7",
							"positions(bytes32)": "514ea4bf",
							"protocolFees()": "1ad8b03b",
							"slot0()": "3850c7bd",
							"tickBitmap(int16)": "5339c296",
							"ticks(int24)": "f30dba93"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"feeGrowthGlobal0X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal1X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"observations\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"blockTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"int56\",\"name\":\"tickCumulative\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityCumulativeX128\",\"type\":\"uint160\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"_liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"token0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"token1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slot0\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"observationIndex\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinality\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int16\",\"name\":\"wordPosition\",\"type\":\"int16\"}],\"name\":\"tickBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"ticks\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidityGross\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"liquidityNet\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside0X128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside1X128\",\"type\":\"uint256\"},{\"internalType\":\"int56\",\"name\":\"tickCumulativeOutside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityOutsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsOutside\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"feeGrowthGlobal0X128()\":{\"details\":\"This value can overflow the uint256\"},\"feeGrowthGlobal1X128()\":{\"details\":\"This value can overflow the uint256\"},\"liquidity()\":{\"details\":\"This value has no relationship to the total liquidity across all ticks\"},\"observations(uint256)\":{\"details\":\"You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.\",\"params\":{\"index\":\"The element of the observations array to fetch\"},\"returns\":{\"blockTimestamp\":\"The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use\"}},\"positions(bytes32)\":{\"params\":{\"key\":\"The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\"},\"returns\":{\"_liquidity\":\"The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\"}},\"protocolFees()\":{\"details\":\"Protocol fees will never exceed uint128 max in either token\"},\"slot0()\":{\"returns\":{\"sqrtPriceX96\":\"The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy\"}},\"ticks(int24)\":{\"params\":{\"tick\":\"The tick to look up\"},\"returns\":{\"liquidityGross\":\"the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position.\"}}},\"title\":\"Pool state that can change\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"feeGrowthGlobal0X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\"},\"feeGrowthGlobal1X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\"},\"liquidity()\":{\"notice\":\"The currently in range liquidity available to the pool\"},\"observations(uint256)\":{\"notice\":\"Returns data about a specific observation index\"},\"positions(bytes32)\":{\"notice\":\"Returns the information about a position by the position's key\"},\"protocolFees()\":{\"notice\":\"The amounts of token0 and token1 that are owed to the protocol\"},\"slot0()\":{\"notice\":\"The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally.\"},\"tickBitmap(int16)\":{\"notice\":\"Returns 256 packed tick initialized boolean values. See TickBitmap for more information\"},\"ticks(int24)\":{\"notice\":\"Look up information about a specific tick in the pool\"}},\"notice\":\"These methods compose the pool's state, and can change with any frequency including multiple times per transaction\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolState.sol\":\"IUniswapV3PoolState\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"feeGrowthGlobal0X128()": {
								"notice": "The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool"
							},
							"feeGrowthGlobal1X128()": {
								"notice": "The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool"
							},
							"liquidity()": {
								"notice": "The currently in range liquidity available to the pool"
							},
							"observations(uint256)": {
								"notice": "Returns data about a specific observation index"
							},
							"positions(bytes32)": {
								"notice": "Returns the information about a position by the position's key"
							},
							"protocolFees()": {
								"notice": "The amounts of token0 and token1 that are owed to the protocol"
							},
							"slot0()": {
								"notice": "The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally."
							},
							"tickBitmap(int16)": {
								"notice": "Returns 256 packed tick initialized boolean values. See TickBitmap for more information"
							},
							"ticks(int24)": {
								"notice": "Look up information about a specific tick in the pool"
							}
						},
						"notice": "These methods compose the pool's state, and can change with any frequency including multiple times per transaction",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/MainBot.sol": {
				"ast": {
					"absolutePath": "contracts/MainBot.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							1450
						],
						"DataTypes": [
							874
						],
						"IERC165": [
							1637
						],
						"IERC20": [
							35
						],
						"IERC721": [
							1567
						],
						"IERC721Enumerable": [
							1598
						],
						"IERC721Metadata": [
							1625
						],
						"IERC721Permit": [
							1672
						],
						"ILendingPool": [
							1253
						],
						"ILendingPoolAddressesProvider": [
							1404
						],
						"INonfungiblePositionManager": [
							1870
						],
						"IPeripheryImmutableState": [
							1886
						],
						"IPeripheryPayments": [
							1912
						],
						"IPoolInitializer": [
							1931
						],
						"ISwapRouter": [
							2031
						],
						"IUniswapV3Pool": [
							2053
						],
						"IUniswapV3PoolActions": [
							2163
						],
						"IUniswapV3PoolDerivedState": [
							2194
						],
						"IUniswapV3PoolEvents": [
							2313
						],
						"IUniswapV3PoolImmutables": [
							2353
						],
						"IUniswapV3PoolOwnerActions": [
							2379
						],
						"IUniswapV3PoolState": [
							2487
						],
						"IUniswapV3SwapCallback": [
							2067
						],
						"MainBot": [
							823
						]
					},
					"id": 824,
					"license": "MITs",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:0"
						},
						{
							"absolutePath": "contracts/chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol",
							"file": "./chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 824,
							"sourceUnit": 1451,
							"src": "59:84:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
							"file": "./uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 824,
							"sourceUnit": 2032,
							"src": "144:69:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/uniswap/v3-periphery/contracts/interfaces/IUniswapV3Pool.sol",
							"file": "./uniswap/v3-periphery/contracts/interfaces/IUniswapV3Pool.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 824,
							"sourceUnit": 2054,
							"src": "214:72:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol",
							"file": "./uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 824,
							"sourceUnit": 1887,
							"src": "287:82:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol",
							"file": "./uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol",
							"id": 6,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 824,
							"sourceUnit": 1913,
							"src": "370:76:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol",
							"file": "./uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 824,
							"sourceUnit": 1871,
							"src": "447:85:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/aave/protocol-v2/contracts/interfaces/ILendingPool.sol",
							"file": "./aave/protocol-v2/contracts/interfaces/ILendingPool.sol",
							"id": 8,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 824,
							"sourceUnit": 1254,
							"src": "533:66:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/aave/protocol-v2/contracts/interfaces/ILendingPoolAddressesProvider.sol",
							"file": "./aave/protocol-v2/contracts/interfaces/ILendingPoolAddressesProvider.sol",
							"id": 9,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 824,
							"sourceUnit": 1405,
							"src": "600:83:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 35,
							"linearizedBaseContracts": [
								35
							],
							"name": "IERC20",
							"nameLocation": "698:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "a9059cbb",
									"id": 18,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "720:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "737:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "729:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "729:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "756:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "748:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 12,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "748:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "728:35:0"
									},
									"returnParameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "782:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 15,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "782:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "781:6:0"
									},
									"scope": 35,
									"src": "711:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 25,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "802:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "820:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "812:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "812:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "811:17:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "852:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 22,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "852:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "851:9:0"
									},
									"scope": 35,
									"src": "793:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "095ea7b3",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "875:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "891:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "883:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "883:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "908:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "900:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 28,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "882:33:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "934:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 31,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "934:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "933:6:0"
									},
									"scope": 35,
									"src": "866:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 824,
							"src": "688:254:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MainBot",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 823,
							"linearizedBaseContracts": [
								823
							],
							"name": "MainBot",
							"nameLocation": "953:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 37,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "982:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 823,
									"src": "967:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 36,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "967:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4ada218b",
									"id": 39,
									"mutability": "mutable",
									"name": "tradingEnabled",
									"nameLocation": "1006:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 823,
									"src": "994:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 38,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "994:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e037f889",
									"id": 41,
									"mutability": "mutable",
									"name": "initialDeposit",
									"nameLocation": "1041:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 823,
									"src": "1026:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 40,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1026:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1458d9d8",
									"id": 43,
									"mutability": "mutable",
									"name": "maticBalance",
									"nameLocation": "1076:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 823,
									"src": "1061:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 42,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1061:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "64aabb9e",
									"id": 45,
									"mutability": "mutable",
									"name": "stablecoinBalance",
									"nameLocation": "1109:17:0",
									"nodeType": "VariableDeclaration",
									"scope": 823,
									"src": "1094:32:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 44,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1094:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f974821a",
									"id": 47,
									"mutability": "mutable",
									"name": "profitThreshold",
									"nameLocation": "1147:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 823,
									"src": "1132:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 46,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1132:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c0fc247f",
									"id": 49,
									"mutability": "mutable",
									"name": "lossThreshold",
									"nameLocation": "1183:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 823,
									"src": "1168:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 48,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1168:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a30fb905",
									"id": 52,
									"mutability": "mutable",
									"name": "gasCostMultiplier",
									"nameLocation": "1217:17:0",
									"nodeType": "VariableDeclaration",
									"scope": 823,
									"src": "1202:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 50,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1202:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "33",
										"id": 51,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1237:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3_by_1",
											"typeString": "int_const 3"
										},
										"value": "3"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b3ce56a2",
									"id": 55,
									"mutability": "mutable",
									"name": "trailingStopLoss",
									"nameLocation": "1259:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 823,
									"src": "1244:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 53,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1244:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130",
										"id": 54,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1278:2:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10_by_1",
											"typeString": "int_const 10"
										},
										"value": "10"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1bf41362",
									"id": 57,
									"mutability": "mutable",
									"name": "nextLogTime",
									"nameLocation": "1301:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 823,
									"src": "1286:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 56,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1286:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6d546cdd",
									"id": 60,
									"mutability": "mutable",
									"name": "currentActivity",
									"nameLocation": "1332:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 823,
									"src": "1318:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 58,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1318:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "496e697469616c697a696e67",
										"id": 59,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1350:14:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_9536fd274b1da513899715f101ac7dd4165956a4323c575571d0d2c5d0ec45f9",
											"typeString": "literal_string \"Initializing\""
										},
										"value": "Initializing"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f1a107fe",
									"id": 63,
									"mutability": "mutable",
									"name": "POLToken",
									"nameLocation": "1386:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 823,
									"src": "1371:68:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 61,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1371:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307832324232314265644465663734464536324630333144326335633846376139463861346233303444",
										"id": 62,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1397:42:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x22B21BedDef74FE62F031D2c5c8F7a9F8a4b304D"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a98ad46c",
									"id": 66,
									"mutability": "mutable",
									"name": "usdtToken",
									"nameLocation": "1497:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 823,
									"src": "1482:69:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 64,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1482:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307831453461353936336142464439373564386339303231636534383062343231383838343944343164",
										"id": 65,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1509:42:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x1E4a5963aBFD975d8c9021ce480b42188849D41d"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "11eac855",
									"id": 69,
									"mutability": "mutable",
									"name": "usdcToken",
									"nameLocation": "1591:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 823,
									"src": "1576:69:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 67,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1576:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307841384345386165653231624332413438613545463637306166436339323734433762626243303335",
										"id": 68,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1603:42:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xA8CE8aee21bC2A48a5EF670afCc9274C7bbbC035"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e189eb42",
									"id": 72,
									"mutability": "mutable",
									"name": "quickSwapRouter",
									"nameLocation": "1685:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 823,
									"src": "1670:75:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 70,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1670:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307831453745346338353535323062323130363332303935324135373061336535453345363138313031",
										"id": 71,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1703:42:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x1E7E4c855520b2106320952A570a3e5E3E618101"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e0abca0b",
									"id": 75,
									"mutability": "mutable",
									"name": "priceFeedAddress",
									"nameLocation": "1786:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 823,
									"src": "1771:76:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 73,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1771:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307835453938386331316134663932313535433330443966623639456437353539376637313242313133",
										"id": 74,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1805:42:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x5E988c11a4f92155C30D9fb69Ed75597f712B113"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "735de9f7",
									"id": 78,
									"mutability": "mutable",
									"name": "uniswapRouter",
									"nameLocation": "1892:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 823,
									"src": "1877:73:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 76,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1877:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307831453745346338353535323062323130363332303935324135373061336535453345363138313031",
										"id": 77,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1908:42:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x1E7E4c855520b2106320952A570a3e5E3E618101"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e5047b30",
									"id": 81,
									"mutability": "mutable",
									"name": "uniswapPositionManager",
									"nameLocation": "1996:22:0",
									"nodeType": "VariableDeclaration",
									"scope": 823,
									"src": "1981:82:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 79,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1981:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307843333634343262346134353232453837313339394344373137614244443834374162313146453838",
										"id": 80,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2021:42:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xC36442b4a4522E871399CD717aBDD847Ab11FE88"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "238f9b7a",
									"id": 84,
									"mutability": "mutable",
									"name": "aaveLendingPoolAddressesProvider",
									"nameLocation": "2114:32:0",
									"nodeType": "VariableDeclaration",
									"scope": 823,
									"src": "2099:92:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 82,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2099:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307864303565334537313564393435423539323930646630616538654638356331426442363834373434",
										"id": 83,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2149:42:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xd05e3E715d945B59290df0ae8eF85c1BdB684744"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5e7ffa67",
									"id": 88,
									"mutability": "mutable",
									"name": "dexRouters",
									"nameLocation": "2269:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 823,
									"src": "2235:44:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
										"typeString": "mapping(string => address)"
									},
									"typeName": {
										"id": 87,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 85,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "2243:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										},
										"nodeType": "Mapping",
										"src": "2235:26:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
											"typeString": "mapping(string => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 86,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2253:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "030fdcd4f0c28c5dbcbc3f59aa8e2260c7f58ac45be2a2dca652999af89c33e0",
									"id": 100,
									"name": "TradeExecuted",
									"nameLocation": "2292:13:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 90,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2322:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "2306:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 89,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2306:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 92,
												"indexed": false,
												"mutability": "mutable",
												"name": "tradeType",
												"nameLocation": "2335:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "2328:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 91,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2328:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 94,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2351:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "2346:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 93,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2346:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 96,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "2366:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "2361:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 95,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2361:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "2382:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "2377:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 97,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2305:83:0"
									},
									"src": "2286:103:0"
								},
								{
									"anonymous": false,
									"eventSelector": "84f286df5a264707bc5e32ccd269f47ddd90c52ff6d1753459246a4dded9b9e5",
									"id": 106,
									"name": "StopLossTriggered",
									"nameLocation": "2400:17:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"indexed": false,
												"mutability": "mutable",
												"name": "currentBalance",
												"nameLocation": "2423:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "2418:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 101,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2418:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 104,
												"indexed": false,
												"mutability": "mutable",
												"name": "threshold",
												"nameLocation": "2444:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "2439:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 103,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2439:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2417:37:0"
									},
									"src": "2394:61:0"
								},
								{
									"anonymous": false,
									"eventSelector": "6e001753e59c246317b708b3090a58d44776f3b9e74dcd996149a49758f4d487",
									"id": 110,
									"name": "CurrentActivity",
									"nameLocation": "2466:15:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 108,
												"indexed": false,
												"mutability": "mutable",
												"name": "activity",
												"nameLocation": "2489:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "2482:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 107,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2482:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2481:17:0"
									},
									"src": "2460:39:0"
								},
								{
									"anonymous": false,
									"eventSelector": "e75028ff36bb6473da3731a30e1aeeae9988e2415dba2c4e91e0357955065fba",
									"id": 114,
									"name": "TestEvent",
									"nameLocation": "2510:9:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"indexed": false,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "2527:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "2520:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 111,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2520:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2519:16:0"
									},
									"src": "2504:32:0"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2563:73:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 120,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 117,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2581:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 118,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2585:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2581:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 119,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 37,
																"src": "2595:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2581:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420746865206f776e6572",
															"id": 121,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2602:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5",
																"typeString": "literal_string \"Not the owner\""
															},
															"value": "Not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5",
																"typeString": "literal_string \"Not the owner\""
															}
														],
														"id": 116,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2573:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 123,
												"nodeType": "ExpressionStatement",
												"src": "2573:45:0"
											},
											{
												"id": 124,
												"nodeType": "PlaceholderStatement",
												"src": "2628:1:0"
											}
										]
									},
									"id": 126,
									"name": "onlyOwner",
									"nameLocation": "2551:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2560:2:0"
									},
									"src": "2542:94:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 134,
										"nodeType": "Block",
										"src": "2672:74:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 129,
															"name": "tradingEnabled",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 39,
															"src": "2690:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54726164696e672069732064697361626c6564",
															"id": 130,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2706:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_946a67ad1237df6dd5563413d72a6b321f0b7e3cee2668a783fe11689a85e004",
																"typeString": "literal_string \"Trading is disabled\""
															},
															"value": "Trading is disabled"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_946a67ad1237df6dd5563413d72a6b321f0b7e3cee2668a783fe11689a85e004",
																"typeString": "literal_string \"Trading is disabled\""
															}
														],
														"id": 128,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2682:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2682:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 132,
												"nodeType": "ExpressionStatement",
												"src": "2682:46:0"
											},
											{
												"id": 133,
												"nodeType": "PlaceholderStatement",
												"src": "2738:1:0"
											}
										]
									},
									"id": 135,
									"name": "whenTradingEnabled",
									"nameLocation": "2651:18:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2669:2:0"
									},
									"src": "2642:104:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 166,
										"nodeType": "Block",
										"src": "2766:256:0",
										"statements": [
											{
												"expression": {
													"id": 141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 138,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 37,
														"src": "2776:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 139,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2784:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 140,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2788:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2784:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2776:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 142,
												"nodeType": "ExpressionStatement",
												"src": "2776:18:0"
											},
											{
												"expression": {
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 143,
															"name": "dexRouters",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 88,
															"src": "2804:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
																"typeString": "mapping(string memory => address)"
															}
														},
														"id": 145,
														"indexExpression": {
															"hexValue": "517569636b53776170",
															"id": 144,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2815:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_594d562b07e5639baeda43f9427a7d73488025602cf4b19cc0e4cec02e1718f8",
																"typeString": "literal_string \"QuickSwap\""
															},
															"value": "QuickSwap"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2804:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 146,
														"name": "quickSwapRouter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 72,
														"src": "2830:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2804:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 148,
												"nodeType": "ExpressionStatement",
												"src": "2804:41:0"
											},
											{
												"expression": {
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 149,
														"name": "tradingEnabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 39,
														"src": "2855:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 150,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2872:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2855:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 152,
												"nodeType": "ExpressionStatement",
												"src": "2855:22:0"
											},
											{
												"expression": {
													"id": 155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 153,
														"name": "profitThreshold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 47,
														"src": "2887:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "313130",
														"id": 154,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2905:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_110_by_1",
															"typeString": "int_const 110"
														},
														"value": "110"
													},
													"src": "2887:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 156,
												"nodeType": "ExpressionStatement",
												"src": "2887:21:0"
											},
											{
												"expression": {
													"id": 159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 157,
														"name": "lossThreshold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 49,
														"src": "2932:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3835",
														"id": 158,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2948:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_85_by_1",
															"typeString": "int_const 85"
														},
														"value": "85"
													},
													"src": "2932:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 160,
												"nodeType": "ExpressionStatement",
												"src": "2932:18:0"
											},
											{
												"expression": {
													"id": 164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 161,
														"name": "nextLogTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 57,
														"src": "2986:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 162,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3000:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 163,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3006:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3000:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2986:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 165,
												"nodeType": "ExpressionStatement",
												"src": "2986:29:0"
											}
										]
									},
									"id": 167,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2763:2:0"
									},
									"returnParameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2766:0:0"
									},
									"scope": 823,
									"src": "2752:270:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 178,
										"nodeType": "Block",
										"src": "3090:35:0",
										"statements": [
											{
												"expression": {
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 174,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 37,
														"src": "3100:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 175,
														"name": "controller",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "3108:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3100:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 177,
												"nodeType": "ExpressionStatement",
												"src": "3100:18:0"
											}
										]
									},
									"functionSelector": "92eefe9b",
									"id": 179,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 172,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 171,
												"name": "onlyOwner",
												"nameLocations": [
													"3080:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 126,
												"src": "3080:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3080:9:0"
										}
									],
									"name": "setController",
									"nameLocation": "3037:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "controller",
												"nameLocation": "3059:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "3051:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3051:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:20:0"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3090:0:0"
									},
									"scope": 823,
									"src": "3028:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 207,
										"nodeType": "Block",
										"src": "3158:145:0",
										"statements": [
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 182,
														"name": "initialDeposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "3168:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"id": 183,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3186:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 184,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3190:5:0",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "3186:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3168:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "3168:27:0"
											},
											{
												"expression": {
													"id": 195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 187,
														"name": "maticBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 43,
														"src": "3205:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 194,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 191,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 188,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3222:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 189,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3226:5:0",
																		"memberName": "value",
																		"nodeType": "MemberAccess",
																		"src": "3222:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"hexValue": "3730",
																		"id": 190,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3234:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_70_by_1",
																			"typeString": "int_const 70"
																		},
																		"value": "70"
																	},
																	"src": "3222:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 192,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3221:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "313030",
															"id": 193,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3240:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														},
														"src": "3221:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3205:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 196,
												"nodeType": "ExpressionStatement",
												"src": "3205:38:0"
											},
											{
												"expression": {
													"id": 205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 197,
														"name": "stablecoinBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 45,
														"src": "3253:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 204,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 201,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 198,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3275:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 199,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3279:5:0",
																		"memberName": "value",
																		"nodeType": "MemberAccess",
																		"src": "3275:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"hexValue": "3330",
																		"id": 200,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3287:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_30_by_1",
																			"typeString": "int_const 30"
																		},
																		"value": "30"
																	},
																	"src": "3275:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 202,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3274:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "313030",
															"id": 203,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3293:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														},
														"src": "3274:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3253:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 206,
												"nodeType": "ExpressionStatement",
												"src": "3253:43:0"
											}
										]
									},
									"id": 208,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3138:2:0"
									},
									"returnParameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3158:0:0"
									},
									"scope": 823,
									"src": "3131:172:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 235,
										"nodeType": "Block",
										"src": "3380:294:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 215,
														"name": "selectedTimeframe",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 210,
														"src": "3394:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "393030",
														"id": 216,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3415:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_900_by_1",
															"typeString": "int_const 900"
														},
														"value": "900"
													},
													"src": "3394:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 221,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 219,
															"name": "selectedTimeframe",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 210,
															"src": "3491:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "3836343030",
															"id": 220,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3512:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_86400_by_1",
																"typeString": "int_const 86400"
															},
															"value": "86400"
														},
														"src": "3491:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 223,
													"nodeType": "IfStatement",
													"src": "3487:85:0",
													"trueBody": {
														"id": 222,
														"nodeType": "Block",
														"src": "3519:53:0",
														"statements": []
													}
												},
												"id": 224,
												"nodeType": "IfStatement",
												"src": "3390:182:0",
												"trueBody": {
													"id": 218,
													"nodeType": "Block",
													"src": "3420:61:0",
													"statements": []
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 226,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3600:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 227,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3604:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3600:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "54696d656672616d652061646a7573746564",
															"id": 228,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3612:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7638e8c8903c5fa61ebf97e2b2f70e2c3ee679b62e1042ef4e4240a60c0694d0",
																"typeString": "literal_string \"Timeframe adjusted\""
															},
															"value": "Timeframe adjusted"
														},
														{
															"id": 229,
															"name": "selectedTimeframe",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 210,
															"src": "3634:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 230,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3653:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 231,
																"name": "getPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 822,
																"src": "3656:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 232,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3656:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_stringliteral_7638e8c8903c5fa61ebf97e2b2f70e2c3ee679b62e1042ef4e4240a60c0694d0",
																"typeString": "literal_string \"Timeframe adjusted\""
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 225,
														"name": "TradeExecuted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "3586:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,string memory,uint256,uint256,uint256)"
														}
													},
													"id": 233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3586:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 234,
												"nodeType": "EmitStatement",
												"src": "3581:86:0"
											}
										]
									},
									"functionSelector": "869665e9",
									"id": 236,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 213,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 212,
												"name": "onlyOwner",
												"nameLocations": [
													"3370:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 126,
												"src": "3370:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3370:9:0"
										}
									],
									"name": "adjustTimeframe",
									"nameLocation": "3318:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "selectedTimeframe",
												"nameLocation": "3342:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "3334:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3334:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3333:27:0"
									},
									"returnParameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3380:0:0"
									},
									"scope": 823,
									"src": "3309:365:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 248,
										"nodeType": "Block",
										"src": "3734:65:0",
										"statements": [
											{
												"assignments": [
													242
												],
												"declarations": [
													{
														"constant": false,
														"id": 242,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "3752:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 248,
														"src": "3744:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 241,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3744:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 245,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 243,
														"name": "getPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 822,
														"src": "3760:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3760:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3744:26:0"
											},
											{
												"expression": {
													"id": 246,
													"name": "price",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 242,
													"src": "3787:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 240,
												"id": 247,
												"nodeType": "Return",
												"src": "3780:12:0"
											}
										]
									},
									"functionSelector": "8fc3047d",
									"id": 249,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkPrice",
									"nameLocation": "3689:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3699:2:0"
									},
									"returnParameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "3725:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 238,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3725:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3724:9:0"
									},
									"scope": 823,
									"src": "3680:119:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 268,
										"nodeType": "Block",
										"src": "3888:81:0",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 259,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3917:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 260,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3921:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3917:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 261,
															"name": "tradeType",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 251,
															"src": "3929:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 262,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 253,
															"src": "3940:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 263,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3948:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 264,
																"name": "getPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 822,
																"src": "3951:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 265,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3951:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 258,
														"name": "TradeExecuted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "3903:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,string memory,uint256,uint256,uint256)"
														}
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3903:59:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 267,
												"nodeType": "EmitStatement",
												"src": "3898:64:0"
											}
										]
									},
									"functionSelector": "26c403ed",
									"id": 269,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 256,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 255,
												"name": "onlyOwner",
												"nameLocations": [
													"3878:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 126,
												"src": "3878:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3878:9:0"
										}
									],
									"name": "initiateTrade",
									"nameLocation": "3814:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "tradeType",
												"nameLocation": "3842:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "3828:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 250,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3828:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3861:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "3853:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 252,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3853:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3827:41:0"
									},
									"returnParameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3888:0:0"
									},
									"scope": 823,
									"src": "3805:164:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 284,
										"nodeType": "Block",
										"src": "4021:83:0",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 275,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4050:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 276,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4054:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4050:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "636f6e7665727420746f20504f4c",
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4062:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f548031c271626835f64bb759a80cb1c7ee3cbb01af72f7702986b2084fa7f35",
																"typeString": "literal_string \"convert to POL\""
															},
															"value": "convert to POL"
														},
														{
															"hexValue": "30",
															"id": 278,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4080:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "30",
															"id": 279,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4083:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 280,
																"name": "getPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 822,
																"src": "4086:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4086:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_stringliteral_f548031c271626835f64bb759a80cb1c7ee3cbb01af72f7702986b2084fa7f35",
																"typeString": "literal_string \"convert to POL\""
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 274,
														"name": "TradeExecuted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "4036:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,string memory,uint256,uint256,uint256)"
														}
													},
													"id": 282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4036:61:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 283,
												"nodeType": "EmitStatement",
												"src": "4031:66:0"
											}
										]
									},
									"functionSelector": "9d8ef1e1",
									"id": 285,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 272,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 271,
												"name": "onlyOwner",
												"nameLocations": [
													"4011:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 126,
												"src": "4011:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4011:9:0"
										}
									],
									"name": "convertAllToPOL",
									"nameLocation": "3984:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3999:2:0"
									},
									"returnParameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4021:0:0"
									},
									"scope": 823,
									"src": "3975:129:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 339,
										"nodeType": "Block",
										"src": "4215:436:0",
										"statements": [
											{
												"assignments": [
													296
												],
												"declarations": [
													{
														"constant": false,
														"id": 296,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "4236:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 339,
														"src": "4221:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV3Pool_$2053",
															"typeString": "contract IUniswapV3Pool"
														},
														"typeName": {
															"id": 295,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 294,
																"name": "IUniswapV3Pool",
																"nameLocations": [
																	"4221:14:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2053,
																"src": "4221:14:0"
															},
															"referencedDeclaration": 2053,
															"src": "4221:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV3Pool_$2053",
																"typeString": "contract IUniswapV3Pool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 300,
												"initialValue": {
													"arguments": [
														{
															"id": 298,
															"name": "poolAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "4258:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 297,
														"name": "IUniswapV3Pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2053,
														"src": "4243:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IUniswapV3Pool_$2053_$",
															"typeString": "type(contract IUniswapV3Pool)"
														}
													},
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4243:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV3Pool_$2053",
														"typeString": "contract IUniswapV3Pool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4221:49:0"
											},
											{
												"assignments": [
													302,
													null,
													null,
													null,
													null,
													null,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 302,
														"mutability": "mutable",
														"name": "sqrtPriceX96",
														"nameLocation": "4285:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 339,
														"src": "4277:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														},
														"typeName": {
															"id": 301,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "4277:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"visibility": "internal"
													},
													null,
													null,
													null,
													null,
													null,
													null
												],
												"id": 306,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 303,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 296,
															"src": "4307:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV3Pool_$2053",
																"typeString": "contract IUniswapV3Pool"
															}
														},
														"id": 304,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4312:5:0",
														"memberName": "slot0",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2400,
														"src": "4307:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
															"typeString": "function () view external returns (uint160,int24,uint16,uint16,uint16,uint8,bool)"
														}
													},
													"id": 305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4307:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
														"typeString": "tuple(uint160,int24,uint16,uint16,uint16,uint8,bool)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4276:43:0"
											},
											{
												"assignments": [
													308
												],
												"declarations": [
													{
														"constant": false,
														"id": 308,
														"mutability": "mutable",
														"name": "liquidity",
														"nameLocation": "4333:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 339,
														"src": "4325:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 307,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4325:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 312,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 309,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 296,
															"src": "4345:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV3Pool_$2053",
																"typeString": "contract IUniswapV3Pool"
															}
														},
														"id": 310,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4350:9:0",
														"memberName": "liquidity",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2426,
														"src": "4345:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint128_$",
															"typeString": "function () view external returns (uint128)"
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4345:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4325:36:0"
											},
											{
												"assignments": [
													314
												],
												"declarations": [
													{
														"constant": false,
														"id": 314,
														"mutability": "mutable",
														"name": "amountOut",
														"nameLocation": "4474:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 339,
														"src": "4466:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 313,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4466:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 320,
												"initialValue": {
													"arguments": [
														{
															"id": 316,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 287,
															"src": "4505:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 317,
															"name": "sqrtPriceX96",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "4515:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														{
															"id": 318,
															"name": "liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 308,
															"src": "4529:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 315,
														"name": "calculateAmountOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 361,
														"src": "4486:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint160_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint160,uint256) pure returns (uint256)"
														}
													},
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4486:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4466:73:0"
											},
											{
												"assignments": [
													322
												],
												"declarations": [
													{
														"constant": false,
														"id": 322,
														"mutability": "mutable",
														"name": "slippage",
														"nameLocation": "4554:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 339,
														"src": "4546:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 321,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4546:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 329,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 325,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 323,
																	"name": "amountOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 314,
																	"src": "4566:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 324,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4578:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "4566:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 326,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4565:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 327,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4583:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "4565:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4546:40:0"
											},
											{
												"expression": {
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 330,
														"name": "sufficientLiquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 292,
														"src": "4592:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 335,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 331,
																	"name": "amountOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 314,
																	"src": "4615:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 334,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 332,
																		"name": "amountIn",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 287,
																		"src": "4628:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 333,
																		"name": "slippage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 322,
																		"src": "4639:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4628:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4615:32:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 336,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4614:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4592:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 338,
												"nodeType": "ExpressionStatement",
												"src": "4592:56:0"
											}
										]
									},
									"functionSelector": "3fb47a3b",
									"id": 340,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkLiquidity",
									"nameLocation": "4114:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "4137:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "4129:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4129:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "poolAddress",
												"nameLocation": "4155:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "4147:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4147:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4128:39:0"
									},
									"returnParameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "sufficientLiquidity",
												"nameLocation": "4194:19:0",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "4189:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 291,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4189:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4188:26:0"
									},
									"scope": 823,
									"src": "4105:546:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 360,
										"nodeType": "Block",
										"src": "4772:120:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 357,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 353,
																	"name": "amountIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 342,
																	"src": "4853:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 354,
																	"name": "sqrtPriceX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 344,
																	"src": "4864:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"src": "4853:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 356,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 346,
																"src": "4879:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4853:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 352,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4845:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 351,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4845:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4845:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 350,
												"id": 359,
												"nodeType": "Return",
												"src": "4838:51:0"
											}
										]
									},
									"id": 361,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateAmountOut",
									"nameLocation": "4662:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "4689:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "4681:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4681:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "4707:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "4699:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 343,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "4699:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "4729:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "4721:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4721:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4680:59:0"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "4763:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 348,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4763:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4762:9:0"
									},
									"scope": 823,
									"src": "4653:239:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 370,
										"nodeType": "Block",
										"src": "4944:39:0",
										"statements": [
											{
												"expression": {
													"id": 368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 366,
														"name": "tradingEnabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 39,
														"src": "4954:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 367,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4971:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "4954:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 369,
												"nodeType": "ExpressionStatement",
												"src": "4954:22:0"
											}
										]
									},
									"functionSelector": "17700f01",
									"id": 371,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 364,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 363,
												"name": "onlyOwner",
												"nameLocations": [
													"4934:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 126,
												"src": "4934:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4934:9:0"
										}
									],
									"name": "disableTrading",
									"nameLocation": "4908:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4922:2:0"
									},
									"returnParameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4944:0:0"
									},
									"scope": 823,
									"src": "4899:84:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 403,
										"nodeType": "Block",
										"src": "5054:185:0",
										"statements": [
											{
												"assignments": [
													379
												],
												"declarations": [
													{
														"constant": false,
														"id": 379,
														"mutability": "mutable",
														"name": "amountInWei",
														"nameLocation": "5072:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 403,
														"src": "5064:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 378,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5064:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 383,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 380,
														"name": "amountInGwei",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 373,
														"src": "5086:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"hexValue": "31",
														"id": 381,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5101:6:0",
														"subdenomination": "gwei",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000_by_1",
															"typeString": "int_const 1000000000"
														},
														"value": "1"
													},
													"src": "5086:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5064:43:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 391,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 387,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5133:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_MainBot_$823",
																				"typeString": "contract MainBot"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_MainBot_$823",
																				"typeString": "contract MainBot"
																			}
																		],
																		"id": 386,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5125:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 385,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5125:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 388,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5125:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 389,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5139:7:0",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5125:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 390,
																"name": "amountInWei",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 379,
																"src": "5150:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5125:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e6365",
															"id": 392,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5163:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															},
															"value": "Insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															}
														],
														"id": 384,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5117:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5117:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 394,
												"nodeType": "ExpressionStatement",
												"src": "5117:69:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 400,
															"name": "amountInWei",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 379,
															"src": "5220:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 397,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 37,
																	"src": "5204:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 396,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5196:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 395,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5196:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 398,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5196:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 399,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5211:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "5196:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5196:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 402,
												"nodeType": "ExpressionStatement",
												"src": "5196:36:0"
											}
										]
									},
									"functionSelector": "457f3cb0",
									"id": 404,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 376,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 375,
												"name": "onlyOwner",
												"nameLocations": [
													"5044:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 126,
												"src": "5044:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5044:9:0"
										}
									],
									"name": "withdrawInGwei",
									"nameLocation": "4998:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "amountInGwei",
												"nameLocation": "5021:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "5013:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 372,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5013:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5012:22:0"
									},
									"returnParameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5054:0:0"
									},
									"scope": 823,
									"src": "4989:250:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 422,
										"nodeType": "Block",
										"src": "5276:60:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 417,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "5319:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_MainBot_$823",
																			"typeString": "contract MainBot"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_MainBot_$823",
																			"typeString": "contract MainBot"
																		}
																	],
																	"id": 416,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5311:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 415,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5311:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 418,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5311:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 419,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5325:7:0",
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "5311:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 411,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "5290:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 412,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5294:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "5290:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5282:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 409,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5282:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 413,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5282:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 414,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5302:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "5282:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5282:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 421,
												"nodeType": "ExpressionStatement",
												"src": "5282:51:0"
											}
										]
									},
									"functionSelector": "41c0e1b5",
									"id": 423,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 407,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 406,
												"name": "onlyOwner",
												"nameLocations": [
													"5266:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 126,
												"src": "5266:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5266:9:0"
										}
									],
									"name": "kill",
									"nameLocation": "5250:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5254:2:0"
									},
									"returnParameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5276:0:0"
									},
									"scope": 823,
									"src": "5241:95:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 445,
										"nodeType": "Block",
										"src": "5400:185:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 428,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "5414:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 429,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5420:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "5414:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 430,
														"name": "nextLogTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 57,
														"src": "5433:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5414:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 444,
												"nodeType": "IfStatement",
												"src": "5410:169:0",
												"trueBody": {
													"id": 443,
													"nodeType": "Block",
													"src": "5446:133:0",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 433,
																		"name": "currentActivity",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 60,
																		"src": "5481:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_storage",
																			"typeString": "string storage ref"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_storage",
																			"typeString": "string storage ref"
																		}
																	],
																	"id": 432,
																	"name": "CurrentActivity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 110,
																	"src": "5465:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory)"
																	}
																},
																"id": 434,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5465:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 435,
															"nodeType": "EmitStatement",
															"src": "5460:37:0"
														},
														{
															"expression": {
																"id": 441,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 436,
																	"name": "nextLogTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 57,
																	"src": "5511:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 440,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 437,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "5525:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5531:9:0",
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "5525:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "3630",
																		"id": 439,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5543:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_60_by_1",
																			"typeString": "int_const 60"
																		},
																		"value": "60"
																	},
																	"src": "5525:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5511:34:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 442,
															"nodeType": "ExpressionStatement",
															"src": "5511:34:0"
														}
													]
												}
											}
										]
									},
									"id": 446,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 426,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 425,
												"name": "whenTradingEnabled",
												"nameLocations": [
													"5381:18:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 135,
												"src": "5381:18:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5381:18:0"
										}
									],
									"name": "logCurrentActivity",
									"nameLocation": "5351:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5369:2:0"
									},
									"returnParameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5400:0:0"
									},
									"scope": 823,
									"src": "5342:243:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 533,
										"nodeType": "Block",
										"src": "5670:409:0",
										"statements": [
											{
												"assignments": [
													455
												],
												"declarations": [
													{
														"constant": false,
														"id": 455,
														"mutability": "mutable",
														"name": "gain",
														"nameLocation": "5688:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 533,
														"src": "5680:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 454,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5680:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 457,
												"initialValue": {
													"hexValue": "30",
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5695:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5680:16:0"
											},
											{
												"assignments": [
													459
												],
												"declarations": [
													{
														"constant": false,
														"id": 459,
														"mutability": "mutable",
														"name": "loss",
														"nameLocation": "5714:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 533,
														"src": "5706:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 458,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5706:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 461,
												"initialValue": {
													"hexValue": "30",
													"id": 460,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5721:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5706:16:0"
											},
											{
												"body": {
													"id": 511,
													"nodeType": "Block",
													"src": "5776:197:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 481,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 473,
																		"name": "prices",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 449,
																		"src": "5794:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 475,
																	"indexExpression": {
																		"id": 474,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 463,
																		"src": "5801:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5794:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"baseExpression": {
																		"id": 476,
																		"name": "prices",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 449,
																		"src": "5806:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 480,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 479,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 477,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 463,
																			"src": "5813:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 478,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5817:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "5813:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5806:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5794:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 509,
																"nodeType": "Block",
																"src": "5895:68:0",
																"statements": [
																	{
																		"expression": {
																			"id": 507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 496,
																				"name": "loss",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 459,
																				"src": "5913:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 505,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"baseExpression": {
																								"id": 497,
																								"name": "prices",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 449,
																								"src": "5922:6:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																									"typeString": "uint256[] memory"
																								}
																							},
																							"id": 501,
																							"indexExpression": {
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 500,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 498,
																									"name": "i",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 463,
																									"src": "5929:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "-",
																								"rightExpression": {
																									"hexValue": "31",
																									"id": 499,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "5933:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_1_by_1",
																										"typeString": "int_const 1"
																									},
																									"value": "1"
																								},
																								"src": "5929:5:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "5922:13:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"baseExpression": {
																								"id": 502,
																								"name": "prices",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 449,
																								"src": "5938:6:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																									"typeString": "uint256[] memory"
																								}
																							},
																							"id": 504,
																							"indexExpression": {
																								"id": 503,
																								"name": "i",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 463,
																								"src": "5945:1:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "5938:9:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "5922:25:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 506,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5921:27:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5913:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 508,
																		"nodeType": "ExpressionStatement",
																		"src": "5913:35:0"
																	}
																]
															},
															"id": 510,
															"nodeType": "IfStatement",
															"src": "5790:173:0",
															"trueBody": {
																"id": 495,
																"nodeType": "Block",
																"src": "5821:68:0",
																"statements": [
																	{
																		"expression": {
																			"id": 493,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 482,
																				"name": "gain",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 455,
																				"src": "5839:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 491,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"baseExpression": {
																								"id": 483,
																								"name": "prices",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 449,
																								"src": "5848:6:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																									"typeString": "uint256[] memory"
																								}
																							},
																							"id": 485,
																							"indexExpression": {
																								"id": 484,
																								"name": "i",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 463,
																								"src": "5855:1:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "5848:9:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"baseExpression": {
																								"id": 486,
																								"name": "prices",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 449,
																								"src": "5860:6:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																									"typeString": "uint256[] memory"
																								}
																							},
																							"id": 490,
																							"indexExpression": {
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 489,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 487,
																									"name": "i",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 463,
																									"src": "5867:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "-",
																								"rightExpression": {
																									"hexValue": "31",
																									"id": 488,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "5871:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_1_by_1",
																										"typeString": "int_const 1"
																									},
																									"value": "1"
																								},
																								"src": "5867:5:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "5860:13:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "5848:25:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 492,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5847:27:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5839:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 494,
																		"nodeType": "ExpressionStatement",
																		"src": "5839:35:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 466,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 463,
														"src": "5752:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 467,
															"name": "prices",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 449,
															"src": "5756:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 468,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5763:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5756:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5752:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 512,
												"initializationExpression": {
													"assignments": [
														463
													],
													"declarations": [
														{
															"constant": false,
															"id": 463,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "5745:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 512,
															"src": "5737:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 462,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5737:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 465,
													"initialValue": {
														"hexValue": "31",
														"id": 464,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5749:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "5737:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 471,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "5771:3:0",
														"subExpression": {
															"id": 470,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "5771:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 472,
													"nodeType": "ExpressionStatement",
													"src": "5771:3:0"
												},
												"nodeType": "ForStatement",
												"src": "5732:241:0"
											},
											{
												"assignments": [
													514
												],
												"declarations": [
													{
														"constant": false,
														"id": 514,
														"mutability": "mutable",
														"name": "rs",
														"nameLocation": "5990:2:0",
														"nodeType": "VariableDeclaration",
														"scope": 533,
														"src": "5982:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 513,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5982:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 518,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 515,
														"name": "gain",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 455,
														"src": "5995:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 516,
														"name": "loss",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 459,
														"src": "6002:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5995:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5982:24:0"
											},
											{
												"assignments": [
													520
												],
												"declarations": [
													{
														"constant": false,
														"id": 520,
														"mutability": "mutable",
														"name": "rsi",
														"nameLocation": "6024:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 533,
														"src": "6016:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 519,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6016:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 530,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "313030",
														"id": 521,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6030:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 527,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "313030",
																	"id": 522,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6037:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 525,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "31",
																				"id": 523,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6044:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"id": 524,
																				"name": "rs",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 514,
																				"src": "6048:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6044:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 526,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "6043:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6037:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 528,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6036:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6030:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6016:36:0"
											},
											{
												"expression": {
													"id": 531,
													"name": "rsi",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 520,
													"src": "6069:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 453,
												"id": 532,
												"nodeType": "Return",
												"src": "6062:10:0"
											}
										]
									},
									"id": 534,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateRSI",
									"nameLocation": "5600:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "prices",
												"nameLocation": "5630:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "5613:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 447,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5613:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 448,
													"nodeType": "ArrayTypeName",
													"src": "5613:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5612:25:0"
									},
									"returnParameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "5661:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 451,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5661:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5660:9:0"
									},
									"scope": 823,
									"src": "5591:488:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 567,
										"nodeType": "Block",
										"src": "6164:183:0",
										"statements": [
											{
												"assignments": [
													543
												],
												"declarations": [
													{
														"constant": false,
														"id": 543,
														"mutability": "mutable",
														"name": "emaShort",
														"nameLocation": "6182:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 567,
														"src": "6174:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 542,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6174:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 548,
												"initialValue": {
													"arguments": [
														{
															"id": 545,
															"name": "prices",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 537,
															"src": "6206:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "3132",
															"id": 546,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6214:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_12_by_1",
																"typeString": "int_const 12"
															},
															"value": "12"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_rational_12_by_1",
																"typeString": "int_const 12"
															}
														],
														"id": 544,
														"name": "calculateEMA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 623,
														"src": "6193:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
														}
													},
													"id": 547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6193:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6174:43:0"
											},
											{
												"assignments": [
													550
												],
												"declarations": [
													{
														"constant": false,
														"id": 550,
														"mutability": "mutable",
														"name": "emaLong",
														"nameLocation": "6235:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 567,
														"src": "6227:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 549,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6227:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 555,
												"initialValue": {
													"arguments": [
														{
															"id": 552,
															"name": "prices",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 537,
															"src": "6258:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "3236",
															"id": 553,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6266:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_26_by_1",
																"typeString": "int_const 26"
															},
															"value": "26"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_rational_26_by_1",
																"typeString": "int_const 26"
															}
														],
														"id": 551,
														"name": "calculateEMA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 623,
														"src": "6245:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
														}
													},
													"id": 554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6245:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6227:42:0"
											},
											{
												"assignments": [
													557
												],
												"declarations": [
													{
														"constant": false,
														"id": 557,
														"mutability": "mutable",
														"name": "macd",
														"nameLocation": "6286:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 567,
														"src": "6279:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 556,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "6279:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 564,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 562,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 560,
																"name": "emaShort",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 543,
																"src": "6300:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 561,
																"name": "emaLong",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 550,
																"src": "6311:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6300:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 559,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "6293:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int256_$",
															"typeString": "type(int256)"
														},
														"typeName": {
															"id": 558,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "6293:6:0",
															"typeDescriptions": {}
														}
													},
													"id": 563,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6293:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6279:40:0"
											},
											{
												"expression": {
													"id": 565,
													"name": "macd",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 557,
													"src": "6336:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 541,
												"id": 566,
												"nodeType": "Return",
												"src": "6329:11:0"
											}
										]
									},
									"id": 568,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateMACD",
									"nameLocation": "6094:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "prices",
												"nameLocation": "6125:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "6108:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 535,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6108:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 536,
													"nodeType": "ArrayTypeName",
													"src": "6108:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6107:25:0"
									},
									"returnParameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "6156:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 539,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "6156:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6155:8:0"
									},
									"scope": 823,
									"src": "6085:262:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 622,
										"nodeType": "Block",
										"src": "6448:229:0",
										"statements": [
											{
												"assignments": [
													579
												],
												"declarations": [
													{
														"constant": false,
														"id": 579,
														"mutability": "mutable",
														"name": "multiplier",
														"nameLocation": "6466:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 622,
														"src": "6458:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 578,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6458:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 586,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "32",
														"id": 580,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6479:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 583,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 581,
																	"name": "period",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 573,
																	"src": "6484:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 582,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6493:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "6484:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 584,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6483:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6479:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6458:37:0"
											},
											{
												"assignments": [
													588
												],
												"declarations": [
													{
														"constant": false,
														"id": 588,
														"mutability": "mutable",
														"name": "ema",
														"nameLocation": "6513:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 622,
														"src": "6505:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 587,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6505:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 592,
												"initialValue": {
													"baseExpression": {
														"id": 589,
														"name": "prices",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 571,
														"src": "6519:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"id": 591,
													"indexExpression": {
														"hexValue": "30",
														"id": 590,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6526:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6519:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6505:23:0"
											},
											{
												"body": {
													"id": 618,
													"nodeType": "Block",
													"src": "6582:69:0",
													"statements": [
														{
															"expression": {
																"id": 616,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 604,
																	"name": "ema",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 588,
																	"src": "6596:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 615,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 612,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 609,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"baseExpression": {
																									"id": 605,
																									"name": "prices",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 571,
																									"src": "6604:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																										"typeString": "uint256[] memory"
																									}
																								},
																								"id": 607,
																								"indexExpression": {
																									"id": 606,
																									"name": "i",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 594,
																									"src": "6611:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "6604:9:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "-",
																							"rightExpression": {
																								"id": 608,
																								"name": "ema",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 588,
																								"src": "6616:3:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "6604:15:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 610,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "6603:17:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 611,
																					"name": "multiplier",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 579,
																					"src": "6623:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "6603:30:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 613,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "6602:32:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 614,
																		"name": "ema",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 588,
																		"src": "6637:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6602:38:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6596:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 617,
															"nodeType": "ExpressionStatement",
															"src": "6596:44:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 597,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 594,
														"src": "6558:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 598,
															"name": "prices",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 571,
															"src": "6562:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 599,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6569:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6562:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6558:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 619,
												"initializationExpression": {
													"assignments": [
														594
													],
													"declarations": [
														{
															"constant": false,
															"id": 594,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "6551:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 619,
															"src": "6543:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 593,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6543:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 596,
													"initialValue": {
														"hexValue": "31",
														"id": 595,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6555:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6543:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 602,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "6577:3:0",
														"subExpression": {
															"id": 601,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 594,
															"src": "6577:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 603,
													"nodeType": "ExpressionStatement",
													"src": "6577:3:0"
												},
												"nodeType": "ForStatement",
												"src": "6538:113:0"
											},
											{
												"expression": {
													"id": 620,
													"name": "ema",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 588,
													"src": "6667:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 577,
												"id": 621,
												"nodeType": "Return",
												"src": "6660:10:0"
											}
										]
									},
									"id": 623,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateEMA",
									"nameLocation": "6362:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "prices",
												"nameLocation": "6392:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "6375:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 569,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6375:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 570,
													"nodeType": "ArrayTypeName",
													"src": "6375:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "period",
												"nameLocation": "6408:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "6400:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 572,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6400:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6374:41:0"
									},
									"returnParameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "6439:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 575,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6439:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6438:9:0"
									},
									"scope": 823,
									"src": "6353:324:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 793,
										"nodeType": "Block",
										"src": "6779:650:0",
										"statements": [
											{
												"assignments": [
													637
												],
												"declarations": [
													{
														"constant": false,
														"id": 637,
														"mutability": "mutable",
														"name": "fibLevels",
														"nameLocation": "6806:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 793,
														"src": "6789:26:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 635,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6789:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 636,
															"nodeType": "ArrayTypeName",
															"src": "6789:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 643,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "3131",
															"id": 641,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6832:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_11_by_1",
																"typeString": "int_const 11"
															},
															"value": "11"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_11_by_1",
																"typeString": "int_const 11"
															}
														],
														"id": 640,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "6818:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 638,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6822:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 639,
															"nodeType": "ArrayTypeName",
															"src": "6822:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 642,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6818:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6789:46:0"
											},
											{
												"expression": {
													"id": 648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 644,
															"name": "fibLevels",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 637,
															"src": "6845:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 646,
														"indexExpression": {
															"hexValue": "30",
															"id": 645,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6855:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6845:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 647,
														"name": "low",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 627,
														"src": "6860:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6845:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 649,
												"nodeType": "ExpressionStatement",
												"src": "6845:18:0"
											},
											{
												"expression": {
													"id": 663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 650,
															"name": "fibLevels",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 637,
															"src": "6873:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 652,
														"indexExpression": {
															"hexValue": "31",
															"id": 651,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6883:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6873:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 662,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 653,
															"name": "low",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 627,
															"src": "6888:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 661,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 659,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 656,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 654,
																				"name": "high",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 625,
																				"src": "6895:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 655,
																				"name": "low",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 627,
																				"src": "6902:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6895:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 657,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "6894:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "323336",
																	"id": 658,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6909:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_236_by_1",
																		"typeString": "int_const 236"
																	},
																	"value": "236"
																},
																"src": "6894:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "31303030",
																"id": 660,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6915:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000_by_1",
																	"typeString": "int_const 1000"
																},
																"value": "1000"
															},
															"src": "6894:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6888:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6873:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 664,
												"nodeType": "ExpressionStatement",
												"src": "6873:46:0"
											},
											{
												"expression": {
													"id": 678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 665,
															"name": "fibLevels",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 637,
															"src": "6929:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 667,
														"indexExpression": {
															"hexValue": "32",
															"id": 666,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6939:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6929:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 677,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 668,
															"name": "low",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 627,
															"src": "6944:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 676,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 674,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 671,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 669,
																				"name": "high",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 625,
																				"src": "6951:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 670,
																				"name": "low",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 627,
																				"src": "6958:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6951:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 672,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "6950:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "333832",
																	"id": 673,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6965:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_382_by_1",
																		"typeString": "int_const 382"
																	},
																	"value": "382"
																},
																"src": "6950:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "31303030",
																"id": 675,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6971:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000_by_1",
																	"typeString": "int_const 1000"
																},
																"value": "1000"
															},
															"src": "6950:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6944:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6929:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 679,
												"nodeType": "ExpressionStatement",
												"src": "6929:46:0"
											},
											{
												"expression": {
													"id": 693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 680,
															"name": "fibLevels",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 637,
															"src": "6985:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 682,
														"indexExpression": {
															"hexValue": "33",
															"id": 681,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6995:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															},
															"value": "3"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6985:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 692,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 683,
															"name": "low",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 627,
															"src": "7000:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 691,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 689,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 686,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 684,
																				"name": "high",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 625,
																				"src": "7007:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 685,
																				"name": "low",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 627,
																				"src": "7014:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7007:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 687,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7006:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "353030",
																	"id": 688,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7021:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_500_by_1",
																		"typeString": "int_const 500"
																	},
																	"value": "500"
																},
																"src": "7006:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "31303030",
																"id": 690,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7027:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000_by_1",
																	"typeString": "int_const 1000"
																},
																"value": "1000"
															},
															"src": "7006:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7000:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6985:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 694,
												"nodeType": "ExpressionStatement",
												"src": "6985:46:0"
											},
											{
												"expression": {
													"id": 708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 695,
															"name": "fibLevels",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 637,
															"src": "7041:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 697,
														"indexExpression": {
															"hexValue": "34",
															"id": 696,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7051:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4_by_1",
																"typeString": "int_const 4"
															},
															"value": "4"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7041:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 707,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 698,
															"name": "low",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 627,
															"src": "7056:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 706,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 704,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 701,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 699,
																				"name": "high",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 625,
																				"src": "7063:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 700,
																				"name": "low",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 627,
																				"src": "7070:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7063:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 702,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7062:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "363138",
																	"id": 703,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7077:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_618_by_1",
																		"typeString": "int_const 618"
																	},
																	"value": "618"
																},
																"src": "7062:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "31303030",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7083:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000_by_1",
																	"typeString": "int_const 1000"
																},
																"value": "1000"
															},
															"src": "7062:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7056:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7041:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 709,
												"nodeType": "ExpressionStatement",
												"src": "7041:46:0"
											},
											{
												"expression": {
													"id": 723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 710,
															"name": "fibLevels",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 637,
															"src": "7097:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 712,
														"indexExpression": {
															"hexValue": "35",
															"id": 711,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7107:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_5_by_1",
																"typeString": "int_const 5"
															},
															"value": "5"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7097:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 722,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 713,
															"name": "low",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 627,
															"src": "7112:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 721,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 719,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 716,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 714,
																				"name": "high",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 625,
																				"src": "7119:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 715,
																				"name": "low",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 627,
																				"src": "7126:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7119:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 717,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7118:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "373836",
																	"id": 718,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7133:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_786_by_1",
																		"typeString": "int_const 786"
																	},
																	"value": "786"
																},
																"src": "7118:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "31303030",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7139:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000_by_1",
																	"typeString": "int_const 1000"
																},
																"value": "1000"
															},
															"src": "7118:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7112:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7097:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 724,
												"nodeType": "ExpressionStatement",
												"src": "7097:46:0"
											},
											{
												"expression": {
													"id": 729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 725,
															"name": "fibLevels",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 637,
															"src": "7153:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 727,
														"indexExpression": {
															"hexValue": "36",
															"id": 726,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7163:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_6_by_1",
																"typeString": "int_const 6"
															},
															"value": "6"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7153:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 728,
														"name": "high",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 625,
														"src": "7168:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7153:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 730,
												"nodeType": "ExpressionStatement",
												"src": "7153:19:0"
											},
											{
												"expression": {
													"id": 744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 731,
															"name": "fibLevels",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 637,
															"src": "7182:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 733,
														"indexExpression": {
															"hexValue": "37",
															"id": 732,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7192:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_7_by_1",
																"typeString": "int_const 7"
															},
															"value": "7"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7182:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 743,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 734,
															"name": "high",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 625,
															"src": "7197:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 742,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 740,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 737,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 735,
																				"name": "high",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 625,
																				"src": "7205:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 736,
																				"name": "low",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 627,
																				"src": "7212:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7205:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 738,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7204:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "363138",
																	"id": 739,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7219:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_618_by_1",
																		"typeString": "int_const 618"
																	},
																	"value": "618"
																},
																"src": "7204:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "31303030",
																"id": 741,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7225:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000_by_1",
																	"typeString": "int_const 1000"
																},
																"value": "1000"
															},
															"src": "7204:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7197:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7182:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 745,
												"nodeType": "ExpressionStatement",
												"src": "7182:47:0"
											},
											{
												"expression": {
													"id": 759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 746,
															"name": "fibLevels",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 637,
															"src": "7239:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 748,
														"indexExpression": {
															"hexValue": "38",
															"id": 747,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7249:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_8_by_1",
																"typeString": "int_const 8"
															},
															"value": "8"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7239:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 758,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 749,
															"name": "high",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 625,
															"src": "7254:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 757,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 755,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 752,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 750,
																				"name": "high",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 625,
																				"src": "7262:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 751,
																				"name": "low",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 627,
																				"src": "7269:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7262:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 753,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7261:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "313638",
																	"id": 754,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7276:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_168_by_1",
																		"typeString": "int_const 168"
																	},
																	"value": "168"
																},
																"src": "7261:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "313030",
																"id": 756,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7282:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															},
															"src": "7261:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7254:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7239:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 760,
												"nodeType": "ExpressionStatement",
												"src": "7239:46:0"
											},
											{
												"expression": {
													"id": 774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 761,
															"name": "fibLevels",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 637,
															"src": "7295:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 763,
														"indexExpression": {
															"hexValue": "39",
															"id": 762,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7305:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_9_by_1",
																"typeString": "int_const 9"
															},
															"value": "9"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7295:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 773,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 764,
															"name": "high",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 625,
															"src": "7310:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 772,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 770,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 767,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 765,
																				"name": "high",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 625,
																				"src": "7318:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 766,
																				"name": "low",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 627,
																				"src": "7325:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7318:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 768,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7317:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "363138",
																	"id": 769,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7332:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_618_by_1",
																		"typeString": "int_const 618"
																	},
																	"value": "618"
																},
																"src": "7317:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "31303030",
																"id": 771,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7338:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000_by_1",
																	"typeString": "int_const 1000"
																},
																"value": "1000"
															},
															"src": "7317:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7310:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7295:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 775,
												"nodeType": "ExpressionStatement",
												"src": "7295:47:0"
											},
											{
												"expression": {
													"id": 789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 776,
															"name": "fibLevels",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 637,
															"src": "7352:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 778,
														"indexExpression": {
															"hexValue": "3130",
															"id": 777,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7362:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7352:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 788,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 779,
															"name": "high",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 625,
															"src": "7368:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 787,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 785,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 782,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 780,
																				"name": "high",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 625,
																				"src": "7376:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 781,
																				"name": "low",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 627,
																				"src": "7383:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7376:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 783,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7375:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "323336",
																	"id": 784,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7390:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_236_by_1",
																		"typeString": "int_const 236"
																	},
																	"value": "236"
																},
																"src": "7375:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "313030",
																"id": 786,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7396:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															},
															"src": "7375:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7368:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7352:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 790,
												"nodeType": "ExpressionStatement",
												"src": "7352:47:0"
											},
											{
												"expression": {
													"id": 791,
													"name": "fibLevels",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 637,
													"src": "7417:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 632,
												"id": 792,
												"nodeType": "Return",
												"src": "7410:16:0"
											}
										]
									},
									"id": 794,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateFibonacci",
									"nameLocation": "6692:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "high",
												"nameLocation": "6719:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 794,
												"src": "6711:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 624,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6711:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "low",
												"nameLocation": "6733:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 794,
												"src": "6725:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 626,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6725:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6710:27:0"
									},
									"returnParameters": {
										"id": 632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 794,
												"src": "6761:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 629,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6761:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 630,
													"nodeType": "ArrayTypeName",
													"src": "6761:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6760:18:0"
									},
									"scope": 823,
									"src": "6683:746:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 821,
										"nodeType": "Block",
										"src": "7491:247:0",
										"statements": [
											{
												"assignments": [
													801
												],
												"declarations": [
													{
														"constant": false,
														"id": 801,
														"mutability": "mutable",
														"name": "priceFeed",
														"nameLocation": "7528:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 821,
														"src": "7506:31:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$1450",
															"typeString": "contract AggregatorV3Interface"
														},
														"typeName": {
															"id": 800,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 799,
																"name": "AggregatorV3Interface",
																"nameLocations": [
																	"7506:21:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1450,
																"src": "7506:21:0"
															},
															"referencedDeclaration": 1450,
															"src": "7506:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$1450",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 805,
												"initialValue": {
													"arguments": [
														{
															"id": 803,
															"name": "priceFeedAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 75,
															"src": "7562:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 802,
														"name": "AggregatorV3Interface",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1450,
														"src": "7540:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$1450_$",
															"typeString": "type(contract AggregatorV3Interface)"
														}
													},
													"id": 804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7540:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_AggregatorV3Interface_$1450",
														"typeString": "contract AggregatorV3Interface"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7506:73:0"
											},
											{
												"assignments": [
													null,
													807,
													null,
													null,
													null
												],
												"declarations": [
													null,
													{
														"constant": false,
														"id": 807,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "7601:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 821,
														"src": "7597:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 806,
															"name": "int",
															"nodeType": "ElementaryTypeName",
															"src": "7597:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													},
													null,
													null,
													null
												],
												"id": 811,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 808,
															"name": "priceFeed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 801,
															"src": "7613:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$1450",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"id": 809,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7623:15:0",
														"memberName": "latestRoundData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1449,
														"src": "7613:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
															"typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
														}
													},
													"id": 810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7613:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
														"typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7594:46:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 818,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 814,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 807,
																"src": "7657:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000_by_1",
																	"typeString": "int_const 10000000000"
																},
																"id": 817,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 815,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7665:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3130",
																	"id": 816,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7671:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "7665:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000_by_1",
																	"typeString": "int_const 10000000000"
																}
															},
															"src": "7657:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 813,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "7649:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 812,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7649:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 819,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7649:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 798,
												"id": 820,
												"nodeType": "Return",
												"src": "7642:32:0"
											}
										]
									},
									"id": 822,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPrice",
									"nameLocation": "7448:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7456:2:0"
									},
									"returnParameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "7482:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 796,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7482:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7481:9:0"
									},
									"scope": 823,
									"src": "7439:299:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 824,
							"src": "944:6809:0",
							"usedErrors": [],
							"usedEvents": [
								100,
								106,
								110,
								114
							]
						}
					],
					"src": "33:7723:0"
				},
				"id": 0
			},
			"contracts/aave/protocol-v2/contracts/interfaces/DataTypes.sol": {
				"ast": {
					"absolutePath": "contracts/aave/protocol-v2/contracts/interfaces/DataTypes.sol",
					"exportedSymbols": {
						"DataTypes": [
							874
						]
					},
					"id": 875,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 825,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "DataTypes",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 874,
							"linearizedBaseContracts": [
								874
							],
							"name": "DataTypes",
							"nameLocation": "65:9:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "DataTypes.ReserveConfigurationMap",
									"id": 828,
									"members": [
										{
											"constant": false,
											"id": 827,
											"mutability": "mutable",
											"name": "data",
											"nameLocation": "130:4:1",
											"nodeType": "VariableDeclaration",
											"scope": 828,
											"src": "122:12:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 826,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "122:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ReserveConfigurationMap",
									"nameLocation": "88:23:1",
									"nodeType": "StructDefinition",
									"scope": 874,
									"src": "81:60:1",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.UserConfigurationMap",
									"id": 831,
									"members": [
										{
											"constant": false,
											"id": 830,
											"mutability": "mutable",
											"name": "data",
											"nameLocation": "193:4:1",
											"nodeType": "VariableDeclaration",
											"scope": 831,
											"src": "185:12:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 829,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "185:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserConfigurationMap",
									"nameLocation": "154:20:1",
									"nodeType": "StructDefinition",
									"scope": 874,
									"src": "147:57:1",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.ReserveData",
									"id": 854,
									"members": [
										{
											"constant": false,
											"id": 833,
											"mutability": "mutable",
											"name": "totalLiquidity",
											"nameLocation": "247:14:1",
											"nodeType": "VariableDeclaration",
											"scope": 854,
											"src": "239:22:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 832,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "239:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 835,
											"mutability": "mutable",
											"name": "availableLiquidity",
											"nameLocation": "279:18:1",
											"nodeType": "VariableDeclaration",
											"scope": 854,
											"src": "271:26:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 834,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "271:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 837,
											"mutability": "mutable",
											"name": "totalStableDebt",
											"nameLocation": "315:15:1",
											"nodeType": "VariableDeclaration",
											"scope": 854,
											"src": "307:23:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 836,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "307:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 839,
											"mutability": "mutable",
											"name": "totalVariableDebt",
											"nameLocation": "348:17:1",
											"nodeType": "VariableDeclaration",
											"scope": 854,
											"src": "340:25:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 838,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "340:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 841,
											"mutability": "mutable",
											"name": "liquidityRate",
											"nameLocation": "383:13:1",
											"nodeType": "VariableDeclaration",
											"scope": 854,
											"src": "375:21:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 840,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "375:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 843,
											"mutability": "mutable",
											"name": "variableBorrowRate",
											"nameLocation": "414:18:1",
											"nodeType": "VariableDeclaration",
											"scope": 854,
											"src": "406:26:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 842,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "406:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 845,
											"mutability": "mutable",
											"name": "stableBorrowRate",
											"nameLocation": "450:16:1",
											"nodeType": "VariableDeclaration",
											"scope": 854,
											"src": "442:24:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 844,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "442:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 847,
											"mutability": "mutable",
											"name": "averageStableBorrowRate",
											"nameLocation": "484:23:1",
											"nodeType": "VariableDeclaration",
											"scope": 854,
											"src": "476:31:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 846,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "476:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 849,
											"mutability": "mutable",
											"name": "liquidityIndex",
											"nameLocation": "525:14:1",
											"nodeType": "VariableDeclaration",
											"scope": 854,
											"src": "517:22:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 848,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "517:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 851,
											"mutability": "mutable",
											"name": "variableBorrowIndex",
											"nameLocation": "557:19:1",
											"nodeType": "VariableDeclaration",
											"scope": 854,
											"src": "549:27:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 850,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "549:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 853,
											"mutability": "mutable",
											"name": "lastUpdateTimestamp",
											"nameLocation": "593:19:1",
											"nodeType": "VariableDeclaration",
											"scope": 854,
											"src": "586:26:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint40",
												"typeString": "uint40"
											},
											"typeName": {
												"id": 852,
												"name": "uint40",
												"nodeType": "ElementaryTypeName",
												"src": "586:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint40",
													"typeString": "uint40"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ReserveData",
									"nameLocation": "217:11:1",
									"nodeType": "StructDefinition",
									"scope": 874,
									"src": "210:409:1",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.UserReserveData",
									"id": 873,
									"members": [
										{
											"constant": false,
											"id": 856,
											"mutability": "mutable",
											"name": "currentATokenBalance",
											"nameLocation": "666:20:1",
											"nodeType": "VariableDeclaration",
											"scope": 873,
											"src": "658:28:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 855,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "658:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 858,
											"mutability": "mutable",
											"name": "currentStableDebt",
											"nameLocation": "704:17:1",
											"nodeType": "VariableDeclaration",
											"scope": 873,
											"src": "696:25:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 857,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "696:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 860,
											"mutability": "mutable",
											"name": "currentVariableDebt",
											"nameLocation": "739:19:1",
											"nodeType": "VariableDeclaration",
											"scope": 873,
											"src": "731:27:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 859,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "731:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 862,
											"mutability": "mutable",
											"name": "principalStableDebt",
											"nameLocation": "776:19:1",
											"nodeType": "VariableDeclaration",
											"scope": 873,
											"src": "768:27:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 861,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "768:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 864,
											"mutability": "mutable",
											"name": "scaledVariableDebt",
											"nameLocation": "813:18:1",
											"nodeType": "VariableDeclaration",
											"scope": 873,
											"src": "805:26:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 863,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "805:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 866,
											"mutability": "mutable",
											"name": "stableBorrowRate",
											"nameLocation": "849:16:1",
											"nodeType": "VariableDeclaration",
											"scope": 873,
											"src": "841:24:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 865,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "841:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 868,
											"mutability": "mutable",
											"name": "liquidityRate",
											"nameLocation": "883:13:1",
											"nodeType": "VariableDeclaration",
											"scope": 873,
											"src": "875:21:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 867,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "875:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 870,
											"mutability": "mutable",
											"name": "stableRateLastUpdated",
											"nameLocation": "913:21:1",
											"nodeType": "VariableDeclaration",
											"scope": 873,
											"src": "906:28:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint40",
												"typeString": "uint40"
											},
											"typeName": {
												"id": 869,
												"name": "uint40",
												"nodeType": "ElementaryTypeName",
												"src": "906:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint40",
													"typeString": "uint40"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 872,
											"mutability": "mutable",
											"name": "usageAsCollateralEnabled",
											"nameLocation": "949:24:1",
											"nodeType": "VariableDeclaration",
											"scope": 873,
											"src": "944:29:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 871,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "944:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserReserveData",
									"nameLocation": "632:15:1",
									"nodeType": "StructDefinition",
									"scope": 874,
									"src": "625:355:1",
									"visibility": "public"
								}
							],
							"scope": 875,
							"src": "57:925:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:951:1"
				},
				"id": 1
			},
			"contracts/aave/protocol-v2/contracts/interfaces/ILendingPool.sol": {
				"ast": {
					"absolutePath": "contracts/aave/protocol-v2/contracts/interfaces/ILendingPool.sol",
					"exportedSymbols": {
						"DataTypes": [
							874
						],
						"ILendingPool": [
							1253
						],
						"ILendingPoolAddressesProvider": [
							1404
						]
					},
					"id": 1254,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 876,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:2"
						},
						{
							"id": 877,
							"literals": [
								"experimental",
								"ABIEncoderV2"
							],
							"nodeType": "PragmaDirective",
							"src": "61:33:2"
						},
						{
							"absolutePath": "contracts/aave/protocol-v2/contracts/interfaces/ILendingPoolAddressesProvider.sol",
							"file": "./ILendingPoolAddressesProvider.sol",
							"id": 879,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1254,
							"sourceUnit": 1405,
							"src": "96:82:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 878,
										"name": "ILendingPoolAddressesProvider",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1404,
										"src": "104:29:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/aave/protocol-v2/contracts/interfaces/DataTypes.sol",
							"file": "./DataTypes.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1254,
							"sourceUnit": 875,
							"src": "179:42:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 880,
										"name": "DataTypes",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 874,
										"src": "187:9:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ILendingPool",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1253,
							"linearizedBaseContracts": [
								1253
							],
							"name": "ILendingPool",
							"nameLocation": "233:12:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 882,
										"nodeType": "StructuredDocumentation",
										"src": "250:325:2",
										"text": " @dev Emitted on deposit()\n @param reserve The address of the underlying asset of the reserve\n @param user The address initiating the deposit\n @param onBehalfOf The beneficiary of the deposit, receiving the aTokens\n @param amount The amount deposited\n @param referral The referral code used*"
									},
									"eventSelector": "de6857219544bb5b7746f48ed30be6386fefc61b2f864cacf559893bf50fd951",
									"id": 894,
									"name": "Deposit",
									"nameLocation": "584:7:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 884,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "613:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "597:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 883,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "597:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 886,
												"indexed": false,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "634:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "626:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 885,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "626:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 888,
												"indexed": true,
												"mutability": "mutable",
												"name": "onBehalfOf",
												"nameLocation": "660:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "644:26:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 887,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "644:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 890,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "684:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "676:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 889,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "676:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 892,
												"indexed": true,
												"mutability": "mutable",
												"name": "referral",
												"nameLocation": "711:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "696:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 891,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "696:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "591:132:2"
									},
									"src": "578:146:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 895,
										"nodeType": "StructuredDocumentation",
										"src": "728:288:2",
										"text": " @dev Emitted on withdraw()\n @param reserve The address of the underlyng asset being withdrawn\n @param user The address initiating the withdrawal, owner of aTokens\n @param to Address that will receive the underlying\n @param amount The amount to be withdrawn*"
									},
									"eventSelector": "3115d1449a7b732c986cba18244e897a450f61e1bb8d589cd2e69e6c8924f9f7",
									"id": 905,
									"name": "Withdraw",
									"nameLocation": "1025:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 904,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 897,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "1050:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 905,
												"src": "1034:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 896,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1034:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 899,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1075:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 905,
												"src": "1059:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 898,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1059:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 901,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1097:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 905,
												"src": "1081:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 900,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1081:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 903,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1109:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 905,
												"src": "1101:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 902,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1101:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1033:83:2"
									},
									"src": "1019:98:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 906,
										"nodeType": "StructuredDocumentation",
										"src": "1121:605:2",
										"text": " @dev Emitted on borrow() and flashLoan() when debt needs to be opened\n @param reserve The address of the underlying asset being borrowed\n @param user The address of the user initiating the borrow(), receiving the funds on borrow() or just\n initiator of the transaction on flashLoan()\n @param onBehalfOf The address that will be getting the debt\n @param amount The amount borrowed out\n @param borrowRateMode The rate mode: 1 for Stable, 2 for Variable\n @param borrowRate The numeric rate at which the user has borrowed\n @param referral The referral code used*"
									},
									"eventSelector": "c6a898309e823ee50bac64e45ca8adba6690e99e7841c45d754e2a38e9019d9b",
									"id": 922,
									"name": "Borrow",
									"nameLocation": "1735:6:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 908,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "1763:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "1747:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 907,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1747:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 910,
												"indexed": false,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1784:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "1776:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 909,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1776:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 912,
												"indexed": true,
												"mutability": "mutable",
												"name": "onBehalfOf",
												"nameLocation": "1810:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "1794:26:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 911,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1794:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 914,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1834:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "1826:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 913,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1826:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 916,
												"indexed": false,
												"mutability": "mutable",
												"name": "borrowRateMode",
												"nameLocation": "1854:14:2",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "1846:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 915,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1846:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 918,
												"indexed": false,
												"mutability": "mutable",
												"name": "borrowRate",
												"nameLocation": "1882:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "1874:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 917,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1874:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 920,
												"indexed": true,
												"mutability": "mutable",
												"name": "referral",
												"nameLocation": "1913:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "1898:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 919,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1898:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1741:184:2"
									},
									"src": "1729:197:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 923,
										"nodeType": "StructuredDocumentation",
										"src": "1930:311:2",
										"text": " @dev Emitted on repay()\n @param reserve The address of the underlying asset of the reserve\n @param user The beneficiary of the repayment, getting his debt reduced\n @param repayer The address of the user initiating the repay(), providing the funds\n @param amount The amount repaid*"
									},
									"eventSelector": "4cdde6e09bb755c9a5589ebaec640bbfedff1362d4b255ebf8339782b9942faa",
									"id": 933,
									"name": "Repay",
									"nameLocation": "2250:5:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 925,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "2277:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 933,
												"src": "2261:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 924,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2261:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 927,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2306:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 933,
												"src": "2290:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 926,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2290:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 929,
												"indexed": true,
												"mutability": "mutable",
												"name": "repayer",
												"nameLocation": "2332:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 933,
												"src": "2316:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 928,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2316:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 931,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2353:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 933,
												"src": "2345:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 930,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2345:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2255:108:2"
									},
									"src": "2244:120:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 934,
										"nodeType": "StructuredDocumentation",
										"src": "2368:253:2",
										"text": " @dev Emitted on swapBorrowRateMode()\n @param reserve The address of the underlying asset of the reserve\n @param user The address of the user swapping his rate mode\n @param rateMode The rate mode that the user wants to swap to*"
									},
									"eventSelector": "ea368a40e9570069bb8e6511d668293ad2e1f03b0d982431fd223de9f3b70ca6",
									"id": 942,
									"name": "Swap",
									"nameLocation": "2630:4:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 936,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "2651:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "2635:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 935,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2635:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 938,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2676:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "2660:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 937,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2660:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 940,
												"indexed": false,
												"mutability": "mutable",
												"name": "rateMode",
												"nameLocation": "2690:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "2682:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 939,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2682:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2634:65:2"
									},
									"src": "2624:76:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 943,
										"nodeType": "StructuredDocumentation",
										"src": "2704:208:2",
										"text": " @dev Emitted on setUserUseReserveAsCollateral()\n @param reserve The address of the underlying asset of the reserve\n @param user The address of the user enabling the usage as collateral*"
									},
									"eventSelector": "00058a56ea94653cdf4f152d227ace22d4c00ad99e2a43f58cb7d9e3feb295f2",
									"id": 949,
									"name": "ReserveUsedAsCollateralEnabled",
									"nameLocation": "2921:30:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 948,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 945,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "2968:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "2952:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 944,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2952:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 947,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2993:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "2977:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 946,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2977:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2951:47:2"
									},
									"src": "2915:84:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 950,
										"nodeType": "StructuredDocumentation",
										"src": "3003:208:2",
										"text": " @dev Emitted on setUserUseReserveAsCollateral()\n @param reserve The address of the underlying asset of the reserve\n @param user The address of the user enabling the usage as collateral*"
									},
									"eventSelector": "44c58d81365b66dd4b1a7f36c25aa97b8c71c361ee4937adc1a00000227db5dd",
									"id": 956,
									"name": "ReserveUsedAsCollateralDisabled",
									"nameLocation": "3220:31:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 952,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "3268:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "3252:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 951,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3252:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 954,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "3293:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "3277:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 953,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3277:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3251:47:2"
									},
									"src": "3214:85:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 957,
										"nodeType": "StructuredDocumentation",
										"src": "3303:213:2",
										"text": " @dev Emitted on rebalanceStableBorrowRate()\n @param reserve The address of the underlying asset of the reserve\n @param user The address of the user for which the rebalance has been executed*"
									},
									"eventSelector": "9f439ae0c81e41a04d3fdfe07aed54e6a179fb0db15be7702eb66fa8ef6f5300",
									"id": 963,
									"name": "RebalanceStableBorrowRate",
									"nameLocation": "3525:25:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 962,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 959,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "3567:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 963,
												"src": "3551:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 958,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3551:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 961,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "3592:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 963,
												"src": "3576:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 960,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3576:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3550:47:2"
									},
									"src": "3519:79:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 964,
										"nodeType": "StructuredDocumentation",
										"src": "3602:370:2",
										"text": " @dev Emitted on flashLoan()\n @param target The address of the flash loan receiver contract\n @param initiator The address initiating the flash loan\n @param asset The address of the asset being flash borrowed\n @param amount The amount flash borrowed\n @param premium The fee flash borrowed\n @param referralCode The referral code used*"
									},
									"eventSelector": "631042c832b07452973831137f2d73e395028b44b250dedc5abb0ee766e168ac",
									"id": 978,
									"name": "FlashLoan",
									"nameLocation": "3981:9:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 966,
												"indexed": true,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4012:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "3996:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 965,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3996:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 968,
												"indexed": true,
												"mutability": "mutable",
												"name": "initiator",
												"nameLocation": "4040:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "4024:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 967,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4024:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 970,
												"indexed": true,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "4071:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "4055:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 969,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4055:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 972,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4090:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "4082:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 971,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4082:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 974,
												"indexed": false,
												"mutability": "mutable",
												"name": "premium",
												"nameLocation": "4110:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "4102:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 973,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4102:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 976,
												"indexed": false,
												"mutability": "mutable",
												"name": "referralCode",
												"nameLocation": "4130:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "4123:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 975,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4123:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3990:156:2"
									},
									"src": "3975:172:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 979,
										"nodeType": "StructuredDocumentation",
										"src": "4151:56:2",
										"text": " @dev Emitted when the pause is triggered."
									},
									"eventSelector": "9e87fac88ff661f02d44f95383c817fece4bce600a3dab7a54406878b965e752",
									"id": 981,
									"name": "Paused",
									"nameLocation": "4216:6:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 980,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4222:2:2"
									},
									"src": "4210:15:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 982,
										"nodeType": "StructuredDocumentation",
										"src": "4229:53:2",
										"text": " @dev Emitted when the pause is lifted."
									},
									"eventSelector": "a45f47fdea8a1efdd9029a5691c7f759c32b7c698632b563573e155625d16933",
									"id": 984,
									"name": "Unpaused",
									"nameLocation": "4291:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 983,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4299:2:2"
									},
									"src": "4285:17:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 985,
										"nodeType": "StructuredDocumentation",
										"src": "4306:928:2",
										"text": " @dev Emitted when a borrower is liquidated. This event is emitted by the LendingPool via\n LendingPoolCollateral manager using a DELEGATECALL\n This allows to have the events in the generated ABI for LendingPool.\n @param collateralAsset The address of the underlying asset used as collateral, to receive as result of the liquidation\n @param debtAsset The address of the underlying borrowed asset to be repaid with the liquidation\n @param user The address of the borrower getting liquidated\n @param debtToCover The debt amount of borrowed `asset` the liquidator wants to cover\n @param liquidatedCollateralAmount The amount of collateral received by the liiquidator\n @param liquidator The address of the liquidator\n @param receiveAToken `true` if the liquidators wants to receive the collateral aTokens, `false` if he wants\n to receive the underlying collateral asset directly*"
									},
									"eventSelector": "e413a321e8681d831f4dbccbca790d2952b56f977908e45be37335533e005286",
									"id": 1001,
									"name": "LiquidationCall",
									"nameLocation": "5243:15:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 987,
												"indexed": true,
												"mutability": "mutable",
												"name": "collateralAsset",
												"nameLocation": "5280:15:2",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "5264:31:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 986,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5264:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 989,
												"indexed": true,
												"mutability": "mutable",
												"name": "debtAsset",
												"nameLocation": "5317:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "5301:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 988,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5301:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 991,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "5348:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "5332:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 990,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5332:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 993,
												"indexed": false,
												"mutability": "mutable",
												"name": "debtToCover",
												"nameLocation": "5366:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "5358:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 992,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5358:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 995,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidatedCollateralAmount",
												"nameLocation": "5391:26:2",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "5383:34:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 994,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5383:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 997,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidator",
												"nameLocation": "5431:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "5423:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 996,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5423:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 999,
												"indexed": false,
												"mutability": "mutable",
												"name": "receiveAToken",
												"nameLocation": "5452:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "5447:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 998,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5447:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5258:211:2"
									},
									"src": "5237:233:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1002,
										"nodeType": "StructuredDocumentation",
										"src": "5474:722:2",
										"text": " @dev Emitted when the state of a reserve is updated. NOTE: This event is actually declared\n in the ReserveLogic library and emitted in the updateInterestRates() function. Since the function is internal,\n the event will actually be fired by the LendingPool contract. The event is therefore replicated here so it\n gets added to the LendingPool ABI\n @param reserve The address of the underlying asset of the reserve\n @param liquidityRate The new liquidity rate\n @param stableBorrowRate The new stable borrow rate\n @param variableBorrowRate The new variable borrow rate\n @param liquidityIndex The new liquidity index\n @param variableBorrowIndex The new variable borrow index*"
									},
									"eventSelector": "804c9b842b2748a22bb64b345453a3de7ca54a6ca45ce00d415894979e22897a",
									"id": 1016,
									"name": "ReserveDataUpdated",
									"nameLocation": "6205:18:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1015,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1004,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "6245:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "6229:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1003,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6229:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1006,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidityRate",
												"nameLocation": "6266:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "6258:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1005,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6258:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1008,
												"indexed": false,
												"mutability": "mutable",
												"name": "stableBorrowRate",
												"nameLocation": "6293:16:2",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "6285:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1007,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6285:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1010,
												"indexed": false,
												"mutability": "mutable",
												"name": "variableBorrowRate",
												"nameLocation": "6323:18:2",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "6315:26:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1009,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6315:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1012,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidityIndex",
												"nameLocation": "6355:14:2",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "6347:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1011,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6347:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1014,
												"indexed": false,
												"mutability": "mutable",
												"name": "variableBorrowIndex",
												"nameLocation": "6383:19:2",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "6375:27:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1013,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6375:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6223:183:2"
									},
									"src": "6199:208:2"
								},
								{
									"documentation": {
										"id": 1017,
										"nodeType": "StructuredDocumentation",
										"src": "6411:712:2",
										"text": " @dev Deposits an `amount` of underlying asset into the reserve, receiving in return overlying aTokens.\n - E.g. User deposits 100 USDC and gets in return 100 aUSDC\n @param asset The address of the underlying asset to deposit\n @param amount The amount to be deposited\n @param onBehalfOf The address that will receive the aTokens, same as msg.sender if the user\n   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens\n   is a different wallet\n @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   0 if the action is executed directly by the user, without any middle-man*"
									},
									"functionSelector": "e8eda9df",
									"id": 1028,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "7135:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1026,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "7156:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1028,
												"src": "7148:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1018,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7148:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7175:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1028,
												"src": "7167:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1020,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7167:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1023,
												"mutability": "mutable",
												"name": "onBehalfOf",
												"nameLocation": "7195:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 1028,
												"src": "7187:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1022,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7187:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1025,
												"mutability": "mutable",
												"name": "referralCode",
												"nameLocation": "7218:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 1028,
												"src": "7211:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1024,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "7211:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7142:92:2"
									},
									"returnParameters": {
										"id": 1027,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7243:0:2"
									},
									"scope": 1253,
									"src": "7126:118:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1029,
										"nodeType": "StructuredDocumentation",
										"src": "7248:665:2",
										"text": " @dev Withdraws an `amount` of underlying asset from the reserve, burning the equivalent aTokens owned\n E.g. User has 100 aUSDC, calls withdraw() and receives 100 USDC, burning the 100 aUSDC\n @param asset The address of the underlying asset to withdraw\n @param amount The underlying amount to be withdrawn\n   - Send the value type(uint256).max in order to withdraw the whole aToken balance\n @param to Address that will receive the underlying, same as msg.sender if the user\n   wants to receive it on his own wallet, or a different address if the beneficiary is a\n   different wallet\n @return The final amount withdrawn*"
									},
									"functionSelector": "69328dec",
									"id": 1040,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "7925:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1031,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "7947:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "7939:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1030,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7939:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1033,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7966:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "7958:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1032,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7958:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7986:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "7978:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1034,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7978:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7933:59:2"
									},
									"returnParameters": {
										"id": 1039,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "8011:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1037,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8011:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8010:9:2"
									},
									"scope": 1253,
									"src": "7916:104:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1041,
										"nodeType": "StructuredDocumentation",
										"src": "8024:1189:2",
										"text": " @dev Allows users to borrow a specific `amount` of the reserve underlying asset, provided that the borrower\n already deposited enough collateral, or he was given enough allowance by a credit delegator on the\n corresponding debt token (StableDebtToken or VariableDebtToken)\n - E.g. User borrows 100 USDC passing as `onBehalfOf` his own address, receiving the 100 USDC in his wallet\n   and 100 stable/variable debt tokens, depending on the `interestRateMode`\n @param asset The address of the underlying asset to borrow\n @param amount The amount to be borrowed\n @param interestRateMode The interest rate mode at which the user wants to borrow: 1 for Stable, 2 for Variable\n @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   0 if the action is executed directly by the user, without any middle-man\n @param onBehalfOf Address of the user who will receive the debt. Should be the address of the borrower itself\n calling the function if he wants to borrow against his own collateral, or the address of the credit delegator\n if he has been given credit delegation allowance*"
									},
									"functionSelector": "a415bcad",
									"id": 1054,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "borrow",
									"nameLocation": "9225:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1052,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1043,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "9245:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "9237:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1042,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9237:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9264:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "9256:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1044,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9256:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1047,
												"mutability": "mutable",
												"name": "interestRateMode",
												"nameLocation": "9284:16:2",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "9276:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1046,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9276:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1049,
												"mutability": "mutable",
												"name": "referralCode",
												"nameLocation": "9313:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "9306:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1048,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "9306:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1051,
												"mutability": "mutable",
												"name": "onBehalfOf",
												"nameLocation": "9339:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "9331:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1050,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9331:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9231:122:2"
									},
									"returnParameters": {
										"id": 1053,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9362:0:2"
									},
									"scope": 1253,
									"src": "9216:147:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1055,
										"nodeType": "StructuredDocumentation",
										"src": "9367:862:2",
										"text": " @notice Repays a borrowed `amount` on a specific reserve, burning the equivalent debt tokens owned\n - E.g. User repays 100 USDC, burning 100 variable/stable debt tokens of the `onBehalfOf` address\n @param asset The address of the borrowed underlying asset previously borrowed\n @param amount The amount to repay\n - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\n @param rateMode The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\n @param onBehalfOf Address of the user who will get his debt reduced/removed. Should be the address of the\n user calling the function if he wants to reduce/remove his own debt, or the address of any other\n other borrower whose debt should be removed\n @return The final amount repaid*"
									},
									"functionSelector": "573ade81",
									"id": 1068,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "repay",
									"nameLocation": "10241:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "10260:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "10252:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1056,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10252:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10279:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "10271:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1058,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10271:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "rateMode",
												"nameLocation": "10299:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "10291:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1060,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10291:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1063,
												"mutability": "mutable",
												"name": "onBehalfOf",
												"nameLocation": "10321:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "10313:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1062,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10313:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10246:89:2"
									},
									"returnParameters": {
										"id": 1067,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1066,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "10354:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1065,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10354:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10353:9:2"
									},
									"scope": 1253,
									"src": "10232:131:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1069,
										"nodeType": "StructuredDocumentation",
										"src": "10367:231:2",
										"text": " @dev Allows a borrower to swap his debt between stable and variable mode, or viceversa\n @param asset The address of the underlying asset borrowed\n @param rateMode The rate mode that the user wants to swap to*"
									},
									"functionSelector": "94ba89a2",
									"id": 1076,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapBorrowRateMode",
									"nameLocation": "10610:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "10637:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "10629:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1070,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10629:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "rateMode",
												"nameLocation": "10652:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "10644:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1072,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10644:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10628:33:2"
									},
									"returnParameters": {
										"id": 1075,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10670:0:2"
									},
									"scope": 1253,
									"src": "10601:70:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1077,
										"nodeType": "StructuredDocumentation",
										"src": "10675:553:2",
										"text": " @dev Rebalances the stable interest rate of a user to the current stable rate defined on the reserve.\n - Users can be rebalanced if the following conditions are satisfied:\n     1. Usage ratio is above 95%\n     2. the current deposit APY is below REBALANCE_UP_THRESHOLD * maxVariableBorrowRate, which means that too much has been\n        borrowed at a stable rate and depositors are not earning enough\n @param asset The address of the underlying asset borrowed\n @param user The address of the user to be rebalanced*"
									},
									"functionSelector": "cd112382",
									"id": 1084,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "rebalanceStableBorrowRate",
									"nameLocation": "11240:25:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1079,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "11274:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "11266:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1078,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11266:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "11289:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "11281:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1080,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11281:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11265:29:2"
									},
									"returnParameters": {
										"id": 1083,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11303:0:2"
									},
									"scope": 1253,
									"src": "11231:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1085,
										"nodeType": "StructuredDocumentation",
										"src": "11308:266:2",
										"text": " @dev Allows depositors to enable/disable a specific deposited asset as collateral\n @param asset The address of the underlying asset deposited\n @param useAsCollateral `true` if the user wants to use the deposit as collateral, `false` otherwise*"
									},
									"functionSelector": "5a3b74b9",
									"id": 1092,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setUserUseReserveAsCollateral",
									"nameLocation": "11586:29:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "11624:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "11616:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1086,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11616:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "useAsCollateral",
												"nameLocation": "11636:15:2",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "11631:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1088,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11631:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11615:37:2"
									},
									"returnParameters": {
										"id": 1091,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11661:0:2"
									},
									"scope": 1253,
									"src": "11577:85:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1093,
										"nodeType": "StructuredDocumentation",
										"src": "11666:860:2",
										"text": " @dev Function to liquidate a non-healthy position collateral-wise, with Health Factor below 1\n - The caller (liquidator) covers `debtToCover` amount of debt of the user getting liquidated, and receives\n   a proportionally amount of the `collateralAsset` plus a bonus to cover market risk\n @param collateralAsset The address of the underlying asset used as collateral, to receive as result of the liquidation\n @param debtAsset The address of the underlying borrowed asset to be repaid with the liquidation\n @param user The address of the borrower getting liquidated\n @param debtToCover The debt amount of borrowed `asset` the liquidator wants to cover\n @param receiveAToken `true` if the liquidators wants to receive the collateral aTokens, `false` if he wants\n to receive the underlying collateral asset directly*"
									},
									"functionSelector": "00a718a9",
									"id": 1106,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "liquidationCall",
									"nameLocation": "12538:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1095,
												"mutability": "mutable",
												"name": "collateralAsset",
												"nameLocation": "12567:15:2",
												"nodeType": "VariableDeclaration",
												"scope": 1106,
												"src": "12559:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1094,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12559:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1097,
												"mutability": "mutable",
												"name": "debtAsset",
												"nameLocation": "12596:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 1106,
												"src": "12588:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1096,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12588:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1099,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "12619:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1106,
												"src": "12611:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1098,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12611:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1101,
												"mutability": "mutable",
												"name": "debtToCover",
												"nameLocation": "12637:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 1106,
												"src": "12629:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1100,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12629:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1103,
												"mutability": "mutable",
												"name": "receiveAToken",
												"nameLocation": "12659:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 1106,
												"src": "12654:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1102,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12654:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12553:123:2"
									},
									"returnParameters": {
										"id": 1105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12685:0:2"
									},
									"scope": 1253,
									"src": "12529:157:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1107,
										"nodeType": "StructuredDocumentation",
										"src": "12690:1376:2",
										"text": " @dev Allows smartcontracts to access the liquidity of the pool within one transaction,\n as long as the amount taken plus a fee is returned.\n IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept into consideration.\n For further details please visit https://developers.aave.com\n @param receiverAddress The address of the contract receiving the funds, implementing the IFlashLoanReceiver interface\n @param assets The addresses of the assets being flash-borrowed\n @param amounts The amounts amounts being flash-borrowed\n @param modes Types of the debt to open if the flash loan is not returned:\n   0 -> Don't open any debt, just revert if funds can't be transferred from the receiver\n   1 -> Open debt at stable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\n   2 -> Open debt at variable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\n @param onBehalfOf The address  that will receive the debt in the case of using on `modes` 1 or 2\n @param params Variadic packed params to pass to the receiver as extra information\n @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   0 if the action is executed directly by the user, without any middle-man*"
									},
									"functionSelector": "ab9c4b5d",
									"id": 1127,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "flashLoan",
									"nameLocation": "14078:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1109,
												"mutability": "mutable",
												"name": "receiverAddress",
												"nameLocation": "14101:15:2",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "14093:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14093:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1112,
												"mutability": "mutable",
												"name": "assets",
												"nameLocation": "14141:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "14122:25:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1110,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "14122:7:2",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1111,
													"nodeType": "ArrayTypeName",
													"src": "14122:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "14172:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "14153:26:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1113,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "14153:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1114,
													"nodeType": "ArrayTypeName",
													"src": "14153:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1118,
												"mutability": "mutable",
												"name": "modes",
												"nameLocation": "14204:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "14185:24:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1116,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "14185:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1117,
													"nodeType": "ArrayTypeName",
													"src": "14185:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1120,
												"mutability": "mutable",
												"name": "onBehalfOf",
												"nameLocation": "14223:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "14215:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1119,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14215:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1122,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "14254:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "14239:21:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1121,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14239:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1124,
												"mutability": "mutable",
												"name": "referralCode",
												"nameLocation": "14273:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "14266:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1123,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "14266:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14087:202:2"
									},
									"returnParameters": {
										"id": 1126,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14298:0:2"
									},
									"scope": 1253,
									"src": "14069:230:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1128,
										"nodeType": "StructuredDocumentation",
										"src": "14303:507:2",
										"text": " @dev Returns the user account data across all the reserves\n @param user The address of the user\n @return totalCollateralETH the total collateral in ETH of the user\n @return totalDebtETH the total debt in ETH of the user\n @return availableBorrowsETH the borrowing power left of the user\n @return currentLiquidationThreshold the liquidation threshold of the user\n @return ltv the loan to value of the user\n @return healthFactor the current health factor of the user*"
									},
									"functionSelector": "bf92857c",
									"id": 1145,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getUserAccountData",
									"nameLocation": "14822:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1130,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "14849:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1145,
												"src": "14841:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1129,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14841:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14840:14:2"
									},
									"returnParameters": {
										"id": 1144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1133,
												"mutability": "mutable",
												"name": "totalCollateralETH",
												"nameLocation": "14905:18:2",
												"nodeType": "VariableDeclaration",
												"scope": 1145,
												"src": "14897:26:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14897:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "totalDebtETH",
												"nameLocation": "14939:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 1145,
												"src": "14931:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14931:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "availableBorrowsETH",
												"nameLocation": "14967:19:2",
												"nodeType": "VariableDeclaration",
												"scope": 1145,
												"src": "14959:27:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14959:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1139,
												"mutability": "mutable",
												"name": "currentLiquidationThreshold",
												"nameLocation": "15002:27:2",
												"nodeType": "VariableDeclaration",
												"scope": 1145,
												"src": "14994:35:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14994:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1141,
												"mutability": "mutable",
												"name": "ltv",
												"nameLocation": "15045:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1145,
												"src": "15037:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1140,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15037:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "healthFactor",
												"nameLocation": "15064:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 1145,
												"src": "15056:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15056:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14889:193:2"
									},
									"scope": 1253,
									"src": "14813:270:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7a708e92",
									"id": 1158,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initReserve",
									"nameLocation": "15096:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "15121:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1158,
												"src": "15113:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15113:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1149,
												"mutability": "mutable",
												"name": "aTokenAddress",
												"nameLocation": "15142:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 1158,
												"src": "15134:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1148,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15134:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1151,
												"mutability": "mutable",
												"name": "stableDebtAddress",
												"nameLocation": "15169:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 1158,
												"src": "15161:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1150,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15161:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1153,
												"mutability": "mutable",
												"name": "variableDebtAddress",
												"nameLocation": "15200:19:2",
												"nodeType": "VariableDeclaration",
												"scope": 1158,
												"src": "15192:27:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15192:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1155,
												"mutability": "mutable",
												"name": "interestRateStrategyAddress",
												"nameLocation": "15233:27:2",
												"nodeType": "VariableDeclaration",
												"scope": 1158,
												"src": "15225:35:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15225:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15107:157:2"
									},
									"returnParameters": {
										"id": 1157,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15273:0:2"
									},
									"scope": 1253,
									"src": "15087:187:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1d2118f9",
									"id": 1165,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setReserveInterestRateStrategyAddress",
									"nameLocation": "15287:37:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1160,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "15333:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1165,
												"src": "15325:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15325:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1162,
												"mutability": "mutable",
												"name": "rateStrategyAddress",
												"nameLocation": "15350:19:2",
												"nodeType": "VariableDeclaration",
												"scope": 1165,
												"src": "15342:27:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15342:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15324:46:2"
									},
									"returnParameters": {
										"id": 1164,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15383:0:2"
									},
									"scope": 1253,
									"src": "15278:106:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b8d29276",
									"id": 1172,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setConfiguration",
									"nameLocation": "15397:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1167,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "15422:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "15414:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15414:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1169,
												"mutability": "mutable",
												"name": "configuration",
												"nameLocation": "15439:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "15431:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1168,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15431:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15413:40:2"
									},
									"returnParameters": {
										"id": 1171,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15462:0:2"
									},
									"scope": 1253,
									"src": "15388:75:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1173,
										"nodeType": "StructuredDocumentation",
										"src": "15467:176:2",
										"text": " @dev Returns the configuration of the reserve\n @param asset The address of the underlying asset of the reserve\n @return The configuration of the reserve*"
									},
									"functionSelector": "c44b11f7",
									"id": 1181,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getConfiguration",
									"nameLocation": "15655:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1175,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "15680:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1181,
												"src": "15672:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15672:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15671:15:2"
									},
									"returnParameters": {
										"id": 1180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1181,
												"src": "15722:40:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReserveConfigurationMap_$828_memory_ptr",
													"typeString": "struct DataTypes.ReserveConfigurationMap"
												},
												"typeName": {
													"id": 1178,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1177,
														"name": "DataTypes.ReserveConfigurationMap",
														"nameLocations": [
															"15722:9:2",
															"15732:23:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 828,
														"src": "15722:33:2"
													},
													"referencedDeclaration": 828,
													"src": "15722:33:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReserveConfigurationMap_$828_storage_ptr",
														"typeString": "struct DataTypes.ReserveConfigurationMap"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15721:42:2"
									},
									"scope": 1253,
									"src": "15646:118:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1182,
										"nodeType": "StructuredDocumentation",
										"src": "15768:159:2",
										"text": " @dev Returns the configuration of the user across all the reserves\n @param user The user address\n @return The configuration of the user*"
									},
									"functionSelector": "4417a583",
									"id": 1190,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getUserConfiguration",
									"nameLocation": "15939:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1184,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "15968:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "15960:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15960:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15959:14:2"
									},
									"returnParameters": {
										"id": 1189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1188,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "16009:37:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserConfigurationMap_$831_memory_ptr",
													"typeString": "struct DataTypes.UserConfigurationMap"
												},
												"typeName": {
													"id": 1187,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1186,
														"name": "DataTypes.UserConfigurationMap",
														"nameLocations": [
															"16009:9:2",
															"16019:20:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 831,
														"src": "16009:30:2"
													},
													"referencedDeclaration": 831,
													"src": "16009:30:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserConfigurationMap_$831_storage_ptr",
														"typeString": "struct DataTypes.UserConfigurationMap"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16008:39:2"
									},
									"scope": 1253,
									"src": "15930:118:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1191,
										"nodeType": "StructuredDocumentation",
										"src": "16052:196:2",
										"text": " @dev Returns the normalized income normalized income of the reserve\n @param asset The address of the underlying asset of the reserve\n @return The reserve's normalized income"
									},
									"functionSelector": "d15e0053",
									"id": 1198,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReserveNormalizedIncome",
									"nameLocation": "16260:26:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1193,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "16295:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1198,
												"src": "16287:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16287:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16286:15:2"
									},
									"returnParameters": {
										"id": 1197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1196,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1198,
												"src": "16325:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16325:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16324:9:2"
									},
									"scope": 1253,
									"src": "16251:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1199,
										"nodeType": "StructuredDocumentation",
										"src": "16338:193:2",
										"text": " @dev Returns the normalized variable debt per unit of asset\n @param asset The address of the underlying asset of the reserve\n @return The reserve normalized variable debt"
									},
									"functionSelector": "386497fd",
									"id": 1206,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReserveNormalizedVariableDebt",
									"nameLocation": "16543:32:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1201,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "16584:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1206,
												"src": "16576:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16576:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16575:15:2"
									},
									"returnParameters": {
										"id": 1205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1206,
												"src": "16614:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16614:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16613:9:2"
									},
									"scope": 1253,
									"src": "16534:89:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1207,
										"nodeType": "StructuredDocumentation",
										"src": "16627:178:2",
										"text": " @dev Returns the state and configuration of the reserve\n @param asset The address of the underlying asset of the reserve\n @return The state of the reserve*"
									},
									"functionSelector": "35ea6a75",
									"id": 1215,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReserveData",
									"nameLocation": "16817:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1209,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "16840:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "16832:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16832:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16831:15:2"
									},
									"returnParameters": {
										"id": 1214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1213,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "16870:28:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReserveData_$854_memory_ptr",
													"typeString": "struct DataTypes.ReserveData"
												},
												"typeName": {
													"id": 1212,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1211,
														"name": "DataTypes.ReserveData",
														"nameLocations": [
															"16870:9:2",
															"16880:11:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 854,
														"src": "16870:21:2"
													},
													"referencedDeclaration": 854,
													"src": "16870:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReserveData_$854_storage_ptr",
														"typeString": "struct DataTypes.ReserveData"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16869:30:2"
									},
									"scope": 1253,
									"src": "16808:92:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d5ed3933",
									"id": 1230,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "finalizeTransfer",
									"nameLocation": "16913:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1217,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "16943:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1230,
												"src": "16935:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16935:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1219,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16962:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1230,
												"src": "16954:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16954:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1221,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16980:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1230,
												"src": "16972:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1220,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16972:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1223,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "16996:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1230,
												"src": "16988:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16988:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1225,
												"mutability": "mutable",
												"name": "balanceFromAfter",
												"nameLocation": "17016:16:2",
												"nodeType": "VariableDeclaration",
												"scope": 1230,
												"src": "17008:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17008:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1227,
												"mutability": "mutable",
												"name": "balanceToBefore",
												"nameLocation": "17046:15:2",
												"nodeType": "VariableDeclaration",
												"scope": 1230,
												"src": "17038:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1226,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17038:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16929:136:2"
									},
									"returnParameters": {
										"id": 1229,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17074:0:2"
									},
									"scope": 1253,
									"src": "16904:171:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d1946dbc",
									"id": 1236,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReservesList",
									"nameLocation": "17088:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1231,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17103:2:2"
									},
									"returnParameters": {
										"id": 1235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1234,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1236,
												"src": "17129:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1232,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "17129:7:2",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1233,
													"nodeType": "ArrayTypeName",
													"src": "17129:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17128:18:2"
									},
									"scope": 1253,
									"src": "17079:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fe65acfe",
									"id": 1242,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressesProvider",
									"nameLocation": "17160:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1237,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17180:2:2"
									},
									"returnParameters": {
										"id": 1241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1240,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1242,
												"src": "17206:29:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ILendingPoolAddressesProvider_$1404",
													"typeString": "contract ILendingPoolAddressesProvider"
												},
												"typeName": {
													"id": 1239,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1238,
														"name": "ILendingPoolAddressesProvider",
														"nameLocations": [
															"17206:29:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1404,
														"src": "17206:29:2"
													},
													"referencedDeclaration": 1404,
													"src": "17206:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ILendingPoolAddressesProvider_$1404",
														"typeString": "contract ILendingPoolAddressesProvider"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17205:31:2"
									},
									"scope": 1253,
									"src": "17151:86:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "bedb86fb",
									"id": 1247,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setPause",
									"nameLocation": "17250:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1244,
												"mutability": "mutable",
												"name": "val",
												"nameLocation": "17264:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1247,
												"src": "17259:8:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1243,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17259:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17258:10:2"
									},
									"returnParameters": {
										"id": 1246,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17277:0:2"
									},
									"scope": 1253,
									"src": "17241:37:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5c975abb",
									"id": 1252,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "17291:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1248,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17297:2:2"
									},
									"returnParameters": {
										"id": 1251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1250,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "17323:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1249,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17323:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17322:6:2"
									},
									"scope": 1253,
									"src": "17282:47:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1254,
							"src": "223:17108:2",
							"usedErrors": [],
							"usedEvents": [
								894,
								905,
								922,
								933,
								942,
								949,
								956,
								963,
								978,
								981,
								984,
								1001,
								1016
							]
						}
					],
					"src": "37:17295:2"
				},
				"id": 2
			},
			"contracts/aave/protocol-v2/contracts/interfaces/ILendingPoolAddressesProvider.sol": {
				"ast": {
					"absolutePath": "contracts/aave/protocol-v2/contracts/interfaces/ILendingPoolAddressesProvider.sol",
					"exportedSymbols": {
						"ILendingPoolAddressesProvider": [
							1404
						]
					},
					"id": 1405,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1255,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ILendingPoolAddressesProvider",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1256,
								"nodeType": "StructuredDocumentation",
								"src": "62:311:3",
								"text": " @title LendingPoolAddressesProvider contract\n @dev Main registry of addresses part of or connected to the protocol, including permissioned roles\n - Acting also as factory of proxies and admin of those, so with right to change its implementations\n - Owned by the Aave Governance\n @author Aave*"
							},
							"fullyImplemented": false,
							"id": 1404,
							"linearizedBaseContracts": [
								1404
							],
							"name": "ILendingPoolAddressesProvider",
							"nameLocation": "384:29:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "5e667c32fd847cf8bce48ab3400175cbf107bdc82b2dea62e3364909dfaee799",
									"id": 1260,
									"name": "MarketIdSet",
									"nameLocation": "424:11:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1258,
												"indexed": false,
												"mutability": "mutable",
												"name": "newMarketId",
												"nameLocation": "443:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "436:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1257,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "436:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "435:20:3"
									},
									"src": "418:38:3"
								},
								{
									"anonymous": false,
									"eventSelector": "c4e6c6cdf28d0edbd8bcf071d724d33cc2e7a30be7d06443925656e9cb492aa4",
									"id": 1264,
									"name": "LendingPoolUpdated",
									"nameLocation": "465:18:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1262,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "500:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 1264,
												"src": "484:26:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "484:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "483:28:3"
									},
									"src": "459:53:3"
								},
								{
									"anonymous": false,
									"eventSelector": "c20a317155a9e7d84e06b716b4b355d47742ab9f8c5d630e7f556553f582430d",
									"id": 1268,
									"name": "ConfigurationAdminUpdated",
									"nameLocation": "521:25:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1266,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "563:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "547:26:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "547:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:28:3"
									},
									"src": "515:60:3"
								},
								{
									"anonymous": false,
									"eventSelector": "e19673fc861bfeb894cf2d6b7662505497ef31c0f489b742db24ee3310826916",
									"id": 1272,
									"name": "EmergencyAdminUpdated",
									"nameLocation": "584:21:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1270,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "622:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "606:26:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "606:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "605:28:3"
									},
									"src": "578:56:3"
								},
								{
									"anonymous": false,
									"eventSelector": "dfabe479bad36782fb1e77fbfddd4e382671713527e4786cfc93a022ae763729",
									"id": 1276,
									"name": "LendingPoolConfiguratorUpdated",
									"nameLocation": "643:30:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1274,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "690:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 1276,
												"src": "674:26:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "674:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:28:3"
									},
									"src": "637:65:3"
								},
								{
									"anonymous": false,
									"eventSelector": "991888326f0eab3df6084aadb82bee6781b5c9aa75379e8bc50ae86934541638",
									"id": 1280,
									"name": "LendingPoolCollateralManagerUpdated",
									"nameLocation": "711:35:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1278,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "763:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "747:26:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1277,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "747:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "746:28:3"
									},
									"src": "705:70:3"
								},
								{
									"anonymous": false,
									"eventSelector": "efe8ab924ca486283a79dc604baa67add51afb82af1db8ac386ebbba643cdffd",
									"id": 1284,
									"name": "PriceOracleUpdated",
									"nameLocation": "784:18:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1282,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "819:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "803:26:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1281,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "802:28:3"
									},
									"src": "778:53:3"
								},
								{
									"anonymous": false,
									"eventSelector": "5c29179aba6942020a8a2d38f65de02fb6b7f784e7f049ed3a3cab97621859b5",
									"id": 1288,
									"name": "LendingRateOracleUpdated",
									"nameLocation": "840:24:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1286,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "881:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "865:26:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1285,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "865:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "864:28:3"
									},
									"src": "834:59:3"
								},
								{
									"anonymous": false,
									"eventSelector": "1eb35cb4b5bbb23d152f3b4016a5a46c37a07ae930ed0956aba951e231142438",
									"id": 1294,
									"name": "ProxyCreated",
									"nameLocation": "902:12:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1290,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "923:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1294,
												"src": "915:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1289,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "915:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1292,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "943:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 1294,
												"src": "927:26:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1291,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "927:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "914:40:3"
									},
									"src": "896:59:3"
								},
								{
									"anonymous": false,
									"eventSelector": "f2689d5d5cd0c639e137642cae5d40afced201a1a0327e7ac9358461dc9fff31",
									"id": 1302,
									"name": "AddressSet",
									"nameLocation": "964:10:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1296,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "983:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1302,
												"src": "975:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1295,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1298,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "1003:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 1302,
												"src": "987:26:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1297,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "987:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1300,
												"indexed": false,
												"mutability": "mutable",
												"name": "hasProxy",
												"nameLocation": "1020:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1302,
												"src": "1015:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1299,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1015:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "974:55:3"
									},
									"src": "958:72:3"
								},
								{
									"functionSelector": "568ef470",
									"id": 1307,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getMarketId",
									"nameLocation": "1043:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1303,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1054:2:3"
									},
									"returnParameters": {
										"id": 1306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1305,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "1080:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1304,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1080:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1079:15:3"
									},
									"scope": 1404,
									"src": "1034:61:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f67b1847",
									"id": 1312,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setMarketId",
									"nameLocation": "1108:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1309,
												"mutability": "mutable",
												"name": "marketId",
												"nameLocation": "1136:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1312,
												"src": "1120:24:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1308,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1120:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1119:26:3"
									},
									"returnParameters": {
										"id": 1311,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1154:0:3"
									},
									"scope": 1404,
									"src": "1099:56:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ca446dd9",
									"id": 1319,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setAddress",
									"nameLocation": "1168:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1314,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1187:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "1179:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1313,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1179:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1316,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "1199:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "1191:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1315,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1191:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1178:32:3"
									},
									"returnParameters": {
										"id": 1318,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1219:0:3"
									},
									"scope": 1404,
									"src": "1159:61:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5dcc528c",
									"id": 1326,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setAddressAsProxy",
									"nameLocation": "1233:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1321,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1259:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "1251:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1320,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1251:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1323,
												"mutability": "mutable",
												"name": "impl",
												"nameLocation": "1271:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "1263:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1322,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1263:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1250:26:3"
									},
									"returnParameters": {
										"id": 1325,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1285:0:3"
									},
									"scope": 1404,
									"src": "1224:62:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "21f8a721",
									"id": 1333,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAddress",
									"nameLocation": "1299:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1328,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1318:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "1310:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1327,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1310:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1309:12:3"
									},
									"returnParameters": {
										"id": 1332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1331,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "1345:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1345:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1344:9:3"
									},
									"scope": 1404,
									"src": "1290:64:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0261bf8b",
									"id": 1338,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getLendingPool",
									"nameLocation": "1367:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1334,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1381:2:3"
									},
									"returnParameters": {
										"id": 1337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1336,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1338,
												"src": "1407:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1335,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1407:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1406:9:3"
									},
									"scope": 1404,
									"src": "1358:58:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5aef021f",
									"id": 1343,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setLendingPoolImpl",
									"nameLocation": "1429:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1340,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "1456:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1343,
												"src": "1448:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1448:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1447:14:3"
									},
									"returnParameters": {
										"id": 1342,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1470:0:3"
									},
									"scope": 1404,
									"src": "1420:51:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "85c858b1",
									"id": 1348,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getLendingPoolConfigurator",
									"nameLocation": "1484:26:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1344,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1510:2:3"
									},
									"returnParameters": {
										"id": 1347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1346,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1348,
												"src": "1536:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1345,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1536:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1535:9:3"
									},
									"scope": 1404,
									"src": "1475:70:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c12542df",
									"id": 1353,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setLendingPoolConfiguratorImpl",
									"nameLocation": "1558:30:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1350,
												"mutability": "mutable",
												"name": "configurator",
												"nameLocation": "1597:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 1353,
												"src": "1589:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1349,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1589:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1588:22:3"
									},
									"returnParameters": {
										"id": 1352,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1619:0:3"
									},
									"scope": 1404,
									"src": "1549:71:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "712d9171",
									"id": 1358,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getLendingPoolCollateralManager",
									"nameLocation": "1633:31:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1354,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1664:2:3"
									},
									"returnParameters": {
										"id": 1357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1356,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1358,
												"src": "1690:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1355,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1690:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1689:9:3"
									},
									"scope": 1404,
									"src": "1624:75:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "398e5553",
									"id": 1363,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setLendingPoolCollateralManager",
									"nameLocation": "1712:31:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1360,
												"mutability": "mutable",
												"name": "manager",
												"nameLocation": "1752:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1363,
												"src": "1744:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1744:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1743:17:3"
									},
									"returnParameters": {
										"id": 1362,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1769:0:3"
									},
									"scope": 1404,
									"src": "1703:67:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "aecda378",
									"id": 1368,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPoolAdmin",
									"nameLocation": "1783:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1364,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1795:2:3"
									},
									"returnParameters": {
										"id": 1367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1366,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1368,
												"src": "1821:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1821:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1820:9:3"
									},
									"scope": 1404,
									"src": "1774:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "283d62ad",
									"id": 1373,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setPoolAdmin",
									"nameLocation": "1843:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1370,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "1864:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1373,
												"src": "1856:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1856:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1855:15:3"
									},
									"returnParameters": {
										"id": 1372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1879:0:3"
									},
									"scope": 1404,
									"src": "1834:46:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ddcaa9ea",
									"id": 1378,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getEmergencyAdmin",
									"nameLocation": "1893:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1374,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1910:2:3"
									},
									"returnParameters": {
										"id": 1377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1376,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1378,
												"src": "1936:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1375,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1936:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1935:9:3"
									},
									"scope": 1404,
									"src": "1884:61:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "35da3394",
									"id": 1383,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setEmergencyAdmin",
									"nameLocation": "1958:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1380,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "1984:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1383,
												"src": "1976:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1976:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1975:15:3"
									},
									"returnParameters": {
										"id": 1382,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1999:0:3"
									},
									"scope": 1404,
									"src": "1949:51:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fca513a8",
									"id": 1388,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPriceOracle",
									"nameLocation": "2013:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1384,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2027:2:3"
									},
									"returnParameters": {
										"id": 1387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1386,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1388,
												"src": "2053:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2053:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2052:9:3"
									},
									"scope": 1404,
									"src": "2004:58:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "530e784f",
									"id": 1393,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setPriceOracle",
									"nameLocation": "2075:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1390,
												"mutability": "mutable",
												"name": "priceOracle",
												"nameLocation": "2098:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 1393,
												"src": "2090:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2090:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2089:21:3"
									},
									"returnParameters": {
										"id": 1392,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2119:0:3"
									},
									"scope": 1404,
									"src": "2066:54:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "3618abba",
									"id": 1398,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getLendingRateOracle",
									"nameLocation": "2133:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1394,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2153:2:3"
									},
									"returnParameters": {
										"id": 1397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1396,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1398,
												"src": "2179:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1395,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2179:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2178:9:3"
									},
									"scope": 1404,
									"src": "2124:64:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "820d1274",
									"id": 1403,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setLendingRateOracle",
									"nameLocation": "2201:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1400,
												"mutability": "mutable",
												"name": "lendingRateOracle",
												"nameLocation": "2230:17:3",
												"nodeType": "VariableDeclaration",
												"scope": 1403,
												"src": "2222:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1399,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2222:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2221:27:3"
									},
									"returnParameters": {
										"id": 1402,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2257:0:3"
									},
									"scope": 1404,
									"src": "2192:66:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1405,
							"src": "374:1886:3",
							"usedErrors": [],
							"usedEvents": [
								1260,
								1264,
								1268,
								1272,
								1276,
								1280,
								1284,
								1288,
								1294,
								1302
							]
						}
					],
					"src": "37:2224:3"
				},
				"id": 3
			},
			"contracts/chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol": {
				"ast": {
					"absolutePath": "contracts/chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							1450
						]
					},
					"id": 1451,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1406,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AggregatorV3Interface",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1450,
							"linearizedBaseContracts": [
								1450
							],
							"name": "AggregatorV3Interface",
							"nameLocation": "120:21:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "313ce567",
									"id": 1411,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "155:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1407,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "163:2:4"
									},
									"returnParameters": {
										"id": 1410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1409,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1411,
												"src": "189:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1408,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "189:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "188:7:4"
									},
									"scope": 1450,
									"src": "146:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7284e416",
									"id": 1416,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "description",
									"nameLocation": "209:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1412,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "220:2:4"
									},
									"returnParameters": {
										"id": 1415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1414,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1416,
												"src": "246:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1413,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "246:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "245:15:4"
									},
									"scope": 1450,
									"src": "200:61:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "54fd4d50",
									"id": 1421,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "version",
									"nameLocation": "274:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1417,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "281:2:4"
									},
									"returnParameters": {
										"id": 1420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1419,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1421,
												"src": "307:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1418,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "307:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "306:9:4"
									},
									"scope": 1450,
									"src": "265:51:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9a6fc8f5",
									"id": 1436,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoundData",
									"nameLocation": "329:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1423,
												"mutability": "mutable",
												"name": "_roundId",
												"nameLocation": "354:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1436,
												"src": "347:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 1422,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "347:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "341:25:4"
									},
									"returnParameters": {
										"id": 1435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1426,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "397:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1436,
												"src": "390:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 1425,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "390:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1428,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "413:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1436,
												"src": "406:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1427,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "406:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1430,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "429:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1436,
												"src": "421:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1429,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "421:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1432,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "448:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1436,
												"src": "440:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1431,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "440:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1434,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "466:15:4",
												"nodeType": "VariableDeclaration",
												"scope": 1436,
												"src": "459:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 1433,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "459:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "389:93:4"
									},
									"scope": 1450,
									"src": "320:163:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "feaf968c",
									"id": 1449,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "latestRoundData",
									"nameLocation": "496:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1437,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "511:2:4"
									},
									"returnParameters": {
										"id": 1448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1439,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "556:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1449,
												"src": "549:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 1438,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "549:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1441,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "572:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1449,
												"src": "565:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1440,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "565:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1443,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "588:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1449,
												"src": "580:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "580:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1445,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "607:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1449,
												"src": "599:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1444,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "599:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1447,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "625:15:4",
												"nodeType": "VariableDeclaration",
												"scope": 1449,
												"src": "618:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 1446,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "618:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "548:93:4"
									},
									"scope": 1450,
									"src": "487:155:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1451,
							"src": "110:534:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:613:4"
				},
				"id": 4
			},
			"contracts/openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "contracts/openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							1637
						],
						"IERC721": [
							1567
						]
					},
					"id": 1568,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1452,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:5"
						},
						{
							"absolutePath": "contracts/openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1454,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1568,
							"sourceUnit": 1638,
							"src": "133:62:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1453,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1637,
										"src": "141:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1456,
										"name": "IERC165",
										"nameLocations": [
											"287:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1637,
										"src": "287:7:5"
									},
									"id": 1457,
									"nodeType": "InheritanceSpecifier",
									"src": "287:7:5"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1455,
								"nodeType": "StructuredDocumentation",
								"src": "197:68:5",
								"text": " @dev Required interface of an ERC-721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1567,
							"linearizedBaseContracts": [
								1567,
								1637
							],
							"name": "IERC721",
							"nameLocation": "276:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1458,
										"nodeType": "StructuredDocumentation",
										"src": "301:88:5",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1466,
									"name": "Transfer",
									"nameLocation": "400:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1460,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "425:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1466,
												"src": "409:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1459,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "409:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1462,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "447:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1466,
												"src": "431:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1461,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "431:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1464,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "467:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1466,
												"src": "451:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1463,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "451:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "408:67:5"
									},
									"src": "394:82:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1467,
										"nodeType": "StructuredDocumentation",
										"src": "482:94:5",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1475,
									"name": "Approval",
									"nameLocation": "587:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1469,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "612:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1475,
												"src": "596:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1468,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1471,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "635:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1475,
												"src": "619:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1470,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "619:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1473,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "661:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1475,
												"src": "645:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1472,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "595:74:5"
									},
									"src": "581:89:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1476,
										"nodeType": "StructuredDocumentation",
										"src": "676:117:5",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1484,
									"name": "ApprovalForAll",
									"nameLocation": "804:14:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1478,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "835:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1484,
												"src": "819:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1477,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "819:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1480,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "858:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1484,
												"src": "842:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1479,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "842:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1482,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "873:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1484,
												"src": "868:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1481,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "868:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:64:5"
									},
									"src": "798:85:5"
								},
								{
									"documentation": {
										"id": 1485,
										"nodeType": "StructuredDocumentation",
										"src": "889:76:5",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1492,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "979:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1487,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "997:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1492,
												"src": "989:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "989:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "988:15:5"
									},
									"returnParameters": {
										"id": 1491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1490,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1035:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1492,
												"src": "1027:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1489,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1027:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1026:17:5"
									},
									"scope": 1567,
									"src": "970:74:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1493,
										"nodeType": "StructuredDocumentation",
										"src": "1050:131:5",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1500,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1195:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1495,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1211:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1500,
												"src": "1203:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1494,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1203:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1202:17:5"
									},
									"returnParameters": {
										"id": 1499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1498,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1251:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1500,
												"src": "1243:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1497,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1243:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1242:15:5"
									},
									"scope": 1567,
									"src": "1186:72:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1501,
										"nodeType": "StructuredDocumentation",
										"src": "1264:565:5",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1512,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1843:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1503,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1868:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1512,
												"src": "1860:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1502,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1860:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1505,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1882:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1512,
												"src": "1874:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1504,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1874:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1507,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1512,
												"src": "1886:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1506,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1509,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1918:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1512,
												"src": "1903:19:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1508,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1903:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1859:64:5"
									},
									"returnParameters": {
										"id": 1511,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1932:0:5"
									},
									"scope": 1567,
									"src": "1834:99:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1513,
										"nodeType": "StructuredDocumentation",
										"src": "1939:706:5",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1522,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2659:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1515,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2684:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1522,
												"src": "2676:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1514,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2676:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1517,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2698:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1522,
												"src": "2690:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1516,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2690:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1519,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2710:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1522,
												"src": "2702:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1518,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2702:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2675:43:5"
									},
									"returnParameters": {
										"id": 1521,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2727:0:5"
									},
									"scope": 1567,
									"src": "2650:78:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1523,
										"nodeType": "StructuredDocumentation",
										"src": "2734:733:5",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1532,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3481:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1525,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3502:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1532,
												"src": "3494:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1524,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3494:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1527,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3516:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1532,
												"src": "3508:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3508:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1529,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3528:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1532,
												"src": "3520:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1528,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3520:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3493:43:5"
									},
									"returnParameters": {
										"id": 1531,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3545:0:5"
									},
									"scope": 1567,
									"src": "3472:74:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1533,
										"nodeType": "StructuredDocumentation",
										"src": "3552:452:5",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1540,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4018:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1535,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4034:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1540,
												"src": "4026:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1534,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4026:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1537,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4046:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1540,
												"src": "4038:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1536,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4038:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4025:29:5"
									},
									"returnParameters": {
										"id": 1539,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4063:0:5"
									},
									"scope": 1567,
									"src": "4009:55:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1541,
										"nodeType": "StructuredDocumentation",
										"src": "4070:315:5",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1548,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4399:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1543,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4425:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1548,
												"src": "4417:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1542,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4417:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1545,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4440:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1548,
												"src": "4435:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1544,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4435:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4416:33:5"
									},
									"returnParameters": {
										"id": 1547,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4458:0:5"
									},
									"scope": 1567,
									"src": "4390:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1549,
										"nodeType": "StructuredDocumentation",
										"src": "4465:139:5",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1556,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4618:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1551,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4638:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1556,
												"src": "4630:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1550,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4630:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4629:17:5"
									},
									"returnParameters": {
										"id": 1555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1554,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4678:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1556,
												"src": "4670:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1553,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4670:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4669:18:5"
									},
									"scope": 1567,
									"src": "4609:79:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1557,
										"nodeType": "StructuredDocumentation",
										"src": "4694:138:5",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1566,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4846:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1559,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4871:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1566,
												"src": "4863:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1558,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4863:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1561,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4886:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1566,
												"src": "4878:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4878:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:33:5"
									},
									"returnParameters": {
										"id": 1565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1564,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1566,
												"src": "4919:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1563,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4919:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4918:6:5"
									},
									"scope": 1567,
									"src": "4837:88:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1568,
							"src": "266:4661:5",
							"usedErrors": [],
							"usedEvents": [
								1466,
								1475,
								1484
							]
						}
					],
					"src": "108:4820:5"
				},
				"id": 5
			},
			"contracts/openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol": {
				"ast": {
					"absolutePath": "contracts/openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol",
					"exportedSymbols": {
						"IERC165": [
							1637
						],
						"IERC721": [
							1567
						],
						"IERC721Enumerable": [
							1598
						]
					},
					"id": 1599,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1569,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:6"
						},
						{
							"absolutePath": "contracts/openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 1570,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1599,
							"sourceUnit": 1568,
							"src": "58:23:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1572,
										"name": "IERC721",
										"nameLocations": [
											"250:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1567,
										"src": "250:7:6"
									},
									"id": 1573,
									"nodeType": "InheritanceSpecifier",
									"src": "250:7:6"
								}
							],
							"canonicalName": "IERC721Enumerable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1571,
								"nodeType": "StructuredDocumentation",
								"src": "82:136:6",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1598,
							"linearizedBaseContracts": [
								1598,
								1567,
								1637
							],
							"name": "IERC721Enumerable",
							"nameLocation": "229:17:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1574,
										"nodeType": "StructuredDocumentation",
										"src": "265:82:6",
										"text": " @dev Returns the total amount of tokens stored by the contract."
									},
									"functionSelector": "18160ddd",
									"id": 1579,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "361:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1575,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "372:2:6"
									},
									"returnParameters": {
										"id": 1578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1577,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1579,
												"src": "398:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1576,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "398:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "397:9:6"
									},
									"scope": 1598,
									"src": "352:55:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1580,
										"nodeType": "StructuredDocumentation",
										"src": "413:171:6",
										"text": " @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
									},
									"functionSelector": "2f745c59",
									"id": 1589,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenOfOwnerByIndex",
									"nameLocation": "598:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1582,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "626:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1589,
												"src": "618:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1581,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "618:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1584,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "641:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1589,
												"src": "633:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1583,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "633:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "617:30:6"
									},
									"returnParameters": {
										"id": 1588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1587,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "679:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1589,
												"src": "671:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1586,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "671:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "670:17:6"
									},
									"scope": 1598,
									"src": "589:99:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1590,
										"nodeType": "StructuredDocumentation",
										"src": "694:164:6",
										"text": " @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n Use along with {totalSupply} to enumerate all tokens."
									},
									"functionSelector": "4f6ccce7",
									"id": 1597,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenByIndex",
									"nameLocation": "872:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1592,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "893:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1597,
												"src": "885:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1591,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "885:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "884:15:6"
									},
									"returnParameters": {
										"id": 1596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1595,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1597,
												"src": "923:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1594,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "923:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "922:9:6"
									},
									"scope": 1598,
									"src": "863:69:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1599,
							"src": "219:715:6",
							"usedErrors": [],
							"usedEvents": [
								1466,
								1475,
								1484
							]
						}
					],
					"src": "33:902:6"
				},
				"id": 6
			},
			"contracts/openzeppelin/contracts/token/ERC721/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "contracts/openzeppelin/contracts/token/ERC721/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC165": [
							1637
						],
						"IERC721": [
							1567
						],
						"IERC721Metadata": [
							1625
						]
					},
					"id": 1626,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1600,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:7"
						},
						{
							"absolutePath": "contracts/openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../../../../../contracts/openzeppelin/contracts/token/ERC721/IERC721.sol",
							"id": 1601,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1626,
							"sourceUnit": 1568,
							"src": "58:82:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1603,
										"name": "IERC721",
										"nameLocations": [
											"305:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1567,
										"src": "305:7:7"
									},
									"id": 1604,
									"nodeType": "InheritanceSpecifier",
									"src": "305:7:7"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1602,
								"nodeType": "StructuredDocumentation",
								"src": "142:133:7",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1625,
							"linearizedBaseContracts": [
								1625,
								1567,
								1637
							],
							"name": "IERC721Metadata",
							"nameLocation": "286:15:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1605,
										"nodeType": "StructuredDocumentation",
										"src": "320:58:7",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1610,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "392:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1606,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "396:2:7"
									},
									"returnParameters": {
										"id": 1609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1608,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1610,
												"src": "422:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1607,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "422:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "421:15:7"
									},
									"scope": 1625,
									"src": "383:54:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1611,
										"nodeType": "StructuredDocumentation",
										"src": "443:60:7",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1616,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "517:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1612,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "523:2:7"
									},
									"returnParameters": {
										"id": 1615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1614,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1616,
												"src": "549:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1613,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "549:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "548:15:7"
									},
									"scope": 1625,
									"src": "508:56:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1617,
										"nodeType": "StructuredDocumentation",
										"src": "570:90:7",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1624,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "674:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1619,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "691:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1624,
												"src": "683:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1618,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "682:17:7"
									},
									"returnParameters": {
										"id": 1623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1622,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1624,
												"src": "723:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1621,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "723:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "722:15:7"
									},
									"scope": 1625,
									"src": "665:73:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1626,
							"src": "276:464:7",
							"usedErrors": [],
							"usedEvents": [
								1466,
								1475,
								1484
							]
						}
					],
					"src": "33:708:7"
				},
				"id": 7
			},
			"contracts/openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "contracts/openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1637
						]
					},
					"id": 1638,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1627,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "115:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1628,
								"nodeType": "StructuredDocumentation",
								"src": "140:280:8",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1637,
							"linearizedBaseContracts": [
								1637
							],
							"name": "IERC165",
							"nameLocation": "431:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1629,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:8",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1636,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1631,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1636,
												"src": "817:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1630,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:8"
									},
									"returnParameters": {
										"id": 1635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1634,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1636,
												"src": "860:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1633,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:8"
									},
									"scope": 1637,
									"src": "790:76:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1638,
							"src": "421:447:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:8"
				},
				"id": 8
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/IERC721Permit.sol": {
				"ast": {
					"absolutePath": "contracts/uniswap/v3-periphery/contracts/interfaces/IERC721Permit.sol",
					"exportedSymbols": {
						"IERC165": [
							1637
						],
						"IERC721": [
							1567
						],
						"IERC721Permit": [
							1672
						]
					},
					"id": 1673,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1639,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:23:9"
						},
						{
							"absolutePath": "contracts/openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../../../../openzeppelin/contracts/token/ERC721/IERC721.sol",
							"id": 1640,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1673,
							"sourceUnit": 1568,
							"src": "70:69:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1642,
										"name": "IERC721",
										"nameLocations": [
											"292:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1567,
										"src": "292:7:9"
									},
									"id": 1643,
									"nodeType": "InheritanceSpecifier",
									"src": "292:7:9"
								}
							],
							"canonicalName": "IERC721Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1641,
								"nodeType": "StructuredDocumentation",
								"src": "141:124:9",
								"text": "@title ERC721 with permit\n @notice Extension to ERC721 that includes a permit function for signature based approvals"
							},
							"fullyImplemented": false,
							"id": 1672,
							"linearizedBaseContracts": [
								1672,
								1567,
								1637
							],
							"name": "IERC721Permit",
							"nameLocation": "275:13:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1644,
										"nodeType": "StructuredDocumentation",
										"src": "306:104:9",
										"text": "@notice The permit typehash used in the permit signature\n @return The typehash for the permit"
									},
									"functionSelector": "30adf81f",
									"id": 1649,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "PERMIT_TYPEHASH",
									"nameLocation": "424:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1645,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "439:2:9"
									},
									"returnParameters": {
										"id": 1648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1647,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1649,
												"src": "465:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1646,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "465:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "464:9:9"
									},
									"scope": 1672,
									"src": "415:59:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1650,
										"nodeType": "StructuredDocumentation",
										"src": "480:135:9",
										"text": "@notice The domain separator used in the permit signature\n @return The domain seperator used in encoding of permit signature"
									},
									"functionSelector": "3644e515",
									"id": 1655,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "629:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1651,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "645:2:9"
									},
									"returnParameters": {
										"id": 1654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1653,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1655,
												"src": "671:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1652,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "671:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "670:9:9"
									},
									"scope": 1672,
									"src": "620:60:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1656,
										"nodeType": "StructuredDocumentation",
										"src": "686:605:9",
										"text": "@notice Approve of a specific token ID for spending by spender via signature\n @param spender The account that is being approved\n @param tokenId The ID of the token that is being approved for spending\n @param deadline The deadline timestamp by which the call must be mined for the approve to work\n @param v Must produce valid secp256k1 signature from the holder along with `r` and `s`\n @param r Must produce valid secp256k1 signature from the holder along with `v` and `s`\n @param s Must produce valid secp256k1 signature from the holder along with `r` and `v`"
									},
									"functionSelector": "7ac2ff7b",
									"id": 1671,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "1305:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1658,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1329:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1671,
												"src": "1321:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1657,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1321:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1660,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1354:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1671,
												"src": "1346:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1659,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1346:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1662,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1379:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1671,
												"src": "1371:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1661,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1371:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1664,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1403:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1671,
												"src": "1397:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1663,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1397:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1666,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1422:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1671,
												"src": "1414:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1665,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1414:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1668,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1441:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1671,
												"src": "1433:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1667,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1433:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1311:137:9"
									},
									"returnParameters": {
										"id": 1670,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1465:0:9"
									},
									"scope": 1672,
									"src": "1296:170:9",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1673,
							"src": "265:1203:9",
							"usedErrors": [],
							"usedEvents": [
								1466,
								1475,
								1484
							]
						}
					],
					"src": "45:1424:9"
				},
				"id": 9
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol": {
				"ast": {
					"absolutePath": "contracts/uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol",
					"exportedSymbols": {
						"IERC165": [
							1637
						],
						"IERC721": [
							1567
						],
						"IERC721Enumerable": [
							1598
						],
						"IERC721Metadata": [
							1625
						],
						"IERC721Permit": [
							1672
						],
						"INonfungiblePositionManager": [
							1870
						],
						"IPeripheryImmutableState": [
							1886
						],
						"IPeripheryPayments": [
							1912
						],
						"IPoolInitializer": [
							1931
						]
					},
					"id": 1871,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1674,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:23:10"
						},
						{
							"id": 1675,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "69:19:10"
						},
						{
							"absolutePath": "contracts/openzeppelin/contracts/token/ERC721/IERC721Metadata.sol",
							"file": "../../../../openzeppelin/contracts/token/ERC721/IERC721Metadata.sol",
							"id": 1676,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1871,
							"sourceUnit": 1626,
							"src": "90:77:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol",
							"file": "../../../../openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol",
							"id": 1677,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1871,
							"sourceUnit": 1599,
							"src": "168:79:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/uniswap/v3-periphery/contracts/interfaces/IPoolInitializer.sol",
							"file": "./IPoolInitializer.sol",
							"id": 1678,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1871,
							"sourceUnit": 1932,
							"src": "249:32:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/uniswap/v3-periphery/contracts/interfaces/IERC721Permit.sol",
							"file": "./IERC721Permit.sol",
							"id": 1679,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1871,
							"sourceUnit": 1673,
							"src": "282:29:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol",
							"file": "./IPeripheryPayments.sol",
							"id": 1680,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1871,
							"sourceUnit": 1913,
							"src": "312:34:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol",
							"file": "./IPeripheryImmutableState.sol",
							"id": 1681,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1871,
							"sourceUnit": 1887,
							"src": "347:40:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1683,
										"name": "IPoolInitializer",
										"nameLocations": [
											"611:16:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1931,
										"src": "611:16:10"
									},
									"id": 1684,
									"nodeType": "InheritanceSpecifier",
									"src": "611:16:10"
								},
								{
									"baseName": {
										"id": 1685,
										"name": "IPeripheryPayments",
										"nameLocations": [
											"633:18:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1912,
										"src": "633:18:10"
									},
									"id": 1686,
									"nodeType": "InheritanceSpecifier",
									"src": "633:18:10"
								},
								{
									"baseName": {
										"id": 1687,
										"name": "IPeripheryImmutableState",
										"nameLocations": [
											"657:24:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1886,
										"src": "657:24:10"
									},
									"id": 1688,
									"nodeType": "InheritanceSpecifier",
									"src": "657:24:10"
								},
								{
									"baseName": {
										"id": 1689,
										"name": "IERC721Metadata",
										"nameLocations": [
											"687:15:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1625,
										"src": "687:15:10"
									},
									"id": 1690,
									"nodeType": "InheritanceSpecifier",
									"src": "687:15:10"
								},
								{
									"baseName": {
										"id": 1691,
										"name": "IERC721Enumerable",
										"nameLocations": [
											"708:17:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1598,
										"src": "708:17:10"
									},
									"id": 1692,
									"nodeType": "InheritanceSpecifier",
									"src": "708:17:10"
								},
								{
									"baseName": {
										"id": 1693,
										"name": "IERC721Permit",
										"nameLocations": [
											"731:13:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1672,
										"src": "731:13:10"
									},
									"id": 1694,
									"nodeType": "InheritanceSpecifier",
									"src": "731:13:10"
								}
							],
							"canonicalName": "INonfungiblePositionManager",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1682,
								"nodeType": "StructuredDocumentation",
								"src": "389:177:10",
								"text": "@title Non-fungible token for positions\n @notice Wraps Uniswap V3 positions in a non-fungible token interface which allows for them to be transferred\n and authorized."
							},
							"fullyImplemented": false,
							"id": 1870,
							"linearizedBaseContracts": [
								1870,
								1672,
								1598,
								1625,
								1567,
								1637,
								1886,
								1912,
								1931
							],
							"name": "INonfungiblePositionManager",
							"nameLocation": "576:27:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1695,
										"nodeType": "StructuredDocumentation",
										"src": "751:458:10",
										"text": "@notice Emitted when liquidity is increased for a position NFT\n @dev Also emitted when a token is minted\n @param tokenId The ID of the token for which liquidity was increased\n @param liquidity The amount by which liquidity for the NFT position was increased\n @param amount0 The amount of token0 that was paid for the increase in liquidity\n @param amount1 The amount of token1 that was paid for the increase in liquidity"
									},
									"eventSelector": "3067048beee31b25b2f1681f88dac838c8bba36af25bfb2b7cf7473a5847e35f",
									"id": 1705,
									"name": "IncreaseLiquidity",
									"nameLocation": "1220:17:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1697,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1254:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1705,
												"src": "1238:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1238:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1699,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1271:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1705,
												"src": "1263:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1698,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1263:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1701,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1290:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1705,
												"src": "1282:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1700,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1282:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1703,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1307:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1705,
												"src": "1299:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1702,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1299:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1237:78:10"
									},
									"src": "1214:102:10"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1706,
										"nodeType": "StructuredDocumentation",
										"src": "1321:419:10",
										"text": "@notice Emitted when liquidity is decreased for a position NFT\n @param tokenId The ID of the token for which liquidity was decreased\n @param liquidity The amount by which liquidity for the NFT position was decreased\n @param amount0 The amount of token0 that was accounted for the decrease in liquidity\n @param amount1 The amount of token1 that was accounted for the decrease in liquidity"
									},
									"eventSelector": "26f6a048ee9138f2c0ce266f322cb99228e8d619ae2bff30c67f8dcf9d2377b4",
									"id": 1716,
									"name": "DecreaseLiquidity",
									"nameLocation": "1751:17:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1708,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1785:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1716,
												"src": "1769:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1707,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1769:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1710,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1802:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1716,
												"src": "1794:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1709,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1794:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1712,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1821:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1716,
												"src": "1813:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1711,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1813:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1714,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1838:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1716,
												"src": "1830:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1713,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1830:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1768:78:10"
									},
									"src": "1745:102:10"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1717,
										"nodeType": "StructuredDocumentation",
										"src": "1852:522:10",
										"text": "@notice Emitted when tokens are collected for a position NFT\n @dev The amounts reported may not be exactly equivalent to the amounts transferred, due to rounding behavior\n @param tokenId The ID of the token for which underlying tokens were collected\n @param recipient The address of the account that received the collected tokens\n @param amount0 The amount of token0 owed to the position that was collected\n @param amount1 The amount of token1 owed to the position that was collected"
									},
									"eventSelector": "40d0efd1a53d60ecbf40971b9daf7dc90178c3aadc7aab1765632738fa8b8f01",
									"id": 1727,
									"name": "Collect",
									"nameLocation": "2385:7:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1719,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2409:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1727,
												"src": "2393:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1718,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2393:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1721,
												"indexed": false,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2426:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1727,
												"src": "2418:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2418:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1723,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "2445:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1727,
												"src": "2437:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2437:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1725,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "2462:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1727,
												"src": "2454:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1724,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2454:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2392:78:10"
									},
									"src": "2379:92:10"
								},
								{
									"documentation": {
										"id": 1728,
										"nodeType": "StructuredDocumentation",
										"src": "2477:1157:10",
										"text": "@notice Returns the position information associated with a given token ID.\n @dev Throws if the token ID is not valid.\n @param tokenId The ID of the token that represents the position\n @return nonce The nonce for permits\n @return operator The address that is approved for spending\n @return token0 The address of the token0 for a specific pool\n @return token1 The address of the token1 for a specific pool\n @return fee The fee associated with the pool\n @return tickLower The lower end of the tick range for the position\n @return tickUpper The higher end of the tick range for the position\n @return liquidity The liquidity of the position\n @return feeGrowthInside0LastX128 The fee growth of token0 as of the last action on the individual position\n @return feeGrowthInside1LastX128 The fee growth of token1 as of the last action on the individual position\n @return tokensOwed0 The uncollected amount of token0 owed to the position as of the last computation\n @return tokensOwed1 The uncollected amount of token1 owed to the position as of the last computation"
									},
									"functionSelector": "99fbab88",
									"id": 1757,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "positions",
									"nameLocation": "3648:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1730,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3666:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1757,
												"src": "3658:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1729,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3658:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3657:17:10"
									},
									"returnParameters": {
										"id": 1756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1733,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "3742:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1757,
												"src": "3735:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1732,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "3735:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1735,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3769:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1757,
												"src": "3761:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1734,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3761:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1737,
												"mutability": "mutable",
												"name": "token0",
												"nameLocation": "3799:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1757,
												"src": "3791:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1736,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3791:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1739,
												"mutability": "mutable",
												"name": "token1",
												"nameLocation": "3827:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1757,
												"src": "3819:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1738,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1741,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "3854:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1757,
												"src": "3847:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1740,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "3847:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1743,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "3877:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1757,
												"src": "3871:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1742,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3871:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1745,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "3906:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1757,
												"src": "3900:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1744,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3900:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1747,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "3937:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1757,
												"src": "3929:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1746,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3929:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1749,
												"mutability": "mutable",
												"name": "feeGrowthInside0LastX128",
												"nameLocation": "3968:24:10",
												"nodeType": "VariableDeclaration",
												"scope": 1757,
												"src": "3960:32:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1748,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3960:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1751,
												"mutability": "mutable",
												"name": "feeGrowthInside1LastX128",
												"nameLocation": "4014:24:10",
												"nodeType": "VariableDeclaration",
												"scope": 1757,
												"src": "4006:32:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1750,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4006:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1753,
												"mutability": "mutable",
												"name": "tokensOwed0",
												"nameLocation": "4060:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1757,
												"src": "4052:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1752,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "4052:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1755,
												"mutability": "mutable",
												"name": "tokensOwed1",
												"nameLocation": "4093:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1757,
												"src": "4085:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1754,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "4085:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3721:393:10"
									},
									"scope": 1870,
									"src": "3639:476:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "INonfungiblePositionManager.MintParams",
									"id": 1780,
									"members": [
										{
											"constant": false,
											"id": 1759,
											"mutability": "mutable",
											"name": "token0",
											"nameLocation": "4157:6:10",
											"nodeType": "VariableDeclaration",
											"scope": 1780,
											"src": "4149:14:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1758,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4149:7:10",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1761,
											"mutability": "mutable",
											"name": "token1",
											"nameLocation": "4181:6:10",
											"nodeType": "VariableDeclaration",
											"scope": 1780,
											"src": "4173:14:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1760,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4173:7:10",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1763,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "4204:3:10",
											"nodeType": "VariableDeclaration",
											"scope": 1780,
											"src": "4197:10:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 1762,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "4197:6:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1765,
											"mutability": "mutable",
											"name": "tickLower",
											"nameLocation": "4223:9:10",
											"nodeType": "VariableDeclaration",
											"scope": 1780,
											"src": "4217:15:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int24",
												"typeString": "int24"
											},
											"typeName": {
												"id": 1764,
												"name": "int24",
												"nodeType": "ElementaryTypeName",
												"src": "4217:5:10",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1767,
											"mutability": "mutable",
											"name": "tickUpper",
											"nameLocation": "4248:9:10",
											"nodeType": "VariableDeclaration",
											"scope": 1780,
											"src": "4242:15:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int24",
												"typeString": "int24"
											},
											"typeName": {
												"id": 1766,
												"name": "int24",
												"nodeType": "ElementaryTypeName",
												"src": "4242:5:10",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1769,
											"mutability": "mutable",
											"name": "amount0Desired",
											"nameLocation": "4275:14:10",
											"nodeType": "VariableDeclaration",
											"scope": 1780,
											"src": "4267:22:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1768,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4267:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1771,
											"mutability": "mutable",
											"name": "amount1Desired",
											"nameLocation": "4307:14:10",
											"nodeType": "VariableDeclaration",
											"scope": 1780,
											"src": "4299:22:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1770,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4299:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1773,
											"mutability": "mutable",
											"name": "amount0Min",
											"nameLocation": "4339:10:10",
											"nodeType": "VariableDeclaration",
											"scope": 1780,
											"src": "4331:18:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1772,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4331:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1775,
											"mutability": "mutable",
											"name": "amount1Min",
											"nameLocation": "4367:10:10",
											"nodeType": "VariableDeclaration",
											"scope": 1780,
											"src": "4359:18:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1774,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4359:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1777,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "4395:9:10",
											"nodeType": "VariableDeclaration",
											"scope": 1780,
											"src": "4387:17:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1776,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4387:7:10",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1779,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "4422:8:10",
											"nodeType": "VariableDeclaration",
											"scope": 1780,
											"src": "4414:16:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1778,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4414:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "MintParams",
									"nameLocation": "4128:10:10",
									"nodeType": "StructDefinition",
									"scope": 1870,
									"src": "4121:316:10",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 1781,
										"nodeType": "StructuredDocumentation",
										"src": "4443:586:10",
										"text": "@notice Creates a new position wrapped in a NFT\n @dev Call this when the pool does exist and is initialized. Note that if the pool is created but not initialized\n a method does not exist, i.e. the pool is assumed to be initialized.\n @param params The params necessary to mint a position, encoded as `MintParams` in calldata\n @return tokenId The ID of the token that represents the minted position\n @return liquidity The amount of liquidity for this position\n @return amount0 The amount of token0\n @return amount1 The amount of token1"
									},
									"functionSelector": "88316456",
									"id": 1795,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "5043:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1784,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "5068:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1795,
												"src": "5048:26:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_MintParams_$1780_calldata_ptr",
													"typeString": "struct INonfungiblePositionManager.MintParams"
												},
												"typeName": {
													"id": 1783,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1782,
														"name": "MintParams",
														"nameLocations": [
															"5048:10:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1780,
														"src": "5048:10:10"
													},
													"referencedDeclaration": 1780,
													"src": "5048:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MintParams_$1780_storage_ptr",
														"typeString": "struct INonfungiblePositionManager.MintParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5047:28:10"
									},
									"returnParameters": {
										"id": 1794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1787,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5147:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1795,
												"src": "5139:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1786,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5139:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1789,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "5176:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1795,
												"src": "5168:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1788,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5168:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1791,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "5207:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1795,
												"src": "5199:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1790,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5199:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1793,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "5236:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1795,
												"src": "5228:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1792,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5228:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:128:10"
									},
									"scope": 1870,
									"src": "5034:220:10",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "INonfungiblePositionManager.IncreaseLiquidityParams",
									"id": 1808,
									"members": [
										{
											"constant": false,
											"id": 1797,
											"mutability": "mutable",
											"name": "tokenId",
											"nameLocation": "5309:7:10",
											"nodeType": "VariableDeclaration",
											"scope": 1808,
											"src": "5301:15:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1796,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5301:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1799,
											"mutability": "mutable",
											"name": "amount0Desired",
											"nameLocation": "5334:14:10",
											"nodeType": "VariableDeclaration",
											"scope": 1808,
											"src": "5326:22:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1798,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5326:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1801,
											"mutability": "mutable",
											"name": "amount1Desired",
											"nameLocation": "5366:14:10",
											"nodeType": "VariableDeclaration",
											"scope": 1808,
											"src": "5358:22:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1800,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5358:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1803,
											"mutability": "mutable",
											"name": "amount0Min",
											"nameLocation": "5398:10:10",
											"nodeType": "VariableDeclaration",
											"scope": 1808,
											"src": "5390:18:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1802,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5390:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1805,
											"mutability": "mutable",
											"name": "amount1Min",
											"nameLocation": "5426:10:10",
											"nodeType": "VariableDeclaration",
											"scope": 1808,
											"src": "5418:18:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1804,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5418:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1807,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "5454:8:10",
											"nodeType": "VariableDeclaration",
											"scope": 1808,
											"src": "5446:16:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1806,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5446:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "IncreaseLiquidityParams",
									"nameLocation": "5267:23:10",
									"nodeType": "StructDefinition",
									"scope": 1870,
									"src": "5260:209:10",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 1809,
										"nodeType": "StructuredDocumentation",
										"src": "5475:821:10",
										"text": "@notice Increases the amount of liquidity in a position, with tokens paid by the `msg.sender`\n @param params tokenId The ID of the token for which liquidity is being increased,\n amount0Desired The desired amount of token0 to be spent,\n amount1Desired The desired amount of token1 to be spent,\n amount0Min The minimum amount of token0 to spend, which serves as a slippage check,\n amount1Min The minimum amount of token1 to spend, which serves as a slippage check,\n deadline The time by which the transaction must be included to effect the change\n @return liquidity The new liquidity amount as a result of the increase\n @return amount0 The amount of token0 to acheive resulting liquidity\n @return amount1 The amount of token1 to acheive resulting liquidity"
									},
									"functionSelector": "219f5d17",
									"id": 1821,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "increaseLiquidity",
									"nameLocation": "6310:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1812,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "6361:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1821,
												"src": "6328:39:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_IncreaseLiquidityParams_$1808_calldata_ptr",
													"typeString": "struct INonfungiblePositionManager.IncreaseLiquidityParams"
												},
												"typeName": {
													"id": 1811,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1810,
														"name": "IncreaseLiquidityParams",
														"nameLocations": [
															"6328:23:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1808,
														"src": "6328:23:10"
													},
													"referencedDeclaration": 1808,
													"src": "6328:23:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_IncreaseLiquidityParams_$1808_storage_ptr",
														"typeString": "struct INonfungiblePositionManager.IncreaseLiquidityParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6327:41:10"
									},
									"returnParameters": {
										"id": 1820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1815,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "6440:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1821,
												"src": "6432:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1814,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "6432:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1817,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "6471:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1821,
												"src": "6463:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1816,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6463:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1819,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "6500:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1821,
												"src": "6492:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1818,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6492:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6418:99:10"
									},
									"scope": 1870,
									"src": "6301:217:10",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "INonfungiblePositionManager.DecreaseLiquidityParams",
									"id": 1832,
									"members": [
										{
											"constant": false,
											"id": 1823,
											"mutability": "mutable",
											"name": "tokenId",
											"nameLocation": "6573:7:10",
											"nodeType": "VariableDeclaration",
											"scope": 1832,
											"src": "6565:15:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1822,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6565:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1825,
											"mutability": "mutable",
											"name": "liquidity",
											"nameLocation": "6598:9:10",
											"nodeType": "VariableDeclaration",
											"scope": 1832,
											"src": "6590:17:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 1824,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "6590:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1827,
											"mutability": "mutable",
											"name": "amount0Min",
											"nameLocation": "6625:10:10",
											"nodeType": "VariableDeclaration",
											"scope": 1832,
											"src": "6617:18:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1826,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6617:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1829,
											"mutability": "mutable",
											"name": "amount1Min",
											"nameLocation": "6653:10:10",
											"nodeType": "VariableDeclaration",
											"scope": 1832,
											"src": "6645:18:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1828,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6645:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1831,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "6681:8:10",
											"nodeType": "VariableDeclaration",
											"scope": 1832,
											"src": "6673:16:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1830,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6673:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "DecreaseLiquidityParams",
									"nameLocation": "6531:23:10",
									"nodeType": "StructDefinition",
									"scope": 1870,
									"src": "6524:172:10",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 1833,
										"nodeType": "StructuredDocumentation",
										"src": "6702:702:10",
										"text": "@notice Decreases the amount of liquidity in a position and accounts it to the position\n @param params tokenId The ID of the token for which liquidity is being decreased,\n amount The amount by which liquidity will be decreased,\n amount0Min The minimum amount of token0 that should be accounted for the burned liquidity,\n amount1Min The minimum amount of token1 that should be accounted for the burned liquidity,\n deadline The time by which the transaction must be included to effect the change\n @return amount0 The amount of token0 accounted to the position's tokens owed\n @return amount1 The amount of token1 accounted to the position's tokens owed"
									},
									"functionSelector": "0c49ccbe",
									"id": 1843,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseLiquidity",
									"nameLocation": "7418:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1836,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "7469:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1843,
												"src": "7436:39:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_DecreaseLiquidityParams_$1832_calldata_ptr",
													"typeString": "struct INonfungiblePositionManager.DecreaseLiquidityParams"
												},
												"typeName": {
													"id": 1835,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1834,
														"name": "DecreaseLiquidityParams",
														"nameLocations": [
															"7436:23:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1832,
														"src": "7436:23:10"
													},
													"referencedDeclaration": 1832,
													"src": "7436:23:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_DecreaseLiquidityParams_$1832_storage_ptr",
														"typeString": "struct INonfungiblePositionManager.DecreaseLiquidityParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7435:41:10"
									},
									"returnParameters": {
										"id": 1842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1839,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "7535:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1843,
												"src": "7527:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7527:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1841,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "7552:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1843,
												"src": "7544:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1840,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7544:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7526:34:10"
									},
									"scope": 1870,
									"src": "7409:152:10",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "INonfungiblePositionManager.CollectParams",
									"id": 1852,
									"members": [
										{
											"constant": false,
											"id": 1845,
											"mutability": "mutable",
											"name": "tokenId",
											"nameLocation": "7606:7:10",
											"nodeType": "VariableDeclaration",
											"scope": 1852,
											"src": "7598:15:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1844,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "7598:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1847,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "7631:9:10",
											"nodeType": "VariableDeclaration",
											"scope": 1852,
											"src": "7623:17:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1846,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "7623:7:10",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1849,
											"mutability": "mutable",
											"name": "amount0Max",
											"nameLocation": "7658:10:10",
											"nodeType": "VariableDeclaration",
											"scope": 1852,
											"src": "7650:18:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 1848,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "7650:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1851,
											"mutability": "mutable",
											"name": "amount1Max",
											"nameLocation": "7686:10:10",
											"nodeType": "VariableDeclaration",
											"scope": 1852,
											"src": "7678:18:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 1850,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "7678:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "CollectParams",
									"nameLocation": "7574:13:10",
									"nodeType": "StructDefinition",
									"scope": 1870,
									"src": "7567:136:10",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 1853,
										"nodeType": "StructuredDocumentation",
										"src": "7709:489:10",
										"text": "@notice Collects up to a maximum amount of fees owed to a specific position to the recipient\n @param params tokenId The ID of the NFT for which tokens are being collected,\n recipient The account that should receive the tokens,\n amount0Max The maximum amount of token0 to collect,\n amount1Max The maximum amount of token1 to collect\n @return amount0 The amount of fees collected in token0\n @return amount1 The amount of fees collected in token1"
									},
									"functionSelector": "fc6f7865",
									"id": 1863,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "collect",
									"nameLocation": "8212:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1856,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "8243:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1863,
												"src": "8220:29:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_CollectParams_$1852_calldata_ptr",
													"typeString": "struct INonfungiblePositionManager.CollectParams"
												},
												"typeName": {
													"id": 1855,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1854,
														"name": "CollectParams",
														"nameLocations": [
															"8220:13:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1852,
														"src": "8220:13:10"
													},
													"referencedDeclaration": 1852,
													"src": "8220:13:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_CollectParams_$1852_storage_ptr",
														"typeString": "struct INonfungiblePositionManager.CollectParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8219:31:10"
									},
									"returnParameters": {
										"id": 1862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1859,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "8285:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1863,
												"src": "8277:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8277:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1861,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "8302:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1863,
												"src": "8294:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1860,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8294:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8276:34:10"
									},
									"scope": 1870,
									"src": "8203:108:10",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1864,
										"nodeType": "StructuredDocumentation",
										"src": "8317:213:10",
										"text": "@notice Burns a token ID, which deletes it from the NFT contract. The token must have 0 liquidity and all tokens\n must be collected first.\n @param tokenId The ID of the token that is being burned"
									},
									"functionSelector": "42966c68",
									"id": 1869,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "8544:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1866,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8557:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1869,
												"src": "8549:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1865,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8549:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8548:17:10"
									},
									"returnParameters": {
										"id": 1868,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8582:0:10"
									},
									"scope": 1870,
									"src": "8535:48:10",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1871,
							"src": "566:8019:10",
							"usedErrors": [],
							"usedEvents": [
								1466,
								1475,
								1484,
								1705,
								1716,
								1727
							]
						}
					],
					"src": "45:8541:10"
				},
				"id": 10
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol": {
				"ast": {
					"absolutePath": "contracts/uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol",
					"exportedSymbols": {
						"IPeripheryImmutableState": [
							1886
						]
					},
					"id": 1887,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1872,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IPeripheryImmutableState",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1873,
								"nodeType": "StructuredDocumentation",
								"src": "71:91:11",
								"text": "@title Immutable state\n @notice Functions that return immutable state of the router"
							},
							"fullyImplemented": false,
							"id": 1886,
							"linearizedBaseContracts": [
								1886
							],
							"name": "IPeripheryImmutableState",
							"nameLocation": "172:24:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1874,
										"nodeType": "StructuredDocumentation",
										"src": "203:57:11",
										"text": "@return Returns the address of the Uniswap V3 factory"
									},
									"functionSelector": "c45a0155",
									"id": 1879,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nameLocation": "274:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1875,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "281:2:11"
									},
									"returnParameters": {
										"id": 1878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1877,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1879,
												"src": "307:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1876,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "307:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "306:9:11"
									},
									"scope": 1886,
									"src": "265:51:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1880,
										"nodeType": "StructuredDocumentation",
										"src": "322:40:11",
										"text": "@return Returns the address of WETH9"
									},
									"functionSelector": "4aa4a4fc",
									"id": 1885,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "WETH9",
									"nameLocation": "376:5:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1881,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "381:2:11"
									},
									"returnParameters": {
										"id": 1884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1883,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1885,
												"src": "407:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1882,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "407:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "406:9:11"
									},
									"scope": 1886,
									"src": "367:49:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1887,
							"src": "162:256:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:374:11"
				},
				"id": 11
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol": {
				"ast": {
					"absolutePath": "contracts/uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol",
					"exportedSymbols": {
						"IPeripheryPayments": [
							1912
						]
					},
					"id": 1913,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1888,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IPeripheryPayments",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1889,
								"nodeType": "StructuredDocumentation",
								"src": "71:92:12",
								"text": "@title Periphery Payments\n @notice Functions to ease deposits and withdrawals of ETH"
							},
							"fullyImplemented": false,
							"id": 1912,
							"linearizedBaseContracts": [
								1912
							],
							"name": "IPeripheryPayments",
							"nameLocation": "173:18:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1890,
										"nodeType": "StructuredDocumentation",
										"src": "198:302:12",
										"text": "@notice Unwraps the contract's WETH9 balance and sends it to recipient as ETH.\n @dev The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.\n @param amountMinimum The minimum amount of WETH9 to unwrap\n @param recipient The address receiving ETH"
									},
									"functionSelector": "49404b7c",
									"id": 1897,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "unwrapWETH9",
									"nameLocation": "514:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1892,
												"mutability": "mutable",
												"name": "amountMinimum",
												"nameLocation": "534:13:12",
												"nodeType": "VariableDeclaration",
												"scope": 1897,
												"src": "526:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1891,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "526:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1894,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "557:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1897,
												"src": "549:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1893,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "549:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "525:42:12"
									},
									"returnParameters": {
										"id": 1896,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "584:0:12"
									},
									"scope": 1912,
									"src": "505:80:12",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1898,
										"nodeType": "StructuredDocumentation",
										"src": "591:225:12",
										"text": "@notice Refunds any ETH balance held by this contract to the `msg.sender`\n @dev Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps\n that use ether for the input amount"
									},
									"functionSelector": "12210e8a",
									"id": 1901,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "refundETH",
									"nameLocation": "830:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1899,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "839:2:12"
									},
									"returnParameters": {
										"id": 1900,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "858:0:12"
									},
									"scope": 1912,
									"src": "821:38:12",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1902,
										"nodeType": "StructuredDocumentation",
										"src": "865:427:12",
										"text": "@notice Transfers the full amount of a token held by this contract to recipient\n @dev The amountMinimum parameter prevents malicious contracts from stealing the token from users\n @param token The contract address of the token which will be transferred to `recipient`\n @param amountMinimum The minimum amount of token required for a transfer\n @param recipient The destination address of the token"
									},
									"functionSelector": "df2ab5bb",
									"id": 1911,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sweepToken",
									"nameLocation": "1306:10:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1909,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1904,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1334:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1911,
												"src": "1326:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1903,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1326:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1906,
												"mutability": "mutable",
												"name": "amountMinimum",
												"nameLocation": "1357:13:12",
												"nodeType": "VariableDeclaration",
												"scope": 1911,
												"src": "1349:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1905,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1349:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1908,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1388:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1911,
												"src": "1380:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1907,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1380:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1316:87:12"
									},
									"returnParameters": {
										"id": 1910,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1420:0:12"
									},
									"scope": 1912,
									"src": "1297:124:12",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1913,
							"src": "163:1260:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:1379:12"
				},
				"id": 12
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/IPoolInitializer.sol": {
				"ast": {
					"absolutePath": "contracts/uniswap/v3-periphery/contracts/interfaces/IPoolInitializer.sol",
					"exportedSymbols": {
						"IPoolInitializer": [
							1931
						]
					},
					"id": 1932,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1914,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:13"
						},
						{
							"id": 1915,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "70:19:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IPoolInitializer",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1916,
								"nodeType": "StructuredDocumentation",
								"src": "91:194:13",
								"text": "@title Creates and initializes V3 Pools\n @notice Provides a method for creating and initializing a pool, if necessary, for bundling with other methods that\n require the pool to exist."
							},
							"fullyImplemented": false,
							"id": 1931,
							"linearizedBaseContracts": [
								1931
							],
							"name": "IPoolInitializer",
							"nameLocation": "295:16:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1917,
										"nodeType": "StructuredDocumentation",
										"src": "318:648:13",
										"text": "@notice Creates a new pool if it does not exist, then initializes if not initialized\n @dev This method can be bundled with others via IMulticall for the first action (e.g. mint) performed against a pool\n @param token0 The contract address of token0 of the pool\n @param token1 The contract address of token1 of the pool\n @param fee The fee amount of the v3 pool for the specified token pair\n @param sqrtPriceX96 The initial square root price of the pool as a Q64.96 value\n @return pool Returns the pool address based on the pair of tokens and fee, will return the newly created pool address if necessary"
									},
									"functionSelector": "13ead562",
									"id": 1930,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createAndInitializePoolIfNecessary",
									"nameLocation": "980:34:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1919,
												"mutability": "mutable",
												"name": "token0",
												"nameLocation": "1032:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1930,
												"src": "1024:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1918,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1024:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1921,
												"mutability": "mutable",
												"name": "token1",
												"nameLocation": "1056:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1930,
												"src": "1048:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1920,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1048:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1923,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "1079:3:13",
												"nodeType": "VariableDeclaration",
												"scope": 1930,
												"src": "1072:10:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1922,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "1072:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1925,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "1100:12:13",
												"nodeType": "VariableDeclaration",
												"scope": 1930,
												"src": "1092:20:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1924,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1092:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1014:104:13"
									},
									"returnParameters": {
										"id": 1929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1928,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "1153:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1930,
												"src": "1145:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1927,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1145:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1144:14:13"
									},
									"scope": 1931,
									"src": "971:188:13",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1932,
							"src": "285:876:13",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:1117:13"
				},
				"id": 13
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
				"ast": {
					"absolutePath": "contracts/uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
					"exportedSymbols": {
						"ISwapRouter": [
							2031
						],
						"IUniswapV3SwapCallback": [
							2067
						]
					},
					"id": 2032,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1933,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:23:14"
						},
						{
							"id": 1934,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "69:19:14"
						},
						{
							"absolutePath": "contracts/uniswap/v3-periphery/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
							"file": "./callback/IUniswapV3SwapCallback.sol",
							"id": 1935,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2032,
							"sourceUnit": 2068,
							"src": "90:47:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1937,
										"name": "IUniswapV3SwapCallback",
										"nameLocations": [
											"268:22:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2067,
										"src": "268:22:14"
									},
									"id": 1938,
									"nodeType": "InheritanceSpecifier",
									"src": "268:22:14"
								}
							],
							"canonicalName": "ISwapRouter",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1936,
								"nodeType": "StructuredDocumentation",
								"src": "139:104:14",
								"text": "@title Router token swapping functionality\n @notice Functions for swapping tokens via Uniswap V3"
							},
							"fullyImplemented": false,
							"id": 2031,
							"linearizedBaseContracts": [
								2031,
								2067
							],
							"name": "ISwapRouter",
							"nameLocation": "253:11:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ISwapRouter.ExactInputSingleParams",
									"id": 1955,
									"members": [
										{
											"constant": false,
											"id": 1940,
											"mutability": "mutable",
											"name": "tokenIn",
											"nameLocation": "345:7:14",
											"nodeType": "VariableDeclaration",
											"scope": 1955,
											"src": "337:15:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1939,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "337:7:14",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1942,
											"mutability": "mutable",
											"name": "tokenOut",
											"nameLocation": "370:8:14",
											"nodeType": "VariableDeclaration",
											"scope": 1955,
											"src": "362:16:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1941,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "362:7:14",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1944,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "395:3:14",
											"nodeType": "VariableDeclaration",
											"scope": 1955,
											"src": "388:10:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 1943,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "388:6:14",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1946,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "416:9:14",
											"nodeType": "VariableDeclaration",
											"scope": 1955,
											"src": "408:17:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1945,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "408:7:14",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1948,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "443:8:14",
											"nodeType": "VariableDeclaration",
											"scope": 1955,
											"src": "435:16:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1947,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "435:7:14",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1950,
											"mutability": "mutable",
											"name": "amountIn",
											"nameLocation": "469:8:14",
											"nodeType": "VariableDeclaration",
											"scope": 1955,
											"src": "461:16:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1949,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "461:7:14",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1952,
											"mutability": "mutable",
											"name": "amountOutMinimum",
											"nameLocation": "495:16:14",
											"nodeType": "VariableDeclaration",
											"scope": 1955,
											"src": "487:24:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1951,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "487:7:14",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1954,
											"mutability": "mutable",
											"name": "sqrtPriceLimitX96",
											"nameLocation": "529:17:14",
											"nodeType": "VariableDeclaration",
											"scope": 1955,
											"src": "521:25:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 1953,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "521:7:14",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactInputSingleParams",
									"nameLocation": "304:22:14",
									"nodeType": "StructDefinition",
									"scope": 2031,
									"src": "297:256:14",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 1956,
										"nodeType": "StructuredDocumentation",
										"src": "559:250:14",
										"text": "@notice Swaps `amountIn` of one token for as much as possible of another token\n @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n @return amountOut The amount of the received token"
									},
									"functionSelector": "414bf389",
									"id": 1964,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactInputSingle",
									"nameLocation": "823:16:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1959,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "872:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 1964,
												"src": "840:38:14",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactInputSingleParams_$1955_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactInputSingleParams"
												},
												"typeName": {
													"id": 1958,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1957,
														"name": "ExactInputSingleParams",
														"nameLocations": [
															"840:22:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1955,
														"src": "840:22:14"
													},
													"referencedDeclaration": 1955,
													"src": "840:22:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputSingleParams_$1955_storage_ptr",
														"typeString": "struct ISwapRouter.ExactInputSingleParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "839:40:14"
									},
									"returnParameters": {
										"id": 1963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1962,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "914:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 1964,
												"src": "906:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1961,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "906:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "905:19:14"
									},
									"scope": 2031,
									"src": "814:111:14",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactInputParams",
									"id": 1975,
									"members": [
										{
											"constant": false,
											"id": 1966,
											"mutability": "mutable",
											"name": "path",
											"nameLocation": "971:4:14",
											"nodeType": "VariableDeclaration",
											"scope": 1975,
											"src": "965:10:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1965,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "965:5:14",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1968,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "993:9:14",
											"nodeType": "VariableDeclaration",
											"scope": 1975,
											"src": "985:17:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1967,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "985:7:14",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1970,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "1020:8:14",
											"nodeType": "VariableDeclaration",
											"scope": 1975,
											"src": "1012:16:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1969,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1012:7:14",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1972,
											"mutability": "mutable",
											"name": "amountIn",
											"nameLocation": "1046:8:14",
											"nodeType": "VariableDeclaration",
											"scope": 1975,
											"src": "1038:16:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1971,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1038:7:14",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1974,
											"mutability": "mutable",
											"name": "amountOutMinimum",
											"nameLocation": "1072:16:14",
											"nodeType": "VariableDeclaration",
											"scope": 1975,
											"src": "1064:24:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1973,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1064:7:14",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactInputParams",
									"nameLocation": "938:16:14",
									"nodeType": "StructDefinition",
									"scope": 2031,
									"src": "931:164:14",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 1976,
										"nodeType": "StructuredDocumentation",
										"src": "1101:273:14",
										"text": "@notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n @return amountOut The amount of the received token"
									},
									"functionSelector": "c04b8d59",
									"id": 1984,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactInput",
									"nameLocation": "1388:10:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1979,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "1425:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 1984,
												"src": "1399:32:14",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactInputParams_$1975_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactInputParams"
												},
												"typeName": {
													"id": 1978,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1977,
														"name": "ExactInputParams",
														"nameLocations": [
															"1399:16:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1975,
														"src": "1399:16:14"
													},
													"referencedDeclaration": 1975,
													"src": "1399:16:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputParams_$1975_storage_ptr",
														"typeString": "struct ISwapRouter.ExactInputParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1398:34:14"
									},
									"returnParameters": {
										"id": 1983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1982,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "1467:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 1984,
												"src": "1459:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1981,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1459:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1458:19:14"
									},
									"scope": 2031,
									"src": "1379:99:14",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactOutputSingleParams",
									"id": 2001,
									"members": [
										{
											"constant": false,
											"id": 1986,
											"mutability": "mutable",
											"name": "tokenIn",
											"nameLocation": "1533:7:14",
											"nodeType": "VariableDeclaration",
											"scope": 2001,
											"src": "1525:15:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1985,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1525:7:14",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1988,
											"mutability": "mutable",
											"name": "tokenOut",
											"nameLocation": "1558:8:14",
											"nodeType": "VariableDeclaration",
											"scope": 2001,
											"src": "1550:16:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1987,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1550:7:14",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1990,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "1583:3:14",
											"nodeType": "VariableDeclaration",
											"scope": 2001,
											"src": "1576:10:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 1989,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "1576:6:14",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1992,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "1604:9:14",
											"nodeType": "VariableDeclaration",
											"scope": 2001,
											"src": "1596:17:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1991,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1596:7:14",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1994,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "1631:8:14",
											"nodeType": "VariableDeclaration",
											"scope": 2001,
											"src": "1623:16:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1993,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1623:7:14",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1996,
											"mutability": "mutable",
											"name": "amountOut",
											"nameLocation": "1657:9:14",
											"nodeType": "VariableDeclaration",
											"scope": 2001,
											"src": "1649:17:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1995,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1649:7:14",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1998,
											"mutability": "mutable",
											"name": "amountInMaximum",
											"nameLocation": "1684:15:14",
											"nodeType": "VariableDeclaration",
											"scope": 2001,
											"src": "1676:23:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1997,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1676:7:14",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2000,
											"mutability": "mutable",
											"name": "sqrtPriceLimitX96",
											"nameLocation": "1717:17:14",
											"nodeType": "VariableDeclaration",
											"scope": 2001,
											"src": "1709:25:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 1999,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "1709:7:14",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactOutputSingleParams",
									"nameLocation": "1491:23:14",
									"nodeType": "StructDefinition",
									"scope": 2031,
									"src": "1484:257:14",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 2002,
										"nodeType": "StructuredDocumentation",
										"src": "1747:250:14",
										"text": "@notice Swaps as little as possible of one token for `amountOut` of another token\n @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n @return amountIn The amount of the input token"
									},
									"functionSelector": "db3e2198",
									"id": 2010,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactOutputSingle",
									"nameLocation": "2011:17:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2005,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "2062:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2010,
												"src": "2029:39:14",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactOutputSingleParams_$2001_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactOutputSingleParams"
												},
												"typeName": {
													"id": 2004,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2003,
														"name": "ExactOutputSingleParams",
														"nameLocations": [
															"2029:23:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2001,
														"src": "2029:23:14"
													},
													"referencedDeclaration": 2001,
													"src": "2029:23:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactOutputSingleParams_$2001_storage_ptr",
														"typeString": "struct ISwapRouter.ExactOutputSingleParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2028:41:14"
									},
									"returnParameters": {
										"id": 2009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2008,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2104:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 2010,
												"src": "2096:16:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2007,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2096:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2095:18:14"
									},
									"scope": 2031,
									"src": "2002:112:14",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactOutputParams",
									"id": 2021,
									"members": [
										{
											"constant": false,
											"id": 2012,
											"mutability": "mutable",
											"name": "path",
											"nameLocation": "2161:4:14",
											"nodeType": "VariableDeclaration",
											"scope": 2021,
											"src": "2155:10:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 2011,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "2155:5:14",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2014,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "2183:9:14",
											"nodeType": "VariableDeclaration",
											"scope": 2021,
											"src": "2175:17:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2013,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2175:7:14",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2016,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "2210:8:14",
											"nodeType": "VariableDeclaration",
											"scope": 2021,
											"src": "2202:16:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2015,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2202:7:14",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2018,
											"mutability": "mutable",
											"name": "amountOut",
											"nameLocation": "2236:9:14",
											"nodeType": "VariableDeclaration",
											"scope": 2021,
											"src": "2228:17:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2017,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2228:7:14",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2020,
											"mutability": "mutable",
											"name": "amountInMaximum",
											"nameLocation": "2263:15:14",
											"nodeType": "VariableDeclaration",
											"scope": 2021,
											"src": "2255:23:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2019,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2255:7:14",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactOutputParams",
									"nameLocation": "2127:17:14",
									"nodeType": "StructDefinition",
									"scope": 2031,
									"src": "2120:165:14",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 2022,
										"nodeType": "StructuredDocumentation",
										"src": "2291:284:14",
										"text": "@notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n @return amountIn The amount of the input token"
									},
									"functionSelector": "f28c0498",
									"id": 2030,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactOutput",
									"nameLocation": "2589:11:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2026,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2025,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "2628:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2030,
												"src": "2601:33:14",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactOutputParams_$2021_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactOutputParams"
												},
												"typeName": {
													"id": 2024,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2023,
														"name": "ExactOutputParams",
														"nameLocations": [
															"2601:17:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2021,
														"src": "2601:17:14"
													},
													"referencedDeclaration": 2021,
													"src": "2601:17:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactOutputParams_$2021_storage_ptr",
														"typeString": "struct ISwapRouter.ExactOutputParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2600:35:14"
									},
									"returnParameters": {
										"id": 2029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2028,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2670:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 2030,
												"src": "2662:16:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2027,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2662:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2661:18:14"
									},
									"scope": 2031,
									"src": "2580:100:14",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2032,
							"src": "243:2439:14",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:2638:14"
				},
				"id": 14
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/IUniswapV3Pool.sol": {
				"ast": {
					"absolutePath": "contracts/uniswap/v3-periphery/contracts/interfaces/IUniswapV3Pool.sol",
					"exportedSymbols": {
						"IUniswapV3Pool": [
							2053
						],
						"IUniswapV3PoolActions": [
							2163
						],
						"IUniswapV3PoolDerivedState": [
							2194
						],
						"IUniswapV3PoolEvents": [
							2313
						],
						"IUniswapV3PoolImmutables": [
							2353
						],
						"IUniswapV3PoolOwnerActions": [
							2379
						],
						"IUniswapV3PoolState": [
							2487
						]
					},
					"id": 2054,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2033,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:15"
						},
						{
							"absolutePath": "contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
							"file": "./pool/IUniswapV3PoolImmutables.sol",
							"id": 2034,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2054,
							"sourceUnit": 2354,
							"src": "71:45:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolState.sol",
							"file": "./pool/IUniswapV3PoolState.sol",
							"id": 2035,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2054,
							"sourceUnit": 2488,
							"src": "117:40:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
							"file": "./pool/IUniswapV3PoolDerivedState.sol",
							"id": 2036,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2054,
							"sourceUnit": 2195,
							"src": "158:47:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
							"file": "./pool/IUniswapV3PoolActions.sol",
							"id": 2037,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2054,
							"sourceUnit": 2164,
							"src": "206:42:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
							"file": "./pool/IUniswapV3PoolOwnerActions.sol",
							"id": 2038,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2054,
							"sourceUnit": 2380,
							"src": "249:47:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
							"file": "./pool/IUniswapV3PoolEvents.sol",
							"id": 2039,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2054,
							"sourceUnit": 2314,
							"src": "297:41:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2041,
										"name": "IUniswapV3PoolImmutables",
										"nameLocations": [
											"637:24:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2353,
										"src": "637:24:15"
									},
									"id": 2042,
									"nodeType": "InheritanceSpecifier",
									"src": "637:24:15"
								},
								{
									"baseName": {
										"id": 2043,
										"name": "IUniswapV3PoolState",
										"nameLocations": [
											"667:19:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2487,
										"src": "667:19:15"
									},
									"id": 2044,
									"nodeType": "InheritanceSpecifier",
									"src": "667:19:15"
								},
								{
									"baseName": {
										"id": 2045,
										"name": "IUniswapV3PoolDerivedState",
										"nameLocations": [
											"692:26:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2194,
										"src": "692:26:15"
									},
									"id": 2046,
									"nodeType": "InheritanceSpecifier",
									"src": "692:26:15"
								},
								{
									"baseName": {
										"id": 2047,
										"name": "IUniswapV3PoolActions",
										"nameLocations": [
											"724:21:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2163,
										"src": "724:21:15"
									},
									"id": 2048,
									"nodeType": "InheritanceSpecifier",
									"src": "724:21:15"
								},
								{
									"baseName": {
										"id": 2049,
										"name": "IUniswapV3PoolOwnerActions",
										"nameLocations": [
											"751:26:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2379,
										"src": "751:26:15"
									},
									"id": 2050,
									"nodeType": "InheritanceSpecifier",
									"src": "751:26:15"
								},
								{
									"baseName": {
										"id": 2051,
										"name": "IUniswapV3PoolEvents",
										"nameLocations": [
											"783:20:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2313,
										"src": "783:20:15"
									},
									"id": 2052,
									"nodeType": "InheritanceSpecifier",
									"src": "783:20:15"
								}
							],
							"canonicalName": "IUniswapV3Pool",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2040,
								"nodeType": "StructuredDocumentation",
								"src": "340:265:15",
								"text": "@title The interface for a Uniswap V3 Pool\n @notice A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform\n to the ERC20 specification\n @dev The pool interface is broken up into many smaller pieces"
							},
							"fullyImplemented": false,
							"id": 2053,
							"linearizedBaseContracts": [
								2053,
								2313,
								2379,
								2163,
								2194,
								2487,
								2353
							],
							"name": "IUniswapV3Pool",
							"nameLocation": "615:14:15",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 2054,
							"src": "605:203:15",
							"usedErrors": [],
							"usedEvents": [
								2204,
								2221,
								2236,
								2251,
								2268,
								2283,
								2290,
								2301,
								2312
							]
						}
					],
					"src": "45:764:15"
				},
				"id": 15
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"ast": {
					"absolutePath": "contracts/uniswap/v3-periphery/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
					"exportedSymbols": {
						"IUniswapV3SwapCallback": [
							2067
						]
					},
					"id": 2068,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2055,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:23:16"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3SwapCallback",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2056,
								"nodeType": "StructuredDocumentation",
								"src": "70:144:16",
								"text": "@title Callback for IUniswapV3PoolActions#swap\n @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface"
							},
							"fullyImplemented": false,
							"id": 2067,
							"linearizedBaseContracts": [
								2067
							],
							"name": "IUniswapV3SwapCallback",
							"nameLocation": "224:22:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2057,
										"nodeType": "StructuredDocumentation",
										"src": "253:898:16",
										"text": "@notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n @dev In the implementation you must pay the pool tokens owed for the swap.\n The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
									},
									"functionSelector": "fa461e33",
									"id": 2066,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uniswapV3SwapCallback",
									"nameLocation": "1165:21:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2059,
												"mutability": "mutable",
												"name": "amount0Delta",
												"nameLocation": "1203:12:16",
												"nodeType": "VariableDeclaration",
												"scope": 2066,
												"src": "1196:19:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2058,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1196:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2061,
												"mutability": "mutable",
												"name": "amount1Delta",
												"nameLocation": "1232:12:16",
												"nodeType": "VariableDeclaration",
												"scope": 2066,
												"src": "1225:19:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2060,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1225:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2063,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1269:4:16",
												"nodeType": "VariableDeclaration",
												"scope": 2066,
												"src": "1254:19:16",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2062,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1254:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1186:93:16"
									},
									"returnParameters": {
										"id": 2065,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1288:0:16"
									},
									"scope": 2067,
									"src": "1156:133:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2068,
							"src": "214:1077:16",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:1247:16"
				},
				"id": 16
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
				"ast": {
					"absolutePath": "contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
					"exportedSymbols": {
						"IUniswapV3PoolActions": [
							2163
						]
					},
					"id": 2164,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2069,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:17"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolActions",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2070,
								"nodeType": "StructuredDocumentation",
								"src": "71:102:17",
								"text": "@title Permissionless pool actions\n @notice Contains pool methods that can be called by anyone"
							},
							"fullyImplemented": false,
							"id": 2163,
							"linearizedBaseContracts": [
								2163
							],
							"name": "IUniswapV3PoolActions",
							"nameLocation": "183:21:17",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2071,
										"nodeType": "StructuredDocumentation",
										"src": "211:206:17",
										"text": "@notice Sets the initial price for the pool\n @dev Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\n @param sqrtPriceX96 the initial sqrt price of the pool as a Q64.96"
									},
									"functionSelector": "f637731d",
									"id": 2076,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "431:10:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2073,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "450:12:17",
												"nodeType": "VariableDeclaration",
												"scope": 2076,
												"src": "442:20:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2072,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "442:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "441:22:17"
									},
									"returnParameters": {
										"id": 2075,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "472:0:17"
									},
									"scope": 2163,
									"src": "422:51:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2077,
										"nodeType": "StructuredDocumentation",
										"src": "479:1029:17",
										"text": "@notice Adds liquidity for the given recipient/tickLower/tickUpper position\n @dev The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback\n in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends\n on tickLower, tickUpper, the amount of liquidity, and the current price.\n @param recipient The address for which the liquidity will be created\n @param tickLower The lower tick of the position in which to add liquidity\n @param tickUpper The upper tick of the position in which to add liquidity\n @param amount The amount of liquidity to mint\n @param data Any data that should be passed through to the callback\n @return amount0 The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\n @return amount1 The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"
									},
									"functionSelector": "3c8a7d8d",
									"id": 2094,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "1522:4:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2088,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2079,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1544:9:17",
												"nodeType": "VariableDeclaration",
												"scope": 2094,
												"src": "1536:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2078,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1536:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2081,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "1569:9:17",
												"nodeType": "VariableDeclaration",
												"scope": 2094,
												"src": "1563:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2080,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1563:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2083,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "1594:9:17",
												"nodeType": "VariableDeclaration",
												"scope": 2094,
												"src": "1588:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2082,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1588:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2085,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1621:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 2094,
												"src": "1613:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2084,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1613:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2087,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1652:4:17",
												"nodeType": "VariableDeclaration",
												"scope": 2094,
												"src": "1637:19:17",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2086,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1637:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1526:136:17"
									},
									"returnParameters": {
										"id": 2093,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2090,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1689:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 2094,
												"src": "1681:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2089,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1681:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2092,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1706:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 2094,
												"src": "1698:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2091,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1698:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1680:34:17"
									},
									"scope": 2163,
									"src": "1513:202:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2095,
										"nodeType": "StructuredDocumentation",
										"src": "1721:1053:17",
										"text": "@notice Collects tokens owed to a position\n @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\n Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\n amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\n actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\n @param recipient The address which should receive the fees collected\n @param tickLower The lower tick of the position for which to collect fees\n @param tickUpper The upper tick of the position for which to collect fees\n @param amount0Requested How much token0 should be withdrawn from the fees owed\n @param amount1Requested How much token1 should be withdrawn from the fees owed\n @return amount0 The amount of fees collected in token0\n @return amount1 The amount of fees collected in token1"
									},
									"functionSelector": "4f1eb3d8",
									"id": 2112,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "collect",
									"nameLocation": "2788:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2097,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2813:9:17",
												"nodeType": "VariableDeclaration",
												"scope": 2112,
												"src": "2805:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2096,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2805:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2099,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "2838:9:17",
												"nodeType": "VariableDeclaration",
												"scope": 2112,
												"src": "2832:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2098,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2832:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2101,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "2863:9:17",
												"nodeType": "VariableDeclaration",
												"scope": 2112,
												"src": "2857:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2100,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2857:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2103,
												"mutability": "mutable",
												"name": "amount0Requested",
												"nameLocation": "2890:16:17",
												"nodeType": "VariableDeclaration",
												"scope": 2112,
												"src": "2882:24:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2102,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2882:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2105,
												"mutability": "mutable",
												"name": "amount1Requested",
												"nameLocation": "2924:16:17",
												"nodeType": "VariableDeclaration",
												"scope": 2112,
												"src": "2916:24:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2104,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2916:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2795:151:17"
									},
									"returnParameters": {
										"id": 2111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2108,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "2973:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 2112,
												"src": "2965:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2107,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2965:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2110,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "2990:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 2112,
												"src": "2982:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2109,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2982:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2964:34:17"
									},
									"scope": 2163,
									"src": "2779:220:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2113,
										"nodeType": "StructuredDocumentation",
										"src": "3005:631:17",
										"text": "@notice Burn liquidity from the sender and account tokens owed for the liquidity to the position\n @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\n @dev Fees must be collected separately via a call to #collect\n @param tickLower The lower tick of the position for which to burn liquidity\n @param tickUpper The upper tick of the position for which to burn liquidity\n @param amount How much liquidity to burn\n @return amount0 The amount of token0 sent to the recipient\n @return amount1 The amount of token1 sent to the recipient"
									},
									"functionSelector": "a34123a7",
									"id": 2126,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "3650:4:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2115,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "3670:9:17",
												"nodeType": "VariableDeclaration",
												"scope": 2126,
												"src": "3664:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2114,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3664:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2117,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "3695:9:17",
												"nodeType": "VariableDeclaration",
												"scope": 2126,
												"src": "3689:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2116,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3689:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2119,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3722:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 2126,
												"src": "3714:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2118,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3714:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3654:80:17"
									},
									"returnParameters": {
										"id": 2125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2122,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "3761:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 2126,
												"src": "3753:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3753:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2124,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "3778:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 2126,
												"src": "3770:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3770:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3752:34:17"
									},
									"scope": 2163,
									"src": "3641:146:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2127,
										"nodeType": "StructuredDocumentation",
										"src": "3793:1015:17",
										"text": "@notice Swap token0 for token1, or token1 for token0\n @dev The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\n @param recipient The address to receive the output of the swap\n @param zeroForOne The direction of the swap, true for token0 to token1, false for token1 to token0\n @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\n @param sqrtPriceLimitX96 The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\n value after the swap. If one for zero, the price cannot be greater than this value after the swap\n @param data Any data to be passed through to the callback\n @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\n @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive"
									},
									"functionSelector": "128acb08",
									"id": 2144,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nameLocation": "4822:4:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2129,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "4844:9:17",
												"nodeType": "VariableDeclaration",
												"scope": 2144,
												"src": "4836:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4836:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2131,
												"mutability": "mutable",
												"name": "zeroForOne",
												"nameLocation": "4868:10:17",
												"nodeType": "VariableDeclaration",
												"scope": 2144,
												"src": "4863:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2130,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2133,
												"mutability": "mutable",
												"name": "amountSpecified",
												"nameLocation": "4895:15:17",
												"nodeType": "VariableDeclaration",
												"scope": 2144,
												"src": "4888:22:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2132,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "4888:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2135,
												"mutability": "mutable",
												"name": "sqrtPriceLimitX96",
												"nameLocation": "4928:17:17",
												"nodeType": "VariableDeclaration",
												"scope": 2144,
												"src": "4920:25:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2134,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "4920:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2137,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4970:4:17",
												"nodeType": "VariableDeclaration",
												"scope": 2144,
												"src": "4955:19:17",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2136,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4955:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4826:154:17"
									},
									"returnParameters": {
										"id": 2143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2140,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "5006:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 2144,
												"src": "4999:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2139,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "4999:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2142,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "5022:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 2144,
												"src": "5015:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2141,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "5015:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4998:32:17"
									},
									"scope": 2163,
									"src": "4813:218:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2145,
										"nodeType": "StructuredDocumentation",
										"src": "5037:657:17",
										"text": "@notice Receive token0 and/or token1 and pay it back, plus a fee, in the callback\n @dev The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallback\n @dev Can be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling\n with 0 amount{0,1} and sending the donation amount(s) from the callback\n @param recipient The address which will receive the token0 and token1 amounts\n @param amount0 The amount of token0 to send\n @param amount1 The amount of token1 to send\n @param data Any data to be passed through to the callback"
									},
									"functionSelector": "490e6cbc",
									"id": 2156,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "flash",
									"nameLocation": "5708:5:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2147,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "5731:9:17",
												"nodeType": "VariableDeclaration",
												"scope": 2156,
												"src": "5723:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5723:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2149,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "5758:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 2156,
												"src": "5750:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2148,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5750:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2151,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "5783:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 2156,
												"src": "5775:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5775:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2153,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5815:4:17",
												"nodeType": "VariableDeclaration",
												"scope": 2156,
												"src": "5800:19:17",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2152,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5800:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5713:112:17"
									},
									"returnParameters": {
										"id": 2155,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5834:0:17"
									},
									"scope": 2163,
									"src": "5699:136:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2157,
										"nodeType": "StructuredDocumentation",
										"src": "5841:367:17",
										"text": "@notice Increase the maximum number of price and liquidity observations that this pool will store\n @dev This method is no-op if the pool already has an observationCardinalityNext greater than or equal to\n the input observationCardinalityNext.\n @param observationCardinalityNext The desired minimum number of observations for the pool to store"
									},
									"functionSelector": "32148f67",
									"id": 2162,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "increaseObservationCardinalityNext",
									"nameLocation": "6222:34:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2159,
												"mutability": "mutable",
												"name": "observationCardinalityNext",
												"nameLocation": "6264:26:17",
												"nodeType": "VariableDeclaration",
												"scope": 2162,
												"src": "6257:33:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2158,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "6257:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6256:35:17"
									},
									"returnParameters": {
										"id": 2161,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6300:0:17"
									},
									"scope": 2163,
									"src": "6213:88:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2164,
							"src": "173:6130:17",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:6259:17"
				},
				"id": 17
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
				"ast": {
					"absolutePath": "contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
					"exportedSymbols": {
						"IUniswapV3PoolDerivedState": [
							2194
						]
					},
					"id": 2195,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2165,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:18"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolDerivedState",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2166,
								"nodeType": "StructuredDocumentation",
								"src": "71:222:18",
								"text": "@title Pool state that is not stored\n @notice Contains view functions to provide information about the pool that is computed rather than stored on the\n blockchain. The functions here may have variable gas costs."
							},
							"fullyImplemented": false,
							"id": 2194,
							"linearizedBaseContracts": [
								2194
							],
							"name": "IUniswapV3PoolDerivedState",
							"nameLocation": "303:26:18",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2167,
										"nodeType": "StructuredDocumentation",
										"src": "336:1045:18",
										"text": "@notice Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\n @dev To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing\n the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,\n you must call it with secondsAgos = [3600, 0].\n @dev The time weighted average tick represents the geometric time weighted average price of the pool, in\n log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\n @param secondsAgos From how long ago each cumulative tick and liquidity value should be returned\n @return tickCumulatives Cumulative tick values as of each `secondsAgos` from the current block timestamp\n @return secondsPerLiquidityCumulativeX128s Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block\n timestamp"
									},
									"functionSelector": "883bdbfd",
									"id": 2179,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "observe",
									"nameLocation": "1395:7:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2170,
												"mutability": "mutable",
												"name": "secondsAgos",
												"nameLocation": "1421:11:18",
												"nodeType": "VariableDeclaration",
												"scope": 2179,
												"src": "1403:29:18",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
													"typeString": "uint32[]"
												},
												"typeName": {
													"baseType": {
														"id": 2168,
														"name": "uint32",
														"nodeType": "ElementaryTypeName",
														"src": "1403:6:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"id": 2169,
													"nodeType": "ArrayTypeName",
													"src": "1403:8:18",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
														"typeString": "uint32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1402:31:18"
									},
									"returnParameters": {
										"id": 2178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2174,
												"mutability": "mutable",
												"name": "tickCumulatives",
												"nameLocation": "1496:15:18",
												"nodeType": "VariableDeclaration",
												"scope": 2179,
												"src": "1481:30:18",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_int56_$dyn_memory_ptr",
													"typeString": "int56[]"
												},
												"typeName": {
													"baseType": {
														"id": 2172,
														"name": "int56",
														"nodeType": "ElementaryTypeName",
														"src": "1481:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"id": 2173,
													"nodeType": "ArrayTypeName",
													"src": "1481:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_int56_$dyn_storage_ptr",
														"typeString": "int56[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2177,
												"mutability": "mutable",
												"name": "secondsPerLiquidityCumulativeX128s",
												"nameLocation": "1530:34:18",
												"nodeType": "VariableDeclaration",
												"scope": 2179,
												"src": "1513:51:18",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint160_$dyn_memory_ptr",
													"typeString": "uint160[]"
												},
												"typeName": {
													"baseType": {
														"id": 2175,
														"name": "uint160",
														"nodeType": "ElementaryTypeName",
														"src": "1513:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"id": 2176,
													"nodeType": "ArrayTypeName",
													"src": "1513:9:18",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint160_$dyn_storage_ptr",
														"typeString": "uint160[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1480:85:18"
									},
									"scope": 2194,
									"src": "1386:180:18",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2180,
										"nodeType": "StructuredDocumentation",
										"src": "1572:771:18",
										"text": "@notice Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\n @dev Snapshots must only be compared to other snapshots, taken over a period for which a position existed.\n I.e., snapshots cannot be compared if a position is not held for the entire period between when the first\n snapshot is taken and the second snapshot is taken.\n @param tickLower The lower tick of the range\n @param tickUpper The upper tick of the range\n @return tickCumulativeInside The snapshot of the tick accumulator for the range\n @return secondsPerLiquidityInsideX128 The snapshot of seconds per liquidity for the range\n @return secondsInside The snapshot of seconds per liquidity for the range"
									},
									"functionSelector": "a38807f2",
									"id": 2193,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "snapshotCumulativesInside",
									"nameLocation": "2357:25:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2182,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "2389:9:18",
												"nodeType": "VariableDeclaration",
												"scope": 2193,
												"src": "2383:15:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2181,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2383:5:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2184,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "2406:9:18",
												"nodeType": "VariableDeclaration",
												"scope": 2193,
												"src": "2400:15:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2183,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2400:5:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2382:34:18"
									},
									"returnParameters": {
										"id": 2192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2187,
												"mutability": "mutable",
												"name": "tickCumulativeInside",
												"nameLocation": "2483:20:18",
												"nodeType": "VariableDeclaration",
												"scope": 2193,
												"src": "2477:26:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 2186,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "2477:5:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2189,
												"mutability": "mutable",
												"name": "secondsPerLiquidityInsideX128",
												"nameLocation": "2525:29:18",
												"nodeType": "VariableDeclaration",
												"scope": 2193,
												"src": "2517:37:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2188,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "2517:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2191,
												"mutability": "mutable",
												"name": "secondsInside",
												"nameLocation": "2575:13:18",
												"nodeType": "VariableDeclaration",
												"scope": 2193,
												"src": "2568:20:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2190,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2568:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2463:135:18"
									},
									"scope": 2194,
									"src": "2348:251:18",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2195,
							"src": "293:2308:18",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:2557:18"
				},
				"id": 18
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
				"ast": {
					"absolutePath": "contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
					"exportedSymbols": {
						"IUniswapV3PoolEvents": [
							2313
						]
					},
					"id": 2314,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2196,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:19"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolEvents",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2197,
								"nodeType": "StructuredDocumentation",
								"src": "71:88:19",
								"text": "@title Events emitted by a pool\n @notice Contains all events emitted by the pool"
							},
							"fullyImplemented": true,
							"id": 2313,
							"linearizedBaseContracts": [
								2313
							],
							"name": "IUniswapV3PoolEvents",
							"nameLocation": "169:20:19",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 2198,
										"nodeType": "StructuredDocumentation",
										"src": "196:344:19",
										"text": "@notice Emitted exactly once by a pool when #initialize is first called on the pool\n @dev Mint/Burn/Swap cannot be emitted by the pool before Initialize\n @param sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96\n @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool"
									},
									"eventSelector": "98636036cb66a9c19a37435efc1e90142190214e8abeb821bdba3f2990dd4c95",
									"id": 2204,
									"name": "Initialize",
									"nameLocation": "551:10:19",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2200,
												"indexed": false,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "570:12:19",
												"nodeType": "VariableDeclaration",
												"scope": 2204,
												"src": "562:20:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2199,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "562:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2202,
												"indexed": false,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "590:4:19",
												"nodeType": "VariableDeclaration",
												"scope": 2204,
												"src": "584:10:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2201,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "584:5:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "561:34:19"
									},
									"src": "545:51:19"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2205,
										"nodeType": "StructuredDocumentation",
										"src": "602:551:19",
										"text": "@notice Emitted when liquidity is minted for a given position\n @param sender The address that minted the liquidity\n @param owner The owner of the position and recipient of any minted liquidity\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount The amount of liquidity minted to the position range\n @param amount0 How much token0 was required for the minted liquidity\n @param amount1 How much token1 was required for the minted liquidity"
									},
									"eventSelector": "7a53080ba414158be7ec69b987b5fb7d07dee101fe85488f0853ae16239d0bde",
									"id": 2221,
									"name": "Mint",
									"nameLocation": "1164:4:19",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2207,
												"indexed": false,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1186:6:19",
												"nodeType": "VariableDeclaration",
												"scope": 2221,
												"src": "1178:14:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1178:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2209,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1218:5:19",
												"nodeType": "VariableDeclaration",
												"scope": 2221,
												"src": "1202:21:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1202:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2211,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "1247:9:19",
												"nodeType": "VariableDeclaration",
												"scope": 2221,
												"src": "1233:23:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2210,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1233:5:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2213,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "1280:9:19",
												"nodeType": "VariableDeclaration",
												"scope": 2221,
												"src": "1266:23:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2212,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1266:5:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2215,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1307:6:19",
												"nodeType": "VariableDeclaration",
												"scope": 2221,
												"src": "1299:14:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2214,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1299:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2217,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1331:7:19",
												"nodeType": "VariableDeclaration",
												"scope": 2221,
												"src": "1323:15:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1323:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2219,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1356:7:19",
												"nodeType": "VariableDeclaration",
												"scope": 2221,
												"src": "1348:15:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1348:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1168:201:19"
									},
									"src": "1158:212:19"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2222,
										"nodeType": "StructuredDocumentation",
										"src": "1376:493:19",
										"text": "@notice Emitted when fees are collected by the owner of a position\n @dev Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\n @param owner The owner of the position for which fees are collected\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount0 The amount of token0 fees collected\n @param amount1 The amount of token1 fees collected"
									},
									"eventSelector": "70935338e69775456a85ddef226c395fb668b63fa0115f5f20610b388e6ca9c0",
									"id": 2236,
									"name": "Collect",
									"nameLocation": "1880:7:19",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2224,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1913:5:19",
												"nodeType": "VariableDeclaration",
												"scope": 2236,
												"src": "1897:21:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1897:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2226,
												"indexed": false,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1936:9:19",
												"nodeType": "VariableDeclaration",
												"scope": 2236,
												"src": "1928:17:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1928:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2228,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "1969:9:19",
												"nodeType": "VariableDeclaration",
												"scope": 2236,
												"src": "1955:23:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2227,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1955:5:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2230,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "2002:9:19",
												"nodeType": "VariableDeclaration",
												"scope": 2236,
												"src": "1988:23:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2229,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1988:5:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2232,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "2029:7:19",
												"nodeType": "VariableDeclaration",
												"scope": 2236,
												"src": "2021:15:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2231,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2021:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2234,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "2054:7:19",
												"nodeType": "VariableDeclaration",
												"scope": 2236,
												"src": "2046:15:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2233,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2046:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1887:180:19"
									},
									"src": "1874:194:19"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2237,
										"nodeType": "StructuredDocumentation",
										"src": "2074:523:19",
										"text": "@notice Emitted when a position's liquidity is removed\n @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\n @param owner The owner of the position for which liquidity is removed\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount The amount of liquidity to remove\n @param amount0 The amount of token0 withdrawn\n @param amount1 The amount of token1 withdrawn"
									},
									"eventSelector": "0c396cd989a39f4459b5fa1aed6a9a8dcdbc45908acfd67e028cd568da98982c",
									"id": 2251,
									"name": "Burn",
									"nameLocation": "2608:4:19",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2239,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2638:5:19",
												"nodeType": "VariableDeclaration",
												"scope": 2251,
												"src": "2622:21:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2622:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2241,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "2667:9:19",
												"nodeType": "VariableDeclaration",
												"scope": 2251,
												"src": "2653:23:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2240,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2653:5:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2243,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "2700:9:19",
												"nodeType": "VariableDeclaration",
												"scope": 2251,
												"src": "2686:23:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2242,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2686:5:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2245,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:19",
												"nodeType": "VariableDeclaration",
												"scope": 2251,
												"src": "2719:14:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2244,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2247,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "2751:7:19",
												"nodeType": "VariableDeclaration",
												"scope": 2251,
												"src": "2743:15:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2743:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2249,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "2776:7:19",
												"nodeType": "VariableDeclaration",
												"scope": 2251,
												"src": "2768:15:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2612:177:19"
									},
									"src": "2602:188:19"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2252,
										"nodeType": "StructuredDocumentation",
										"src": "2796:600:19",
										"text": "@notice Emitted by the pool for any swaps between token0 and token1\n @param sender The address that initiated the swap call, and that received the callback\n @param recipient The address that received the output of the swap\n @param amount0 The delta of the token0 balance of the pool\n @param amount1 The delta of the token1 balance of the pool\n @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\n @param liquidity The liquidity of the pool after the swap\n @param tick The log base 1.0001 of price of the pool after the swap"
									},
									"eventSelector": "c42079f94a6350d7e6235f29174924f928cc2ac818eb64fed8004e115fbcca67",
									"id": 2268,
									"name": "Swap",
									"nameLocation": "3407:4:19",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2254,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3437:6:19",
												"nodeType": "VariableDeclaration",
												"scope": 2268,
												"src": "3421:22:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3421:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2256,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3469:9:19",
												"nodeType": "VariableDeclaration",
												"scope": 2268,
												"src": "3453:25:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3453:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2258,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "3495:7:19",
												"nodeType": "VariableDeclaration",
												"scope": 2268,
												"src": "3488:14:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2257,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3488:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2260,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "3519:7:19",
												"nodeType": "VariableDeclaration",
												"scope": 2268,
												"src": "3512:14:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2259,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3512:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2262,
												"indexed": false,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "3544:12:19",
												"nodeType": "VariableDeclaration",
												"scope": 2268,
												"src": "3536:20:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2261,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "3536:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2264,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "3574:9:19",
												"nodeType": "VariableDeclaration",
												"scope": 2268,
												"src": "3566:17:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2263,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3566:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2266,
												"indexed": false,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "3599:4:19",
												"nodeType": "VariableDeclaration",
												"scope": 2268,
												"src": "3593:10:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2265,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3593:5:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3411:198:19"
									},
									"src": "3401:209:19"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2269,
										"nodeType": "StructuredDocumentation",
										"src": "3616:562:19",
										"text": "@notice Emitted by the pool for any flashes of token0/token1\n @param sender The address that initiated the swap call, and that received the callback\n @param recipient The address that received the tokens from flash\n @param amount0 The amount of token0 that was flashed\n @param amount1 The amount of token1 that was flashed\n @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\n @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee"
									},
									"eventSelector": "bdbdb71d7860376ba52b25a5028beea23581364a40522f6bcfb86bb1f2dca633",
									"id": 2283,
									"name": "Flash",
									"nameLocation": "4189:5:19",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2271,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4220:6:19",
												"nodeType": "VariableDeclaration",
												"scope": 2283,
												"src": "4204:22:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4204:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2273,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "4252:9:19",
												"nodeType": "VariableDeclaration",
												"scope": 2283,
												"src": "4236:25:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4236:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2275,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "4279:7:19",
												"nodeType": "VariableDeclaration",
												"scope": 2283,
												"src": "4271:15:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4271:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2277,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "4304:7:19",
												"nodeType": "VariableDeclaration",
												"scope": 2283,
												"src": "4296:15:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4296:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2279,
												"indexed": false,
												"mutability": "mutable",
												"name": "paid0",
												"nameLocation": "4329:5:19",
												"nodeType": "VariableDeclaration",
												"scope": 2283,
												"src": "4321:13:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4321:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2281,
												"indexed": false,
												"mutability": "mutable",
												"name": "paid1",
												"nameLocation": "4352:5:19",
												"nodeType": "VariableDeclaration",
												"scope": 2283,
												"src": "4344:13:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4344:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4194:169:19"
									},
									"src": "4183:181:19"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2284,
										"nodeType": "StructuredDocumentation",
										"src": "4370:451:19",
										"text": "@notice Emitted by the pool for increases to the number of observations that can be stored\n @dev observationCardinalityNext is not the observation cardinality until an observation is written at the index\n just before a mint/swap/burn.\n @param observationCardinalityNextOld The previous value of the next observation cardinality\n @param observationCardinalityNextNew The updated value of the next observation cardinality"
									},
									"eventSelector": "ac49e518f90a358f652e4400164f05a5d8f7e35e7747279bc3a93dbf584e125a",
									"id": 2290,
									"name": "IncreaseObservationCardinalityNext",
									"nameLocation": "4832:34:19",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2286,
												"indexed": false,
												"mutability": "mutable",
												"name": "observationCardinalityNextOld",
												"nameLocation": "4883:29:19",
												"nodeType": "VariableDeclaration",
												"scope": 2290,
												"src": "4876:36:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2285,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4876:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2288,
												"indexed": false,
												"mutability": "mutable",
												"name": "observationCardinalityNextNew",
												"nameLocation": "4929:29:19",
												"nodeType": "VariableDeclaration",
												"scope": 2290,
												"src": "4922:36:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2287,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4922:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4866:98:19"
									},
									"src": "4826:139:19"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2291,
										"nodeType": "StructuredDocumentation",
										"src": "4971:370:19",
										"text": "@notice Emitted when the protocol fee is changed by the pool\n @param feeProtocol0Old The previous value of the token0 protocol fee\n @param feeProtocol1Old The previous value of the token1 protocol fee\n @param feeProtocol0New The updated value of the token0 protocol fee\n @param feeProtocol1New The updated value of the token1 protocol fee"
									},
									"eventSelector": "973d8d92bb299f4af6ce49b52a8adb85ae46b9f214c4c4fc06ac77401237b133",
									"id": 2301,
									"name": "SetFeeProtocol",
									"nameLocation": "5352:14:19",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2293,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol0Old",
												"nameLocation": "5373:15:19",
												"nodeType": "VariableDeclaration",
												"scope": 2301,
												"src": "5367:21:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2292,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5367:5:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2295,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol1Old",
												"nameLocation": "5396:15:19",
												"nodeType": "VariableDeclaration",
												"scope": 2301,
												"src": "5390:21:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2294,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5390:5:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2297,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol0New",
												"nameLocation": "5419:15:19",
												"nodeType": "VariableDeclaration",
												"scope": 2301,
												"src": "5413:21:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2296,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5413:5:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2299,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol1New",
												"nameLocation": "5442:15:19",
												"nodeType": "VariableDeclaration",
												"scope": 2301,
												"src": "5436:21:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2298,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5436:5:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5366:92:19"
									},
									"src": "5346:113:19"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2302,
										"nodeType": "StructuredDocumentation",
										"src": "5465:384:19",
										"text": "@notice Emitted when the collected protocol fees are withdrawn by the factory owner\n @param sender The address that collects the protocol fees\n @param recipient The address that receives the collected protocol fees\n @param amount0 The amount of token0 protocol fees that is withdrawn\n @param amount0 The amount of token1 protocol fees that is withdrawn"
									},
									"eventSelector": "596b573906218d3411850b26a6b437d6c4522fdb43d2d2386263f86d50b8b151",
									"id": 2312,
									"name": "CollectProtocol",
									"nameLocation": "5860:15:19",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2304,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5892:6:19",
												"nodeType": "VariableDeclaration",
												"scope": 2312,
												"src": "5876:22:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5876:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2306,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "5916:9:19",
												"nodeType": "VariableDeclaration",
												"scope": 2312,
												"src": "5900:25:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5900:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2308,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "5935:7:19",
												"nodeType": "VariableDeclaration",
												"scope": 2312,
												"src": "5927:15:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2307,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5927:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2310,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "5952:7:19",
												"nodeType": "VariableDeclaration",
												"scope": 2312,
												"src": "5944:15:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2309,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5944:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5875:85:19"
									},
									"src": "5854:107:19"
								}
							],
							"scope": 2314,
							"src": "159:5804:19",
							"usedErrors": [],
							"usedEvents": [
								2204,
								2221,
								2236,
								2251,
								2268,
								2283,
								2290,
								2301,
								2312
							]
						}
					],
					"src": "45:5919:19"
				},
				"id": 19
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
				"ast": {
					"absolutePath": "contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
					"exportedSymbols": {
						"IUniswapV3PoolImmutables": [
							2353
						]
					},
					"id": 2354,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2315,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:20"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolImmutables",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2316,
								"nodeType": "StructuredDocumentation",
								"src": "71:153:20",
								"text": "@title Pool state that never changes\n @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values"
							},
							"fullyImplemented": false,
							"id": 2353,
							"linearizedBaseContracts": [
								2353
							],
							"name": "IUniswapV3PoolImmutables",
							"nameLocation": "234:24:20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2317,
										"nodeType": "StructuredDocumentation",
										"src": "265:138:20",
										"text": "@notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\n @return The contract address"
									},
									"functionSelector": "c45a0155",
									"id": 2322,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nameLocation": "417:7:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2318,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "424:2:20"
									},
									"returnParameters": {
										"id": 2321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2320,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2322,
												"src": "450:7:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2319,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "450:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "449:9:20"
									},
									"scope": 2353,
									"src": "408:51:20",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2323,
										"nodeType": "StructuredDocumentation",
										"src": "465:113:20",
										"text": "@notice The first of the two tokens of the pool, sorted by address\n @return The token contract address"
									},
									"functionSelector": "0dfe1681",
									"id": 2328,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token0",
									"nameLocation": "592:6:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2324,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "598:2:20"
									},
									"returnParameters": {
										"id": 2327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2326,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2328,
												"src": "624:7:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2325,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "624:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "623:9:20"
									},
									"scope": 2353,
									"src": "583:50:20",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2329,
										"nodeType": "StructuredDocumentation",
										"src": "639:114:20",
										"text": "@notice The second of the two tokens of the pool, sorted by address\n @return The token contract address"
									},
									"functionSelector": "d21220a7",
									"id": 2334,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token1",
									"nameLocation": "767:6:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2330,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "773:2:20"
									},
									"returnParameters": {
										"id": 2333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2332,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2334,
												"src": "799:7:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "799:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "798:9:20"
									},
									"scope": 2353,
									"src": "758:50:20",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2335,
										"nodeType": "StructuredDocumentation",
										"src": "814:84:20",
										"text": "@notice The pool's fee in hundredths of a bip, i.e. 1e-6\n @return The fee"
									},
									"functionSelector": "ddca3f43",
									"id": 2340,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "fee",
									"nameLocation": "912:3:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2336,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "915:2:20"
									},
									"returnParameters": {
										"id": 2339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2338,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2340,
												"src": "941:6:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 2337,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "941:6:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "940:8:20"
									},
									"scope": 2353,
									"src": "903:46:20",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2341,
										"nodeType": "StructuredDocumentation",
										"src": "955:358:20",
										"text": "@notice The pool tick spacing\n @dev Ticks can only be used at multiples of this value, minimum of 1 and always positive\n e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ...\n This value is an int24 to avoid casting even though it is always positive.\n @return The tick spacing"
									},
									"functionSelector": "d0c93a7c",
									"id": 2346,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tickSpacing",
									"nameLocation": "1327:11:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2342,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1338:2:20"
									},
									"returnParameters": {
										"id": 2345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2344,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2346,
												"src": "1364:5:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2343,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1364:5:20",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1363:7:20"
									},
									"scope": 2353,
									"src": "1318:53:20",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2347,
										"nodeType": "StructuredDocumentation",
										"src": "1377:363:20",
										"text": "@notice The maximum amount of position liquidity that can use any tick in the range\n @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\n also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\n @return The max amount of liquidity per tick"
									},
									"functionSelector": "70cf754a",
									"id": 2352,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "maxLiquidityPerTick",
									"nameLocation": "1754:19:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2348,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:2:20"
									},
									"returnParameters": {
										"id": 2351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2350,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2352,
												"src": "1799:7:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2349,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1799:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1798:9:20"
									},
									"scope": 2353,
									"src": "1745:63:20",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2354,
							"src": "224:1586:20",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:1766:20"
				},
				"id": 20
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
				"ast": {
					"absolutePath": "contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
					"exportedSymbols": {
						"IUniswapV3PoolOwnerActions": [
							2379
						]
					},
					"id": 2380,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2355,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:21"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolOwnerActions",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2356,
								"nodeType": "StructuredDocumentation",
								"src": "71:116:21",
								"text": "@title Permissioned pool actions\n @notice Contains pool methods that may only be called by the factory owner"
							},
							"fullyImplemented": false,
							"id": 2379,
							"linearizedBaseContracts": [
								2379
							],
							"name": "IUniswapV3PoolOwnerActions",
							"nameLocation": "197:26:21",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2357,
										"nodeType": "StructuredDocumentation",
										"src": "230:205:21",
										"text": "@notice Set the denominator of the protocol's % share of the fees\n @param feeProtocol0 new protocol fee for token0 of the pool\n @param feeProtocol1 new protocol fee for token1 of the pool"
									},
									"functionSelector": "8206a4d1",
									"id": 2364,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeProtocol",
									"nameLocation": "449:14:21",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2359,
												"mutability": "mutable",
												"name": "feeProtocol0",
												"nameLocation": "470:12:21",
												"nodeType": "VariableDeclaration",
												"scope": 2364,
												"src": "464:18:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2358,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "464:5:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2361,
												"mutability": "mutable",
												"name": "feeProtocol1",
												"nameLocation": "490:12:21",
												"nodeType": "VariableDeclaration",
												"scope": 2364,
												"src": "484:18:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2360,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "484:5:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "463:40:21"
									},
									"returnParameters": {
										"id": 2363,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "512:0:21"
									},
									"scope": 2379,
									"src": "440:73:21",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2365,
										"nodeType": "StructuredDocumentation",
										"src": "519:483:21",
										"text": "@notice Collect the protocol fee accrued to the pool\n @param recipient The address to which collected protocol fees should be sent\n @param amount0Requested The maximum amount of token0 to send, can be 0 to collect fees in only token1\n @param amount1Requested The maximum amount of token1 to send, can be 0 to collect fees in only token0\n @return amount0 The protocol fee collected in token0\n @return amount1 The protocol fee collected in token1"
									},
									"functionSelector": "85b66729",
									"id": 2378,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "collectProtocol",
									"nameLocation": "1016:15:21",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2367,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1049:9:21",
												"nodeType": "VariableDeclaration",
												"scope": 2378,
												"src": "1041:17:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2366,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1041:7:21",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2369,
												"mutability": "mutable",
												"name": "amount0Requested",
												"nameLocation": "1076:16:21",
												"nodeType": "VariableDeclaration",
												"scope": 2378,
												"src": "1068:24:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2368,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1068:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2371,
												"mutability": "mutable",
												"name": "amount1Requested",
												"nameLocation": "1110:16:21",
												"nodeType": "VariableDeclaration",
												"scope": 2378,
												"src": "1102:24:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2370,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1031:101:21"
									},
									"returnParameters": {
										"id": 2377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2374,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1159:7:21",
												"nodeType": "VariableDeclaration",
												"scope": 2378,
												"src": "1151:15:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2373,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1151:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2376,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1176:7:21",
												"nodeType": "VariableDeclaration",
												"scope": 2378,
												"src": "1168:15:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2375,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1168:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1150:34:21"
									},
									"scope": 2379,
									"src": "1007:178:21",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2380,
							"src": "187:1000:21",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:1143:21"
				},
				"id": 21
			},
			"contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
				"ast": {
					"absolutePath": "contracts/uniswap/v3-periphery/contracts/interfaces/pool/IUniswapV3PoolState.sol",
					"exportedSymbols": {
						"IUniswapV3PoolState": [
							2487
						]
					},
					"id": 2488,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2381,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:22"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolState",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2382,
								"nodeType": "StructuredDocumentation",
								"src": "71:169:22",
								"text": "@title Pool state that can change\n @notice These methods compose the pool's state, and can change with any frequency including multiple times\n per transaction"
							},
							"fullyImplemented": false,
							"id": 2487,
							"linearizedBaseContracts": [
								2487
							],
							"name": "IUniswapV3PoolState",
							"nameLocation": "250:19:22",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2383,
										"nodeType": "StructuredDocumentation",
										"src": "276:1140:22",
										"text": "@notice The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas\n when accessed externally.\n @return sqrtPriceX96 The current price of the pool as a sqrt(token1/token0) Q64.96 value\n tick The current tick of the pool, i.e. according to the last tick transition that was run.\n This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick\n boundary.\n observationIndex The index of the last oracle observation that was written,\n observationCardinality The current maximum number of observations stored in the pool,\n observationCardinalityNext The next maximum number of observations, to be updated when the observation.\n feeProtocol The protocol fee for both tokens of the pool.\n Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0\n is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee.\n unlocked Whether the pool is currently locked to reentrancy"
									},
									"functionSelector": "3850c7bd",
									"id": 2400,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "slot0",
									"nameLocation": "1430:5:22",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2384,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1435:2:22"
									},
									"returnParameters": {
										"id": 2399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2386,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "1506:12:22",
												"nodeType": "VariableDeclaration",
												"scope": 2400,
												"src": "1498:20:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2385,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1498:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2388,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "1538:4:22",
												"nodeType": "VariableDeclaration",
												"scope": 2400,
												"src": "1532:10:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2387,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1532:5:22",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2390,
												"mutability": "mutable",
												"name": "observationIndex",
												"nameLocation": "1563:16:22",
												"nodeType": "VariableDeclaration",
												"scope": 2400,
												"src": "1556:23:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2389,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1556:6:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2392,
												"mutability": "mutable",
												"name": "observationCardinality",
												"nameLocation": "1600:22:22",
												"nodeType": "VariableDeclaration",
												"scope": 2400,
												"src": "1593:29:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2391,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1593:6:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2394,
												"mutability": "mutable",
												"name": "observationCardinalityNext",
												"nameLocation": "1643:26:22",
												"nodeType": "VariableDeclaration",
												"scope": 2400,
												"src": "1636:33:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2393,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1636:6:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2396,
												"mutability": "mutable",
												"name": "feeProtocol",
												"nameLocation": "1689:11:22",
												"nodeType": "VariableDeclaration",
												"scope": 2400,
												"src": "1683:17:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2395,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1683:5:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2398,
												"mutability": "mutable",
												"name": "unlocked",
												"nameLocation": "1719:8:22",
												"nodeType": "VariableDeclaration",
												"scope": 2400,
												"src": "1714:13:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2397,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1714:4:22",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1484:253:22"
									},
									"scope": 2487,
									"src": "1421:317:22",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2401,
										"nodeType": "StructuredDocumentation",
										"src": "1744:168:22",
										"text": "@notice The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\n @dev This value can overflow the uint256"
									},
									"functionSelector": "f3058399",
									"id": 2406,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeGrowthGlobal0X128",
									"nameLocation": "1926:20:22",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2402,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1946:2:22"
									},
									"returnParameters": {
										"id": 2405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2404,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2406,
												"src": "1972:7:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1972:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1971:9:22"
									},
									"scope": 2487,
									"src": "1917:64:22",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2407,
										"nodeType": "StructuredDocumentation",
										"src": "1987:168:22",
										"text": "@notice The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\n @dev This value can overflow the uint256"
									},
									"functionSelector": "46141319",
									"id": 2412,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeGrowthGlobal1X128",
									"nameLocation": "2169:20:22",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2408,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2189:2:22"
									},
									"returnParameters": {
										"id": 2411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2410,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2412,
												"src": "2215:7:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2409,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2215:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2214:9:22"
									},
									"scope": 2487,
									"src": "2160:64:22",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2413,
										"nodeType": "StructuredDocumentation",
										"src": "2230:147:22",
										"text": "@notice The amounts of token0 and token1 that are owed to the protocol\n @dev Protocol fees will never exceed uint128 max in either token"
									},
									"functionSelector": "1ad8b03b",
									"id": 2420,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "protocolFees",
									"nameLocation": "2391:12:22",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2414,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2403:2:22"
									},
									"returnParameters": {
										"id": 2419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2416,
												"mutability": "mutable",
												"name": "token0",
												"nameLocation": "2437:6:22",
												"nodeType": "VariableDeclaration",
												"scope": 2420,
												"src": "2429:14:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2415,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2429:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2418,
												"mutability": "mutable",
												"name": "token1",
												"nameLocation": "2453:6:22",
												"nodeType": "VariableDeclaration",
												"scope": 2420,
												"src": "2445:14:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2417,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2445:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2428:32:22"
									},
									"scope": 2487,
									"src": "2382:79:22",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2421,
										"nodeType": "StructuredDocumentation",
										"src": "2467:150:22",
										"text": "@notice The currently in range liquidity available to the pool\n @dev This value has no relationship to the total liquidity across all ticks"
									},
									"functionSelector": "1a686502",
									"id": 2426,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "liquidity",
									"nameLocation": "2631:9:22",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2422,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2640:2:22"
									},
									"returnParameters": {
										"id": 2425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2424,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2426,
												"src": "2666:7:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2423,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2666:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2665:9:22"
									},
									"scope": 2487,
									"src": "2622:53:22",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2427,
										"nodeType": "StructuredDocumentation",
										"src": "2681:1244:22",
										"text": "@notice Look up information about a specific tick in the pool\n @param tick The tick to look up\n @return liquidityGross the total amount of position liquidity that uses the pool either as tick lower or\n tick upper,\n liquidityNet how much liquidity changes when the pool price crosses the tick,\n feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0,\n feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1,\n tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick\n secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick,\n secondsOutside the seconds spent on the other side of the tick from the current tick,\n initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false.\n Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0.\n In addition, these values are only relative and must be used only in comparison to previous snapshots for\n a specific position."
									},
									"functionSelector": "f30dba93",
									"id": 2448,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ticks",
									"nameLocation": "3939:5:22",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2429,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "3951:4:22",
												"nodeType": "VariableDeclaration",
												"scope": 2448,
												"src": "3945:10:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2428,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3945:5:22",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3944:12:22"
									},
									"returnParameters": {
										"id": 2447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2432,
												"mutability": "mutable",
												"name": "liquidityGross",
												"nameLocation": "4025:14:22",
												"nodeType": "VariableDeclaration",
												"scope": 2448,
												"src": "4017:22:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2431,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "4017:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2434,
												"mutability": "mutable",
												"name": "liquidityNet",
												"nameLocation": "4060:12:22",
												"nodeType": "VariableDeclaration",
												"scope": 2448,
												"src": "4053:19:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 2433,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "4053:6:22",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2436,
												"mutability": "mutable",
												"name": "feeGrowthOutside0X128",
												"nameLocation": "4094:21:22",
												"nodeType": "VariableDeclaration",
												"scope": 2448,
												"src": "4086:29:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4086:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2438,
												"mutability": "mutable",
												"name": "feeGrowthOutside1X128",
												"nameLocation": "4137:21:22",
												"nodeType": "VariableDeclaration",
												"scope": 2448,
												"src": "4129:29:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2437,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4129:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2440,
												"mutability": "mutable",
												"name": "tickCumulativeOutside",
												"nameLocation": "4178:21:22",
												"nodeType": "VariableDeclaration",
												"scope": 2448,
												"src": "4172:27:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 2439,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "4172:5:22",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2442,
												"mutability": "mutable",
												"name": "secondsPerLiquidityOutsideX128",
												"nameLocation": "4221:30:22",
												"nodeType": "VariableDeclaration",
												"scope": 2448,
												"src": "4213:38:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2441,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "4213:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2444,
												"mutability": "mutable",
												"name": "secondsOutside",
												"nameLocation": "4272:14:22",
												"nodeType": "VariableDeclaration",
												"scope": 2448,
												"src": "4265:21:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2443,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "4265:6:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2446,
												"mutability": "mutable",
												"name": "initialized",
												"nameLocation": "4305:11:22",
												"nodeType": "VariableDeclaration",
												"scope": 2448,
												"src": "4300:16:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2445,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4300:4:22",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:323:22"
									},
									"scope": 2487,
									"src": "3930:397:22",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2449,
										"nodeType": "StructuredDocumentation",
										"src": "4333:99:22",
										"text": "@notice Returns 256 packed tick initialized boolean values. See TickBitmap for more information"
									},
									"functionSelector": "5339c296",
									"id": 2456,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tickBitmap",
									"nameLocation": "4446:10:22",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2451,
												"mutability": "mutable",
												"name": "wordPosition",
												"nameLocation": "4463:12:22",
												"nodeType": "VariableDeclaration",
												"scope": 2456,
												"src": "4457:18:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int16",
													"typeString": "int16"
												},
												"typeName": {
													"id": 2450,
													"name": "int16",
													"nodeType": "ElementaryTypeName",
													"src": "4457:5:22",
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:20:22"
									},
									"returnParameters": {
										"id": 2455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2454,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2456,
												"src": "4500:7:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2453,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4500:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4499:9:22"
									},
									"scope": 2487,
									"src": "4437:72:22",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2457,
										"nodeType": "StructuredDocumentation",
										"src": "4515:700:22",
										"text": "@notice Returns the information about a position by the position's key\n @param key The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\n @return _liquidity The amount of liquidity in the position,\n Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke,\n Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke,\n Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke,\n Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"
									},
									"functionSelector": "514ea4bf",
									"id": 2472,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "positions",
									"nameLocation": "5229:9:22",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2459,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "5247:3:22",
												"nodeType": "VariableDeclaration",
												"scope": 2472,
												"src": "5239:11:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2458,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5239:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5238:13:22"
									},
									"returnParameters": {
										"id": 2471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2462,
												"mutability": "mutable",
												"name": "_liquidity",
												"nameLocation": "5320:10:22",
												"nodeType": "VariableDeclaration",
												"scope": 2472,
												"src": "5312:18:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2461,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5312:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2464,
												"mutability": "mutable",
												"name": "feeGrowthInside0LastX128",
												"nameLocation": "5352:24:22",
												"nodeType": "VariableDeclaration",
												"scope": 2472,
												"src": "5344:32:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2463,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5344:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2466,
												"mutability": "mutable",
												"name": "feeGrowthInside1LastX128",
												"nameLocation": "5398:24:22",
												"nodeType": "VariableDeclaration",
												"scope": 2472,
												"src": "5390:32:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2465,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5390:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2468,
												"mutability": "mutable",
												"name": "tokensOwed0",
												"nameLocation": "5444:11:22",
												"nodeType": "VariableDeclaration",
												"scope": 2472,
												"src": "5436:19:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2467,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5436:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2470,
												"mutability": "mutable",
												"name": "tokensOwed1",
												"nameLocation": "5477:11:22",
												"nodeType": "VariableDeclaration",
												"scope": 2472,
												"src": "5469:19:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2469,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5469:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5298:200:22"
									},
									"scope": 2487,
									"src": "5220:279:22",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2473,
										"nodeType": "StructuredDocumentation",
										"src": "5505:749:22",
										"text": "@notice Returns data about a specific observation index\n @param index The element of the observations array to fetch\n @dev You most likely want to use #observe() instead of this method to get an observation as of some amount of time\n ago, rather than at a specific index in the array.\n @return blockTimestamp The timestamp of the observation,\n Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp,\n Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp,\n Returns initialized whether the observation has been initialized and the values are safe to use"
									},
									"functionSelector": "252c09d7",
									"id": 2486,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "observations",
									"nameLocation": "6268:12:22",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2475,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "6289:5:22",
												"nodeType": "VariableDeclaration",
												"scope": 2486,
												"src": "6281:13:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2474,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6281:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6280:15:22"
									},
									"returnParameters": {
										"id": 2485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2478,
												"mutability": "mutable",
												"name": "blockTimestamp",
												"nameLocation": "6363:14:22",
												"nodeType": "VariableDeclaration",
												"scope": 2486,
												"src": "6356:21:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2477,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "6356:6:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2480,
												"mutability": "mutable",
												"name": "tickCumulative",
												"nameLocation": "6397:14:22",
												"nodeType": "VariableDeclaration",
												"scope": 2486,
												"src": "6391:20:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 2479,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "6391:5:22",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2482,
												"mutability": "mutable",
												"name": "secondsPerLiquidityCumulativeX128",
												"nameLocation": "6433:33:22",
												"nodeType": "VariableDeclaration",
												"scope": 2486,
												"src": "6425:41:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2481,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "6425:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2484,
												"mutability": "mutable",
												"name": "initialized",
												"nameLocation": "6485:11:22",
												"nodeType": "VariableDeclaration",
												"scope": 2486,
												"src": "6480:16:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2483,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6480:4:22",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6342:164:22"
									},
									"scope": 2487,
									"src": "6259:248:22",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2488,
							"src": "240:6269:22",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:6465:22"
				},
				"id": 22
			}
		}
	}
}